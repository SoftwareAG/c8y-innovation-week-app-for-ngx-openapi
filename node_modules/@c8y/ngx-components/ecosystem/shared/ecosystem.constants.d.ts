import { PropertiesListItem } from '@c8y/ngx-components';
export declare const ERROR_MESSAGES: {
    TYPE_VALIDATION: "Wrong file format. Expected a *.zip file with a valid manifest.";
    ALREADY_SUBSCRIBED: "Could not subscribe to the microservice because another application with the same context path is already subscribed.";
    NO_MANIFEST_FILE: "Could not find a manifest.";
    INVALID_PACKAGE: "You have not uploaded a valid package.";
    INVALID_APPLICATION: "You have not uploaded a valid application.";
    INTERNAL_ERROR: "An internal error occurred, try to upload again.";
    MICROSERVICE_NAME_TOO_LONG: "Microservice name \"{{ name }}\" must not be longer than {{ maxChars }} characters.";
    APPLICATION_CREATION_FAILED: "Application creation failed.";
    KEY_OR_CONTEXT_PATH_MISMATCH: "The \"contextPath`KEEP_ORIGINAL`\" or \"key`KEEP_ORIGINAL`\" of the uploaded archive do not match with the existing application.";
};
export declare const APP_STATE: {
    SUBSCRIBED: {
        label: "Subscribed`application`";
        class: string;
        tooltip: "Provided by parent tenant.";
    };
    CUSTOM: {
        label: "Custom`application`";
        class: string;
        tooltip: "Manually uploaded to the platform.";
    };
    EXTERNAL: {
        label: "External`application`";
        class: string;
        tooltip: "Application hosted outside of the platform.";
    };
    UNPACKED: {
        label: "Unpacked`application`";
        class: string;
        tooltip: "Deployed from a package available under \"Packages\".";
    };
    PACKAGE_BLUEPRINT: {
        label: "Blueprint";
        class: string;
        tooltip: "Contains an application and may include plugins.";
    };
    PACKAGE_PLUGIN: {
        label: "Plugins";
        class: string;
        tooltip: "Contains only plugins.";
    };
    PACKAGE_UNKNOWN: {
        label: "Unknown`package-type`";
        class: string;
        tooltip: "Package contents could not be determined.";
    };
};
export declare const PACKAGE_TYPE_LABELS: {
    COMMUNITY: {
        label: "COMMUNITY`Package created by the developer community.`";
        tooltip: "Package created by the developer community.";
    };
    OFFICIAL: {
        label: "OFFICIAL`Package maintained by Software AG.`";
        tooltip: "Package maintained by Software AG.";
    };
    UNKNOWN: {
        label: "CUSTOM`Package maintained by an unknown source.`";
        tooltip: "Package maintainer unknown.";
    };
};
export declare const packageProperties: PropertiesListItem[];
