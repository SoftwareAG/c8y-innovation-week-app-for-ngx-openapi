import { EventEmitter, OnInit } from '@angular/core';
import { FormBuilder, FormControl } from '@angular/forms';
import { AppStateService, FilterInputComponent, GainsightService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { PackageFilters, FilterPipe } from './list-filters.model';
import * as i0 from "@angular/core";
export declare class ListFiltersComponent implements OnInit {
    private formBuilder;
    private ui;
    private translateService;
    private gainsightService;
    packageTypes: (keyof PackageFilters['type'])[];
    packageAvailabilities: (keyof PackageFilters['availability'])[];
    packageContents: (keyof PackageFilters['content'])[];
    filterPipeChange: EventEmitter<FilterPipe>;
    filterInput: FilterInputComponent;
    formGroup: ReturnType<ListFiltersComponent['initForm']>;
    chips: [string, FormControl][];
    predefinedFiltersVisible: boolean;
    private currentLang;
    private data;
    private currentFiltersState;
    private currentFilterTerm;
    private CURRENT_LOCATION;
    constructor(formBuilder: FormBuilder, ui: AppStateService, translateService: TranslateService, gainsightService: GainsightService);
    ngOnInit(): void;
    setFilterTerm(filterTerm: string): void;
    applyPredefinedFilters(): void;
    reset(): void;
    resetAllFilters(): void;
    toggleDropdown(isOpen: boolean): void;
    deselectChip(chip: [string, FormControl]): void;
    private initForm;
    private setPipe;
    private filterContainString;
    private appMatchesByPredefinedProperty;
    private setChips;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListFiltersComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListFiltersComponent, "c8y-list-filters", never, { "packageTypes": "packageTypes"; "packageAvailabilities": "packageAvailabilities"; "packageContents": "packageContents"; }, { "filterPipeChange": "filterPipeChange"; }, never, never, false, never>;
}
