import { EventEmitter, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { ApplicationService, IApplication, IApplicationVersion } from '@c8y/client';
import { AlertService, GainsightService, PackageType, PluginsService, WizardModalService } from '@c8y/ngx-components';
import { EcosystemService } from './ecosystem.service';
import { ApplicationState } from './ecosystem.model';
import * as i0 from "@angular/core";
export declare class ApplicationCardComponent implements OnInit {
    private applicationService;
    private ecosystemService;
    private alertService;
    private router;
    private wizardModalService;
    private alert;
    private pluginService;
    private gainsightService;
    CURRENT_LOCATION: string;
    app: IApplication;
    canEdit: boolean;
    onAppDeleted: EventEmitter<void>;
    onAppCloned: EventEmitter<void>;
    appState: ApplicationState;
    packageContentState: ApplicationState;
    packageType: PackageType;
    canOpenInBrowser: boolean;
    disableOpenInBrowser: boolean;
    canDelete: boolean;
    isPackage: boolean;
    isPlugin: boolean;
    isFeature: boolean;
    isExternal: boolean;
    isMicroservice: boolean;
    canClone: boolean;
    isUnpacked: boolean;
    shouldUpgradePackage: boolean;
    blueprintApplicationVersion: IApplicationVersion[];
    latestApplicationVersion: IApplicationVersion;
    isShowVersion: boolean;
    isOwnedByManagementTenant: boolean;
    get openButtonTitle(): "Open" | "This application is overridden.";
    readonly packageTypeLabels: {
        COMMUNITY: {
            label: "COMMUNITY`Package created by the developer community.`";
            tooltip: "Package created by the developer community.";
        };
        OFFICIAL: {
            label: "OFFICIAL`Package maintained by Software AG.`";
            tooltip: "Package maintained by Software AG.";
        };
        UNKNOWN: {
            label: "CUSTOM`Package maintained by an unknown source.`";
            tooltip: "Package maintainer unknown.";
        };
    };
    readonly PACKAGE_TYPE: typeof PackageType;
    readonly UNPACKED_LABEL: "Unpacked`application`";
    readonly CANNOT_DELETE_HINT: "Subscribed or current applications can't be deleted. Delete the application on the parent tenant or unsubscribe it from the current.";
    readonly PACKAGE_CONTENT_UNDETERMINED_LABEL: "Package contents could not be determined.";
    constructor(applicationService: ApplicationService, ecosystemService: EcosystemService, alertService: AlertService, router: Router, wizardModalService: WizardModalService, alert: AlertService, pluginService: PluginsService, gainsightService: GainsightService);
    ngOnInit(): Promise<void>;
    shouldShowVersion(): boolean;
    detail(): void;
    openApp(): void;
    delete(): Promise<void>;
    clone(): Promise<void>;
    private applicationUpdateCheck;
    static ɵfac: i0.ɵɵFactoryDeclaration<ApplicationCardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ApplicationCardComponent, "c8y-application-card", never, { "app": "app"; "canEdit": "canEdit"; }, { "onAppDeleted": "onAppDeleted"; "onAppCloned": "onAppCloned"; }, never, never, false, never>;
}
