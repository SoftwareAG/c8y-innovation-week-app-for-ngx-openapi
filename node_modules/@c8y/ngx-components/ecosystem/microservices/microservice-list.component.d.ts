import { ChangeDetectorRef, OnInit } from '@angular/core';
import { IApplication } from '@c8y/client';
import { WizardModalService } from '@c8y/ngx-components';
import { BehaviorSubject, Observable } from 'rxjs';
import { EcosystemService, FilterPipe, PackageFilters, ListFiltersComponent } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
export declare class MicroserviceListComponent implements OnInit {
    private ecosystemService;
    private wizardModalService;
    private cd;
    reloading: boolean;
    reload$: BehaviorSubject<void>;
    microservices$: Observable<IApplication[]>;
    filteredMicroservices$: Observable<IApplication[]>;
    isMicroserviceHostingAllowed$: Observable<boolean>;
    listClass: string;
    packageAvailabilities: (keyof PackageFilters['availability'])[];
    filtersComponent: ListFiltersComponent;
    constructor(ecosystemService: EcosystemService, wizardModalService: WizardModalService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    loadMicroservices(): void;
    addMicroservice(): void;
    setFilterPipe(pipe: FilterPipe): void;
    resetFilters(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MicroserviceListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MicroserviceListComponent, "c8y-microservice-list", never, {}, {}, never, never, false, never>;
}
