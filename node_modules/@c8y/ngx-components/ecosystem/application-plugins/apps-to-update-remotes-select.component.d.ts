import { OnInit } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { IApplication } from '@c8y/client';
import { UpdateType } from './apps-to-update-remotes-select.model';
import { BehaviorSubject, Observable } from 'rxjs';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
export declare class AppsToUpdateRemotesSelectComponent implements OnInit {
    private bsModalRef;
    private ecosystemService;
    apps: IApplication[];
    updateType: UpdateType;
    pluginName: string;
    appsDisabled: Set<IApplication['id']>;
    filterTerm$: BehaviorSubject<string>;
    filteredApps$: Observable<IApplication[]>;
    textConfig: {
        header: string;
        applyButton: string;
    };
    appsToUpdateRemotes: IApplication[];
    result: Promise<IApplication[]>;
    private _update;
    private _cancel;
    constructor(bsModalRef: BsModalRef, ecosystemService: EcosystemService);
    ngOnInit(): void;
    cancel(): void;
    setSelectedApps(selected: boolean, app: IApplication): void;
    apply(): Promise<void>;
    static ɵfac: i0.ɵɵFactoryDeclaration<AppsToUpdateRemotesSelectComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AppsToUpdateRemotesSelectComponent, "ng-component", never, { "apps": "apps"; "updateType": "updateType"; "pluginName": "pluginName"; "appsDisabled": "appsDisabled"; }, {}, never, never, false, never>;
}
