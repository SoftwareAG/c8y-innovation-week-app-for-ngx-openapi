import { OnInit } from '@angular/core';
import { ApplicationService, IApplication, IApplicationVersion, IResultList } from '@c8y/client';
import { PluginsService, WizardComponent } from '@c8y/ngx-components';
import { BehaviorSubject, Observable } from 'rxjs';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import { ApplicationPropertiesFormComponent } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
export declare class InstallFromPackageComponent implements OnInit {
    private ecosystemService;
    private applicationService;
    private wizardComponent;
    private pluginsService;
    newAppConfig: IApplication;
    selectedPackage: IApplication;
    packages: IApplication[];
    inProgress: boolean;
    deployedWithSuccess: boolean;
    isDeployed: boolean;
    model: {
        selected: any;
        binary: {
            id: any;
        };
    };
    canDeploy: boolean;
    onInput: BehaviorSubject<string>;
    versions$: Observable<IResultList<IApplicationVersion>>;
    applicationPropertiesForm: ApplicationPropertiesFormComponent;
    constructor(ecosystemService: EcosystemService, applicationService: ApplicationService, wizardComponent: WizardComponent, pluginsService: PluginsService);
    ngOnInit(): Promise<void>;
    back(): void;
    clean(): void;
    cancel(): void;
    deployApp(): Promise<void>;
    onAppVersionSelect(appVersion: IApplicationVersion): void;
    selectPackage(selectedPackage: IApplication): Promise<void>;
    private loadSelectedPackageVersions;
    private getAppVersions;
    private setInitialValueForInput;
    private filterAppVersions;
    private markAsDeployed;
    private loadPackages;
    static ɵfac: i0.ɵɵFactoryDeclaration<InstallFromPackageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<InstallFromPackageComponent, "c8y-install-from-package", never, {}, {}, never, never, false, never>;
}
