import { OnInit } from '@angular/core';
import { IApplication, IApplicationVersion } from '@c8y/client';
import { PluginsService, WizardComponent, GainsightService } from '@c8y/ngx-components';
import { ApplicationPropertiesFormComponent, EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
export declare class DeployApplicationComponent implements OnInit {
    private ecosystemService;
    private wizardComponent;
    private translate;
    private pluginService;
    private gainsightService;
    CURRENT_LOCATION: string;
    inProgress: boolean;
    package: IApplication;
    isDeployed: boolean;
    deployedWithSuccess: boolean;
    newAppConfig: IApplication;
    applicationHref: string;
    model: {
        selected: any;
        binary: {
            id: any;
        };
    };
    canDeploy: boolean;
    applicationPropertiesForm: ApplicationPropertiesFormComponent;
    readonly descriptionTemplate: string;
    readonly successMessageTemplate: "Application \"{{ packageName }}\" created";
    readonly doneLabel: "Done";
    readonly cancelLabel: "Cancel";
    headerText: string;
    constructor(ecosystemService: EcosystemService, wizardComponent: WizardComponent, translate: TranslateService, pluginService: PluginsService, gainsightService: GainsightService);
    ngOnInit(): Promise<void>;
    deployApp(): Promise<void>;
    cancel(): void;
    onAppVersionSelect(appVersion: IApplicationVersion): void;
    private markAsDeployed;
    private getHeaderText;
    static ɵfac: i0.ɵɵFactoryDeclaration<DeployApplicationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DeployApplicationComponent, "c8y-deploy-application", never, {}, {}, never, never, false, never>;
}
