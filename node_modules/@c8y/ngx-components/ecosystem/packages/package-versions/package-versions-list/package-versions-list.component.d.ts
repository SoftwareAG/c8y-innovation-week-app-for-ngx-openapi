import { EventEmitter, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { IApplication, IApplicationVersion } from '@c8y/client';
import { AlertService, GainsightService, ModalService, OptionsService, Permissions, PluginsService } from '@c8y/ngx-components';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
export declare class PackageVersionsListComponent implements OnInit {
    private activatedRoute;
    private pluginsService;
    private ecosystemService;
    private translateService;
    private modal;
    private alertService;
    private optionsService;
    private permissions;
    private gainsightService;
    CURRENT_LOCATION: string;
    versionsLimit: number;
    isLoading: boolean;
    package: IApplication;
    sortedVersions: IApplicationVersion[];
    selectedVersion: string;
    preUploadCallback: () => Promise<any>;
    hasAdminPermissions: boolean;
    isPackageOwnedByCurrentTenant: boolean;
    onVersionSelect: EventEmitter<string>;
    constructor(activatedRoute: ActivatedRoute, pluginsService: PluginsService, ecosystemService: EcosystemService, translateService: TranslateService, modal: ModalService, alertService: AlertService, optionsService: OptionsService, permissions: Permissions, gainsightService: GainsightService);
    ngOnInit(): Promise<void>;
    downloadArchive(appVersion: IApplicationVersion): Promise<void>;
    packageVersionUploaded(): void;
    selectVersion(version: string | null): void;
    removeVersionPackage(version: string): Promise<void>;
    setVersionAsLatest(appVersion: IApplicationVersion): Promise<void>;
    acknowledgeLimitReached(): Promise<void>;
    private refreshPackage;
    private sortVersions;
    private setUploadedVersionAsLatest;
    private toggleUploadPossibility;
    static ɵfac: i0.ɵɵFactoryDeclaration<PackageVersionsListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PackageVersionsListComponent, "c8y-package-versions-list", never, {}, { "onVersionSelect": "onVersionSelect"; }, never, never, false, never>;
}
