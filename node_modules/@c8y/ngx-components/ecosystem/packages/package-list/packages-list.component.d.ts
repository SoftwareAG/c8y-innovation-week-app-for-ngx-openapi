import { OnDestroy } from '@angular/core';
import { IApplication } from '@c8y/client';
import { Permissions, WizardModalService } from '@c8y/ngx-components';
import { BehaviorSubject, Observable } from 'rxjs';
import { EcosystemService, FilterPipe, PackageFilters, ListFiltersComponent } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
export declare class PackagesListComponent implements OnDestroy {
    private ecosystemService;
    private wizardModalService;
    private permissions;
    reloading: boolean;
    reload$: BehaviorSubject<void>;
    packages$: Observable<IApplication[]>;
    filteredPackages$: Observable<IApplication[]>;
    listClass: string;
    hasAdminPermissions: boolean;
    emptyStateSubtitle: "Add your first package by clicking below.";
    packageTypes: (import("@c8y/ngx-components").PackageType.OFFICIAL | import("@c8y/ngx-components").PackageType.COMMUNITY)[];
    packageAvailabilities: (keyof PackageFilters['availability'])[];
    packageContents: ("Blueprint" | "Plugins")[];
    filtersComponent: ListFiltersComponent;
    private destroy$;
    constructor(ecosystemService: EcosystemService, wizardModalService: WizardModalService, permissions: Permissions);
    ngOnInit(): void;
    loadPackages(): void;
    addPackage(): void;
    ngOnDestroy(): void;
    setFilterPipe(pipe: FilterPipe): void;
    resetFilters(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PackagesListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PackagesListComponent, "c8y-packages-list", never, {}, {}, never, never, false, never>;
}
