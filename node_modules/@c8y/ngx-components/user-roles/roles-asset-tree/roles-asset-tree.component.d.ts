import { EventEmitter, OnChanges, OnInit } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { IIdentified } from '@c8y/client';
import { Ng1RolesService, Ng1UserInventoryRolesService } from '@c8y/ngx-components/upgrade/upgraded-services';
import * as i0 from "@angular/core";
export declare class RolesAssetTreeComponent implements OnInit, OnChanges {
    c8yUserInventoryRoles: Ng1UserInventoryRolesService;
    c8yRoles: Ng1RolesService;
    user: any;
    searchFilter: any;
    assignedRoles: any;
    ownerAssignedRoles: any;
    expandGroups: any;
    pageSize: any;
    paginationOffset: any;
    onChangeRoles: EventEmitter<any>;
    onChangeItemCount: EventEmitter<any>;
    rootGroups: any;
    flatAssetTree: any;
    inventoryRoles: any;
    loadingAssetTree: any;
    inheritedRoles: any;
    ownerAllAssignedRoles: any;
    noSubgroupTitle: "No subgroups";
    manySubgroupsTitle: "Subgroups: {{ count }}";
    oneSubgroupTitle: "Subgroup: 1";
    clickToOpenTitle: "Click to fetch subgroups";
    expandAriaLabel: "Expand";
    collapseAriaLabel: "Collapse";
    searchTermSubject: BehaviorSubject<string>;
    flatTreeSubject: BehaviorSubject<IIdentified[]>;
    flatAssetTree$: import("rxjs").Observable<IIdentified[]>;
    constructor(c8yUserInventoryRoles: Ng1UserInventoryRolesService, c8yRoles: Ng1RolesService);
    ngOnInit(): void;
    loadAssetTree(): Promise<void>;
    updateTree(): void;
    loadChildren(mo: any): void;
    loadInventoryRoles(): void;
    ngOnChanges(changes: any): void;
    setInheritedRoles(): void;
    getInventoryInheritedRoles(flatTree: any, assignedRoles: any): any;
    onApply(ev: any, managedObjectId: any): void;
    filterAsset(asset: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<RolesAssetTreeComponent, [{ optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RolesAssetTreeComponent, "c8y-roles-asset-tree-upgraded", never, { "user": "user"; "searchFilter": "searchFilter"; "assignedRoles": "assignedRoles"; "ownerAssignedRoles": "ownerAssignedRoles"; "expandGroups": "expandGroups"; "pageSize": "pageSize"; "paginationOffset": "paginationOffset"; }, { "onChangeRoles": "onChangeRoles"; "onChangeItemCount": "onChangeItemCount"; }, never, never, false, never>;
}
