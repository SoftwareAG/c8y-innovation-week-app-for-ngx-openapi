import { EventEmitter, OnInit } from '@angular/core';
import { UserGroupService } from '@c8y/client';
import { GainsightService, Item } from '@c8y/ngx-components';
import { DashboardGlobalRoles } from './context-dashboard.model';
import * as i0 from "@angular/core";
export declare class DashboardAvailabilityComponent implements OnInit {
    private userGroupService;
    private gainsightService;
    /**
     * Ids of global roles assigned to the dashboard or a string "all" indicating the selection of all global roles.
     * The value undefined is treated as equivalent to 'all'.
     */
    get globalRolesIds(): DashboardGlobalRoles;
    set globalRolesIds(ids: DashboardGlobalRoles);
    globalRolesIdsChange: EventEmitter<DashboardGlobalRoles>;
    globalRolesItems: Item[];
    globalRolesItemsSelected: Item[];
    private globalRoles;
    private PAGE_SIZE;
    private _globalRolesIds;
    constructor(userGroupService: UserGroupService, gainsightService: GainsightService);
    ngOnInit(): Promise<void>;
    onSelected(items: Item[]): void;
    private getGlobalRoles;
    private mapGlobalRolesToItems;
    private getSelectedGlobalRolesItems;
    static ɵfac: i0.ɵɵFactoryDeclaration<DashboardAvailabilityComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DashboardAvailabilityComponent, "c8y-dashboard-availability", never, { "globalRolesIds": "globalRolesIds"; }, { "globalRolesIdsChange": "globalRolesIdsChange"; }, never, never, false, never>;
}
