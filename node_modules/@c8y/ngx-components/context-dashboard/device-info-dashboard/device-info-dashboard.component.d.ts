import { ActivatedRoute } from '@angular/router';
import { ContextData, Widget } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { Subscription } from 'rxjs';
import { WidgetService } from '../widget.service';
import { InventoryService } from '@c8y/client';
import * as i0 from "@angular/core";
export declare class DeviceInfoDashboardComponent {
    private router;
    private widgetService;
    private translateService;
    private inventoryService;
    isLoading: boolean;
    title: string;
    dashboardName: string;
    widgetsList: Widget[];
    currentContext: ContextData;
    contextSubscription: Subscription;
    widgetsSubscription: Subscription;
    DEVICE_INFO_WIDGETS: Widget[];
    constructor(router: ActivatedRoute, widgetService: WidgetService, translateService: TranslateService, inventoryService: InventoryService);
    ngOnInit(): void;
    addDeviceTargetForDP(id: string | number, name: string): void;
    filterSupportedSeriesForDP(id: string | number, widgets: Widget[]): Promise<void>;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DeviceInfoDashboardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DeviceInfoDashboardComponent, "c8y-device-info-dashboard-dashboard", never, {}, {}, never, never, false, never>;
}
