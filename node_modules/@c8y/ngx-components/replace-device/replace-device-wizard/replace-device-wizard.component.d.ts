import { EventEmitter, OnDestroy } from '@angular/core';
import { C8yStepper, Column, GridConfigContextProvider, ModalService, UserPreferencesGridConfigContext } from '@c8y/ngx-components';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { Observable } from 'rxjs';
import { ReplaceDeviceService } from '../replace-device.service';
import * as i0 from "@angular/core";
export declare class ReplaceDeviceWizardComponent implements GridConfigContextProvider, OnDestroy {
    replaceDeviceService: ReplaceDeviceService;
    private deviceGridService;
    private modal;
    private static readonly DEFAULT_VISIBLE_COLUMNS;
    REPLACE_DEVICE_STEP_STATES_MAP: import("../replace-device.model").ReplaceDeviceStepStatesMap;
    onClose: EventEmitter<void>;
    stepper: C8yStepper;
    replacementDeviceId: string;
    baseQuery$: Observable<object>;
    columns: Column[];
    constructor(replaceDeviceService: ReplaceDeviceService, deviceGridService: DeviceGridService, modal: ModalService);
    getGridConfigContext(): UserPreferencesGridConfigContext;
    replace(): Promise<void>;
    continue(): void;
    cancel(): void;
    close(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ReplaceDeviceWizardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ReplaceDeviceWizardComponent, "c8y-replace-device-wizard", never, {}, { "onClose": "onClose"; }, never, never, true, never>;
}
