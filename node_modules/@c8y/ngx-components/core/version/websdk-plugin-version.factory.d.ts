import { AppStateService, ExtensionFactory } from '../common';
import { Version, VersionModuleConfig } from './version.model';
import { Observable } from 'rxjs';
import { PluginsService } from '../plugins';
import { ApplicationRemotePlugins } from '@c8y/client';
import * as i0 from "@angular/core";
/**
 * Will provide the version of plugins installed to the current application.
 */
export declare class WebSDKPluginVersionFactory implements ExtensionFactory<Version> {
    private config;
    private appState;
    private plugins;
    webSDKPluginVersions$: Observable<Version[]>;
    constructor(config: VersionModuleConfig, appState: AppStateService, plugins: PluginsService);
    get(): Observable<Version[]>;
    getVersionsFromRemotes(remotes: ApplicationRemotePlugins): Version[];
    static ɵfac: i0.ɵɵFactoryDeclaration<WebSDKPluginVersionFactory, [{ optional: true; }, null, null]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WebSDKPluginVersionFactory>;
}
