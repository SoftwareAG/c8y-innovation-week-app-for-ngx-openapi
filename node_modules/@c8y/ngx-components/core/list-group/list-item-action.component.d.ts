import { EventEmitter } from '@angular/core';
import { GainsightService } from '../product-experience/gainsight.service';
import { ProductExperienceEvent, ProductExperienceEventSource } from '../product-experience/product-experience.model';
import * as i0 from "@angular/core";
/**
 * Actions are functions that can be executed on the
 * current list item. They are displayed next to the
 * item and can be grouped in a dropdown.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-li-action (click)="deleteDevice(device.id)" icon="times">
 *     Delete
 *   </c8y-li-action>
 *   <c8y-li-action (click)="(false)" icon="rocket">
 *     Launch to space
 *   </c8y-li-action>
 * </c8y-li>
 * ```
 */
export declare class ListItemActionComponent implements ProductExperienceEventSource {
    private gainsightService;
    /**
     * @ignore
     */
    template: any;
    /**
     * The label to display (you can alternatively use
     * content projection to display the label).
     */
    label: string;
    /**
     * The name of the icon to use
     */
    icon: string;
    /**
     * An EventEmitter to determine what to do if the
     * action is triggered.
     */
    click: EventEmitter<any>;
    productExperienceEvent: ProductExperienceEvent;
    constructor(gainsightService: GainsightService);
    onClick(event: HTMLElement): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListItemActionComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListItemActionComponent, "c8y-list-item-action, c8y-li-action", never, { "label": "label"; "icon": "icon"; }, { "click": "click"; }, never, ["*"], false, never>;
}
