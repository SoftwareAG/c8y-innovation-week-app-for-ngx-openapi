import { DateTimeContext } from '../widget-change-event.model';
export type WidgetTimeContextState = {
    date: DateTimeContext;
    interval: Interval['id'];
    realtime: boolean;
};
export type WidgetTimeContextChange = Omit<WidgetTimeContextState, 'interval'>;
export declare enum DateContextQueryParamNames {
    DATE_CONTEXT_FROM = "dateContextFrom",
    DATE_CONTEXT_TO = "dateContextTo",
    DATE_CONTEXT_INTERVAL = "dateContextInterval",
    DATE_CONTEXT_REALTIME = "dateContextRealtime"
}
type DateContextFromToQueryParams = {
    [DateContextQueryParamNames.DATE_CONTEXT_FROM]: string;
    [DateContextQueryParamNames.DATE_CONTEXT_TO]: string;
    [DateContextQueryParamNames.DATE_CONTEXT_INTERVAL]?: never;
};
type DateContextIntervalQueryParams = {
    [DateContextQueryParamNames.DATE_CONTEXT_FROM]?: never;
    [DateContextQueryParamNames.DATE_CONTEXT_TO]?: never;
    [DateContextQueryParamNames.DATE_CONTEXT_INTERVAL]: Interval['id'];
};
export type DateContextQueryParams = (DateContextFromToQueryParams | DateContextIntervalQueryParams) & {
    [DateContextQueryParamNames.DATE_CONTEXT_REALTIME]: boolean;
};
export declare enum TimeSpanInMs {
    'MINUTE' = 60000,
    'HOUR' = 3600000,
    'DAY' = 86400000,
    'WEEK' = 604800000,
    'MONTH'
}
export type Interval = {
    id: 'minutes' | 'hours' | 'days' | 'weeks' | 'months' | 'custom';
    title: string;
    timespanInMs?: number;
};
export declare const INTERVALS: Interval[];
export {};
