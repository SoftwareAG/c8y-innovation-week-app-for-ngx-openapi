import { ActivatedRoute, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { DateContextQueryParams, WidgetTimeContextState, Interval } from './widget-time-context.model';
import { WidgetTimeContextHelperService } from './widget-time-context-helper.service';
import { DateTimeContext } from '../widget-change-event.model';
import * as i0 from "@angular/core";
export declare class WidgetTimeContextQueryService {
    private activatedRoute;
    private helperService;
    private router;
    constructor(activatedRoute: ActivatedRoute, helperService: WidgetTimeContextHelperService, router: Router);
    queryParamsChange$(): Observable<DateContextQueryParams>;
    dateTimeContextFromQueryParams(): WidgetTimeContextState | null;
    setDateContextQueryParams(interval: Interval['id'], dateContext: DateTimeContext, realtime: boolean): void;
    clearQueryParams(): void;
    private getDateContextFromQueryParams;
    private parseRealtime;
    static ɵfac: i0.ɵɵFactoryDeclaration<WidgetTimeContextQueryService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WidgetTimeContextQueryService>;
}
