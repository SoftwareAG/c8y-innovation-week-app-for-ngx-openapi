import { OnDestroy, OnInit } from '@angular/core';
import { AppStateService } from '../common/ui-state.service';
import { TranslateService } from '../i18n/translate.service';
import { ModalService } from '../modal/modal.service';
import { UserPreferencesService } from '../common/user-preferences/user-preferences.service';
import { Observable } from 'rxjs';
import { HeaderService } from '../header/header.service';
import * as i0 from "@angular/core";
export declare class UiSettingsComponent implements OnInit, OnDestroy {
    private translate;
    private state;
    private ui;
    private userPreferences;
    private c8yModalService;
    private headerService;
    open$: Observable<boolean>;
    currentLang: string;
    languages: {
        lang: string;
        nativeLanguage: string;
    }[];
    private destroyed$;
    constructor(translate: TranslateService, state: AppStateService, ui: AppStateService, userPreferences: UserPreferencesService, c8yModalService: ModalService, headerService: HeaderService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onLanguageChange(changedLang: string): Promise<void>;
    persistLanguage(lang: string): Promise<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<UiSettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UiSettingsComponent, "c8y-ui-settings", never, {}, {}, never, never, false, never>;
}
