import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import { EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';
import * as i0 from "@angular/core";
export interface Item {
    name: string;
    _selected?: boolean;
    [key: string]: any;
}
export type selectedFunction = (item: Item) => boolean;
export type selectedLabelFunction = (items: Item[]) => string;
export declare class SelectComponent implements OnChanges, OnInit {
    placeholder: string;
    selectedLabel: string | selectedLabelFunction;
    applyLabel: string;
    items: Item[];
    selected: Item[] | selectedFunction;
    updateItems: EventEmitter<boolean>;
    disableApplyOnNoSelection: boolean;
    onChange: EventEmitter<Item[]>;
    dropdown: BsDropdownDirective;
    liChildren: any;
    textFilter: string;
    labelText: string;
    isOpen: boolean;
    filteredItems: Item[];
    searchFilter: any;
    readonly sizeToShowFilter: number;
    labelsForSelectAll: any;
    showAllLabel: boolean;
    private itemsSelected;
    private stopClicks;
    preventClick(evt: any): void;
    isOpenChange(isOpen: boolean): void;
    outterSelected(item: Item): any;
    isSelected(item: Item): boolean;
    isAllItemsSelected(): boolean;
    isAllFilteredSelected(): boolean;
    isNoItemSelected(): boolean;
    applyChanges(): void;
    selectAll(checked: boolean): void;
    ngOnInit(): void;
    onChangeItem(checked: boolean, item: Item): void;
    updateFiltered(term: string): void;
    getSelectAllToggleStatus(): {
        label: any;
        checked: boolean;
        indeterminate: boolean;
    };
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private updateLabel;
    private updateSelected;
    private isAllSelected;
    private getLabel;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectComponent, "c8y-select", never, { "placeholder": "placeholder"; "selectedLabel": "selectedLabel"; "applyLabel": "applyLabel"; "items": "items"; "selected": "selected"; "updateItems": "updateItems"; "disableApplyOnNoSelection": "disableApplyOnNoSelection"; }, { "onChange": "onChange"; }, ["liChildren"], ["c8y-li"], false, never>;
}
