import { Observable } from 'rxjs';
import { UserPreferencesService } from '../common/user-preferences/user-preferences.service';
import { GridConfigContext } from './data-grid-configuration.model';
import { Column, CustomColumnConfig, GridConfig } from './data-grid.model';
import { DataGridService } from './data-grid.service';
import * as i0 from "@angular/core";
interface LegacyColumnConfig {
    key: string;
    headerName: string;
    active: boolean;
    custom: boolean;
    fragmentPath: string;
}
interface LegacyColumnFilterConfig {
    [key: string]: {
        filtering: object;
        sorting: {
            order: number;
        };
    };
}
export declare class LegacyGridConfigMapperService {
    private userPreferencesService;
    private dataGridService;
    static deviceGridLegacyKeyToName: {
        status: string;
        name: string;
        model: string;
        serialNumber: string;
        group: string;
        registrationDate: string;
        systemId: string;
        imei: string;
        alarms: string;
    };
    constructor(userPreferencesService: UserPreferencesService, dataGridService: DataGridService);
    getMappedGridConfig(context: GridConfigContext): Observable<GridConfig>;
    mapLegacyToDeviceGridConfig(legacyConfig: LegacyColumnConfig[], legacyFilterConfig: LegacyColumnFilterConfig, defaultColumns?: Column[]): GridConfig;
    getConfigColumns(legacyConfig: LegacyColumnConfig[], legacyFilterConfig: LegacyColumnFilterConfig, defaultColumns: Column[]): any;
    mergeLegacyConfigs(columnConfig: any, filterConfig: any): any;
    mapLegacyColumnConfig(legacy: any): CustomColumnConfig;
    migrateSortOrder(sorting: any): "" | "asc" | "desc";
    static ɵfac: i0.ɵɵFactoryDeclaration<LegacyGridConfigMapperService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LegacyGridConfigMapperService>;
}
export {};
