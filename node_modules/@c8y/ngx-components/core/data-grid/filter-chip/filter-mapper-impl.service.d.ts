import { FormlyFieldConfig } from '@ngx-formly/core';
import { Observable } from 'rxjs';
import { DatePipe } from '../../common';
import { FilterChip, FilterMapper } from '../data-grid.model';
import * as i0 from "@angular/core";
export declare class BooleanFilterMapper implements FilterMapper {
    fieldType: string[];
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<FilterChip>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BooleanFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BooleanFilterMapper>;
}
export declare class RadioFilterMapper implements FilterMapper {
    fieldType: string[];
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<{
        value: any;
        displayValue: any;
        label?: string;
        path?: string[];
        externalFilterQuery?: any;
        filteringConfig?: import("../data-grid.model").FormlyColumnFilteringConfig;
        filterPredicate?: string;
        columnName: string;
        remove?: () => import("../data-grid.model").PartialFilterChipRemovalType;
    }>;
    static ɵfac: i0.ɵɵFactoryDeclaration<RadioFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RadioFilterMapper>;
}
export declare class TypeaheadFilterMapper implements FilterMapper {
    fieldType: string;
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<{
        value: any;
        displayValue: any;
        label?: string;
        path?: string[];
        externalFilterQuery?: any;
        filteringConfig?: import("../data-grid.model").FormlyColumnFilteringConfig;
        filterPredicate?: string;
        columnName: string;
        remove?: () => import("../data-grid.model").PartialFilterChipRemovalType;
    }>;
    static ɵfac: i0.ɵɵFactoryDeclaration<TypeaheadFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TypeaheadFilterMapper>;
}
export declare class DateFilterMapper implements FilterMapper {
    private datePipe;
    fieldType: string[];
    constructor(datePipe: DatePipe);
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<{
        label: string;
        displayValue: any;
        value: any;
        path?: string[];
        externalFilterQuery?: any;
        filteringConfig?: import("../data-grid.model").FormlyColumnFilteringConfig;
        filterPredicate?: string;
        columnName: string;
        remove?: () => import("../data-grid.model").PartialFilterChipRemovalType;
    }>;
    static ɵfac: i0.ɵɵFactoryDeclaration<DateFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DateFilterMapper>;
}
export declare class SelectFilterMapper implements FilterMapper {
    fieldType: string;
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<{
        value: any;
        displayValue: any;
        label?: string;
        path?: string[];
        externalFilterQuery?: any;
        filteringConfig?: import("../data-grid.model").FormlyColumnFilteringConfig;
        filterPredicate?: string;
        columnName: string;
        remove?: () => import("../data-grid.model").PartialFilterChipRemovalType;
    }>;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SelectFilterMapper>;
}
export declare class StringFilterMapper implements FilterMapper {
    fieldType: string[];
    map(field: FormlyFieldConfig, filter: FilterChip): Observable<FilterChip>;
    static ɵfac: i0.ɵɵFactoryDeclaration<StringFilterMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StringFilterMapper>;
}
