import { StateService } from '../common/state-service.abstract';
import { BehaviorSubject, Observable } from 'rxjs';
import { UserMenuItem } from './user.model';
import * as i0 from "@angular/core";
export declare class UserMenuService extends StateService {
    state$: BehaviorSubject<{
        userMenuItems: Set<UserMenuItem>;
    }>;
    items$: Observable<UserMenuItem[]>;
    constructor();
    /**
     * Returns the current state.
     * @readonly
     * @returns The current set of actions.
     */
    get state(): {
        userMenuItems: Set<UserMenuItem>;
    };
    /**
     * Adds a new item to the search in the header.
     * @param item The item to add.
     */
    add(item: UserMenuItem): void;
    /**
     * Removes an search from the header.
     * @param item The item to remove.
     */
    remove(item: UserMenuItem): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserMenuService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UserMenuService>;
}
