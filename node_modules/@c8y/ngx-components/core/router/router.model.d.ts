import { Route as ngRoute } from '@angular/router';
import { IIdentified } from '@c8y/client';
import { ExtensionFactory } from '../common/extension-hooks';
import { Tab, TabWithTemplate } from '../tabs/tab.model';
export interface ContextData {
    /**
     * The data of this route. E.g. on ViewContext.Device an managed object
     * of the device.
     */
    contextData: IIdentified;
    /**
     * The current ViewContext used.
     */
    context: ViewContext;
}
/**
 * The context routes that are supported by the application.
 */
export declare enum ViewContext {
    Device = "device/:id",
    Group = "group/:id",
    User = "users/:id",
    Application = "ecosystem/application/applications/:id",
    Extension = "ecosystem/extension/extensions/:id",
    Feature = "ecosystem/application/features/:id",
    Microservice = "ecosystem/microservice/microservices/:id",
    SubscribedApplications = "subscribedApplications/:id",
    Tenant = "tenants/:id",
    Report = "reports/:id",
    Service = "service/:id",
    DatapointLibrary = "datapointlibrary/:id"
}
/**
 * A route that can be added via the HOOK_ROUTE.
 */
export type Route = RouteDefault | RouteWithTab | RouteWithComponent;
/**
 * A usual route
 */
export interface RouteDefault extends ngRoute {
    context?: never;
    label?: never;
    tabs?: never;
}
interface RouteBase {
    /**
     * Which order should be used.
     */
    priority?: number;
    /**
     * Id to identify specific feature.
     */
    featureId?: string;
}
/**
 * A component based context route.
 */
export interface RouteWithComponent extends ngRoute, RouteBase {
    /**
     * The view context to add this route to.
     */
    context: ViewContext;
    label?: never;
}
/**
 * A tab that is added to a context route and opens the associated
 * component on this context.
 */
export interface RouteWithTab extends Omit<TabWithTemplate, 'path' | 'component'>, ngRoute, RouteBase {
    /**
     * The view context to add this route to.
     */
    context: ViewContext;
    /**
     * Allow to emit multiple tabs on one context route.
     */
    tabs?: Tab[];
}
export type RouteFactory = Route | Route[] | ExtensionFactory<Route>;
export {};
