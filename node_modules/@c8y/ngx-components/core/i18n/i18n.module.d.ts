import { HttpClient } from '@angular/common/http';
import { ModuleWithProviders, Provider } from '@angular/core';
import { OptionsService } from '../common/options.service';
import { AppStateService } from '../common/ui-state.service';
import { TranslateCustomLoader } from './translate.loader';
import { CachedLocaleDictionaryService } from './cached-locale-dictionary.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "ngx-bootstrap/datepicker";
import * as i3 from "./c8y-translate.module";
export declare function translateLoaderFactory(httpClient: HttpClient, optionsService: OptionsService, cachedLocaleDictionaryService: CachedLocaleDictionaryService, localePath: string, languages: any): TranslateCustomLoader;
export declare function localePathFactory(options: OptionsService): string;
export declare function languagesFactory(options: OptionsService): import("@c8y/ngx-components").Languages;
export declare function localeId(appStateService: AppStateService): {
    readonly lang: any;
    toLowerCase(): any;
    toString(): any;
};
export declare function getAngularLocalesLanguageString(language?: string): any;
/**
 * The angular module definition for i18n (translation).
 * @exports I18nModule
 */
export declare class I18nModule {
    static providers(): Provider[];
    static forRoot(): ModuleWithProviders<I18nModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<I18nModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<I18nModule, never, [typeof i1.HttpClientModule, typeof i2.BsDatepickerModule], [typeof i3.C8yTranslateModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<I18nModule>;
}
