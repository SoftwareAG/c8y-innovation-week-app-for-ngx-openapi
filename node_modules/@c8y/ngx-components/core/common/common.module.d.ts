import { InjectionToken, ModuleWithProviders, Provider } from '@angular/core';
import { TranslateService } from '../i18n/translate.service';
import { AppStateService } from './ui-state.service';
import { UserPreferencesService } from './user-preferences/user-preferences.service';
import * as i0 from "@angular/core";
import * as i1 from "./empty-state/empty-state.component";
import * as i2 from "./icon.directive";
import * as i3 from "./outlet.directive";
import * as i4 from "./humanize.pipe";
import * as i5 from "./should-show-mo.pipe";
import * as i6 from "./get-group-icon.pipe";
import * as i7 from "./humanize-app-name.pipe";
import * as i8 from "./if-allowed.directive";
import * as i9 from "./shorten-user-name.pipe";
import * as i10 from "./user-name-initials.pipe";
import * as i11 from "./forOf.directive";
import * as i12 from "./load-more.component";
import * as i13 from "./map-function.pipe";
import * as i14 from "./progress-bar.component";
import * as i15 from "./date.pipe";
import * as i16 from "./number.pipe";
import * as i17 from "./loading.component";
import * as i18 from "./dropdown-direction.directive";
import * as i19 from "./textarea-autoresize.directive";
import * as i20 from "./tabset-aria.directive";
import * as i21 from "./operation-result.component";
import * as i22 from "./virtual-scroll/virtual-scroller-wrapper.component";
import * as i23 from "./virtual-scroll/virtual-scroll-window.directive";
import * as i24 from "./bytes.pipe";
import * as i25 from "./show-if-filter.pipe";
import * as i26 from "./skip-link.directive";
import * as i27 from "./markdown-to-html.pipe";
import * as i28 from "./mo-name.pipe";
import * as i29 from "./generic-file-icon.pipe";
import * as i30 from "./stringify-object.pipe";
import * as i31 from "@angular/common";
import * as i32 from "../i18n/i18n.module";
import * as i33 from "ngx-bootstrap/tooltip";
import * as i34 from "@angular/cdk/scrolling";
export declare function initializeServices(translateService: TranslateService, state: AppStateService, userPreferences: UserPreferencesService): () => void;
export declare const ICON_LIST: InjectionToken<unknown>;
/**
 * Commonly used directives, data access and translation. This module is the shared
 * module across all core components. It should be imported by default.
 *
 * @exports IconDirective A directive to set a c8y icon with [c8yIcon]="'rocket'".
 * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).
 * @exports I18nModule Translation module.
 * @exports NgCommonModule Angular common module.
 * @exports DataModule The data layer to allow DI with @c8y/client.
 * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher).
 * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`.
 * @exports ShouldShowMoPipe Checks if passed managed object is device or group type.
 * @exports GetGroupIconPipe Gets proper group icon.
 * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`.
 * @exports UserNameInitialsPipe Allows the initials from the name. E.g. `Foo Bar` gets `FB`.
 * @exports ForOfDirective A forOf directive like ngFor but with load-more function.
 * @exports LoadMoreComponent A component to load more data from a certain data-source.
 * @exports ProgressBarComponent Displays either defined or undefined progress.
 * @exports DropdownDirectionDirective Determines if a dropdown opens to the bottom or to the top.
 * @exports TextareaAutoresizeDirective resizes a textarea height as the user inputs.
 * @exports OperationResultComponent displays an animated svg for success and error operations.
 */
export declare class CommonModule {
    static providers(): Provider[];
    static forRoot(): ModuleWithProviders<CommonModule>;
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<CommonModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<CommonModule, [typeof i1.EmptyStateComponent, typeof i2.IconDirective, typeof i3.OutletDirective, typeof i4.HumanizePipe, typeof i5.ShouldShowMoPipe, typeof i6.GetGroupIconPipe, typeof i7.HumanizeAppNamePipe, typeof i8.IfAllowedDirective, typeof i9.ShortenUserNamePipe, typeof i10.UserNameInitialsPipe, typeof i11.ForOfDirective, typeof i12.LoadMoreComponent, typeof i13.MapFunctionPipe, typeof i14.ProgressBarComponent, typeof i15.DatePipe, typeof i16.NumberPipe, typeof i17.LoadingComponent, typeof i18.DropdownDirectionDirective, typeof i19.TextareaAutoresizeDirective, typeof i20.TabsetAriaDirective, typeof i21.OperationResultComponent, typeof i22.VirtualScrollerWrapperComponent, typeof i23.VirtualScrollWindowDirective, typeof i24.BytesPipe, typeof i25.ShowIfFilterPipe, typeof i26.SkipLinkDirective, typeof i27.MarkdownToHtmlPipe, typeof i28.MoNamePipe, typeof i29.GenericFileIconPipe, typeof i30.StringifyObjectPipe], [typeof i31.CommonModule, typeof i32.I18nModule, typeof i33.TooltipModule, typeof i34.ScrollingModule], [typeof i1.EmptyStateComponent, typeof i2.IconDirective, typeof i3.OutletDirective, typeof i32.I18nModule, typeof i31.CommonModule, typeof i7.HumanizeAppNamePipe, typeof i4.HumanizePipe, typeof i5.ShouldShowMoPipe, typeof i6.GetGroupIconPipe, typeof i8.IfAllowedDirective, typeof i9.ShortenUserNamePipe, typeof i10.UserNameInitialsPipe, typeof i11.ForOfDirective, typeof i12.LoadMoreComponent, typeof i13.MapFunctionPipe, typeof i14.ProgressBarComponent, typeof i15.DatePipe, typeof i16.NumberPipe, typeof i17.LoadingComponent, typeof i18.DropdownDirectionDirective, typeof i19.TextareaAutoresizeDirective, typeof i20.TabsetAriaDirective, typeof i21.OperationResultComponent, typeof i22.VirtualScrollerWrapperComponent, typeof i23.VirtualScrollWindowDirective, typeof i24.BytesPipe, typeof i25.ShowIfFilterPipe, typeof i26.SkipLinkDirective, typeof i27.MarkdownToHtmlPipe, typeof i28.MoNamePipe, typeof i29.GenericFileIconPipe, typeof i30.StringifyObjectPipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<CommonModule>;
}
