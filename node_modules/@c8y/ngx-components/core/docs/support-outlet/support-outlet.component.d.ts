import { Observable } from 'rxjs';
import { AppStateService, OptionsService } from '../../common';
import { TranslateService } from '@ngx-translate/core';
import { ModalService } from '../../modal';
import { TenantService, UserService } from '@c8y/client';
import { AlertService } from '../../alert';
import { HeaderService } from '../../header/header.service';
import * as i0 from "@angular/core";
export declare class SupportOutletComponent {
    ui: AppStateService;
    private optionsService;
    private modalService;
    private translateService;
    private tenantService;
    private alertService;
    private userService;
    private headerService;
    drawerOpen$: Observable<boolean>;
    isSupportOpen: boolean;
    PRODUCT_EXPERIENCE: {
        ACTION_BAR: {
            EVENTS: {
                ACTION_BAR_ITEM: string;
            };
            COMPONENTS: {
                ACTION_BAR_COMPONENT: string;
            };
            ACTIONS: {};
            RESULTS: {};
        };
        QUICK_LINKS: {
            EVENTS: {
                QUICK_LINK_RIGHT_DRAWER: string;
            };
            COMPONENTS: {
                RIGHT_DRAWER_COMPONENT: string;
            };
            ACTIONS: {};
            RESULTS: {};
        };
    };
    constructor(ui: AppStateService, optionsService: OptionsService, modalService: ModalService, translateService: TranslateService, tenantService: TenantService, alertService: AlertService, userService: UserService, headerService: HeaderService);
    activateSupportAccess(): Promise<void>;
    deactivateSupportAccess(): Promise<void>;
    private refreshCurrentUser;
    static ɵfac: i0.ɵɵFactoryDeclaration<SupportOutletComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SupportOutletComponent, "c8y-support-outlet", never, {}, {}, never, never, false, never>;
}
