import { AbstractControl, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';
import * as i0 from "@angular/core";
export declare function uniqueInCollectionByPathValidator(collection: Iterable<object>, path: string, comparator?: (val1: any, val2: any) => boolean): ValidatorFn;
export declare class UniqueInCollectionByPathValidationDirective implements Validator {
    collection: Iterable<object>;
    path: string;
    comparator: (val1: any, val2: any) => boolean;
    validate(control: AbstractControl): ValidationErrors | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<UniqueInCollectionByPathValidationDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<UniqueInCollectionByPathValidationDirective, "[uniqueByPath]", never, { "collection": "collection"; "path": "path"; "comparator": "comparator"; }, {}, never, never, false, never>;
}
