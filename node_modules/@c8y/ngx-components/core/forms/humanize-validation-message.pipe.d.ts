import { PipeTransform } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * This pipe is responsible for transforming validation error key to actual translatable that
 * are defined in ValidationPattern class.
 *
 * @Example:
 *  let errorData = {requiredLength: 5, actualLength: 1}
 *
 * {{ 'minLength' | humanize-validation-message }}
 * Above code renders corresponding validation message for minLength:
 * "Should have at least {{ requiredLength }} characters"
 *
 * It is possible to chain translate pipe:
 * {{ 'minLength' | humanize-validation-message |translate:errorData  }}
 * should render: "Should have at least 5 characters"
 *
 * It is also possible to provide custom translation message. For example:
 * let customMessages = {minLength: gettext("File name should have at least {{ requiredLength }} characters")}
 * Html:
 * {{ 'minLength' | humanize-validation-message:customMessages |translate:errorData }}
 *
 * above code renders:
 * "File name should have at least 5 characters"
 */
export declare class HumanizeValidationMessagePipe implements PipeTransform {
    transform(errorName: string, customMessages?: {
        [key: string]: string;
    }): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<HumanizeValidationMessagePipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<HumanizeValidationMessagePipe, "humanizeValidationMessage", false>;
}
