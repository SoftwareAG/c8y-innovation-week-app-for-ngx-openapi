import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { DynamicComponentDefinition } from './dynamic-component.model';
import * as i0 from "@angular/core";
export declare class DynamicResolverService {
    private injector;
    bulkResolvingTrigger$: Observable<number>;
    private _triggerBulkResolving;
    private requestId;
    constructor(injector: Injector);
    executeResolvers(details: Array<{
        componentId: string;
        config: any;
    }>, dynamicDef: DynamicComponentDefinition[]): Promise<unknown[]>;
    serialize(details: Array<{
        componentId: string;
        config: any;
    }>, dynamicDef: DynamicComponentDefinition[]): {
        [key: string]: Partial<any> | Partial<any>[];
    }[];
    private serializeSingleComponent;
    private triggerResolving;
    private executeResolversForSingleComponent;
    private waitForResults;
    private waitForResultsOfSingleEntry;
    private awaitResult;
    private getRequestId;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicResolverService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DynamicResolverService>;
}
