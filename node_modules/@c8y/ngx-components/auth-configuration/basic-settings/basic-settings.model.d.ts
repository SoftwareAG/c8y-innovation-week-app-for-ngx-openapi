import { IAuthenticationRestrictions, ITenantLoginOption } from '@c8y/client';
export interface TenantLoginOption extends Omit<ITenantLoginOption, 'authenticationRestrictions' | 'self' | 'strengthValidity' | 'tfaStrategy' | 'greenMinLength' | 'enforceStrength' | 'strengthValidity' | '_type'> {
    authenticationRestrictions?: AuthenticationRestrictions;
}
export interface AuthenticationRestrictions extends Omit<IAuthenticationRestrictions, 'trustedUserAgents' | 'forbiddenUserAgents'> {
    trustedUserAgents: UserAgent[];
    forbiddenUserAgents: UserAgent[];
}
export declare class UserAgent {
    readonly _id: string;
    value: string;
    constructor(value: string);
    get id(): string;
    private uniqueId;
}
export declare function isOauthInternal(tenantLoginOption: TenantLoginOption): boolean;
export declare function isBasic(tenantLoginOption: TenantLoginOption): boolean;
