import { SimpleChanges } from '@angular/core';
import { TfaStrategy, TenantLoginOptionType } from '@c8y/client';
import { AuthConfiguration } from './auth-configuration.model';
import * as i0 from "@angular/core";
declare enum TfaStateEnum {
    TFA_UNDEFINED_BY_SYSTEM = 0,
    TFA_ENFORCED_FOR_GROUP = 1,
    TFA_ENABLED_BY_SYSTEM = 2,
    TFA_ENFORCED_BY_SYSTEM = 3
}
export declare class TfaSettingsComponent {
    authConfiguration: AuthConfiguration;
    preferredLoginOptionType: TenantLoginOptionType;
    smsGatewayAvailable: boolean;
    tfaStateEnum: typeof TfaStateEnum;
    tfaStrategyEnum: typeof TfaStrategy;
    tenantLoginOptionTypeEnum: typeof TenantLoginOptionType;
    TOTP_REQUIRES_OAUTH_POPOVER: "TOTP requires OAI-Secure login mode.";
    SMS_APP_NOT_SUBSCRIBED_POPOVER: "SMS strategy requires messaging application to be subscribed.";
    TFA_IS_ENFORCED_BY_SYSTEM_POPOVER: "The setting is enforced on the platform level.";
    TFA_IS_ENABLED_BY_SYSTEM_POPOVER: "The setting is enabled on the platform level.";
    TOKEN_VALIDITY_DETERMINED_BY_JWT_POPOVER: "In OAI-Secure login mode, the token's validity limit is determined by the JWT token and cannot be edited here.";
    TFA_IS_ENABLED_BY_ENFORCE_FOR_GROUP_POPOVER: "The setting is enabled on the platform level because it is enforced for particular roles.";
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    get tenantTfaTokenValidity(): any;
    set tenantTfaTokenValidity(value: any);
    get tenantTfaPinValidity(): any;
    set tenantTfaPinValidity(value: any);
    get tenantTfaEnabled(): any;
    set tenantTfaEnabled(value: any);
    get tenantTfaEnforced(): any;
    set tenantTfaEnforced(value: any);
    get tenantTfaStrategy(): any;
    set tenantTfaStrategy(value: any);
    get systemTfaEnforcedGroup(): any;
    get systemTfaTenantScopeSettingEnabled(): any;
    get systemTfaEnabled(): any;
    get systemTfaEnforced(): any;
    get tfaState(): TfaStateEnum;
    get tfaBySmsCanBeSet(): boolean;
    get tfaByTotpCanBeSet(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TfaSettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TfaSettingsComponent, "c8y-auth-tfa", never, { "authConfiguration": "authConfiguration"; }, {}, never, never, false, never>;
}
export {};
