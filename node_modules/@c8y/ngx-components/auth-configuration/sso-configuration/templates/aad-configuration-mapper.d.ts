import { SsoConfigurationMapper } from './sso-configuration.mapper';
import { AadConfiguration } from './aad.model';
import { SsoConfiguration } from '../sso-configuration.model';
import * as i0 from "@angular/core";
export declare class AadConfigurationMapper implements SsoConfigurationMapper<AadConfiguration> {
    private defaults;
    private constants;
    private urlPattern;
    mapFrom(templateModel: AadConfiguration): SsoConfiguration;
    mapTo(ssoConfiguration: SsoConfiguration): AadConfiguration;
    setupDefaults(ssoConfiguration: any): void;
    setupConstants(ssoConfiguration: any): void;
    setupAadAddressAndTenant(ssoConfiguration: any): void;
    getAadAddressFromUrl(url: any): any;
    getTenantFromUrl(url: any): any;
    setupClientSecret(ssoConfiguration: any): void;
    getClientSecretFromBody(body: any): string;
    setupUserIdConfig(ssoConfiguration: any): void;
    setupSignatureVerificationConfig(ssoConfiguration: any): void;
    getRedirectAfterLogout(ssoConfiguration: any): boolean;
    getRedirectAfterLogoutUrl(ssoConfiguration: any): string;
    getFirstDefined(values: any): any;
    getQueryString(params: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<AadConfigurationMapper, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AadConfigurationMapper>;
}
