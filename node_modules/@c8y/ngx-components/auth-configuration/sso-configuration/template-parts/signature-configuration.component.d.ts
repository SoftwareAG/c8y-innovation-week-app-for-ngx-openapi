import { ControlContainer } from '@angular/forms';
import { CertificateType, CustomCertificate } from './signature-configuration.model';
import * as i0 from "@angular/core";
export declare class SignatureConfigurationComponent {
    protected controlContainer: ControlContainer;
    templateModel: any;
    certificateType: typeof CertificateType;
    certificateTypes: {
        CUSTOM: {
            name: string;
            label: "Custom";
            value: string;
            signatureVerificationConfigFragment: string;
            ordinal: number;
        };
        AZURE: {
            name: string;
            label: string;
            value: string;
            signatureVerificationConfigFragment: string;
            ordinal: number;
        };
        ADFS: {
            name: string;
            label: "ADFS manifest";
            value: string;
            signatureVerificationConfigFragment: string;
            ordinal: number;
        };
        JWKS: {
            name: string;
            label: string;
            value: string;
            signatureVerificationConfigFragment: string;
            ordinal: number;
        };
    };
    algorithmTypes: {
        PCKS: {
            name: string;
            value: string;
            label: "X.509 certificate (PEM format)";
        };
        RSA: {
            name: string;
            value: string;
            label: "RSA public key (X.509 Subject Public Key Info)";
        };
    };
    CERTIFICATE_ID_FIELD_POPOVER: "This is the name of the field in the token whose value will be used to select one of the certificates below which has matching \"Certificate ID value\".";
    constructor(controlContainer: ControlContainer);
    shouldShow(field: string): boolean;
    removeCustomCertificate(customCertificate: CustomCertificate): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SignatureConfigurationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SignatureConfigurationComponent, "c8y-sso-signature-configuration", never, { "templateModel": "templateModel"; }, {}, never, never, false, never>;
}
