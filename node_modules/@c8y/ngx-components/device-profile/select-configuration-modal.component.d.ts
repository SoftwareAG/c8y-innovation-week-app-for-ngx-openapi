import { EventEmitter } from '@angular/core';
import { IManagedObject } from '@c8y/client';
import { ISelectModalObject, ModalLabels, ProductExperienceEvent, ProductExperienceEventSource } from '@c8y/ngx-components';
import { RepositoryService } from '@c8y/ngx-components/repository/shared';
import { Observable, Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class SelectConfigurationModalComponent implements ProductExperienceEventSource {
    private repositoryService;
    PRODUCT_EXPERIENCE: {
        SOFTWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_SOFTWARE_MODAL: string;
                DEVICE_SOFTWARE_CHANGES: string;
                DEVICE_SOFTWARE_LIST: string;
            };
            ACTIONS: {
                APPLY_SOFTWARE_CHANGES: string;
                CLEAR_SOFTWARE_CHANGES: string;
                OPEN_INSTALL_SOFTWARE: string;
                OPEN_UPDATE_SOFTWARE: string;
                DELETE_SOFTWARE: string;
            };
            RESULTS: {
                ADD_SOFTWARE: string;
                ADD_SOFTWARE_VERSION: string;
                EDIT_SOFTWARE: string;
            };
        };
        FIRMWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_FIRMWARE_MODAL: string;
                ADD_FIRMWAR_PATCH_MODAL: string;
                FIRMWARE_DEVICE_TAB: string;
                DEVICE_FIRMWARE_LIST: string;
            };
            ACTIONS: {
                FILTER_FIRMWARE_LIST: string;
                OPEN_INSTALL_FIRMWARE_DIALOG: string;
                OPEN_REPLACE_FIRMWARE_DIALOG: string;
                OPEN_INSTALL_FIRMWARE_PATCH_DIALOG: string;
            };
            RESULTS: {
                ADD_FIRMWARE: string;
                ADD_FIRMWARE_VERSION: string;
                ADD_FIRMWARE_PATCH: string;
                EDIT_FIRMWARE: string;
                CREATE_FIRMWARE_UPDATE_OPERATION: string;
            };
        };
        SHARED: {
            COMPONENTS: {
                REPOSITORY_SELECT_MODAL: string;
                SELECT_CONFIGURATION_MODAL: string;
            };
        };
    };
    title: string;
    load: Subject<void>;
    configurations: Observable<any[]>;
    resultEmitter: EventEmitter<any[]>;
    selected: any[];
    deviceTypeQuery: any;
    searchQuery: any;
    labels: ModalLabels;
    productExperienceEvent: ProductExperienceEvent;
    private queriesUtil;
    constructor(repositoryService: RepositoryService);
    search(searchTerm: any): void;
    result(selectedItems: any): void;
    getItems(): Promise<import("@c8y/client").IResultList<IManagedObject>>;
    aggregate(mos: IManagedObject[]): ISelectModalObject[];
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectConfigurationModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectConfigurationModalComponent, "c8y-select-configuration-modal", never, {}, {}, never, never, false, never>;
}
