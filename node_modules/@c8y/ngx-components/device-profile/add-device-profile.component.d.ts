import { ProductExperienceEvent, ProductExperienceEventSource } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { DeviceProfile } from './device-profile.model';
import { DeviceProfileService } from './device-profile.service';
import * as i0 from "@angular/core";
export declare class AddDeviceProfileComponent implements ProductExperienceEventSource {
    private modal;
    private deviceProfileService;
    DEVICE_TYPE_POPOVER: "The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.";
    PRODUCT_EXPERIENCE: {
        EVENTS: {
            REPOSITORY: string;
            DEVICE_TAB: string;
        };
        COMPONENTS: {
            DEVICE_PROFILE_LIST: string;
            ADD_DEVICE_PROFILE: string;
            DEVICE_PROFILE: string;
            DEVICE_TAB_PROFILE: string;
        };
        ACTIONS: {
            CANCEL: string;
            CREATE: string;
            REMOVE: string;
            ADD: string;
            SAVE: string;
            ASSIGN_DEVICE_PROFILE: string;
        };
        RESULTS: {
            ADD_SOFTWARE: string;
        };
        FRAGMENTS: {
            FIRMWARE: string;
            SOFTWARE: string;
            CONFGIURATION: string;
        };
    };
    deviceProfile: Partial<DeviceProfile>;
    result: Promise<any>;
    productExperienceEvent: ProductExperienceEvent;
    private _save;
    private _cancel;
    constructor(modal: BsModalRef, deviceProfileService: DeviceProfileService);
    create(): Promise<void>;
    close(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AddDeviceProfileComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AddDeviceProfileComponent, "c8y-add-device-profile", never, {}, {}, never, never, false, never>;
}
