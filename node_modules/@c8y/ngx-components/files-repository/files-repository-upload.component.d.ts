import { EventEmitter } from '@angular/core';
import { AlertService, GainsightService, FilesService, IFetchWithProgress } from '@c8y/ngx-components';
import { Observable, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class FilesRepositoryUploadComponent {
    private alertService;
    private gainsightService;
    private filesService;
    /** Emits an event when modal is closed. `uploaded` indicates if any files were uploaded. */
    onClose: EventEmitter<{
        uploaded: boolean;
    }>;
    isLoading: boolean;
    dropFilesHereMessage: string;
    filesToUpload: File[];
    uploadProgress: IFetchWithProgress[];
    uploadProgress$: Observable<IFetchWithProgress[]>;
    uploadSubscription: Subscription;
    constructor(alertService: AlertService, gainsightService: GainsightService, filesService: FilesService);
    upload(): Promise<void>;
    onFileDroppedEvent(event: File[]): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FilesRepositoryUploadComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FilesRepositoryUploadComponent, "c8y-files-repository-upload", never, {}, { "onClose": "onClose"; }, never, never, false, never>;
}
