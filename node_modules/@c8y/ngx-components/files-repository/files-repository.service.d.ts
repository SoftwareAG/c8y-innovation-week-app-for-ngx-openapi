import { QueriesUtil } from '@c8y/client';
import { InventoryService } from '@c8y/client';
import { Pagination, Column, Row } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
export declare class FilesRepositoryService {
    private inventoryService;
    queriesUtil: QueriesUtil;
    baseQuery: {
        __has: string;
    };
    constructor(inventoryService: InventoryService);
    getPagination(): Pagination;
    hasApplicationStorageFragment(file: Row): boolean;
    getColumns(): Column[];
    /** Returns array with items id where item has not c8y_applications_storage fragment. */
    getDeletableItemsIds(selectedItemsIds: string[], dataFromDataGrid: Array<any>): string[];
    /** Returns the total number of items (with no filters based on columns setup). */
    getTotal(): Promise<number>;
    /** Returns data for current columns and pagination setup. */
    getData(columns: Column[], pagination: Pagination, searchText?: string): Promise<import("@c8y/client").IResultList<import("@c8y/client").IManagedObject>>;
    /** Returns the number of items matching current columns and pagination setup. */
    getCount(columns: Column[], pagination: Pagination): Promise<number>;
    /** Returns filters for given columns and pagination setup. */
    private getFilters;
    /** Returns a query string based on columns setup. */
    private getQueryString;
    /** Returns a query object based on columns setup. */
    private getQueryObj;
    /** Extends given query with a part based on the setup of given column. */
    private addColumnQuery;
    static ɵfac: i0.ɵɵFactoryDeclaration<FilesRepositoryService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FilesRepositoryService>;
}
