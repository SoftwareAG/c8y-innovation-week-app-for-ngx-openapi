export declare const MESSAGES: {
    '^Sender name$': {
        gettext: "Sender name";
    };
    '^Sender name used for sent SMS$': {
        gettext: "Sender name used for sent SMS";
    };
    '^Sender address$': {
        gettext: "Sender address";
    };
    '^Sender address used for sent SMS$': {
        gettext: "Sender address used for sent SMS";
    };
    '^Username$': {
        gettext: "Username";
    };
    '^Password$': {
        gettext: "Password";
    };
    '^Licence key$': {
        gettext: "License key";
    };
    '^Key$': {
        gettext: "Key";
    };
    '^API base URL$': {
        gettext: "API base URL";
    };
    '^API URL$': {
        gettext: "API URL";
    };
    '^oauth$': {
        gettext: "OAuth";
    };
    '^basic$': {
        gettext: "Basic";
    };
    '^Authentication method$': {
        gettext: "Authentication method";
    };
    '^Defines which authentication method is used with the provider$': {
        gettext: "Defines which authentication method is used with the provider";
    };
    '^Static headers$': {
        gettext: "Static headers";
    };
    '^Static headers that should be added to requests towards the provider$': {
        gettext: "Static headers that should be added to requests towards the provider";
    };
    '^OAuth token URL$': {
        gettext: "OAuth token URL";
    };
    '^URL where the OAuth token is requested from (required if OAuth method is chosen)$': {
        gettext: "URL where the OAuth token is requested from (required if OAuth method is selected)";
    };
    '^OAuth toke mime type$': {
        gettext: "OAuth token mime type";
    };
    '^Overrides the OAuth token response mime type$': {
        gettext: "Overrides the OAuth token response mime type";
    };
    '^OAuth access toke type$': {
        gettext: "OAuth access token type";
    };
    '^Overrides the OAuth access token type$': {
        gettext: "Overrides the OAuth access token type";
    };
    '^Global configuration$': {
        gettext: "Global configuration";
    };
    '^Enables or disables if the settings may be used globally for all tenants (Only possible in management tenant)$': {
        gettext: "Enables or disables the settings globally for all tenants (only possible in management tenant)";
    };
    '^API key$': {
        gettext: "API key";
    };
    '^Inherit to subtenants$': {
        gettext: "Inherit to subtenants";
    };
    "^Enables or disables if this tenant's configuration may be inherited to subtenants$": {
        gettext: "Enables or disables the option to inherit the tenant configuration to subtenants";
    };
    '^Login$': {
        gettext: "Login";
    };
    '^Source business unit ID$': {
        gettext: "Source business unit ID";
    };
    '^Client ID$': {
        gettext: "Client ID";
    };
    '^Client secret$': {
        gettext: "Client secret";
    };
};
