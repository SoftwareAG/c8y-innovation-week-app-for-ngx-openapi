import { IIdentified, IManagedObject } from '@c8y/client';
import { AssetNodeService } from '../asset-node.service';
import * as i0 from "@angular/core";
export declare class AssetSelectorService extends AssetNodeService {
    /**
     * Simplifies the object model based on the selected mode.
     * @param obj The selected asset.
     * @param mode The mode which will decide what type of model will be returned.
     */
    normalizeValue(obj: Partial<IManagedObject>, modelMode: 'simple' | 'full'): Partial<IManagedObject> | IIdentified;
    simplifyModel(model: Partial<IManagedObject> | IIdentified[], mode: 'simple' | 'full'): Partial<IManagedObject> | IIdentified;
    /**
     * Returns the index of the currently selected item.
     * @param selected All selected items
     * @param selectedMo The new selected item-
     * @returns An index, or -1 if not found.
     */
    getIndexOfSelected(selected: Array<Partial<IIdentified>> | Partial<IIdentified>, selectedMo: IIdentified): any;
    private normalizeModelValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<AssetSelectorService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AssetSelectorService>;
}
