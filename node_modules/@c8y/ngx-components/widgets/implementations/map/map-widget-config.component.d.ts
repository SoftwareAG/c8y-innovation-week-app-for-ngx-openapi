import { AfterViewInit, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { AlertService } from '@c8y/ngx-components';
import { IconSelectorService } from '@c8y/ngx-components/icon-selector';
import { ClusterMapConfig, MapDefaultConfig, MapService, PositionManagedObject } from '@c8y/ngx-components/map';
import { TranslateService } from '@ngx-translate/core';
import type L from 'leaflet';
import { MapWidgetConfig, RefreshOptions } from './map-widget.model';
import * as i0 from "@angular/core";
export declare class MapWidgetConfigComponent implements OnInit, AfterViewInit, OnChanges {
    private mapService;
    private alertService;
    private translateService;
    private defaultConfig;
    private iconSelector;
    config: MapWidgetConfig;
    formConfig: ClusterMapConfig;
    canAutoCenter: boolean;
    isPositionedDevice: boolean;
    assets: PositionManagedObject[];
    refreshOptions: RefreshOptions;
    private leaflet;
    private centerIcon;
    private previewMap;
    constructor(mapService: MapService, alertService: AlertService, translateService: TranslateService, defaultConfig: MapDefaultConfig, iconSelector: IconSelectorService);
    ngOnInit(): Promise<void>;
    ngOnChanges(changes: SimpleChanges): Promise<void>;
    ngAfterViewInit(): Promise<void>;
    onBeforeSave(): boolean;
    zoomLevelChanged(): void;
    changeCenter(): void;
    onPreviewZoomStart(): void;
    onPreviewZoomEnd(event: L.LeafletEvent): void;
    onPreviewMapMove(event: L.LeafletEvent): void;
    useOwnPosition(): void;
    centerToAsset(): void;
    updateRefreshOptions(): void;
    openIconSelector(): Promise<void>;
    removeIcon(): void;
    private updateAsset;
    private getRefreshOptions;
    private addCenterIcon;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapWidgetConfigComponent, [null, null, null, { optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MapWidgetConfigComponent, "c8y-map-widget-config", never, { "config": "config"; }, {}, never, never, false, never>;
}
