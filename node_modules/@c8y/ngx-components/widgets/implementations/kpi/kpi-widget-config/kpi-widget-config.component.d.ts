import { OnInit } from '@angular/core';
import { FormBuilder, NgForm, ValidatorFn } from '@angular/forms';
import { OnBeforeSave } from '@c8y/ngx-components';
import { WidgetConfigComponent } from '@c8y/ngx-components/context-dashboard';
import { DatapointAttributesFormConfig, DatapointSelectorModalOptions } from '@c8y/ngx-components/datapoint-selector';
import { IconSelectorService } from '@c8y/ngx-components/icon-selector';
import { Observable } from 'rxjs';
import { KpiWidgetConfig } from '../kpi-widget.model';
import * as i0 from "@angular/core";
export declare function exactlyASingleDatapointActive(): ValidatorFn;
export declare class KpiWidgetConfigComponent implements OnInit, OnBeforeSave {
    private formBuilder;
    private form;
    private iconSelector;
    private widgetConfig;
    config: KpiWidgetConfig;
    datapointSelectionConfig: Partial<DatapointSelectorModalOptions>;
    defaultFormOptions: Partial<DatapointAttributesFormConfig>;
    formGroup: ReturnType<KpiWidgetConfigComponent['createForm']>;
    availableIcons: string[];
    limits: {
        fontSizeMax: number;
        fontSizeMin: number;
        numberOfDecimalPlacesMax: number;
        numberOfDecimalPlacesMin: number;
    };
    constructor(formBuilder: FormBuilder, form: NgForm, iconSelector: IconSelectorService, widgetConfig: WidgetConfigComponent);
    onBeforeSave(config?: KpiWidgetConfig): boolean | Promise<boolean> | Observable<boolean>;
    ngOnInit(): Promise<void>;
    openIconSelector(): Promise<void>;
    private initForm;
    private createForm;
    static ɵfac: i0.ɵɵFactoryDeclaration<KpiWidgetConfigComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<KpiWidgetConfigComponent, "c8y-kpi-widget-config", never, { "config": "config"; }, {}, never, never, false, never>;
}
