import { OnChanges, SimpleChanges } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { MeasurementRealtimeService } from '@c8y/ngx-components';
import { ThreeDRotationWidgetConfig, ThreeDRotationWidgetRotate } from '../three-d-rotation.model';
import { ContextDashboardComponent } from '@c8y/ngx-components/context-dashboard';
import * as i0 from "@angular/core";
export declare class ThreeDRotationWidgetViewComponent implements OnChanges {
    private measurementRealtime;
    private dashboard;
    config: ThreeDRotationWidgetConfig;
    angles$: Observable<ThreeDRotationWidgetRotate>;
    modelObj$: Observable<any>;
    deviceId$: BehaviorSubject<string>;
    modelName$: BehaviorSubject<string>;
    cameraType$: BehaviorSubject<string>;
    isWireframe$: BehaviorSubject<boolean>;
    constructor(measurementRealtime: MeasurementRealtimeService, dashboard: ContextDashboardComponent);
    ngOnChanges(changes: SimpleChanges): void;
    private onConfigChange;
    private getModelUrl;
    private getAnglesOfDevice$;
    private convertValues;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThreeDRotationWidgetViewComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThreeDRotationWidgetViewComponent, "c8y-three-d-rotation-widget-view", never, { "config": "config"; }, {}, never, never, false, never>;
}
