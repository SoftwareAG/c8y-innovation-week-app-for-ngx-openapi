import { ElementRef, EventEmitter } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AlertService, C8yStepper, GainsightService, Pagination, Permissions } from '@c8y/ngx-components';
import { Subscription } from 'rxjs';
import { SubAssetsService } from '../sub-assets.service';
import { AddGroupService } from './add-group.service';
import * as i0 from "@angular/core";
export declare class AddGroupComponent {
    private fb;
    private addGroupService;
    private alert;
    private subAssetsService;
    private gainsightService;
    private permissionsService;
    currentGroupId: string;
    refresh: EventEmitter<any>;
    onDeviceQueryStringChange: EventEmitter<string>;
    onCancel: EventEmitter<any>;
    stepper: C8yStepper;
    nameInputRef: ElementRef;
    deviceQueryStringOutput: string;
    formGroupStepOne: FormGroup;
    pendingStatus: boolean;
    pagination: Pagination;
    selected: string[];
    subscription: Subscription;
    canCreateGroup: boolean;
    canAssignDevice: boolean;
    PRODUCT_EXPERIENCE: {
        EVENT: string;
        DELETE_ASSET: {
            COMPONENTS: {
                DELETE_ASSETS_MODAL: string;
            };
            ACTIONS: {
                CASCADE_DELETE: string;
                DELETE_DEVICE_OWNER: string;
            };
            RESULTS: {
                CANCELED: string;
                DELETED: string;
            };
        };
        ASSIGN_DEVICES: {
            COMPONENTS: {
                ASSIGN_DEVICES: string;
            };
            ACTIONS: {
                ASSIGN: string;
                CANCEL: string;
                DISPLAY_CHILD_DEVICES: string;
            };
        };
        UNASSIGN_MODAL: {
            COMPONENTS: {
                UNASSIGN_MODAL: string;
            };
            RESULTS: {
                ASSET_UNASSIGNED: string;
            };
            ACTIONS: {
                CANCEL: string;
            };
        };
        GROUP_INFO: {
            COMPONENTS: {
                GROUP_INFO: string;
            };
            ACTIONS: {
                EDIT: string;
            };
            RESULTS: {
                EDIT_SAVED: string;
            };
            PROPERTIES: {
                NAME: string;
                DESCRIPTION: string;
            };
        };
        ADD_GROUP: {
            COMPONENTS: {
                ADD_GROUP: string;
            };
            ACTIONS: {
                ADD: string;
            };
            RESULTS: {
                ADD_SUCCESS: string;
            };
        };
    };
    readonly ITEMS_SELECT_LIMIT: number;
    readonly btnLabels: {
        next: "Next";
        cancel: "Cancel";
        create: "Create";
    };
    private nameInput;
    constructor(fb: FormBuilder, addGroupService: AddGroupService, alert: AlertService, subAssetsService: SubAssetsService, gainsightService: GainsightService, permissionsService: Permissions);
    onEnterKeyDown(_event: KeyboardEvent): void;
    onEscapeKeyDown(_event: KeyboardEvent): void;
    ngOnInit(): Promise<void>;
    ngAfterViewInit(): void;
    createGroup(): Promise<void>;
    onSelected(selectedDevicesIDs: string[]): void;
    resetStepper(): void;
    ngOnDestroy(): void;
    private isGroupDetailsStep;
    private isAssignDeviceStep;
    private setFocusOnNameInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<AddGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AddGroupComponent, "c8y-add-group", never, { "currentGroupId": "currentGroupId"; "refresh": "refresh"; }, { "onDeviceQueryStringChange": "onDeviceQueryStringChange"; "onCancel": "onCancel"; }, never, never, false, never>;
}
