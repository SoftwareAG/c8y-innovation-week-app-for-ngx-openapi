import { EventEmitter, TemplateRef } from '@angular/core';
import { IManagedObject, InventoryService } from '@c8y/client';
import { ActionControl, AlertService, GainsightService, HeaderActionControl, Pagination, UserPreferencesGridConfigContext } from '@c8y/ngx-components';
import { SubAssetsService } from '../sub-assets.service';
import * as i0 from "@angular/core";
export declare class AssignDevicesComponent {
    private alert;
    private subAssetsService;
    private inventoryService;
    private gainsightService;
    static readonly GRID_CONFIG_CONTEXT: UserPreferencesGridConfigContext;
    CURRENT_LOCATION: string;
    PRODUCT_EXPERIENCE: {
        EVENT: string;
        DELETE_ASSET: {
            COMPONENTS: {
                DELETE_ASSETS_MODAL: string;
            };
            ACTIONS: {
                CASCADE_DELETE: string;
                DELETE_DEVICE_OWNER: string;
            };
            RESULTS: {
                CANCELED: string;
                DELETED: string;
            };
        };
        ASSIGN_DEVICES: {
            COMPONENTS: {
                ASSIGN_DEVICES: string;
            };
            ACTIONS: {
                ASSIGN: string;
                CANCEL: string;
                DISPLAY_CHILD_DEVICES: string;
            };
        };
        UNASSIGN_MODAL: {
            COMPONENTS: {
                UNASSIGN_MODAL: string;
            };
            RESULTS: {
                ASSET_UNASSIGNED: string;
            };
            ACTIONS: {
                CANCEL: string;
            };
        };
        GROUP_INFO: {
            COMPONENTS: {
                GROUP_INFO: string;
            };
            ACTIONS: {
                EDIT: string;
            };
            RESULTS: {
                EDIT_SAVED: string;
            };
            PROPERTIES: {
                NAME: string;
                DESCRIPTION: string;
            };
        };
        ADD_GROUP: {
            COMPONENTS: {
                ADD_GROUP: string;
            };
            ACTIONS: {
                ADD: string;
            };
            RESULTS: {
                ADD_SUCCESS: string;
            };
        };
    };
    currentGroupId: string;
    refresh: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    onShowChildDevices: EventEmitter<boolean>;
    selectedDevice: EventEmitter<IManagedObject>;
    showDevicesToggle: TemplateRef<any>;
    deviceQueryStringOutput: string;
    pendingStatus: boolean;
    pagination: Pagination;
    selected: string[];
    baseQuery: any;
    canAssignDevice: boolean;
    actionControls: ActionControl[];
    headerActionControls: HeaderActionControl[];
    showChildren: boolean;
    readonly isSelectable = true;
    constructor(alert: AlertService, subAssetsService: SubAssetsService, inventoryService: InventoryService, gainsightService: GainsightService);
    onEnterKeyDown(_event: KeyboardEvent): void;
    onEscapeKeyDown(_event: KeyboardEvent): void;
    ngOnInit(): Promise<void>;
    setNotIncludedInGroupQuery(): void;
    setHeaderActionControls(): void;
    setActionControls(showChildren: boolean): void;
    assignDevices(): Promise<void>;
    onSelected(selectedDevicesIDs: string[]): void;
    selectChildren(asset: IManagedObject): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AssignDevicesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AssignDevicesComponent, "c8y-assign-devices", never, { "currentGroupId": "currentGroupId"; "refresh": "refresh"; }, { "onCancel": "onCancel"; "onShowChildDevices": "onShowChildDevices"; "selectedDevice": "selectedDevice"; }, never, never, false, never>;
}
