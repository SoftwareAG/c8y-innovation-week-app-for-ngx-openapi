import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { Router } from '@angular/router';
import { DeviceRegistrationService, InventoryService } from '@c8y/client';
import { C8yStepper, GainsightService } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { SensorPhoneService } from './sensor-phone.service';
import { FormControl } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class SensorPhoneModalComponent implements AfterViewInit, OnDestroy {
    private bsModalRef;
    private sensorPhoneService;
    private renderer;
    private deviceRegistrationService;
    private router;
    private inventoryService;
    private gainsightService;
    stepper: C8yStepper;
    container: ElementRef;
    success: any;
    errorMessage: "Failed to register a smartphone.";
    registrationData: any;
    tenantId: any;
    instance: any;
    deviceId: string;
    dashboardLink: string;
    resultControl: FormControl;
    waitOrRetry: string;
    readonly connectSmartphoneTitle: string;
    readonly installAppTitle: string;
    readonly twoOptionsToConnectTitle: string;
    readonly resultTitle: string;
    private destroyNotifier$;
    constructor(bsModalRef: BsModalRef, sensorPhoneService: SensorPhoneService, renderer: Renderer2, deviceRegistrationService: DeviceRegistrationService, router: Router, inventoryService: InventoryService, gainsightService: GainsightService);
    onKeydownHandler(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onStepperSelectionChange(stepper: Partial<C8yStepper>): void;
    registerPhone(): Promise<void>;
    waitForPhoneToConnect(): Promise<import("@c8y/client").IDeviceRegistration>;
    waitForDeviceAndDashboardMos(): Promise<{
        deviceMo: import("@c8y/client").IManagedObject;
        dashboardMo: import("@c8y/client").IManagedObject;
    }>;
    onDeviceAndDashboardMosCreated(deviceMo: any, dashboardMo: any): void;
    generateDeviceId(): string;
    openDashboard(): Promise<void>;
    back(): void;
    next($event: any): void;
    cancel(): void;
    retry(): void;
    onFailure(): void;
    deleteDeviceRequest(): Promise<void>;
    private getCurrentStepNumber;
    static ɵfac: i0.ɵɵFactoryDeclaration<SensorPhoneModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SensorPhoneModalComponent, "c8y-sensor-phone", never, {}, {}, never, never, false, never>;
}
