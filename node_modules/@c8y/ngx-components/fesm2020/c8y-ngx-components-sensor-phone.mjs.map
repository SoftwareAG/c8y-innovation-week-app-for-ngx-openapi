{"version":3,"file":"c8y-ngx-components-sensor-phone.mjs","sources":["../../sensor-phone/sensor-phone-dashboard-strings.ts","../../sensor-phone/connect-smartphone.factory.ts","../../sensor-phone/sensor-phone.module.ts","../../sensor-phone/c8y-ngx-components-sensor-phone.ts"],"sourcesContent":["import { gettext } from '@c8y/ngx-components';\n\ngettext('Phone Sensor Dashboard'),\n  gettext('Vibration'),\n  gettext('Signal'),\n  gettext('Smartphone sensors');\n","import { Injectable } from '@angular/core';\nimport { DocLink, ExtensionFactory, gettext, OptionsService } from '@c8y/ngx-components';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class ConnectSmartphoneFactory implements ExtensionFactory<DocLink> {\n  constructor(private optionsService: OptionsService, private bsModalService: BsModalService) {}\n  get() {\n    if (this.optionsService.get('sensorPhone', false)) {\n      return of([\n        {\n          icon: 'c8y-icon c8y-icon-mobile-add',\n          type: 'quicklink',\n          label: gettext('Connect smartphone'),\n          url: undefined,\n          click: async () => {\n            const { SensorPhoneModalComponent } = await import(\n              '@c8y/ngx-components/sensor-phone/sensor-phone-modal'\n            );\n            this.bsModalService.show(SensorPhoneModalComponent, {\n              backdrop: 'static',\n              ariaDescribedby: 'modal-body',\n              ariaLabelledBy: 'modal-title',\n              class: 'lg'\n            });\n          }\n        } as DocLink\n      ]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, hookDocs } from '@c8y/ngx-components';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ConnectSmartphoneFactory } from './connect-smartphone.factory';\n\n@NgModule({\n  imports: [CoreModule, ModalModule],\n  providers: [hookDocs(ConnectSmartphoneFactory)]\n})\nexport class SensorPhoneModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;AAEA,OAAO,CAAC,wBAAwB,CAAC;IAC/B,OAAO,CAAC,WAAW,CAAC;IACpB,OAAO,CAAC,QAAQ,CAAC;IACjB,OAAO,CAAC,oBAAoB,CAAC;;MCClB,wBAAwB,CAAA;IACnC,WAAoB,CAAA,cAA8B,EAAU,cAA8B,EAAA;QAAtE,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAAU,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KAAI;IAC9F,GAAG,GAAA;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE;AACjD,YAAA,OAAO,EAAE,CAAC;AACR,gBAAA;AACE,oBAAA,IAAI,EAAE,8BAA8B;AACpC,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,KAAK,EAAE,OAAO,CAAC,oBAAoB,CAAC;AACpC,oBAAA,GAAG,EAAE,SAAS;oBACd,KAAK,EAAE,YAAW;wBAChB,MAAM,EAAE,yBAAyB,EAAE,GAAG,MAAM,OAC1C,qDAAqD,CACtD,CAAC;AACF,wBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,yBAAyB,EAAE;AAClD,4BAAA,QAAQ,EAAE,QAAQ;AAClB,4BAAA,eAAe,EAAE,YAAY;AAC7B,4BAAA,cAAc,EAAE,aAAa;AAC7B,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA,CAAC,CAAC;qBACJ;AACS,iBAAA;AACb,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;;qHAxBU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;yHAAxB,wBAAwB,EAAA,CAAA,CAAA;2FAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC,UAAU;;;MCIE,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,OAAA,EAAA,CAHlB,UAAU,EAAE,WAAW,CAAA,EAAA,CAAA,CAAA;+GAGtB,iBAAiB,EAAA,SAAA,EAFjB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,EAAA,OAAA,EAAA,CADrC,UAAU,EAAE,WAAW,CAAA,EAAA,CAAA,CAAA;2FAGtB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;AAClC,oBAAA,SAAS,EAAE,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;AAChD,iBAAA,CAAA;;;ACRD;;AAEG;;;;"}