{"version":3,"file":"c8y-ngx-components-device-profile.mjs","sources":["../../device-profile/device-profile-navigation.factory.ts","../../device-profile/device-profile.service.ts","../../device-profile/select-configuration-modal.component.ts","../../device-profile/select-configuration-modal.component.html","../../device-profile/device-profile.model.ts","../../device-profile/device-profile.component.ts","../../device-profile/device-profile.component.html","../../device-profile/add-device-profile.component.ts","../../device-profile/add-device-profile-component.html","../../device-profile/device-profile-list.component.ts","../../device-profile/device-profile-list.component.html","../../device-profile/device-profile.guard.ts","../../device-profile/device-tab-profile/device-profile-item-list.component.ts","../../device-profile/device-tab-profile/device-profile-item-list.component.html","../../device-profile/device-tab-profile/device-tab-profile-detail.component.ts","../../device-profile/device-tab-profile/device-tab-profile-detail.component.html","../../device-profile/device-tab-profile/device-tab-profile.component.ts","../../device-profile/device-tab-profile/device-tab-profile.component.html","../../device-profile/device-profile.module.ts","../../device-profile/c8y-ngx-components-device-profile.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileNavigationFactory implements NavigatorNodeFactory {\n  nodeItem: NavigatorNode;\n\n  async get() {\n    if (!this.nodeItem) {\n      this.nodeItem = new NavigatorNode({\n        label: gettext('Device profiles'),\n        path: '/device-profiles',\n        icon: 'c8y-device-profile',\n        parent: gettext('Management')\n      });\n    }\n    return this.nodeItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport {\n  DeviceProfile,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware,\n  ComparisonResult\n} from './device-profile.model';\nimport { AlertService } from '@c8y/ngx-components';\nimport { sortBy, toArray, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  private NOT_INSTALLED_WARNING = gettext('Not installed on the device');\n  private VERSION_MISSMATCH_WARNING = gettext('Version mismatch');\n  private SAME_URL_WARNING = gettext(\n    'Installed configuration has the same URL but different name or type than the one in the profile'\n  );\n\n  constructor(\n    private inventoryService: InventoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  createDeviceProfile(deviceProfile: Partial<DeviceProfile>) {\n    if (get(deviceProfile, 'c8y_Filter.type') === '') {\n      delete deviceProfile.c8y_Filter.type;\n    }\n    return this.inventoryService.create(deviceProfile as IManagedObject);\n  }\n\n  getDeviceProfilesByDeviceType(deviceType: string): Promise<IResultList<IManagedObject>> {\n    const deviceTypeFilter = {\n      __or: [\n        { 'c8y_Filter.type': deviceType },\n        { 'c8y_Filter.type': '' },\n        { __not: { __has: 'c8y_Filter.type' } }\n      ]\n    };\n    return this.getDeviceProfiles(deviceTypeFilter);\n  }\n\n  getDeviceProfiles(andQuery?: any): Promise<IResultList<IManagedObject>> {\n    let query: object = {\n      type: 'c8y_Profile'\n    };\n    const filter: object = {\n      pageSize: 100,\n      withTotalPages: true\n    };\n    query = this.queriesUtil.addAndFilter(query, andQuery || {});\n    return this.inventoryService.listQuery(query, filter);\n  }\n\n  async getProfileOperation(deviceId: string | number) {\n    const filter: object = {\n      deviceId,\n      fragmentType: 'c8y_DeviceProfile',\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n\n    const operation = (await this.operationService.list(filter)).data[0];\n    return operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createProfileOperation(device: IManagedObject, deviceProfile: Partial<DeviceProfile>) {\n    let operation;\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      profileId: deviceProfile.id,\n      profileName: deviceProfile.name,\n      c8y_DeviceProfile: deviceProfile.c8y_DeviceProfile,\n      description: `Assign device profile ${deviceProfile.name} to device ${device.name}`\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  getFirmwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceFirmware = device.c8y_Firmware;\n    const profileFirmware = get(selectedProfile, 'c8y_DeviceProfile.firmware');\n    const deviceItems = [];\n    const profileItems = [];\n\n    if (deviceFirmware) {\n      deviceItems.push(deviceFirmware);\n    }\n    if (profileFirmware) {\n      profileItems.push(profileFirmware);\n    }\n    return this.createProfileComparison(\n      deviceItems,\n      profileItems,\n      'name',\n      'version',\n      this.getAlert('firmware')\n    );\n  }\n\n  getSoftwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceSoftware = device.c8y_SoftwareList;\n    const profileSoftware = get(selectedProfile, 'c8y_DeviceProfile.software');\n    return this.createProfileComparison(\n      deviceSoftware,\n      profileSoftware,\n      'name',\n      'version',\n      this.getAlert('software')\n    );\n  }\n\n  getConfigurationItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceConfiguration = [];\n    Object.keys(device).forEach(key => {\n      if (key.slice(0, 18) === 'c8y_Configuration_') {\n        deviceConfiguration.push(device[key]);\n      }\n    });\n    const profileConfiguration = get(selectedProfile, 'c8y_DeviceProfile.configuration');\n    return this.createProfileComparison(\n      deviceConfiguration,\n      profileConfiguration,\n      'url',\n      'type',\n      this.getAlert('configuration')\n    );\n  }\n\n  private getAlert(itemType: string): (comparisionResult: ComparisonResult) => string {\n    const notInstalled = (comparisionResult: ComparisonResult) => {\n      return !comparisionResult.device ? this.NOT_INSTALLED_WARNING : '';\n    };\n\n    switch (itemType) {\n      case 'firmware':\n      case 'software':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device &&\n            comparisionResult.profile &&\n            comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails\n            ? this.VERSION_MISSMATCH_WARNING\n            : notInstalled(comparisionResult);\n        };\n      case 'configuration':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device &&\n            comparisionResult.profile &&\n            (comparisionResult.device.itemName !== comparisionResult.profile.itemName ||\n              comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails)\n            ? this.SAME_URL_WARNING\n            : notInstalled(comparisionResult);\n        };\n      default:\n        return notInstalled;\n    }\n  }\n\n  private createProfileComparison(\n    deviceItems: any[] = [],\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware> = [],\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: (comparisionResult: ComparisonResult) => string\n  ): ComparisonResult[] {\n    const comparisonObj = this.createProfileComparisonFromDeviceItems(\n      deviceItems,\n      mergeByProperty,\n      propertyNameWithDetails\n    );\n    const extendedComparisonObj = this.extendProfileComparisonWithProfileItems(\n      comparisonObj,\n      profileItems,\n      mergeByProperty,\n      propertyNameWithDetails,\n      getAlert\n    );\n    return sortBy(toArray(extendedComparisonObj), 'name');\n  }\n\n  private createProfileComparisonFromDeviceItems(\n    deviceItems: any[],\n    mergeByProperty: string,\n    propertyNameWithDetails: string\n  ): any {\n    return deviceItems.reduce(\n      (comapritionItem, deviceItem) =>\n        Object.assign(comapritionItem, {\n          [deviceItem[mergeByProperty]]: {\n            device: {\n              itemName: deviceItem.name,\n              itemDetails: deviceItem[propertyNameWithDetails],\n              itemUrl: deviceItem.url\n            },\n            profile: undefined\n          }\n        }),\n      {}\n    );\n  }\n\n  private extendProfileComparisonWithProfileItems(\n    comparisonObj: object,\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware>,\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: (comparisionResult: ComparisonResult) => string\n  ) {\n    profileItems.forEach(profileItem => {\n      const comparisionResult: ComparisonResult = {\n        profile: {\n          itemName: profileItem.name,\n          itemDetails: profileItem[propertyNameWithDetails],\n          itemUrl: profileItem.url\n        },\n        device: comparisonObj[profileItem[mergeByProperty]]\n          ? comparisonObj[profileItem[mergeByProperty]].device\n          : undefined\n      };\n      comparisionResult.comparisonAlert = getAlert(comparisionResult);\n      comparisonObj[profileItem[mergeByProperty]] = comparisionResult;\n    });\n    return comparisonObj;\n  }\n}\n","import { Component, EventEmitter, forwardRef } from '@angular/core';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport {\n  gettext,\n  ISelectModalObject,\n  ISelectModalOption,\n  ModalLabels,\n  ProductExperienceEvent,\n  ProductExperienceEventSource,\n  PRODUCT_EXPERIENCE_EVENT_SOURCE\n} from '@c8y/ngx-components';\nimport {\n  PRODUCT_EXPERIENCE,\n  RepositoryService,\n  RepositoryType\n} from '@c8y/ngx-components/repository/shared';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-select-configuration-modal',\n  templateUrl: './select-configuration-modal.component.html',\n  providers: [\n    {\n      provide: PRODUCT_EXPERIENCE_EVENT_SOURCE,\n      useExisting: forwardRef(() => SelectConfigurationModalComponent)\n    }\n  ]\n})\nexport class SelectConfigurationModalComponent implements ProductExperienceEventSource {\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  title: string = gettext('Select configuration');\n  load: Subject<void> = new Subject();\n  configurations: Observable<any[]> = this.load.pipe(\n    switchMap(() => this.getItems()),\n    map(({ data }) => this.aggregate(data))\n  );\n  resultEmitter: EventEmitter<any[]> = new EventEmitter<any>();\n  selected: any[];\n  deviceTypeQuery: any = {};\n  searchQuery: any = {};\n  labels: ModalLabels = { ok: gettext('Save') };\n  productExperienceEvent: ProductExperienceEvent;\n  private queriesUtil: QueriesUtil;\n\n  constructor(private repositoryService: RepositoryService) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  search(searchTerm) {\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = this.queriesUtil.addOrFilter(\n        { name: `*${searchTerm}*` },\n        { configurationType: `*${searchTerm}*` }\n      );\n    }\n    this.load.next();\n  }\n\n  result(selectedItems) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  getItems() {\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n      params: { pageSize: 100 }\n    });\n  }\n\n  aggregate(mos: IManagedObject[]): ISelectModalObject[] {\n    const selectedItems: any[] = this.selected;\n    return mos.reduce((acc, curr) => {\n      curr.configurationType = curr.configurationType || curr.name;\n      const selected =\n        selectedItems && selectedItems.filter(val => val.url === curr.url).length > 0;\n      const selectModalOption: ISelectModalOption = {\n        body: [{ value: curr.name }],\n        obj: curr,\n        selected\n      };\n      let selectModalObject: ISelectModalObject = acc.find(\n        val => val.body[0].value === curr.configurationType\n      ) as ISelectModalObject;\n      if (selectModalObject) {\n        selectModalObject.options.push(selectModalOption);\n      } else {\n        selectModalObject = {\n          groupId: curr.id,\n          body: [{ value: curr.configurationType }],\n          options: [selectModalOption]\n        };\n        acc.push(selectModalObject);\n      }\n      return acc;\n    }, []);\n  }\n}\n","<c8y-select-modal\n  [icon]=\"'gears'\"\n  [title]=\"title\"\n  [items]=\"configurations | async\"\n  [mode]=\"'multi'\"\n  (result)=\"result($event)\"\n  (search)=\"search($event)\"\n  [disableSelected]=\"true\"\n  [labels]=\"labels\"\n  c8yProductExperience\n  inherit\n  suppressDataOverriding\n  [actionData]=\"{ component: PRODUCT_EXPERIENCE.SHARED.COMPONENTS.SELECT_CONFIGURATION_MODAL }\"\n></c8y-select-modal>\n","import { IManagedObject } from '@c8y/client';\n\nexport interface DeviceProfile extends Partial<IManagedObject> {\n  name?: string;\n  type: string;\n  c8y_Filter: {\n    type?: string;\n  };\n  c8y_DeviceProfile: {\n    firmware?: DeviceProfileFirmware;\n    software?: DeviceProfileSoftware[];\n    configuration?: DeviceProfileConfiguration[];\n  };\n}\n\nexport interface DeviceProfileFirmware {\n  name: string;\n  version: string;\n  url: string;\n  isPatch: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceProfileSoftware {\n  name: string;\n  version: string;\n  url: string;\n  action: string;\n}\n\nexport interface DeviceProfileConfiguration {\n  url: string;\n  name: string;\n  type: string;\n}\n\nexport interface ComparisonResult {\n  profile: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  device: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  comparisonAlert?: string;\n}\n\nexport enum DeviceProfileOperation {\n  APPLY_PROFILE = 'c8y_DeviceProfile'\n}\n\nexport const PRODUCT_EXPERIENCE = {\n  EVENTS: {\n    REPOSITORY: 'deviceProfileRepository',\n    DEVICE_TAB: 'deviceProfileTab'\n  },\n  COMPONENTS: {\n    DEVICE_PROFILE_LIST: 'device-profile-list',\n    ADD_DEVICE_PROFILE: 'add-device-profile',\n    DEVICE_PROFILE: 'device-profile',\n    DEVICE_TAB_PROFILE: 'device-tab-profile'\n  },\n  ACTIONS: {\n    CANCEL: 'cancel',\n    CREATE: 'create',\n    REMOVE: 'remove',\n    ADD: 'add',\n    SAVE: 'save',\n    ASSIGN_DEVICE_PROFILE: 'assignDeviceProfile'\n  },\n  RESULTS: {\n    ADD_SOFTWARE: 'addSoftware'\n  },\n  FRAGMENTS: {\n    FIRMWARE: 'firmware',\n    SOFTWARE: 'software',\n    CONFGIURATION: 'configuration'\n  }\n};\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ModalSelectionMode,\n  ProductExperienceEvent,\n  ProductExperienceEventSource,\n  PRODUCT_EXPERIENCE_EVENT_SOURCE\n} from '@c8y/ngx-components';\nimport {\n  FilterCriteria,\n  RepositorySelectModalComponent,\n  RepositoryService,\n  RepositoryType\n} from '@c8y/ngx-components/repository/shared';\nimport { assign, concat, has, isEmpty, isEqual, uniqWith } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport {\n  DeviceProfile,\n  DeviceProfileConfiguration,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware,\n  PRODUCT_EXPERIENCE\n} from './device-profile.model';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\n\n@Component({\n  selector: 'c8y-device-profile',\n  templateUrl: './device-profile.component.html',\n  providers: [\n    {\n      provide: PRODUCT_EXPERIENCE_EVENT_SOURCE,\n      useExisting: forwardRef(() => DeviceProfileComponent)\n    }\n  ]\n})\nexport class DeviceProfileComponent implements OnInit, ProductExperienceEventSource {\n  DEVICE_TYPE_POPOVER = gettext(\n    'The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.'\n  );\n  DEVICE_TYPE_DISABLED_POPOVER = gettext(\n    'Device type cannot be changed on profiles with already defined firmware, software or configuration since they may not be applicable to devices of the new device type.'\n  );\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  deviceProfile: DeviceProfile;\n  profileName: string;\n  productExperienceEvent: ProductExperienceEvent = {\n    eventName: PRODUCT_EXPERIENCE.EVENTS.REPOSITORY,\n    data: {\n      component: PRODUCT_EXPERIENCE.COMPONENTS.DEVICE_PROFILE\n    }\n  };\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private bsModal: BsModalService,\n    private repositoryService: RepositoryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  async ngOnInit() {\n    const profileId = this.route.snapshot.paramMap.get('id');\n    this.deviceProfile = (await this.getDeviceProfile(profileId)) as DeviceProfile;\n    if (this.deviceProfile) {\n      this.profileName = this.deviceProfile.name;\n      if (!this.deviceProfile.c8y_DeviceProfile.software) {\n        this.deviceProfile.c8y_DeviceProfile.software = [];\n      }\n      if (!this.deviceProfile.c8y_DeviceProfile.configuration) {\n        this.deviceProfile.c8y_DeviceProfile.configuration = [];\n      }\n    }\n  }\n\n  addFirmware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.FIRMWARE),\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(\n          modalDialog.content.searchTerm,\n          RepositoryType.FIRMWARE\n        ),\n      icon: 'c8y-firmware',\n      title: gettext('Select firmware'),\n      mode: ModalSelectionMode.SINGLE,\n      productExperienceEvent: this.productExperienceEvent\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      ariaLabelledBy: 'modal-title',\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ =\n        initialState.repositoryEntriesWithVersionsFn$(modal);\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(firmwareList => {\n      const [firmware] = firmwareList;\n      if (!firmware) {\n        return;\n      }\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, {\n        firmware: {\n          name: firmware.name,\n          version: firmware.version,\n          url: firmware.url,\n          isPatch: firmware.isPatch,\n          patchDependency: firmware.patchDependency\n        } as DeviceProfileFirmware\n      });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  getRepositoryEntriesWithVersions$(\n    searchTerm$: BehaviorSubject<FilterCriteria>,\n    repoType: RepositoryType\n  ) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repositoryService.listRepositoryEntries(repoType, {\n          query: this.getDeviceTypeQuery(repoType),\n          partialName: searchTerm.name,\n          params: { pageSize: 100 },\n          skipLegacy: true\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addConfiguration() {\n    const modal = this.bsModal.show(SelectConfigurationModalComponent, {\n      ignoreBackdropClick: true,\n      ariaLabelledBy: 'modal-title',\n      initialState: {\n        productExperienceEvent: this.productExperienceEvent\n      }\n    });\n    modal.content.deviceTypeQuery = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION);\n    modal.content.selected = this.deviceProfile.c8y_DeviceProfile.configuration;\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedConfigurations => {\n      const selectedMapped: DeviceProfileConfiguration[] = selectedConfigurations.map(\n        selectedItem => {\n          return assign(\n            {\n              url: selectedItem.url,\n              name: selectedItem.name\n            },\n            selectedItem.configurationType ? { type: selectedItem.configurationType } : {}\n          );\n        }\n      );\n      const merged: DeviceProfileConfiguration = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.configuration || []\n      );\n      const configuration: DeviceProfileConfiguration = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.type && othVal.type && arrVal.type === othVal.type;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { configuration });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  addSoftware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.SOFTWARE),\n      repositoryType: RepositoryType.SOFTWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(\n          modalDialog.content.searchTerm,\n          RepositoryType.SOFTWARE\n        ),\n      selected: this.deviceProfile.c8y_DeviceProfile.software,\n      icon: 'c8y-tools',\n      title: gettext('Select software'),\n      mode: ModalSelectionMode.MULTI,\n      productExperienceEvent: this.productExperienceEvent\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      ariaLabelledBy: 'modal-title',\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ =\n        initialState.repositoryEntriesWithVersionsFn$(modal);\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedSoftware => {\n      const selectedMapped: DeviceProfileSoftware[] = selectedSoftware.map(selectedItem => {\n        return {\n          name: selectedItem.name,\n          version: selectedItem.version,\n          url: selectedItem.url,\n          action: 'install'\n        };\n      });\n      const merged: DeviceProfileSoftware = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.software || []\n      );\n      const software: DeviceProfileSoftware = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.name && othVal.name && arrVal.name === othVal.name;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { software });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  get isDeviceProfileEmpty() {\n    const isSoftware =\n      this.deviceProfile.c8y_DeviceProfile.software &&\n      this.deviceProfile.c8y_DeviceProfile.software.length > 0;\n    const isFirmware = Boolean(this.deviceProfile.c8y_DeviceProfile.firmware);\n    const isConfiguration =\n      this.deviceProfile.c8y_DeviceProfile.configuration &&\n      this.deviceProfile.c8y_DeviceProfile.configuration.length > 0;\n    return isSoftware || isFirmware || isConfiguration;\n  }\n\n  removeItem(removedItem, category) {\n    const deviceProfilePartial: Partial<IManagedObject> = {\n      c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile\n    };\n    const filtered = deviceProfilePartial.c8y_DeviceProfile[category].filter(\n      item => !isEqual(removedItem, item)\n    );\n    deviceProfilePartial.c8y_DeviceProfile[category] = filtered;\n    this.updateDeviceProfile(deviceProfilePartial);\n  }\n\n  removeFirmware() {\n    delete this.deviceProfile.c8y_DeviceProfile.firmware;\n    this.updateDeviceProfile({ c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile });\n  }\n\n  async updateDeviceProfile(partialDeviceProfile) {\n    if (partialDeviceProfile.c8y_Filter && partialDeviceProfile.c8y_Filter.type === '') {\n      delete partialDeviceProfile.c8y_Filter.type;\n    }\n    Object.assign(partialDeviceProfile, { id: this.deviceProfile.id });\n    try {\n      const { data } = await this.inventoryService.update(partialDeviceProfile);\n      this.deviceProfile = data as DeviceProfile;\n      this.profileName = this.deviceProfile.name;\n      this.alertService.success(gettext('Device profile changed.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private async getDeviceProfile(profileId) {\n    try {\n      const { data } = await this.inventoryService.detail(profileId);\n      return data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private getDeviceTypeQuery(repositoryType) {\n    if (\n      has(this.deviceProfile, 'c8y_Filter.type') &&\n      !isEmpty(this.deviceProfile.c8y_Filter.type)\n    ) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        return this.queriesUtil.addOrFilter(\n          { deviceType: this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `deviceType` } }\n        );\n      } else {\n        return this.queriesUtil.addOrFilter(\n          { 'c8y_Filter.type': this.deviceProfile.c8y_Filter.type },\n          {\n            __or: [{ 'c8y_Filter.type': '' }, { __not: { __has: `c8y_Filter.type` } }]\n          }\n        );\n      }\n    }\n    return {};\n  }\n}\n","<c8y-title>{{ profileName }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    label=\"{{ 'Management' | translate }}\"\n    icon=\"c8y-management\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-device-profile'\"\n    [label]=\"'Device profiles' | translate\"\n    [path]=\"'device-profiles'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item label=\"{{ profileName }}\" icon=\"c8y-device-profile\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div *ngIf=\"deviceProfile\" class=\"row\">\n  <div class=\"col-lg-12 col-lg-max\">\n    <div class=\"card card--fullpage\" *ngIf=\"deviceProfile\">\n      <div class=\"card-block bg-level-1 flex-no-shrink p-t-24 p-b-24 overflow-visible\">\n        <div class=\"content-flex-70\">\n          <div class=\"text-center\">\n            <i class=\"c8y-icon-duocolor icon-48 c8y-icon c8y-icon-device-profile\"></i>\n            <p>\n              <small class=\"label label-info\">{{ 'Device profile' | translate }}</small>\n            </p>\n          </div>\n          <div class=\"flex-grow col-10\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <form #editNameForm=\"ngForm\">\n                  <c8y-form-group>\n                    <label class=\"control-label\" translate>Name</label>\n                    <div class=\"input-group input-group-editable\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        [(ngModel)]=\"deviceProfile.name\"\n                        name=\"name\"\n                        placeholder=\"{{ 'e.g. My device profile' | translate }}\"\n                        data-cy=\"device-profile--add-device-profile-name\"\n                        size=\"{{ deviceProfile.name?.length || 1 }}\"\n                        required\n                      />\n                      <span></span>\n                      <div class=\"input-group-btn\">\n                        <button\n                          class=\"btn btn-primary\"\n                          type=\"button\"\n                          title=\"{{ 'Save' | translate }}\"\n                          data-cy=\"device-profile--save\"\n                          (click)=\"\n                            updateDeviceProfile({ name: deviceProfile.name });\n                            editNameForm.form.markAsPristine()\n                          \"\n                          [disabled]=\"editNameForm.form.invalid\"\n                          c8yProductExperience\n                          inherit\n                          [actionData]=\"{ action: PRODUCT_EXPERIENCE.ACTIONS.SAVE }\"\n                        >\n                          {{ 'Save' | translate }}\n                        </button>\n                      </div>\n                    </div>\n                  </c8y-form-group>\n                </form>\n              </div>\n              <div class=\"col-md-4\">\n                <form #editTypeForm=\"ngForm\">\n                  <c8y-form-group>\n                    <label class=\"control-label\">\n                      {{ 'Device type' | translate }}\n                      <button\n                        class=\"btn-help\"\n                        type=\"button\"\n                        [attr.aria-label]=\"'Help' | translate\"\n                        [popover]=\"\n                          (DEVICE_TYPE_POPOVER | translate) +\n                          (isDeviceProfileEmpty\n                            ? ' ' + (DEVICE_TYPE_DISABLED_POPOVER | translate)\n                            : '')\n                        \"\n                        triggers=\"focus\"\n                        container=\"body\"\n                        placement=\"right\"\n                      ></button>\n                    </label>\n                    <div class=\"input-group input-group-editable\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        [(ngModel)]=\"deviceProfile.c8y_Filter.type\"\n                        data-cy=\"device-profile--device-type\"\n                        name=\"type\"\n                        placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n                        size=\"{{ deviceProfile.c8y_Filter.type?.length || 14 }}\"\n                        [disabled]=\"isDeviceProfileEmpty\"\n                      />\n                      <span></span>\n                      <div class=\"input-group-btn\">\n                        <button\n                          class=\"btn btn-primary\"\n                          type=\"button\"\n                          title=\"{{ 'Save' | translate }}\"\n                          (click)=\"\n                            updateDeviceProfile({\n                              c8y_Filter: { type: deviceProfile.c8y_Filter.type }\n                            });\n                            editTypeForm.form.markAsPristine()\n                          \"\n                          [disabled]=\"isDeviceProfileEmpty\"\n                          c8yProductExperience\n                          inherit\n                          [actionData]=\"{ action: PRODUCT_EXPERIENCE.ACTIONS.SAVE }\"\n                        >\n                          {{ 'Save' | translate }}\n                        </button>\n                      </div>\n                    </div>\n                  </c8y-form-group>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"inner-scroll\">\n        <div class=\"card-header separator-top-bottom bg-content sticky-top\">\n          <div class=\"card-icon\">\n            <i [c8yIcon]=\"'c8y-firmware'\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"card-title\" translate>Firmware</div>\n        </div>\n        <div class=\"card-block p-t-0\" *ngIf=\"deviceProfile.c8y_DeviceProfile.firmware\">\n          <c8y-list-group>\n            <c8y-li>\n              <c8y-li-icon>\n                <i [c8yIcon]=\"'c8y-firmware'\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-50 m-l-4\">\n                <div class=\"col-6\">\n                  <span\n                    class=\"text-truncate\"\n                    title=\"{{ deviceProfile.c8y_DeviceProfile.firmware.name }}\"\n                  >\n                    {{ deviceProfile.c8y_DeviceProfile.firmware.name }}\n                  </span>\n                </div>\n                <div class=\"col-5 d-flex a-i-center\">\n                  <span\n                    class=\"text-truncate\"\n                    title=\"{{ deviceProfile.c8y_DeviceProfile.firmware.version }}\"\n                  >\n                    <span class=\"text-label-small m-r-4\" translate>Version</span>\n                    {{ deviceProfile.c8y_DeviceProfile.firmware.version }}\n                  </span>\n                  <button\n                    class=\"btn btn-danger btn-xs visible-xs m-l-auto m-r-8 m-t-8\"\n                    type=\"button\"\n                    title=\"{{ 'Remove`firmware`' | translate }}\"\n                    (click)=\"removeFirmware()\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.FIRMWARE\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                    {{ 'Remove`firmware`' | translate }}\n                  </button>\n                </div>\n                <div class=\"m-l-auto p-r-8 hidden-xs\">\n                  <button\n                    class=\"btn btn-dot showOnHover text-danger\"\n                    type=\"button\"\n                    [attr.aria-label]=\"'Remove`firmware`' | translate\"\n                    tooltip=\"{{ 'Remove`firmware`' | translate }}\"\n                    [delay]=\"500\"\n                    placement=\"right\"\n                    (click)=\"removeFirmware()\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.FIRMWARE\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                  </button>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n        <div class=\"card-block p-t-16\" *ngIf=\"!deviceProfile.c8y_DeviceProfile.firmware\">\n          <c8y-ui-empty-state\n            icon=\"c8y-firmware\"\n            [horizontal]=\"true\"\n            [title]=\"'No firmware defined.' | translate\"\n            class=\"p-t-16 d-block\"\n          ></c8y-ui-empty-state>\n        </div>\n        <div class=\"card-footer p-t-0\" *ngIf=\"!deviceProfile.c8y_DeviceProfile.firmware\">\n          <button\n            class=\"btn btn-default\"\n            type=\"button\"\n            title=\"{{ 'Add firmware' | translate }}\"\n            (click)=\"addFirmware()\"\n            c8yProductExperience\n            inherit\n            [actionData]=\"{\n              action: PRODUCT_EXPERIENCE.ACTIONS.ADD,\n              fragment: PRODUCT_EXPERIENCE.FRAGMENTS.FIRMWARE\n            }\"\n          >\n            <i c8yIcon=\"plus-circle\"></i>\n            {{ 'Add firmware' | translate }}\n          </button>\n        </div>\n\n        <div class=\"card-header separator-top-bottom sticky-top bg-component\">\n          <div class=\"card-icon\">\n            <i [c8yIcon]=\"'c8y-tools'\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"card-title\" translate>Software</div>\n        </div>\n        <div class=\"card-block p-t-0\" *ngIf=\"deviceProfile.c8y_DeviceProfile.software?.length > 0\">\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let software of deviceProfile.c8y_DeviceProfile.software\">\n              <c8y-li-icon>\n                <i [c8yIcon]=\"'c8y-tools'\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-50 m-l-4\">\n                <div class=\"col-6\">\n                  <span class=\"text-truncate-wrap\" title=\"{{ software.name }}\">\n                    {{ software.name }}\n                  </span>\n                </div>\n                <div class=\"col-5 d-flex a-i-center\">\n                  <span class=\"text-truncate-wrap\" title=\"{{ software.version }}\">\n                    <span class=\"text-label-small m-r-8\" translate>Version</span>\n                    {{ software.version }}\n                  </span>\n                  <button\n                    class=\"btn btn-danger btn-xs visible-xs m-l-auto m-r-8 m-t-8\"\n                    type=\"button\"\n                    title=\"{{ 'Remove`software`' | translate }}\"\n                    ((click)=\"removeItem(software, 'software')\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.SOFTWARE\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                    {{ 'Remove`software`' | translate }}\n                  </button>\n                </div>\n                <div class=\"m-l-auto p-r-8 hidden-xs\">\n                  <button\n                    class=\"btn btn-dot showOnHover text-danger\"\n                    type=\"button\"\n                    [attr.aria-label]=\"'Remove`software`' | translate\"\n                    tooltip=\"{{ 'Remove`software`' | translate }}\"\n                    [delay]=\"500\"\n                    placement=\"right\"\n                    (click)=\"removeItem(software, 'software')\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.SOFTWARE\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                  </button>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n        <div\n          class=\"card-block p-t-16\"\n          *ngIf=\"deviceProfile.c8y_DeviceProfile.software?.length === 0\"\n        >\n          <c8y-ui-empty-state\n            icon=\"c8y-tools\"\n            [horizontal]=\"true\"\n            [title]=\"'No software defined.' | translate\"\n          ></c8y-ui-empty-state>\n        </div>\n        <div class=\"card-footer p-t-0\">\n          <button\n            class=\"btn btn-default m-b-0\"\n            type=\"button\"\n            title=\"{{ 'Add software' | translate }}\"\n            (click)=\"addSoftware()\"\n            c8yProductExperience\n            inherit\n            [actionData]=\"{\n              action: PRODUCT_EXPERIENCE.ACTIONS.ADD,\n              fragment: PRODUCT_EXPERIENCE.FRAGMENTS.SOFTWARE\n            }\"\n          >\n            <i c8yIcon=\"plus-circle\"></i>\n            {{ 'Add software' | translate }}\n          </button>\n        </div>\n\n        <div class=\"card-header separator-top-bottom bg-component sticky-top\">\n          <div class=\"card-icon\">\n            <i [c8yIcon]=\"'gears'\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"card-title\" translate>Configuration</div>\n        </div>\n        <div\n          class=\"card-block p-t-0\"\n          *ngIf=\"deviceProfile.c8y_DeviceProfile.configuration?.length > 0\"\n        >\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let configuration of deviceProfile.c8y_DeviceProfile.configuration\">\n              <c8y-li-icon>\n                <i [c8yIcon]=\"'gears'\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-50\">\n                <div class=\"col-6\">\n                  <span class=\"text-truncate\" title=\"{{ configuration.name }}\">\n                    {{ configuration.name }}\n                  </span>\n                </div>\n                <div class=\"col-5 d-flex a-i-center\">\n                  <span class=\"label label-info\">{{ configuration.type }}</span>\n                  <button\n                    class=\"btn btn-danger btn-xs visible-xs m-l-auto m-r-8 m-t-8\"\n                    type=\"button\"\n                    title=\"{{ 'Remove`configuration`' | translate }}\"\n                    (click)=\"removeItem(configuration, 'configuration')\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.CONFGIURATION\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                    {{ 'Remove`configuration`' | translate }}\n                  </button>\n                </div>\n                <div class=\"m-l-auto p-r-8 hidden-xs\">\n                  <button\n                    class=\"btn btn-dot showOnHover text-danger\"\n                    type=\"button\"\n                    [attr.aria-label]=\"'Remove`configuration`' | translate\"\n                    tooltip=\"{{ 'Remove`configuration`' | translate }}\"\n                    (click)=\"removeItem(configuration, 'configuration')\"\n                    [delay]=\"500\"\n                    placement=\"top\"\n                    c8yProductExperience\n                    inherit\n                    [actionData]=\"{\n                      action: PRODUCT_EXPERIENCE.ACTIONS.REMOVE,\n                      fragment: PRODUCT_EXPERIENCE.FRAGMENTS.CONFGIURATION\n                    }\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                  </button>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n        <div\n          class=\"card-block p-t-16\"\n          *ngIf=\"deviceProfile.c8y_DeviceProfile.configuration?.length === 0\"\n        >\n          <c8y-ui-empty-state\n            icon=\"gears\"\n            [horizontal]=\"true\"\n            [title]=\"'No configuration defined.' | translate\"\n          ></c8y-ui-empty-state>\n        </div>\n        <div class=\"card-footer p-t-0\">\n          <div class=\"p-t-8\">\n            <button\n              title=\"{{ 'Add configuration' | translate }}\"\n              type=\"button\"\n              class=\"btn btn-default m-b-0\"\n              (click)=\"addConfiguration()\"\n              c8yProductExperience\n              inherit\n              [actionData]=\"{\n                action: PRODUCT_EXPERIENCE.ACTIONS.ADD,\n                fragment: PRODUCT_EXPERIENCE.FRAGMENTS.CONFGIURATION\n              }\"\n            >\n              <i c8yIcon=\"plus-circle\"></i>\n              {{ 'Add configuration' | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, forwardRef } from '@angular/core';\nimport {\n  gettext,\n  ProductExperienceEvent,\n  ProductExperienceEventSource,\n  PRODUCT_EXPERIENCE_EVENT_SOURCE\n} from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DeviceProfile, PRODUCT_EXPERIENCE } from './device-profile.model';\nimport { DeviceProfileService } from './device-profile.service';\n\n@Component({\n  selector: 'c8y-add-device-profile',\n  templateUrl: './add-device-profile-component.html',\n  providers: [\n    {\n      provide: PRODUCT_EXPERIENCE_EVENT_SOURCE,\n      useExisting: forwardRef(() => AddDeviceProfileComponent)\n    }\n  ]\n})\nexport class AddDeviceProfileComponent implements ProductExperienceEventSource {\n  DEVICE_TYPE_POPOVER = gettext(\n    'The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.'\n  );\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  deviceProfile: Partial<DeviceProfile> = {\n    name: '',\n    type: 'c8y_Profile',\n    c8y_Filter: {},\n    c8y_DeviceProfile: {}\n  };\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  productExperienceEvent: ProductExperienceEvent;\n  private _save;\n  private _cancel;\n\n  constructor(private modal: BsModalRef, private deviceProfileService: DeviceProfileService) {}\n\n  async create() {\n    const mo = (await this.deviceProfileService.createDeviceProfile(this.deviceProfile)).data;\n    this._save(mo.id);\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'c8y-device-profile'\"></i>\n    <div class=\"modal-title\" id=\"addDeviceProfileModalTitle\" translate>Add device profile</div>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\" id=\"addDeviceProfileModalDescription\">\n      <form #createDeviceProfile=\"ngForm\">\n        <c8y-form-group>\n          <label translate for=\"name\">Name</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            name=\"name\"\n            [(ngModel)]=\"deviceProfile.name\"\n            placeholder=\"{{ 'e.g. My device profile' | translate }}\"\n            data-cy=\"add-device-profile--device-profile-name\"\n            required\n          />\n        </c8y-form-group>\n        <c8y-form-group>\n          <label>\n            {{ 'Device type' | translate }}\n            <button\n              class=\"btn-help btn-help--sm\"\n              type=\"button\"\n              [attr.aria-label]=\"'Help' | translate\"\n              popover=\"{{ DEVICE_TYPE_POPOVER | translate }}\"\n              placement=\"right\"\n              triggers=\"focus\"\n            ></button>\n          </label>\n          <input\n            id=\"deviceType\"\n            class=\"form-control\"\n            name=\"deviceType\"\n            [(ngModel)]=\"deviceProfile.c8y_Filter.type\"\n            data-cy=\"add-device-profile--device-type\"\n            placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n          />\n        </c8y-form-group>\n      </form>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      type=\"button\"\n      title=\"{{ 'Cancel' | translate }}\"\n      (click)=\"close()\"\n      c8yProductExperience\n      inherit\n      suppressDataOverriding\n      [actionData]=\"{ action: PRODUCT_EXPERIENCE.ACTIONS.CANCEL }\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n\n    <button\n      class=\"btn btn-primary\"\n      type=\"button\"\n      title=\"{{ 'Continue' | translate }}\"\n      (click)=\"create()\"\n      [disabled]=\"createDeviceProfile.form.invalid\"\n      c8yProductExperience\n      inherit\n      suppressDataOverriding\n      [actionData]=\"{ action: PRODUCT_EXPERIENCE.ACTIONS.CREATE }\"\n    >\n      {{ 'Continue' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ModalService,\n  ProductExperienceEvent,\n  ProductExperienceEventSource,\n  PRODUCT_EXPERIENCE_EVENT_SOURCE,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { PRODUCT_EXPERIENCE } from './device-profile.model';\nimport { DeviceProfileService } from './device-profile.service';\n\n@Component({\n  selector: 'c8y-device-profile-list',\n  templateUrl: './device-profile-list.component.html',\n  providers: [\n    {\n      provide: PRODUCT_EXPERIENCE_EVENT_SOURCE,\n      useExisting: forwardRef(() => DeviceProfileListComponent)\n    }\n  ]\n})\nexport class DeviceProfileListComponent implements OnInit, ProductExperienceEventSource {\n  reloading = false;\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  deviceProfiles$: Observable<IResultList<IManagedObject>> = this.reload.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.deviceProfileService.getDeviceProfiles()),\n    tap(() => (this.reloading = false))\n  );\n  productExperienceEvent: ProductExperienceEvent = {\n    eventName: PRODUCT_EXPERIENCE.EVENTS.REPOSITORY,\n    data: {\n      component: PRODUCT_EXPERIENCE.COMPONENTS.DEVICE_PROFILE_LIST\n    }\n  };\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private bsModalService: BsModalService,\n    private router: Router,\n    private deviceProfileService: DeviceProfileService\n  ) {}\n\n  ngOnInit() {\n    this.loadDeviceProfiles();\n  }\n\n  loadDeviceProfiles() {\n    this.reload.next();\n  }\n\n  async createDeviceProfile() {\n    const modal = this.bsModalService.show(AddDeviceProfileComponent, {\n      class: 'modal-sm',\n      ariaDescribedby: 'addDeviceProfileModalDescription',\n      ariaLabelledBy: 'addDeviceProfileModalTitle',\n      initialState: {\n        productExperienceEvent: {\n          ...this.productExperienceEvent,\n          data: {\n            ...this.productExperienceEvent.data,\n            component: PRODUCT_EXPERIENCE.COMPONENTS.ADD_DEVICE_PROFILE\n          }\n        }\n      }\n    }).content as AddDeviceProfileComponent;\n    try {\n      const profileId = await modal.result;\n      modal.close();\n      this.router.navigateByUrl(`/device-profiles/${profileId}`);\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async duplicateDeviceProfile(deviceProfile) {\n    const copy = cloneDeep(deviceProfile);\n    copy.id = null;\n    copy.name = 'Duplicate of ' + deviceProfile.name;\n    const mo = (await this.deviceProfileService.createDeviceProfile(copy)).data;\n    this.router.navigateByUrl(`/device-profiles/${mo.id}`);\n  }\n\n  async deleteDeviceProfile(deviceProfile) {\n    const deviceProfileName = deviceProfile.name;\n    const title = gettext('Delete device profile');\n    const confirmationText = this.translateService.instant(\n      gettext('You are about to delete a device profile \"{{ deviceProfileName }}\".'),\n      { deviceProfileName }\n    );\n    const finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));\n    try {\n      await this.modalService.confirm(\n        title,\n        `${confirmationText} ${finalQuestion}`,\n        Status.DANGER,\n        {\n          ok: gettext('Delete')\n        },\n        {},\n        this.productExperienceEvent\n      );\n      await this.delete(deviceProfile.id);\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  private async delete(profileId) {\n    try {\n      await this.inventoryService.delete(profileId);\n      this.alertService.success(gettext('Device profile deleted.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n}\n","<c8y-title>{{ 'Device profiles' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    label=\"{{ 'Management' | translate }}\"\n    icon=\"c8y-management\"\n    >\n  </c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    label=\"{{ 'Device profiles' | translate }}\"\n    icon=\"c8y-device-profile\"\n    >\n  </c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    (click)=\"createDeviceProfile()\"\n    title=\"{{ 'Add device profile' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add device profile' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]=\"'right'\">\n  <button class=\"btn btn-link\"\n    (click)=\"loadDeviceProfiles()\"\n    title=\"{{ 'Reload' | translate }}\">\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'icon-spin': reloading }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/device-management/#device-profiles\"></c8y-help>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state m-t-40\"\n  *ngIf=\"(deviceProfiles$ | async)?.data.length === 0\"\n>\n  <h1 class=\"c8y-icon-duocolor\"\n    [c8yIcon]=\"'c8y-device-profile'\"\n  ></h1>\n  <h3 translate>\n    No device profiles available.\n  </h3>\n  <p translate>\n    Add a new device profile by clicking below.\n  </p>\n  <p>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add device profile' | translate }}\"\n      (click)=\"createDeviceProfile()\"\n    >\n      {{ 'Add device profile' | translate }}\n    </button>\n  </p>\n</div>\n\n<!-- DEVICE PROFILES LIST -->\n<c8y-list-group\n  class=\"m-b-24\"\n  [ngClass]=\"{ 'dd-low': (deviceProfiles$ | async)?.data.length < 10 }\"\n>\n  <c8y-li\n    [emptyActions]=\"true\"\n    class=\"page-sticky-header hidden-xs\"\n    *ngIf=\"(deviceProfiles$ | async)?.data.length > 0\"\n  >\n    <c8y-li-icon>\n      <i class=\"p-l-24\"></i>\n    </c8y-li-icon>\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\">\n        {{ 'Device profile' | translate }}\n      </div>\n      <div class=\"col-6\">\n        {{ 'Device type' | translate }}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-li *c8yFor=\"let deviceProfile of deviceProfiles$\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-device-profile\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\" title=\"{{ deviceProfile.name }}\">\n        <button\n          class=\"btn-clean max-width-inherit\"\n          routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n        >\n          <span class=\"text-truncate\">\n            {{ deviceProfile.name }}\n          </span>\n        </button>\n      </div>\n      <div class=\"col-6\" title=\"{{ deviceProfile.c8y_Filter?.type || '-' }}\">\n        <span class=\"text-label-small m-r-4 visible-xs\" translate>\n          Device type\n        </span>\n        <span class=\"text-truncate\" *ngIf=\"deviceProfile.c8y_Filter?.type; else emptyText\">\n          {{ deviceProfile.c8y_Filter?.type }}\n        </span>\n      </div>\n      <ng-template #emptyText>\n        <small class=\"text-muted\">\n          <em>\n            {{ 'Undefined' | translate }}\n          </em>\n        </small>\n      </ng-template>\n    </c8y-li-body>\n\n    <c8y-li-action\n      routerLink=\"/device-profiles/{{ deviceProfile.id }}\"\n      icon=\"pencil\"\n      label=\"{{ 'Edit' | translate }}\"\n      data-cy=\"device-profile-list--edit\"\n      c8yProductExperience\n      inherit\n    ></c8y-li-action>\n    <c8y-li-action\n      (click)=\"duplicateDeviceProfile(deviceProfile)\"\n      data-cy=\"device-profile-list--duplicate\"\n      icon=\"copy\"\n      label=\"{{ 'Duplicate' | translate }}\"\n      c8yProductExperience\n      inherit\n    ></c8y-li-action>\n    <c8y-li-action\n      (click)=\"deleteDeviceProfile(deviceProfile)\"\n      data-cy=\"device-profile-list--delete\"\n      icon=\"delete\"\n      label=\"{{ 'Delete' | translate }}\"\n      c8yProductExperience\n      inherit\n    ></c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { DeviceProfileOperation } from './device-profile.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceProfileGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return this.hasSupportedOperation(contextData, DeviceProfileOperation.APPLY_PROFILE);\n  }\n\n  private hasSupportedOperation(mo: IManagedObject, operation: DeviceProfileOperation) {\n    const supported = mo.c8y_SupportedOperations || [];\n    if (!supported) {\n      return false;\n    }\n    return !!supported.find(supportedOperation => supportedOperation === operation);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-profile-item-list',\n  templateUrl: './device-profile-item-list.component.html'\n})\nexport class DeviceProfileItemListComponent {\n  @Input() icon: string;\n  @Input() comparisonResults: ComparisonResult[];\n  @Input() showProfileItems: boolean;\n  @Input() showTextLabel: boolean;\n}\n","<div *ngFor=\"let comparisonResult of comparisonResults\" class=\"d-contents\">\n  <div class=\"p-l-16 p-r-16\" *ngIf=\"showProfileItems\">\n    <div class=\"c8y-list__item fit-h\">\n      <div class=\"c8y-list__item__block\" *ngIf=\"comparisonResult.profile\">\n        <div class=\"c8y-list__item__icon\">\n          <i [c8yIcon]=\"icon\"></i>\n        </div>\n        <div class=\"c8y-list__item__body\">\n          <ng-container *ngTemplateOutlet=\"comparisonResultInfo;context:comparisonResult.profile\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-l-16 p-r-16 bg-level-1\">\n    <div\n      class=\"c8y-list__item bg-level-1\"\n      [ngClass]=\"{\n        'has-warning': !!comparisonResult.comparisonAlert\n      }\"\n    >\n      <div class=\"c8y-list__item__block\">\n        <div class=\"c8y-list__item__icon\">\n          <i [c8yIcon]=\"icon\"></i>\n        </div>\n        <div class=\"c8y-list__item__body\">\n          <ng-container *ngTemplateOutlet=\"comparisonResultInfo;context:comparisonResult.device ? comparisonResult.device : comparisonResult.profile\"></ng-container>\n          <c8y-messages\n            class=\"m-0\"\n            style=\"margin-bottom: calc(var(--margin-base, 8px) * -1);\"\n            *ngIf=\"comparisonResult.comparisonAlert\"\n          >\n            <c8y-message>\n              {{ comparisonResult.comparisonAlert | translate }}\n            </c8y-message>\n          </c8y-messages>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-l-16 p-r-16 bg-level-0 hidden-xs hidden-sm\" *ngIf=\"!showProfileItems\"></div>\n</div>\n\n<ng-template #comparisonResultInfo let-name=\"itemName\" let-details=\"itemDetails\">\n <div class=\"content-flex-40\">\n   <div class=\"col-7\">\n    <span class=\"text-truncate\">\n      <span class=\"text-label-small m-r-4\">Name</span>\n       <span title=\"{{ name }}\">\n           {{ name }}\n        </span>\n     </span>\n   </div>\n  <div class=\"col-5\">\n    <span *ngIf=\"showTextLabel && details; else showInfoLabel\" class=\"text-truncate\">\n      <span translate class=\"text-label-small m-r-4\">Version</span>\n      <span title=\"{{details}}\">{{ details }}</span>\n    </span>\n     <ng-template #showInfoLabel>\n        <span class=\"label label-info\">{{ details }}</span>\n      </ng-template>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-tab-profile-detail',\n  templateUrl: './device-tab-profile-detail.component.html'\n})\nexport class DeviceTabProfileDetailComponent {\n  @Input() sectionTitle: string;\n  @Input() sectionIcon: string;\n  @Input() emptyStateText = '';\n  @Input() emptyStateDetails = '';\n  @Input() isProfileSelected: boolean;\n  @Input() isEmpty: boolean;\n  @Input() items: ComparisonResult[];\n  @Input() showTextLabel = true;\n}\n","<div class=\"card--grid grid__col--6-6--md\">\n  <div class=\"bg-level-0 card-block sticky-top\">\n    <h5 class=\"legend form-block\">{{ sectionTitle | translate }}</h5>\n  </div>\n  <div class=\"bg-level-1  card-block sticky-top hidden-xs hidden-sm\">\n    <h5 class=\"legend form-block\">{{ sectionTitle | translate }}</h5>\n  </div>\n  <div class=\"bg-level-0 p-l-16 p-r-16\">\n    <hr class=\"m-0\" />\n  </div>\n  <div class=\"bg-level-1 p-l-16 p-r-16\">\n    <hr class=\"m-0\" />\n  </div>\n  <div class=\"d-contents\" *ngIf=\"!isProfileSelected || isEmpty\">\n    <div class=\"p-l-16 p-r-16\">\n      <div class=\"c8y-empty-state text-left\">\n        <h1 [c8yIcon]=\"sectionIcon\" class=\"c8y-icon-duocolor\"></h1>\n        <p>\n          <span>{{ emptyStateText | translate }}</span\n          ><br />\n          <small *ngIf=\"isProfileSelected; else noItems\">\n            {{ emptyStateDetails | translate }}\n          </small>\n          <ng-template #noItems>\n            <small translate>No device profile selected</small>\n          </ng-template>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"bg-level-1\" *ngIf=\"items.length === 0\"></div>\n  <c8y-device-profile-item-list\n    *ngIf=\"items.length > 0\"\n    [icon]=\"sectionIcon\"\n    [comparisonResults]=\"items\"\n    [showProfileItems]=\"isProfileSelected && !isEmpty\"\n    [showTextLabel]=\"showTextLabel\"\n    class=\"d-contents\"\n  ></c8y-device-profile-item-list>\n  <div class=\"bg-level-0 p-t-24\" *ngIf=\"isProfileSelected && !isEmpty\"></div>\n  <div class=\"bg-level-1 p-t-24\" *ngIf=\"isProfileSelected && !isEmpty\"></div>\n</div>\n","import { Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, IOperation, IResultList } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ManagedObjectRealtimeService,\n  OperationRealtimeService,\n  ProductExperienceEvent,\n  ProductExperienceEventSource,\n  PRODUCT_EXPERIENCE_EVENT_SOURCE,\n  ForOfFilterPipe\n} from '@c8y/ngx-components';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ComparisonResult, DeviceProfile, PRODUCT_EXPERIENCE } from '../device-profile.model';\nimport { DeviceProfileService } from '../device-profile.service';\n\n@Component({\n  selector: 'c8y-device-tab-profile',\n  templateUrl: './device-tab-profile.component.html',\n  providers: [\n    ManagedObjectRealtimeService,\n    {\n      provide: PRODUCT_EXPERIENCE_EVENT_SOURCE,\n      useExisting: forwardRef(() => DeviceTabProfileComponent)\n    }\n  ]\n})\nexport class DeviceTabProfileComponent implements OnInit, OnDestroy, ProductExperienceEventSource {\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  device: IManagedObject;\n  deviceProfiles: IResultList<IManagedObject>;\n  selectedProfile: Partial<DeviceProfile>;\n  operation: IOperation;\n  firmwareItems: ComparisonResult[] = [];\n  softwareItems: ComparisonResult[] = [];\n  configurationItems: ComparisonResult[] = [];\n\n  filterPipe: ForOfFilterPipe;\n  pattern = '';\n  reloading = false;\n  productExperienceEvent: ProductExperienceEvent = {\n    eventName: PRODUCT_EXPERIENCE.EVENTS.DEVICE_TAB,\n    data: {\n      component: PRODUCT_EXPERIENCE.COMPONENTS.DEVICE_TAB_PROFILE\n    }\n  };\n  private operationsSubscription: Subscription;\n  private moOnDeleteSubscription: Subscription;\n  private moOnUpdateSubscription: Subscription;\n\n  constructor(\n    public deviceRealtime: ManagedObjectRealtimeService,\n    private deviceProfileService: DeviceProfileService,\n    private route: ActivatedRoute,\n    private operationRealtime: OperationRealtimeService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.getDeviceProfilesAndUpdateProfileItems();\n    this.subscribeToManagedObjects();\n  }\n\n  async getDeviceProfilesAndUpdateProfileItems() {\n    this.reloading = true;\n    this.deviceProfiles = await this.deviceProfileService.getDeviceProfilesByDeviceType(\n      this.device.type\n    );\n    if (this.device.c8y_Profile) {\n      const profileId = this.device.c8y_Profile.profileId;\n      this.selectedProfile = this.deviceProfiles.data.find(mo => mo.id === profileId);\n    }\n    this.updateProfileItems(this.device, this.selectedProfile);\n    this.operation = await this.deviceProfileService.getProfileOperation(this.device.id);\n    this.subscribeToOperations();\n    this.reloading = false;\n  }\n\n  selectProfile(mo: DeviceProfile) {\n    this.selectedProfile = mo;\n    this.updateProfileItems(this.device, this.selectedProfile);\n  }\n\n  async createOperation() {\n    this.operation = await this.deviceProfileService.createProfileOperation(\n      this.device,\n      this.selectedProfile\n    );\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map(data => {\n        return data.filter(\n          mo => mo.name && mo.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n    this.moOnUpdateSubscription.unsubscribe();\n    this.moOnDeleteSubscription.unsubscribe();\n  }\n\n  updateProfileItems(device, profile) {\n    this.firmwareItems = this.deviceProfileService.getFirmwareItems(device, profile);\n    this.softwareItems = this.deviceProfileService.getSoftwareItems(device, profile);\n    this.configurationItems = this.deviceProfileService.getConfigurationItems(device, profile);\n  }\n\n  private subscribeToManagedObjects() {\n    this.moOnUpdateSubscription = this.deviceRealtime\n      .onUpdate$(this.device.id)\n      .subscribe((managedObject: IManagedObject) => {\n        this.updateProfileItems(managedObject, this.selectedProfile);\n      });\n    this.moOnDeleteSubscription = this.deviceRealtime.onDelete$(this.device.id).subscribe(() => {\n      this.alertService.danger(\n        gettext(\n          'This device has just been deleted. You will be redirected to \"All devices\" page now.'\n        )\n      );\n      window.location.href = '#/device';\n    });\n  }\n\n  private subscribeToOperations() {\n    this.operationsSubscription = this.operationRealtime\n      .onAll$(this.device.id)\n      .pipe(\n        map(({ data }) => data as IOperation),\n        filter(operation => operation.c8y_DeviceProfile)\n      )\n      .subscribe(operation => {\n        this.operation = operation;\n      });\n  }\n}\n","<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Reload' | translate }}\"\n    type=\"button\"\n    (click)=\"getDeviceProfilesAndUpdateProfileItems()\"\n  >\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': reloading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item [placement]=\"'right'\">\n  <c8y-realtime-btn [service]=\"deviceRealtime\"></c8y-realtime-btn>\n</c8y-action-bar-item>\n\n<div class=\"card card--grid--fullpage card--grid--fullpage card--grid grid__row--2-10--md\">\n  <div class=\"card--grid grid__col--6-6--md\">\n    <!-- AVAILABLE PROFILES -->\n    <div class=\"bg-level-0\">\n      <div class=\"card-header separator\">\n        <div class=\"card-title\" translate>Device profile</div>\n      </div>\n      <div class=\"p-16\">\n        <form #deviceProfileForm=\"ngForm\">\n          <div class=\"input-group\">\n            <c8y-typeahead\n              class=\"flex-grow\"\n              name=\"selectProfile\"\n              data-cy=\"device-tab-profile--select-device-profile\"\n              [(ngModel)]=\"selectedProfile\"\n              placeholder=\"{{ 'Select device profile' | translate }}\"\n              (onSearch)=\"setPipe($event)\"\n              [allowFreeEntries]=\"false\"\n            >\n              <c8y-li\n                *c8yFor=\"let profile of deviceProfiles; pipe: filterPipe\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectProfile(profile); setPipe('')\"\n              >\n                <c8y-highlight\n                  [text]=\"profile.name || '&#45;&#45;'\"\n                  [pattern]=\"pattern\"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                (click)=\"createOperation()\"\n                title=\"{{ 'Assign device profile' | translate }}\"\n                type=\"button\"\n                [disabled]=\"!selectedProfile?.id\"\n                c8yProductExperience\n                inherit\n                [actionData]=\"{ action: PRODUCT_EXPERIENCE.ACTIONS.ASSIGN_DEVICE_PROFILE }\"\n              >\n                <span>{{ 'Assign device profile' | translate }}</span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- INSTALL PROFILE OPERATION -->\n    <div class=\"bg-level-1\">\n      <div class=\"card-header separator\">\n        <div class=\"card-title\" translate>Currently installed</div>\n      </div>\n      <div class=\"card-block\">\n        <c8y-operation-details\n          [operation]=\"operation\"\n          c8yProductExperience\n          inherit\n          suppressDataOverriding\n        ></c8y-operation-details>\n      </div>\n    </div>\n  </div>\n  <div class=\"card--grid__inner-scroll d-col no-align-items\">\n    <div class=\"d-contents\">\n      <!-- FIRMWARE -->\n      <c8y-device-tab-profile-detail\n        [sectionTitle]=\"'Firmware' | translate\"\n        [sectionIcon]=\"'c8y-firmware'\"\n        [emptyStateText]=\"'No firmware to display.' | translate\"\n        [emptyStateDetails]=\"'No firmware assigned.' | translate\"\n        [isProfileSelected]=\"!!selectedProfile\"\n        [items]=\"firmwareItems\"\n        [isEmpty]=\"!selectedProfile?.c8y_DeviceProfile?.firmware?.name\"\n        class=\"d-contents\"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    <div class=\"d-contents\">\n      <!-- SOFTWARE -->\n      <c8y-device-tab-profile-detail\n        [sectionTitle]=\"'Software' | translate\"\n        [sectionIcon]=\"'c8y-tools'\"\n        [emptyStateText]=\"'No software to display.' | translate\"\n        [emptyStateDetails]=\"'No software assigned.' | translate\"\n        [isProfileSelected]=\"!!selectedProfile\"\n        [items]=\"softwareItems\"\n        [isEmpty]=\"\n          !selectedProfile?.c8y_DeviceProfile?.software ||\n          selectedProfile?.c8y_DeviceProfile?.software?.length === 0\n        \"\n        class=\"d-contents\"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    <div class=\"d-contents\">\n      <!-- CONFIGURATION -->\n      <c8y-device-tab-profile-detail\n        [sectionTitle]=\"'Configuration' | translate\"\n        [sectionIcon]=\"'gears'\"\n        [emptyStateText]=\"'No configuration to display' | translate\"\n        [emptyStateDetails]=\"'No configuration assigned' | translate\"\n        [isProfileSelected]=\"!!selectedProfile\"\n        [items]=\"configurationItems\"\n        [isEmpty]=\"\n          !selectedProfile?.c8y_DeviceProfile?.configuration ||\n          selectedProfile?.c8y_DeviceProfile?.configuration?.length === 0\n        \"\n        [showTextLabel]=\"false\"\n        class=\"d-contents\"\n      ></c8y-device-tab-profile-detail>\n    </div>\n    <!-- fill in the remanining vertical space when empty -->\n    <div class=\"card--grid grid__col--6-6--md flex-grow\">\n      <div class=\"bg-level-0\"></div>\n      <div class=\"bg-level-1\"></div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport {\n  CommonModule,\n  CoreModule,\n  hookNavigator,\n  hookRoute,\n  gettext,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeviceProfileComponent } from './device-profile.component';\nimport { DeviceProfileListComponent } from './device-profile-list.component';\nimport { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';\nimport { DeviceProfileService } from './device-profile.service';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileGuard } from './device-profile.guard';\nimport { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';\nimport { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';\nimport { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';\nimport { OperationDetailsModule } from '@c8y/ngx-components/operations/operation-details';\n\nconst deviceProfilesRoutes: Route[] = [\n  {\n    path: 'device-profiles/:id',\n    component: DeviceProfileComponent\n  },\n  {\n    path: 'device-profiles',\n    component: DeviceProfileListComponent\n  }\n];\n\nconst deviceTabProfileRoutes: any[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-profile',\n    component: DeviceTabProfileComponent,\n    label: gettext('Device profile'),\n    icon: 'c8y-device-profile',\n    canActivate: [DeviceProfileGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceProfileComponent,\n    DeviceProfileListComponent,\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent,\n    DeviceTabProfileDetailComponent,\n    DeviceProfileItemListComponent\n  ],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    SharedRepositoryModule,\n    RouterModule.forChild(deviceProfilesRoutes),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule,\n    OperationDetailsModule\n  ],\n  entryComponents: [\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent\n  ],\n  providers: [\n    hookNavigator(DeviceProfileNavigationFactory),\n    hookRoute(deviceTabProfileRoutes),\n    DeviceProfileService,\n    DeviceProfileGuard\n  ]\n})\nexport class DeviceProfileModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","PRODUCT_EXPERIENCE","i1","i3","i5","i6","i2.DeviceProfileService","i4","i6.DeviceProfileService","i7","i3.DeviceProfileItemListComponent","i7.DeviceTabProfileDetailComponent"],"mappings":"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"}