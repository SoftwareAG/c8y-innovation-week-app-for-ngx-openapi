{"version":3,"file":"c8y-ngx-components-protocol-lwm2m-guards.mjs","sources":["../../protocol-lwm2m/guards/lwm2m-base.guard.ts","../../protocol-lwm2m/guards/lwm2m-bootstrap-parameters.guard.ts","../../protocol-lwm2m/guards/lwm2m-microservice-subscribed.guard.ts","../../protocol-lwm2m/guards/c8y-ngx-components-protocol-lwm2m-guards.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { agentName } from '@c8y/ngx-components/protocol-lwm2m/model';\n\n/**\n * Abstract base class for Lwm2m guards. This abstract class implements\n * a canActivate method ready to use. It will check by default the lwm2m microservice subscription\n * in the current tenant.\n */\n@Injectable()\nexport abstract class Lwm2mBaseGuard implements CanActivate {\n  constructor(protected tenantService: TenantUiService) {}\n\n  /**\n   * Checks by default if the microservice `lwm2m-agent` is subscribed\n   * to the current tenant.\n   * @param route ActivatedRouteSnapshot\n   * @returns boolean\n   */\n  canActivate(route?: ActivatedRouteSnapshot) {\n    return (\n      this.tenantService.isMicroserviceSubscribedInCurrentTenant(agentName) &&\n      this.additionalChecks(route)\n    );\n  }\n\n  /**\n   * Use this method to add additional checks to canActivate method.\n   * If no additional checks are needed just return true. Or use the Lwm2mMicroserviceSubscribedGuard.\n   * @param route ActivatedRouteSnapshot\n   * @returns boolean\n   */\n  protected abstract additionalChecks(route?: ActivatedRouteSnapshot): boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TenantUiService, Permissions } from '@c8y/ngx-components';\nimport { Lwm2mClientService } from '@c8y/ngx-components/protocol-lwm2m/services';\nimport { Lwm2mBaseGuard } from './lwm2m-base.guard';\nimport {\n  Lwm2mBootstrapParameters,\n  Lwm2mManagedObject\n} from '@c8y/ngx-components/protocol-lwm2m/model';\n\n@Injectable()\nexport class Lwm2mBootstrapParametersGuard extends Lwm2mBaseGuard {\n  constructor(\n    protected tenantService: TenantUiService,\n    private permissions: Permissions,\n    private lwm2mService: Lwm2mClientService<Lwm2mBootstrapParameters>\n  ) {\n    super(tenantService);\n  }\n\n  protected additionalChecks(route?: ActivatedRouteSnapshot): boolean {\n    const contextData =\n      ((route?.data as any).contextData as Lwm2mManagedObject) ||\n      ((route?.parent.data as any).contextData as Lwm2mManagedObject);\n\n    return (\n      this.lwm2mService.isLwm2mDevice(contextData) &&\n      this.permissions.hasRole('ROLE_INVENTORY_READ')\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { Lwm2mBaseGuard } from './lwm2m-base.guard';\n\n@Injectable()\nexport class Lwm2mMicroserviceSubscribedGuard extends Lwm2mBaseGuard {\n  constructor(protected tenantService: TenantUiService) {\n    super(tenantService);\n  }\n\n  protected additionalChecks(_route?: ActivatedRouteSnapshot): boolean {\n    // Lwm2mBaseGuard checks by default for microservice subscription.\n    // We don't need additional checks here.\n    return true;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAKA;;;;AAIG;MAEmB,cAAc,CAAA;AAClC,IAAA,WAAA,CAAsB,aAA8B,EAAA;QAA9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAiB;KAAI;AAExD;;;;;AAKG;AACH,IAAA,WAAW,CAAC,KAA8B,EAAA;QACxC,QACE,IAAI,CAAC,aAAa,CAAC,uCAAuC,CAAC,SAAS,CAAC;AACrE,YAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAC5B;KACH;;2GAdmB,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,CAAA,CAAA;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBADnC,UAAU;;;ACCL,MAAO,6BAA8B,SAAQ,cAAc,CAAA;AAC/D,IAAA,WAAA,CACY,aAA8B,EAChC,WAAwB,EACxB,YAA0D,EAAA;QAElE,KAAK,CAAC,aAAa,CAAC,CAAC;QAJX,IAAa,CAAA,aAAA,GAAb,aAAa,CAAiB;QAChC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAA8C;KAGnE;AAES,IAAA,gBAAgB,CAAC,KAA8B,EAAA;QACvD,MAAM,WAAW,GACd,CAAC,KAAK,EAAE,IAAY,EAAC,WAAkC;YACvD,CAAC,KAAK,EAAE,MAAM,CAAC,IAAY,EAAC,WAAkC,CAAC;QAElE,QACE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAC/C;KACH;;0HAlBU,6BAA6B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;8HAA7B,6BAA6B,EAAA,CAAA,CAAA;2FAA7B,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBADzC,UAAU;;;ACJL,MAAO,gCAAiC,SAAQ,cAAc,CAAA;AAClE,IAAA,WAAA,CAAsB,aAA8B,EAAA;QAClD,KAAK,CAAC,aAAa,CAAC,CAAC;QADD,IAAa,CAAA,aAAA,GAAb,aAAa,CAAiB;KAEnD;AAES,IAAA,gBAAgB,CAAC,MAA+B,EAAA;;;AAGxD,QAAA,OAAO,IAAI,CAAC;KACb;;6HATU,gCAAgC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iIAAhC,gCAAgC,EAAA,CAAA,CAAA;2FAAhC,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAD5C,UAAU;;;ACLX;;AAEG;;;;"}