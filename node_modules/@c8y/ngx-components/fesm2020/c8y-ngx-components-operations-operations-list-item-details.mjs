import * as i0 from '@angular/core';
import { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import * as i3 from 'ngx-bootstrap/popover';
import { PopoverModule } from 'ngx-bootstrap/popover';
import * as i1 from '@c8y/ngx-components';
import { gettext, CoreModule } from '@c8y/ngx-components';
import * as i3$1 from '@c8y/ngx-components/operations/bulk-single-operations-list';
import { BulkSingleOperationsListModule } from '@c8y/ngx-components/operations/bulk-single-operations-list';
import { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';
import * as i2 from '@angular/common';

class OperationDetailsComponent {
    constructor() {
        this.showFailedOperation = new EventEmitter();
    }
    scrollToRetriedFromOperation(failedOperationId) {
        this.showFailedOperation.emit(failedOperationId);
    }
    openBulkOperationDetails(bulkOperationId) {
        this.bulkOperationModalDetailsService.openDetails(bulkOperationId);
    }
}
OperationDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
OperationDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: OperationDetailsComponent, selector: "c8y-operation-details", inputs: { operation: "operation", bulkOperationModalDetailsService: "bulkOperationModalDetailsService" }, outputs: { showFailedOperation: "showFailedOperation" }, ngImport: i0, template: "<div class=\"row d-flex-md fit-h\">\n  <div class=\"col-md-4 m-b-auto\">\n    <div class=\"legend form-block\" translate>Details</div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.startDate\">\n        <label class=\"small m-0\" translate>Start date</label>\n        <span class=\"m-l-auto\">{{ operation.startDate | c8yDate }}</span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.bulkOperationId\">\n        <label class=\"small m-b-auto\" translate>Bulk operation</label>\n        <div class=\"m-l-auto text-right text-truncate\">\n          <a (click)=\"openBulkOperationDetails(operation.bulkOperationId)\" class=\"interact\">\n            {{ 'See details' | translate }}\n          </a>\n        </div>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.creationRamp\">\n        <label class=\"small m-0\">\n          {{ 'Delay' | translate }}\n          <button\n            class=\"btn-help btn-help--sm\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ 'Delay before sending the operation to the next device.' | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <span [ngPlural]=\"operation.creationRamp\" class=\"m-l-auto\">\n          <ng-template ngPluralCase=\"=1\">\n            {{ operation.creationRamp }}\n            <span translate>second</span>\n          </ng-template>\n          <ng-template ngPluralCase=\"other\">\n            {{ operation.creationRamp }}\n            <span translate>seconds</span>\n          </ng-template>\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\">\n        <label class=\"small m-0\" translate>Status</label>\n        <span class=\"m-l-auto text-uppercase\">\n          {{\n            operation.operationPrototype\n              ? (operation.generalStatus.toString() | translate)\n              : (operation.status.toString() | translate)\n          }}\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.failureReason\">\n        <label class=\"small m-0\" translate>Failure reason</label>\n        <span\n          class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n          title=\"{{ operation.failureReason | translate }}\"\n        >\n          {{ operation.failureReason | translate }}\n        </span>\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 d-flex separator-bottom\"\n        *ngIf=\"operation.result || operation.progress\"\n      >\n        <label class=\"small m-b-auto\" translate>Result</label>\n        <div\n          class=\"d-flex flex-grow m-l-auto j-c-end\"\n          *ngIf=\"operation.progress; else singleOpResult\"\n        >\n          <div *ngIf=\"operation.progress.successful > 0\" class=\"icon-flex m-l-auto m-r-8\">\n            <i c8yIcon=\"check-circle\" class=\"text-success m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{\n                bulkOperationsCountSuccessful: operation.progress.successful\n              }\"\n            >\n              {{ bulkOperationsCountSuccessful }} successful\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.failed > 0\">\n            <i c8yIcon=\"warning\" class=\"text-danger m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountFailed: operation.progress.failed }\"\n            >\n              {{ bulkOperationsCountFailed }} failed\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.executing > 0\">\n            <i c8yIcon=\"refresh\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountExecuting: operation.progress.executing }\"\n            >\n              {{ bulkOperationsCountExecuting }} executing\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.pending > 0\">\n            <i c8yIcon=\"clock-o\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountPending: operation.progress.pending }\"\n            >\n              {{ bulkOperationsCountPending }} pending\n            </span>\n          </div>\n        </div>\n        <ng-template #singleOpResult>\n          <span\n            class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n            title=\"{{ operation.result }}\"\n          >\n            {{ operation.result }}\n          </span>\n        </ng-template>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.failedParentId\">\n        <label class=\"small m-0\" translate>Retried from</label>\n        <span class=\"m-l-auto\">\n          <button\n            class=\"btn btn-default btn-xs\"\n            type=\"button\"\n            title=\"{{ 'Scroll to parent operation.' | translate }}\"\n            (click)=\"scrollToRetriedFromOperation(operation.failedParentId)\"\n          >\n            {{ operation.failedParentId }}\n          </button>\n        </span>\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 d-flex separator-bottom\"\n        *ngIf=\"operation.note || operation.description\"\n      >\n        <label class=\"small m-b-auto\" translate>Description</label>\n        <span\n          title=\"{{ operation.note ? operation.note : (operation.description | translate) }}\"\n          class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n        >\n          {{ operation.note ? operation.note : (operation.description | translate) }}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-8 fit-h d-flex d-col\">\n    <div class=\"legend form-block\" translate>Operation</div>\n    <pre class=\"inner-scroll p-8 m-b-0 text-pre-normal\">\n      <code>{{ operation.operationPrototype || operation | json }}</code>\n    </pre>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgPlural, selector: "[ngPlural]", inputs: ["ngPlural"] }, { kind: "directive", type: i2.NgPluralCase, selector: "[ngPluralCase]" }, { kind: "directive", type: i3.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i2.JsonPipe, name: "json" }, { kind: "pipe", type: i1.DatePipe, name: "c8yDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-operation-details', template: "<div class=\"row d-flex-md fit-h\">\n  <div class=\"col-md-4 m-b-auto\">\n    <div class=\"legend form-block\" translate>Details</div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.startDate\">\n        <label class=\"small m-0\" translate>Start date</label>\n        <span class=\"m-l-auto\">{{ operation.startDate | c8yDate }}</span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.bulkOperationId\">\n        <label class=\"small m-b-auto\" translate>Bulk operation</label>\n        <div class=\"m-l-auto text-right text-truncate\">\n          <a (click)=\"openBulkOperationDetails(operation.bulkOperationId)\" class=\"interact\">\n            {{ 'See details' | translate }}\n          </a>\n        </div>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.creationRamp\">\n        <label class=\"small m-0\">\n          {{ 'Delay' | translate }}\n          <button\n            class=\"btn-help btn-help--sm\"\n            type=\"button\"\n            [attr.aria-label]=\"'Help' | translate\"\n            popover=\"{{ 'Delay before sending the operation to the next device.' | translate }}\"\n            placement=\"right\"\n            triggers=\"focus\"\n            container=\"body\"\n          ></button>\n        </label>\n        <span [ngPlural]=\"operation.creationRamp\" class=\"m-l-auto\">\n          <ng-template ngPluralCase=\"=1\">\n            {{ operation.creationRamp }}\n            <span translate>second</span>\n          </ng-template>\n          <ng-template ngPluralCase=\"other\">\n            {{ operation.creationRamp }}\n            <span translate>seconds</span>\n          </ng-template>\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\">\n        <label class=\"small m-0\" translate>Status</label>\n        <span class=\"m-l-auto text-uppercase\">\n          {{\n            operation.operationPrototype\n              ? (operation.generalStatus.toString() | translate)\n              : (operation.status.toString() | translate)\n          }}\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.failureReason\">\n        <label class=\"small m-0\" translate>Failure reason</label>\n        <span\n          class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n          title=\"{{ operation.failureReason | translate }}\"\n        >\n          {{ operation.failureReason | translate }}\n        </span>\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 d-flex separator-bottom\"\n        *ngIf=\"operation.result || operation.progress\"\n      >\n        <label class=\"small m-b-auto\" translate>Result</label>\n        <div\n          class=\"d-flex flex-grow m-l-auto j-c-end\"\n          *ngIf=\"operation.progress; else singleOpResult\"\n        >\n          <div *ngIf=\"operation.progress.successful > 0\" class=\"icon-flex m-l-auto m-r-8\">\n            <i c8yIcon=\"check-circle\" class=\"text-success m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{\n                bulkOperationsCountSuccessful: operation.progress.successful\n              }\"\n            >\n              {{ bulkOperationsCountSuccessful }} successful\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.failed > 0\">\n            <i c8yIcon=\"warning\" class=\"text-danger m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountFailed: operation.progress.failed }\"\n            >\n              {{ bulkOperationsCountFailed }} failed\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.executing > 0\">\n            <i c8yIcon=\"refresh\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountExecuting: operation.progress.executing }\"\n            >\n              {{ bulkOperationsCountExecuting }} executing\n            </span>\n          </div>\n          <div class=\"icon-flex m-l-auto m-r-8\" *ngIf=\"operation.progress.pending > 0\">\n            <i c8yIcon=\"clock-o\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountPending: operation.progress.pending }\"\n            >\n              {{ bulkOperationsCountPending }} pending\n            </span>\n          </div>\n        </div>\n        <ng-template #singleOpResult>\n          <span\n            class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n            title=\"{{ operation.result }}\"\n          >\n            {{ operation.result }}\n          </span>\n        </ng-template>\n      </li>\n      <li class=\"p-t-4 p-b-4 d-flex separator-bottom\" *ngIf=\"operation.failedParentId\">\n        <label class=\"small m-0\" translate>Retried from</label>\n        <span class=\"m-l-auto\">\n          <button\n            class=\"btn btn-default btn-xs\"\n            type=\"button\"\n            title=\"{{ 'Scroll to parent operation.' | translate }}\"\n            (click)=\"scrollToRetriedFromOperation(operation.failedParentId)\"\n          >\n            {{ operation.failedParentId }}\n          </button>\n        </span>\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 d-flex separator-bottom\"\n        *ngIf=\"operation.note || operation.description\"\n      >\n        <label class=\"small m-b-auto\" translate>Description</label>\n        <span\n          title=\"{{ operation.note ? operation.note : (operation.description | translate) }}\"\n          class=\"inner-scroll p-l-16 m-b-0 m-l-auto text-truncate-wrap\"\n        >\n          {{ operation.note ? operation.note : (operation.description | translate) }}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-8 fit-h d-flex d-col\">\n    <div class=\"legend form-block\" translate>Operation</div>\n    <pre class=\"inner-scroll p-8 m-b-0 text-pre-normal\">\n      <code>{{ operation.operationPrototype || operation | json }}</code>\n    </pre>\n  </div>\n</div>\n" }]
        }], propDecorators: { operation: [{
                type: Input
            }], bulkOperationModalDetailsService: [{
                type: Input
            }], showFailedOperation: [{
                type: Output
            }] } });

class OperationDetailsTabsComponent {
    constructor() {
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.showFailedOperation = new EventEmitter();
        this.tabs = [];
    }
    ngOnInit() {
        this.template = this.detailsTemplate;
        this.tabs = [
            {
                label: gettext('Details'),
                path: null,
                icon: 'asterisk',
                template: this.detailsTemplate
            },
            {
                label: gettext('History of changes'),
                path: null,
                icon: 'archive',
                template: this.auditTemplate
            }
        ];
    }
}
OperationDetailsTabsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsTabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
OperationDetailsTabsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: OperationDetailsTabsComponent, selector: "c8y-operation-details-tabs", inputs: { operation: "operation", readOnly: "readOnly", bulkOperationModalDetailsService: "bulkOperationModalDetailsService" }, outputs: { onRetryFailedOperations: "onRetryFailedOperations", showFailedOperation: "showFailedOperation" }, viewQueries: [{ propertyName: "detailsTemplate", first: true, predicate: ["details"], descendants: true, static: true }, { propertyName: "auditTemplate", first: true, predicate: ["audit"], descendants: true, static: true }], ngImport: i0, template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  ></c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n", dependencies: [{ kind: "component", type: i1.AuditLogComponent, selector: "c8y-audit-log", inputs: ["source"] }, { kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3$1.SingleOperationsListComponent, selector: "c8y-single-operations-list", inputs: ["bulkOperation", "readOnly"], outputs: ["onRetryFailedOperations"] }, { kind: "component", type: OperationDetailsComponent, selector: "c8y-operation-details", inputs: ["operation", "bulkOperationModalDetailsService"], outputs: ["showFailedOperation"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsTabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-operation-details-tabs', template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  ></c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n" }]
        }], propDecorators: { operation: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], bulkOperationModalDetailsService: [{
                type: Input
            }], onRetryFailedOperations: [{
                type: Output
            }], showFailedOperation: [{
                type: Output
            }], detailsTemplate: [{
                type: ViewChild,
                args: ['details', { static: true }]
            }], auditTemplate: [{
                type: ViewChild,
                args: ['audit', { static: true }]
            }] } });

/**
 * This module allows for displaying the list of single operations and their details.
 */
class OperationsListItemDetailsModule {
}
OperationsListItemDetailsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListItemDetailsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
OperationsListItemDetailsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: OperationsListItemDetailsModule, declarations: [OperationDetailsComponent, OperationDetailsTabsComponent], imports: [CoreModule,
        TooltipModule,
        PopoverModule,
        StatusFilterModule,
        BulkSingleOperationsListModule], exports: [OperationDetailsComponent, OperationDetailsTabsComponent] });
OperationsListItemDetailsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListItemDetailsModule, imports: [CoreModule,
        TooltipModule,
        PopoverModule,
        StatusFilterModule,
        BulkSingleOperationsListModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListItemDetailsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CoreModule,
                        TooltipModule,
                        PopoverModule,
                        StatusFilterModule,
                        BulkSingleOperationsListModule
                    ],
                    declarations: [OperationDetailsComponent, OperationDetailsTabsComponent],
                    exports: [OperationDetailsComponent, OperationDetailsTabsComponent]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { OperationDetailsComponent, OperationDetailsTabsComponent, OperationsListItemDetailsModule };
//# sourceMappingURL=c8y-ngx-components-operations-operations-list-item-details.mjs.map
