import * as i0 from '@angular/core';
import { Component, Injectable, NgModule } from '@angular/core';
import * as i1$1 from '@angular/router';
import { RouterModule } from '@angular/router';
import * as i2$1 from '@c8y/ngx-components';
import { gettext, Status, NavigatorNode, CoreModule, CommonModule, hookNavigator, hookPatternMessages } from '@c8y/ngx-components';
import * as i1 from 'ngx-bootstrap/modal';
import * as i2 from '@c8y/client';
import * as i4 from '@angular/forms';
import { ReactiveFormsModule } from '@angular/forms';
import * as i5 from 'ngx-bootstrap/buttons';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import * as i6 from 'ngx-bootstrap/popover';
import { PopoverModule } from 'ngx-bootstrap/popover';
import * as i4$1 from '@ngx-translate/core';
import { tap, switchMap } from 'rxjs/operators';
import { BehaviorSubject, pipe } from 'rxjs';
import { saveAs } from 'file-saver';
import { assign } from 'lodash-es';
import * as i5$1 from '@angular/common';
import * as i7 from 'ngx-bootstrap/tooltip';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import * as i2$2 from 'ngx-bootstrap/dropdown';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';

const PRODUCT_EXPERIENCE = {
    EVENT: 'trustedCertificate',
    CERTIFICATES: {
        COMPONENTS: {
            TRUSTED_CERTIFICATE: 'trusted-certificate'
        },
        ACTIONS: {
            ADD: 'add',
            UPDATE: 'update',
            DELETE: 'delete'
        },
        RESULTS: {
            ADD_SUCCESS: 'certificateAdded',
            UPDATE_SUCCESS: 'certificateUpdated',
            DELETE_SUCCESS: 'certificateDeleted'
        }
    },
    VERIFICATION_CODE: {
        COMPONENTS: {
            REGENERATE_CODE: 'regenerate-unsigned-verification-code',
            VERIFY_CODE: 'verify-signed-verification-code',
            DOWNLOAD_CODE: 'download-unsigned-verification-code'
        },
        ACTIONS: {
            REGENERATE: 'regenerate',
            VERIFY: 'verify',
            DOWNLOAD: 'download'
        },
        RESULTS: {
            REGENERATE_SUCCESS: 'unsignedVerificationCodeRegenerated',
            VERIFY_SUCCESS: 'signedCodeVerified',
            VERIFY_FAILED: 'signedCodeVerificationFailed'
        }
    }
};

class AddTrustedCertificateComponent {
    constructor(modal, trustedCertificateService, alertService, gainsightService) {
        this.modal = modal;
        this.trustedCertificateService = trustedCertificateService;
        this.alertService = alertService;
        this.gainsightService = gainsightService;
        this.maxAllowedFiles = 1;
        this.AUTO_REGISTRATION_POPOVER = gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');
        this.trustedCertificate = {
            status: 'DISABLED'
        };
        this.fileIsUploaded = false;
        this.result = new Promise((resolve, reject) => {
            this._save = resolve;
            this._cancel = reject;
        });
        this.PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;
    }
    uploadFile(dropped) {
        this.fileIsUploaded = false;
        if (dropped) {
            const reader = new FileReader();
            reader.onload = () => {
                this.fileIsUploaded = true;
                this.trustedCertificate.certInPemFormat = reader.result;
            };
            reader.readAsText(dropped[0].file);
        }
    }
    async save() {
        try {
            await this.trustedCertificateService.create(this.trustedCertificate);
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.CERTIFICATES.COMPONENTS.TRUSTED_CERTIFICATE,
                result: PRODUCT_EXPERIENCE.CERTIFICATES.RESULTS.ADD_SUCCESS,
                action: PRODUCT_EXPERIENCE.CERTIFICATES.ACTIONS.ADD
            });
            this.alertService.success(gettext('Certificate saved.'));
            this._save();
        }
        catch (ex) {
            this.alertService.addServerFailure(ex);
        }
    }
    close() {
        this._cancel();
        this.modal.hide();
    }
}
AddTrustedCertificateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddTrustedCertificateComponent, deps: [{ token: i1.BsModalRef }, { token: i2.TrustedCertificateService }, { token: i2$1.AlertService }, { token: i2$1.GainsightService }], target: i0.ɵɵFactoryTarget.Component });
AddTrustedCertificateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AddTrustedCertificateComponent, selector: "c8y-add-trusted-certificate", ngImport: i0, template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i c8yIcon=\"certificate\"></i>\n    <div class=\"modal-title\" id=\"addCertificateModalTitle\" translate>Add trusted certificate</div>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\" id=\"addCertificateModalDescription\">\n      <form #addTrustedCertificateForm=\"ngForm\">\n        <c8y-form-group>\n          <label translate for=\"certificateName\">Certificate name</label>\n          <input\n            id=\"certificateName\"\n            type=\"text\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            name=\"certificateName\"\n            [(ngModel)]=\"trustedCertificate.name\"\n            placeholder=\"{{ 'e.g. My certificate' | translate }}\"\n            required\n          />\n        </c8y-form-group>\n        <c8y-form-group>\n          <label translate for=\"certificate\">Certificate</label>\n          <c8y-drop-area\n            class=\"drop-area-sm\"\n            (dropped)=\"uploadFile($event)\"\n            [loadingMessage]=\"'Importing, please wait.' | translate\"\n            [title]=\"'Paste the certificate in PEM format.' | translate\"\n            [maxAllowedFiles]=\"maxAllowedFiles\"\n          ></c8y-drop-area>\n        </c8y-form-group>\n        <c8y-form-group>\n          <label title=\"{{ 'Auto registration' | translate }}\" class=\"c8y-checkbox\">\n            <input\n              id=\"autoRegistration\"\n              type=\"checkbox\"\n              name=\"autoRegistration\"\n              [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n            />\n            <span></span>\n            <span>{{ 'Auto registration' | translate }}</span>\n            <button\n              class=\"btn-help\"\n              type=\"button\"\n              popover=\"{{ AUTO_REGISTRATION_POPOVER | translate }}\"\n              [attr.aria-label]=\"'Help' | translate\"\n              placement=\"right\"\n              triggers=\"focus\"\n              container=\"body\"\n            ></button>\n          </label>\n        </c8y-form-group>\n        <button\n          class=\"btn\"\n          type=\"button\"\n          name=\"certificateStatus\"\n          [(ngModel)]=\"trustedCertificate.status\"\n          btnCheckbox\n          btnCheckboxTrue=\"ENABLED\"\n          btnCheckboxFalse=\"DISABLED\"\n        >\n          <span\n            title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n          >\n            {{ 'Disabled`trusted certificate status`' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n          >\n            {{ 'Enabled`trusted certificate status`' | translate }}\n          </span>\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      type=\"button\"\n      title=\"{{ 'Cancel' | translate }}\"\n      (click)=\"close()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n\n    <button\n      class=\"btn btn-primary\"\n      type=\"button\"\n      title=\"{{ 'Add certificate' | translate }}\"\n      (click)=\"save()\"\n      [disabled]=\"\n        addTrustedCertificateForm.form.invalid ||\n        addTrustedCertificateForm.form.pristine ||\n        !fileIsUploaded\n      \"\n    >\n      {{ 'Add certificate' | translate }}\n    </button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2$1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2$1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "component", type: i2$1.DropAreaComponent, selector: "c8y-drop-area", inputs: ["formControl", "title", "message", "icon", "loadingMessage", "forceHideList", "alwaysShow", "clickToOpen", "loading", "progress", "maxAllowedFiles", "files", "maxFileSizeInMegaBytes", "accept"], outputs: ["dropped"] }, { kind: "directive", type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i2$1.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i2$1.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "directive", type: i5.ButtonCheckboxDirective, selector: "[btnCheckbox]", inputs: ["btnCheckboxTrue", "btnCheckboxFalse"] }, { kind: "directive", type: i6.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i2$1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddTrustedCertificateComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-add-trusted-certificate', template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i c8yIcon=\"certificate\"></i>\n    <div class=\"modal-title\" id=\"addCertificateModalTitle\" translate>Add trusted certificate</div>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\" id=\"addCertificateModalDescription\">\n      <form #addTrustedCertificateForm=\"ngForm\">\n        <c8y-form-group>\n          <label translate for=\"certificateName\">Certificate name</label>\n          <input\n            id=\"certificateName\"\n            type=\"text\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            name=\"certificateName\"\n            [(ngModel)]=\"trustedCertificate.name\"\n            placeholder=\"{{ 'e.g. My certificate' | translate }}\"\n            required\n          />\n        </c8y-form-group>\n        <c8y-form-group>\n          <label translate for=\"certificate\">Certificate</label>\n          <c8y-drop-area\n            class=\"drop-area-sm\"\n            (dropped)=\"uploadFile($event)\"\n            [loadingMessage]=\"'Importing, please wait.' | translate\"\n            [title]=\"'Paste the certificate in PEM format.' | translate\"\n            [maxAllowedFiles]=\"maxAllowedFiles\"\n          ></c8y-drop-area>\n        </c8y-form-group>\n        <c8y-form-group>\n          <label title=\"{{ 'Auto registration' | translate }}\" class=\"c8y-checkbox\">\n            <input\n              id=\"autoRegistration\"\n              type=\"checkbox\"\n              name=\"autoRegistration\"\n              [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n            />\n            <span></span>\n            <span>{{ 'Auto registration' | translate }}</span>\n            <button\n              class=\"btn-help\"\n              type=\"button\"\n              popover=\"{{ AUTO_REGISTRATION_POPOVER | translate }}\"\n              [attr.aria-label]=\"'Help' | translate\"\n              placement=\"right\"\n              triggers=\"focus\"\n              container=\"body\"\n            ></button>\n          </label>\n        </c8y-form-group>\n        <button\n          class=\"btn\"\n          type=\"button\"\n          name=\"certificateStatus\"\n          [(ngModel)]=\"trustedCertificate.status\"\n          btnCheckbox\n          btnCheckboxTrue=\"ENABLED\"\n          btnCheckboxFalse=\"DISABLED\"\n        >\n          <span\n            title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n          >\n            {{ 'Disabled`trusted certificate status`' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n          >\n            {{ 'Enabled`trusted certificate status`' | translate }}\n          </span>\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      type=\"button\"\n      title=\"{{ 'Cancel' | translate }}\"\n      (click)=\"close()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n\n    <button\n      class=\"btn btn-primary\"\n      type=\"button\"\n      title=\"{{ 'Add certificate' | translate }}\"\n      (click)=\"save()\"\n      [disabled]=\"\n        addTrustedCertificateForm.form.invalid ||\n        addTrustedCertificateForm.form.pristine ||\n        !fileIsUploaded\n      \"\n    >\n      {{ 'Add certificate' | translate }}\n    </button>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalRef }, { type: i2.TrustedCertificateService }, { type: i2$1.AlertService }, { type: i2$1.GainsightService }]; } });

class TrustedCertificatesComponent {
    constructor(bsModal, alertService, trustedCertificateService, modalService, translateService, clipboardService, gainsightService) {
        this.bsModal = bsModal;
        this.alertService = alertService;
        this.trustedCertificateService = trustedCertificateService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.clipboardService = clipboardService;
        this.gainsightService = gainsightService;
        this.PROOF_OF_POSSESSION_POPOVER = gettext('"Proof of possession" is a security method used to prove that whoever sends a message is also in the possession of the particular cryptographic key.');
        this.SIGNED_VERIFICATION_CODE_POPOVER = gettext('Use the following openssl command to create the signed verification code: openssl dgst -sha256 -sign <private.key> <verification_code.txt> | openssl base64 -A');
        this.reloading = new BehaviorSubject(false);
        this.reload = new BehaviorSubject(null);
        this.trustedCertificates = this.reload.pipe(tap(() => this.reloading.next(true)), switchMap(() => this.getTrustedCertificates()), tap(() => this.reloading.next(false)));
        this.sortByExpirationDateAsc = pipe(tap(results => {
            return results.sort((n1, n2) => n1.notAfter.localeCompare(n2.notAfter));
        }));
        this.PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;
    }
    async ngOnInit() {
        await this.loadTrustedCertificates();
    }
    async loadTrustedCertificates() {
        this.reload.next();
    }
    getTrustedCertificates() {
        const filter = {
            pageSize: 1000,
            withTotalPages: true
        };
        return this.trustedCertificateService.list(filter);
    }
    async addTrustedCertificate() {
        const modal = this.bsModal.show(AddTrustedCertificateComponent, {
            class: 'modal-sm',
            ariaDescribedby: 'addCertificateModalDescription',
            ariaLabelledBy: 'addCertificateModalTitle',
            ignoreBackdropClick: true
        }).content;
        try {
            await modal.result;
            modal.close();
            this.reload.next();
        }
        catch (ex) {
            // do nothing
        }
    }
    async deleteTrustedCertificate(certificate) {
        const title = gettext('Delete trusted certificate');
        const confirmationText = gettext('You are about to delete a trusted certificate "{{ certificateName }}".');
        const finalQuestion = gettext('Do you want to proceed?');
        const certificateName = certificate.name;
        const body = [
            this.translateService.instant(confirmationText, {
                certificateName
            }),
            this.translateService.instant(finalQuestion)
        ].join(' ');
        try {
            await this.modalService.confirm(title, body, Status.DANGER, { ok: gettext('Delete') });
            await this.trustedCertificateService.delete(certificate.fingerprint);
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.CERTIFICATES.COMPONENTS.TRUSTED_CERTIFICATE,
                result: PRODUCT_EXPERIENCE.CERTIFICATES.RESULTS.DELETE_SUCCESS,
                action: PRODUCT_EXPERIENCE.CERTIFICATES.ACTIONS.DELETE
            });
            this.alertService.success(gettext('Certificate deleted.'));
            this.reload.next();
        }
        catch (ex) {
            this.alertService.addServerFailure(ex);
        }
    }
    async updateCertificate(trustedCertificate, updatingPart) {
        try {
            await this.trustedCertificateService.update({
                fingerprint: trustedCertificate.fingerprint,
                ...updatingPart
            });
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.CERTIFICATES.COMPONENTS.TRUSTED_CERTIFICATE,
                result: PRODUCT_EXPERIENCE.CERTIFICATES.RESULTS.UPDATE_SUCCESS,
                action: PRODUCT_EXPERIENCE.CERTIFICATES.ACTIONS.UPDATE
            });
            this.alertService.success(gettext('Certificate saved.'));
        }
        catch (ex) {
            this.alertService.addServerFailure(ex);
        }
    }
    highlightDependingOnExpirationStatus(item) {
        const warningOffset = 24 * 60 * 60 * 1000 * 90; // 90 days
        const todayTimestamp = new Date().getTime();
        const warningTimestamp = new Date().getTime() + warningOffset;
        const notAfterTimestamp = new Date(item.notAfter).getTime();
        const expired = notAfterTimestamp < todayTimestamp;
        const expiresInLessThan90Days = notAfterTimestamp < warningTimestamp;
        if (expired) {
            return 'text-danger';
        }
        if (expiresInLessThan90Days) {
            return 'text-warning';
        }
        return '';
    }
    regenerateUnsignedVerificationCode(trustedCertificate) {
        this.trustedCertificateService.regeneratePoPVerificationCode(trustedCertificate).then(({ data }) => {
            assign(trustedCertificate, data);
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.VERIFICATION_CODE.COMPONENTS.REGENERATE_CODE,
                result: PRODUCT_EXPERIENCE.VERIFICATION_CODE.RESULTS.REGENERATE_SUCCESS,
                action: PRODUCT_EXPERIENCE.VERIFICATION_CODE.ACTIONS.REGENERATE
            });
            this.alertService.success(gettext('Verification code regenerated.'));
        }, ex => this.alertService.addServerFailure(ex));
    }
    verifySignedVerificationCode(trustedCertificate) {
        this.trustedCertificateService
            .verifySignedVerificationCode(trustedCertificate, trustedCertificate.signedVerificationCode)
            .then(({ data }) => {
            assign(trustedCertificate, data);
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.VERIFICATION_CODE.COMPONENTS.VERIFY_CODE,
                result: PRODUCT_EXPERIENCE.VERIFICATION_CODE.RESULTS.VERIFY_SUCCESS,
                action: PRODUCT_EXPERIENCE.VERIFICATION_CODE.ACTIONS.VERIFY
            });
            this.alertService.success(gettext('Signed verification code verified.'));
        }, ex => {
            this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {
                component: PRODUCT_EXPERIENCE.VERIFICATION_CODE.COMPONENTS.VERIFY_CODE,
                result: PRODUCT_EXPERIENCE.VERIFICATION_CODE.RESULTS.VERIFY_FAILED,
                action: PRODUCT_EXPERIENCE.VERIFICATION_CODE.ACTIONS.VERIFY
            });
            this.alertService.addServerFailure(ex);
        });
    }
    downloadUnsignedVerificationCode(trustedCertificate) {
        const blob = new Blob([trustedCertificate.proofOfPossessionUnsignedVerificationCode]);
        const fileName = trustedCertificate.name;
        saveAs(blob, `${fileName}.txt`);
    }
    copyUnsignedVerificationCodeToClipboard(trustedCertificate) {
        this.clipboardService.writeText(trustedCertificate.proofOfPossessionUnsignedVerificationCode);
    }
    onFileInput(event, trustedCertificate) {
        const input = event.target;
        const reader = new FileReader();
        reader.onload = () => {
            trustedCertificate.signedVerificationCode = reader.result;
        };
        reader.readAsText(input.files[0]);
    }
}
TrustedCertificatesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesComponent, deps: [{ token: i1.BsModalService }, { token: i2$1.AlertService }, { token: i2.TrustedCertificateService }, { token: i2$1.ModalService }, { token: i4$1.TranslateService }, { token: i2$1.ClipboardService }, { token: i2$1.GainsightService }], target: i0.ɵɵFactoryTarget.Component });
TrustedCertificatesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: TrustedCertificatesComponent, selector: "c8y-trusted-certificates", ngImport: i0, template: "<c8y-title>{{ 'Trusted certificates' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    icon=\"c8y-management\"\n    label=\"{{ 'Management' | translate }}\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    icon=\"certificate\"\n    label=\"{{ 'Trusted certificates' | translate }}\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Add trusted certificate' | translate }}\"\n    type=\"button\"\n    (click)=\"addTrustedCertificate()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add trusted certificate' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Reload' | translate }}\"\n    type=\"button\"\n    (click)=\"loadTrustedCertificates()\"\n  >\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'icon-spin': reloading | async }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/device-management/#trusted-certificates\"></c8y-help>\n\n<c8y-ui-empty-state\n  [icon]=\"'certificate'\"\n  [title]=\"'No trusted certificates to display.' | translate\"\n  [subtitle]=\"'Add your first certificate by clicking below.' | translate\"\n  *ngIf=\"(trustedCertificates | async)?.data.length === 0\"\n>\n  <button\n    class=\"btn btn-primary\"\n    title=\"{{ 'Add trusted certificate' | translate }}\"\n    type=\"button\"\n    (click)=\"addTrustedCertificate()\"\n  >\n    {{ 'Add trusted certificate' | translate }}\n  </button>\n</c8y-ui-empty-state>\n\n<c8y-list-group class=\"m-b-24\">\n  <div\n    class=\"page-sticky-header hidden-xs c8y-list__item c8y-list__item--empty-actions\"\n    *ngIf=\"(trustedCertificates | async)?.data.length > 0\"\n  >\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i\n          class=\"invisible\"\n          c8yIcon=\"certificate\"\n        ></i>\n      </div>\n      <div class=\"c8y-list__item__body\">\n        <div class=\"content-flex-60\">\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Certificate' | translate }} \"\n            >\n              {{ 'Certificate' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Status' | translate }}\"\n            >\n              {{ 'Status' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Algorithm' | translate }}\"\n            >\n              {{ 'Algorithm' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Expiration date' | translate }}\"\n            >\n              {{ 'Expiration date' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Auto registration' | translate }}\"\n            >\n              {{ 'Auto registration' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Proof of possession' | translate }}\"\n            >\n              {{ 'Proof of possession' | translate }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"c8y-list__item__actions\"></div>\n    </div>\n  </div>\n\n  <c8y-li\n    *c8yFor=\"\n      let trustedCertificate of trustedCertificates | async;\n      let i = index;\n      pipe: sortByExpirationDateAsc;\n      loadMore: 'none'\n    \"\n    #listItem\n  >\n    <c8y-li-icon>\n      <i c8yIcon=\"certificate\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-60\">\n      <div class=\"col-2\">\n        <button\n          class=\"btn-clean text-truncate\"\n          title=\"{{ trustedCertificate.name }}\"\n          type=\"button\"\n          (click)=\"listItem.toggleCollapsed()\"\n        >\n          {{ trustedCertificate.name }}\n        </button>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"visible-xs p-8\"></div>\n        <button\n          class=\"btn c8y-btn-checkbox--inline\"\n          name=\"certificateStatus\"\n          type=\"button\"\n          [(ngModel)]=\"trustedCertificate.status\"\n          btnCheckbox\n          btnCheckboxTrue=\"ENABLED\"\n          btnCheckboxFalse=\"DISABLED\"\n          (ngModelChange)=\"updateCertificate(trustedCertificate, { status: $event })\"\n        >\n          <small\n            title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n          >\n            {{ 'Disabled`trusted certificate status`' | translate }}\n          </small>\n          <small\n            title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n          >\n            {{ 'Enabled`trusted certificate status`' | translate }}\n          </small>\n        </button>\n        <div class=\"visible-xs p-8\"></div>\n      </div>\n      <div class=\"col-2\">\n        <div\n          class=\"text-truncate\"\n          title=\"{{ 'Algorithm' | translate }}: {{ trustedCertificate.algorithmName }}\"\n        >\n          <span\n            class=\"text-label-small m-t-8 m-r-8 visible-xs-inline\"\n            translate\n          >\n            Algorithm\n          </span>\n          {{ trustedCertificate.algorithmName }}\n        </div>\n      </div>\n\n      <div class=\"col-2\">\n        <div\n          class=\"text-truncate\"\n          title=\"{{ 'Expiration date' | translate }}: {{ trustedCertificate.notAfter | c8yDate }}\"\n        >\n          <span\n            class=\"text-label-small m-t-8 m-r-8 visible-xs-inline\"\n            translate\n          >\n            Expiration date\n          </span>\n          <small [ngClass]=\"highlightDependingOnExpirationStatus(trustedCertificate)\">\n            <i\n              class=\"m-r-4\"\n              c8yIcon=\"calendar\"\n              *ngIf=\"!highlightDependingOnExpirationStatus(trustedCertificate)\"\n            ></i>\n            <i\n              class=\"m-r-4\"\n              c8yIcon=\"warning\"\n              *ngIf=\"highlightDependingOnExpirationStatus(trustedCertificate)\"\n            ></i>\n            <span>{{ trustedCertificate.notAfter | c8yDate }}</span>\n          </small>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"text-truncate\">\n          <span class=\"text-label-small m-t-8 m-r-4 visible-xs-inline\">\n            {{ 'Auto registration' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Auto registration' | translate }}:  {{\n              'Enabled`auto registration`' | translate\n            }}\"\n            *ngIf=\"trustedCertificate.autoRegistrationEnabled\"\n          >\n            {{ 'Enabled`auto registration`' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Auto registration' | translate }}:  {{\n              'Disabled`auto registration`' | translate\n            }}\"\n            *ngIf=\"!trustedCertificate.autoRegistrationEnabled\"\n          >\n            {{ 'Disabled`auto registration`' | translate }}\n          </span>\n        </div>\n      </div>\n      <div class=\"col-2 d-flex\">\n        <div class=\"text-truncate\">\n          <span class=\"text-label-small m-t-8 m-r-4 visible-xs-inline\">\n            {{ 'Proof of possession' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Proof of possession' | translate }}:  {{\n              'Complete`proof of possession`' | translate\n            }}\"\n            *ngIf=\"trustedCertificate.proofOfPossessionValid\"\n          >\n            <div class=\"icon-flex\">\n              <i\n                class=\"text-success\"\n                c8yIcon=\"success\"\n              ></i>\n              {{ 'Complete`proof of possession`' | translate }}\n            </div>\n          </span>\n          <span\n            title=\"{{ 'Proof of possession' | translate }}:  {{\n              'Incomplete`proof of possession`' | translate\n            }}\"\n            *ngIf=\"!trustedCertificate.proofOfPossessionValid\"\n          >\n            <div class=\"icon-flex\">\n              <i\n                class=\"text-warning\"\n                c8yIcon=\"warning\"\n              ></i>\n              {{ 'Incomplete`proof of possession`' | translate }}\n            </div>\n          </span>\n        </div>\n        <button\n          class=\"m-l-auto btn-dot btn-dot--danger btn showOnHover m-r-8\"\n          [attr.aria-label]=\"'Delete' | translate\"\n          tooltip=\"{{ 'Delete' | translate }}\"\n          placement=\"right\"\n          type=\"button\"\n          data-cy=\"c8y-trusted-certificate--delete\"\n          [delay]=\"500\"\n          (click)=\"deleteTrustedCertificate(trustedCertificate)\"\n        >\n          <i c8yIcon=\"delete\"></i>\n        </button>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <div class=\"p-t-16 p-b-16\">\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <c8y-form-group>\n              <label class=\"control-label\">\n                {{ 'Certificate name' | translate }}\n              </label>\n              <div class=\"input-group input-group-editable\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  data-cy=\"c8y-trusted-certificates--edit-certificate-name\"\n                  required\n                  [(ngModel)]=\"trustedCertificate.name\"\n                />\n                <span></span>\n                <div class=\"input-group-btn\">\n                  <button\n                    class=\"btn btn-primary\"\n                    title=\"{{ 'Update certificate name' | translate }}\"\n                    type=\"button\"\n                    (click)=\"\n                      updateCertificate(trustedCertificate, { name: trustedCertificate.name })\n                    \"\n                    [disabled]=\"!trustedCertificate.name\"\n                  >\n                    {{ 'Save' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </div>\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-7\">\n            <c8y-form-group>\n              <label\n                class=\"control-label\"\n                for=\"certInPemFormat\"\n                translate\n              >\n                Certificate\n              </label>\n              <textarea\n                class=\"form-control no-resize\"\n                id=\"certInPemFormat\"\n                name=\"certInPemFormat\"\n                type=\"text\"\n                rows=\"7\"\n                readonly\n                [(ngModel)]=\"trustedCertificate.certInPemFormat\"\n              ></textarea>\n            </c8y-form-group>\n            <c8y-form-group>\n              <label\n                class=\"c8y-checkbox\"\n                title=\"{{ 'Auto registration' | translate }}\"\n              >\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n                  (ngModelChange)=\"\n                    updateCertificate(trustedCertificate, { autoRegistrationEnabled: $event })\n                  \"\n                />\n                <span></span>\n                <span>{{ 'Auto registration' | translate }}</span>\n              </label>\n            </c8y-form-group>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div\n              class=\"legend form-block\"\n              translate\n            >\n              Additional properties\n            </div>\n            <ul class=\"list-unstyled\">\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Algorithm' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.algorithmName }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Version' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.version }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Valid from' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.notBefore | c8yDate }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Issuer' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.issuer }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Expiration date' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.notAfter | c8yDate }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Serial number' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.serialNumber }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Subject`of a certificate`' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.subject }}\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-7\">\n            <div class=\"legend form-block\">\n              {{ 'Proof of possession' | translate }}\n              <button\n                class=\"btn-help btn-help--sm\"\n                [attr.aria-label]=\"'Help' | translate\"\n                popover=\"{{ PROOF_OF_POSSESSION_POPOVER | translate }}\"\n                placement=\"right\"\n                triggers=\"focus\"\n                container=\"body\"\n                type=\"button\"\n                type=\"button\"\n              ></button>\n            </div>\n            <div *ngIf=\"trustedCertificate.proofOfPossessionValid\">\n              <span\n                class=\"icon-flex\"\n                title=\"{{ 'Proof of possession' | translate }}:  {{\n                  'Complete`proof of possession`' | translate\n                }}\"\n              >\n                <i\n                  class=\"text-success\"\n                  c8yIcon=\"success\"\n                ></i>\n                {{ 'Complete`proof of possession`' | translate }}\n              </span>\n            </div>\n            <div *ngIf=\"!trustedCertificate.proofOfPossessionValid\">\n              <div class=\"row m-b-16\">\n                <div class=\"col-md-6\">\n                  <span\n                    class=\"icon-flex\"\n                    title=\"{{ 'Proof of possession' | translate }}:  {{\n                      'Incomplete`proof of possession`' | translate\n                    }}\"\n                  >\n                    <i\n                      class=\"text-warning\"\n                      c8yIcon=\"warning\"\n                    ></i>\n                    {{ 'Incomplete`proof of possession`' | translate }}\n                  </span>\n                </div>\n                <div class=\"col-md-6 col-lg-6 text-right-md\">\n                  <span class=\"text-label-small m-r-4\">\n                    {{ 'Verification code expires/expired on' | translate }}\n                  </span>\n                  {{\n                    (trustedCertificate.proofOfPossessionVerificationCodeUsableUntil | c8yDate) ||\n                      '---'\n                  }}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-lg-6\">\n                  <c8y-form-group>\n                    <label\n                      class=\"control-label\"\n                      for=\"unsignedVerificationCode\"\n                      translate\n                    >\n                      Verification code\n                    </label>\n                    <textarea\n                      class=\"form-control no-resize\"\n                      id=\"unsignedVerificationCode\"\n                      name=\"unsignedVerificationCode\"\n                      type=\"text\"\n                      rows=\"5\"\n                      readonly\n                      [(ngModel)]=\"trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                    ></textarea>\n                  </c8y-form-group>\n                  <div class=\"d-flex\">\n                    <button\n                      class=\"btn btn-primary btn-sm\"\n                      title=\"{{ 'Regenerate verification code' | translate }}\"\n                      type=\"button\"\n                      (click)=\"regenerateUnsignedVerificationCode(trustedCertificate)\"\n                    >\n                      {{ 'Regenerate`verification code`' | translate }}\n                    </button>\n\n                    <button\n                      class=\"btn btn-sm btn-default m-l-auto m-r-0\"\n                      [attr.aria-label]=\"'Copy to clipboard' | translate\"\n                      tooltip=\"{{ 'Copy to clipboard' | translate }}\"\n                      data-cy=\"c8y-trusted-certificates--copy-to-clipboard\"\n                      placement=\"right\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      [disabled]=\"!trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                      (click)=\"copyUnsignedVerificationCodeToClipboard(trustedCertificate)\"\n                    >\n                      <i c8yIcon=\"clipboard\"></i>\n                    </button>\n                    <button\n                      class=\"btn btn-default btn-sm\"\n                      [attr.aria-label]=\"'Download as file' | translate\"\n                      tooltip=\"{{ 'Download as file' | translate }}\"\n                      data-cy=\"c8y-trusted-certificates--download-as-file\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      [disabled]=\"!trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                      (click)=\"downloadUnsignedVerificationCode(trustedCertificate)\"\n                      c8yProductExperience\n                      [actionName]=\"PRODUCT_EXPERIENCE.EVENT\"\n                      [actionData]=\"{\n                        component: PRODUCT_EXPERIENCE.VERIFICATION_CODE.COMPONENTS.DOWNLOAD_CODE,\n                        action: PRODUCT_EXPERIENCE.VERIFICATION_CODE.ACTIONS.DOWNLOAD\n                      }\"\n                    >\n                      <i c8yIcon=\"download\"></i>\n                    </button>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6 col-lg-6\">\n                  <c8y-form-group>\n                    <label\n                      class=\"control-label\"\n                      for=\"signedVerificationCode\"\n                    >\n                      {{ 'Signed verification code' | translate }}\n                      <button\n                        class=\"btn-help btn-help--sm\"\n                        [attr.aria-label]=\"'Help' | translate\"\n                        popover=\"{{ SIGNED_VERIFICATION_CODE_POPOVER | translate }}\"\n                        placement=\"top\"\n                        container=\"body\"\n                        type=\"button\"\n                        [outsideClick]=\"true\"\n                      ></button>\n                    </label>\n                    <textarea\n                      class=\"form-control no-resize\"\n                      id=\"signedVerificationCode\"\n                      name=\"signedVerificationCode\"\n                      type=\"text\"\n                      rows=\"5\"\n                      [(ngModel)]=\"trustedCertificate.signedVerificationCode\"\n                    ></textarea>\n                  </c8y-form-group>\n                  <div class=\"d-flex\">\n                    <button\n                      class=\"btn btn-primary btn-sm\"\n                      title=\"{{ 'Verify signed verification code' | translate }}\"\n                      type=\"button\"\n                      (click)=\"verifySignedVerificationCode(trustedCertificate)\"\n                      [disabled]=\"!trustedCertificate.signedVerificationCode\"\n                    >\n                      {{ 'Verify`signed verification code`' | translate }}\n                    </button>\n                    <button\n                      class=\"btn btn-sm btn-default m-l-auto\"\n                      [attr.aria-label]=\"'Upload file' | translate\"\n                      tooltip=\"{{ 'Upload file' | translate }}\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      (click)=\"fileInput.click()\"\n                    >\n                      <i c8yIcon=\"upload\"></i>\n                    </button>\n                    <input\n                      class=\"hidden\"\n                      type=\"file\"\n                      #fileInput\n                      (change)=\"onFileInput($event, trustedCertificate)\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n", dependencies: [{ kind: "component", type: i2$1.ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: ["placement", "priority", "itemClass", "injector", "groupId"] }, { kind: "component", type: i2$1.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i2$1.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "component", type: i2$1.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i2$1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2$1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i5$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i5$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2$1.ForOfDirective, selector: "[c8yFor]", inputs: ["c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForMaxIterations", "c8yForLoadingTemplate", "c8yForLoadNextLabel", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForComparator", "c8yForEnableVirtualScroll", "c8yForVirtualScrollElementSize", "c8yForVirtualScrollStrategy", "c8yForVirtualScrollContainerHeight"], outputs: ["c8yForCount"] }, { kind: "component", type: i2$1.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i2$1.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i2$1.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "component", type: i2$1.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i2$1.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i2$1.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i2$1.ListItemBodyComponent, selector: "c8y-list-item-body, c8y-li-body", inputs: ["body"] }, { kind: "component", type: i2$1.ListItemCollapseComponent, selector: "c8y-list-item-collapse, c8y-li-collapse", inputs: ["collapseWay"] }, { kind: "directive", type: i2$1.ProductExperienceDirective, selector: "[c8yProductExperience]", inputs: ["actionName", "actionData", "inherit", "suppressDataOverriding"] }, { kind: "component", type: i2$1.HelpComponent, selector: "c8y-help", inputs: ["src", "isCollapsed", "priority", "icon"] }, { kind: "directive", type: i7.TooltipDirective, selector: "[tooltip], [tooltipHtml]", inputs: ["adaptivePosition", "tooltip", "placement", "triggers", "container", "containerClass", "boundariesElement", "isOpen", "isDisabled", "delay", "tooltipHtml", "tooltipPlacement", "tooltipIsOpen", "tooltipEnable", "tooltipAppendToBody", "tooltipAnimation", "tooltipClass", "tooltipContext", "tooltipPopupDelay", "tooltipFadeDuration", "tooltipTrigger"], outputs: ["tooltipChange", "onShown", "onHidden", "tooltipStateChanged"], exportAs: ["bs-tooltip"] }, { kind: "directive", type: i5.ButtonCheckboxDirective, selector: "[btnCheckbox]", inputs: ["btnCheckboxTrue", "btnCheckboxFalse"] }, { kind: "directive", type: i6.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i2$1.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i5$1.AsyncPipe, name: "async" }, { kind: "pipe", type: i2$1.DatePipe, name: "c8yDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-trusted-certificates', template: "<c8y-title>{{ 'Trusted certificates' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    icon=\"c8y-management\"\n    label=\"{{ 'Management' | translate }}\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    icon=\"certificate\"\n    label=\"{{ 'Trusted certificates' | translate }}\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Add trusted certificate' | translate }}\"\n    type=\"button\"\n    (click)=\"addTrustedCertificate()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add trusted certificate' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Reload' | translate }}\"\n    type=\"button\"\n    (click)=\"loadTrustedCertificates()\"\n  >\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'icon-spin': reloading | async }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/device-management/#trusted-certificates\"></c8y-help>\n\n<c8y-ui-empty-state\n  [icon]=\"'certificate'\"\n  [title]=\"'No trusted certificates to display.' | translate\"\n  [subtitle]=\"'Add your first certificate by clicking below.' | translate\"\n  *ngIf=\"(trustedCertificates | async)?.data.length === 0\"\n>\n  <button\n    class=\"btn btn-primary\"\n    title=\"{{ 'Add trusted certificate' | translate }}\"\n    type=\"button\"\n    (click)=\"addTrustedCertificate()\"\n  >\n    {{ 'Add trusted certificate' | translate }}\n  </button>\n</c8y-ui-empty-state>\n\n<c8y-list-group class=\"m-b-24\">\n  <div\n    class=\"page-sticky-header hidden-xs c8y-list__item c8y-list__item--empty-actions\"\n    *ngIf=\"(trustedCertificates | async)?.data.length > 0\"\n  >\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i\n          class=\"invisible\"\n          c8yIcon=\"certificate\"\n        ></i>\n      </div>\n      <div class=\"c8y-list__item__body\">\n        <div class=\"content-flex-60\">\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Certificate' | translate }} \"\n            >\n              {{ 'Certificate' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Status' | translate }}\"\n            >\n              {{ 'Status' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Algorithm' | translate }}\"\n            >\n              {{ 'Algorithm' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\"{{ 'Expiration date' | translate }}\"\n            >\n              {{ 'Expiration date' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Auto registration' | translate }}\"\n            >\n              {{ 'Auto registration' | translate }}\n            </span>\n          </div>\n          <div class=\"col-2\">\n            <span\n              class=\"text-truncate\"\n              title=\" {{ 'Proof of possession' | translate }}\"\n            >\n              {{ 'Proof of possession' | translate }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"c8y-list__item__actions\"></div>\n    </div>\n  </div>\n\n  <c8y-li\n    *c8yFor=\"\n      let trustedCertificate of trustedCertificates | async;\n      let i = index;\n      pipe: sortByExpirationDateAsc;\n      loadMore: 'none'\n    \"\n    #listItem\n  >\n    <c8y-li-icon>\n      <i c8yIcon=\"certificate\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-60\">\n      <div class=\"col-2\">\n        <button\n          class=\"btn-clean text-truncate\"\n          title=\"{{ trustedCertificate.name }}\"\n          type=\"button\"\n          (click)=\"listItem.toggleCollapsed()\"\n        >\n          {{ trustedCertificate.name }}\n        </button>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"visible-xs p-8\"></div>\n        <button\n          class=\"btn c8y-btn-checkbox--inline\"\n          name=\"certificateStatus\"\n          type=\"button\"\n          [(ngModel)]=\"trustedCertificate.status\"\n          btnCheckbox\n          btnCheckboxTrue=\"ENABLED\"\n          btnCheckboxFalse=\"DISABLED\"\n          (ngModelChange)=\"updateCertificate(trustedCertificate, { status: $event })\"\n        >\n          <small\n            title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n          >\n            {{ 'Disabled`trusted certificate status`' | translate }}\n          </small>\n          <small\n            title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n          >\n            {{ 'Enabled`trusted certificate status`' | translate }}\n          </small>\n        </button>\n        <div class=\"visible-xs p-8\"></div>\n      </div>\n      <div class=\"col-2\">\n        <div\n          class=\"text-truncate\"\n          title=\"{{ 'Algorithm' | translate }}: {{ trustedCertificate.algorithmName }}\"\n        >\n          <span\n            class=\"text-label-small m-t-8 m-r-8 visible-xs-inline\"\n            translate\n          >\n            Algorithm\n          </span>\n          {{ trustedCertificate.algorithmName }}\n        </div>\n      </div>\n\n      <div class=\"col-2\">\n        <div\n          class=\"text-truncate\"\n          title=\"{{ 'Expiration date' | translate }}: {{ trustedCertificate.notAfter | c8yDate }}\"\n        >\n          <span\n            class=\"text-label-small m-t-8 m-r-8 visible-xs-inline\"\n            translate\n          >\n            Expiration date\n          </span>\n          <small [ngClass]=\"highlightDependingOnExpirationStatus(trustedCertificate)\">\n            <i\n              class=\"m-r-4\"\n              c8yIcon=\"calendar\"\n              *ngIf=\"!highlightDependingOnExpirationStatus(trustedCertificate)\"\n            ></i>\n            <i\n              class=\"m-r-4\"\n              c8yIcon=\"warning\"\n              *ngIf=\"highlightDependingOnExpirationStatus(trustedCertificate)\"\n            ></i>\n            <span>{{ trustedCertificate.notAfter | c8yDate }}</span>\n          </small>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"text-truncate\">\n          <span class=\"text-label-small m-t-8 m-r-4 visible-xs-inline\">\n            {{ 'Auto registration' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Auto registration' | translate }}:  {{\n              'Enabled`auto registration`' | translate\n            }}\"\n            *ngIf=\"trustedCertificate.autoRegistrationEnabled\"\n          >\n            {{ 'Enabled`auto registration`' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Auto registration' | translate }}:  {{\n              'Disabled`auto registration`' | translate\n            }}\"\n            *ngIf=\"!trustedCertificate.autoRegistrationEnabled\"\n          >\n            {{ 'Disabled`auto registration`' | translate }}\n          </span>\n        </div>\n      </div>\n      <div class=\"col-2 d-flex\">\n        <div class=\"text-truncate\">\n          <span class=\"text-label-small m-t-8 m-r-4 visible-xs-inline\">\n            {{ 'Proof of possession' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Proof of possession' | translate }}:  {{\n              'Complete`proof of possession`' | translate\n            }}\"\n            *ngIf=\"trustedCertificate.proofOfPossessionValid\"\n          >\n            <div class=\"icon-flex\">\n              <i\n                class=\"text-success\"\n                c8yIcon=\"success\"\n              ></i>\n              {{ 'Complete`proof of possession`' | translate }}\n            </div>\n          </span>\n          <span\n            title=\"{{ 'Proof of possession' | translate }}:  {{\n              'Incomplete`proof of possession`' | translate\n            }}\"\n            *ngIf=\"!trustedCertificate.proofOfPossessionValid\"\n          >\n            <div class=\"icon-flex\">\n              <i\n                class=\"text-warning\"\n                c8yIcon=\"warning\"\n              ></i>\n              {{ 'Incomplete`proof of possession`' | translate }}\n            </div>\n          </span>\n        </div>\n        <button\n          class=\"m-l-auto btn-dot btn-dot--danger btn showOnHover m-r-8\"\n          [attr.aria-label]=\"'Delete' | translate\"\n          tooltip=\"{{ 'Delete' | translate }}\"\n          placement=\"right\"\n          type=\"button\"\n          data-cy=\"c8y-trusted-certificate--delete\"\n          [delay]=\"500\"\n          (click)=\"deleteTrustedCertificate(trustedCertificate)\"\n        >\n          <i c8yIcon=\"delete\"></i>\n        </button>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <div class=\"p-t-16 p-b-16\">\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <c8y-form-group>\n              <label class=\"control-label\">\n                {{ 'Certificate name' | translate }}\n              </label>\n              <div class=\"input-group input-group-editable\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  data-cy=\"c8y-trusted-certificates--edit-certificate-name\"\n                  required\n                  [(ngModel)]=\"trustedCertificate.name\"\n                />\n                <span></span>\n                <div class=\"input-group-btn\">\n                  <button\n                    class=\"btn btn-primary\"\n                    title=\"{{ 'Update certificate name' | translate }}\"\n                    type=\"button\"\n                    (click)=\"\n                      updateCertificate(trustedCertificate, { name: trustedCertificate.name })\n                    \"\n                    [disabled]=\"!trustedCertificate.name\"\n                  >\n                    {{ 'Save' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </div>\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-7\">\n            <c8y-form-group>\n              <label\n                class=\"control-label\"\n                for=\"certInPemFormat\"\n                translate\n              >\n                Certificate\n              </label>\n              <textarea\n                class=\"form-control no-resize\"\n                id=\"certInPemFormat\"\n                name=\"certInPemFormat\"\n                type=\"text\"\n                rows=\"7\"\n                readonly\n                [(ngModel)]=\"trustedCertificate.certInPemFormat\"\n              ></textarea>\n            </c8y-form-group>\n            <c8y-form-group>\n              <label\n                class=\"c8y-checkbox\"\n                title=\"{{ 'Auto registration' | translate }}\"\n              >\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n                  (ngModelChange)=\"\n                    updateCertificate(trustedCertificate, { autoRegistrationEnabled: $event })\n                  \"\n                />\n                <span></span>\n                <span>{{ 'Auto registration' | translate }}</span>\n              </label>\n            </c8y-form-group>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <div\n              class=\"legend form-block\"\n              translate\n            >\n              Additional properties\n            </div>\n            <ul class=\"list-unstyled\">\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Algorithm' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.algorithmName }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Version' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.version }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Valid from' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.notBefore | c8yDate }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Issuer' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.issuer }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Expiration date' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.notAfter | c8yDate }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Serial number' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.serialNumber }}\n                </span>\n              </li>\n              <li class=\"p-t-4 p-b-4 d-flex separator-bottom flex-wrap\">\n                <label class=\"small m-b-0 m-r-8 a-s-start flex-grow\">\n                  {{ 'Subject`of a certificate`' | translate }}\n                </label>\n                <span class=\"m-l-auto text-break-word\">\n                  {{ trustedCertificate.subject }}\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"col-md-1\"></div>\n          <div class=\"col-md-7\">\n            <div class=\"legend form-block\">\n              {{ 'Proof of possession' | translate }}\n              <button\n                class=\"btn-help btn-help--sm\"\n                [attr.aria-label]=\"'Help' | translate\"\n                popover=\"{{ PROOF_OF_POSSESSION_POPOVER | translate }}\"\n                placement=\"right\"\n                triggers=\"focus\"\n                container=\"body\"\n                type=\"button\"\n                type=\"button\"\n              ></button>\n            </div>\n            <div *ngIf=\"trustedCertificate.proofOfPossessionValid\">\n              <span\n                class=\"icon-flex\"\n                title=\"{{ 'Proof of possession' | translate }}:  {{\n                  'Complete`proof of possession`' | translate\n                }}\"\n              >\n                <i\n                  class=\"text-success\"\n                  c8yIcon=\"success\"\n                ></i>\n                {{ 'Complete`proof of possession`' | translate }}\n              </span>\n            </div>\n            <div *ngIf=\"!trustedCertificate.proofOfPossessionValid\">\n              <div class=\"row m-b-16\">\n                <div class=\"col-md-6\">\n                  <span\n                    class=\"icon-flex\"\n                    title=\"{{ 'Proof of possession' | translate }}:  {{\n                      'Incomplete`proof of possession`' | translate\n                    }}\"\n                  >\n                    <i\n                      class=\"text-warning\"\n                      c8yIcon=\"warning\"\n                    ></i>\n                    {{ 'Incomplete`proof of possession`' | translate }}\n                  </span>\n                </div>\n                <div class=\"col-md-6 col-lg-6 text-right-md\">\n                  <span class=\"text-label-small m-r-4\">\n                    {{ 'Verification code expires/expired on' | translate }}\n                  </span>\n                  {{\n                    (trustedCertificate.proofOfPossessionVerificationCodeUsableUntil | c8yDate) ||\n                      '---'\n                  }}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-lg-6\">\n                  <c8y-form-group>\n                    <label\n                      class=\"control-label\"\n                      for=\"unsignedVerificationCode\"\n                      translate\n                    >\n                      Verification code\n                    </label>\n                    <textarea\n                      class=\"form-control no-resize\"\n                      id=\"unsignedVerificationCode\"\n                      name=\"unsignedVerificationCode\"\n                      type=\"text\"\n                      rows=\"5\"\n                      readonly\n                      [(ngModel)]=\"trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                    ></textarea>\n                  </c8y-form-group>\n                  <div class=\"d-flex\">\n                    <button\n                      class=\"btn btn-primary btn-sm\"\n                      title=\"{{ 'Regenerate verification code' | translate }}\"\n                      type=\"button\"\n                      (click)=\"regenerateUnsignedVerificationCode(trustedCertificate)\"\n                    >\n                      {{ 'Regenerate`verification code`' | translate }}\n                    </button>\n\n                    <button\n                      class=\"btn btn-sm btn-default m-l-auto m-r-0\"\n                      [attr.aria-label]=\"'Copy to clipboard' | translate\"\n                      tooltip=\"{{ 'Copy to clipboard' | translate }}\"\n                      data-cy=\"c8y-trusted-certificates--copy-to-clipboard\"\n                      placement=\"right\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      [disabled]=\"!trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                      (click)=\"copyUnsignedVerificationCodeToClipboard(trustedCertificate)\"\n                    >\n                      <i c8yIcon=\"clipboard\"></i>\n                    </button>\n                    <button\n                      class=\"btn btn-default btn-sm\"\n                      [attr.aria-label]=\"'Download as file' | translate\"\n                      tooltip=\"{{ 'Download as file' | translate }}\"\n                      data-cy=\"c8y-trusted-certificates--download-as-file\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      [disabled]=\"!trustedCertificate.proofOfPossessionUnsignedVerificationCode\"\n                      (click)=\"downloadUnsignedVerificationCode(trustedCertificate)\"\n                      c8yProductExperience\n                      [actionName]=\"PRODUCT_EXPERIENCE.EVENT\"\n                      [actionData]=\"{\n                        component: PRODUCT_EXPERIENCE.VERIFICATION_CODE.COMPONENTS.DOWNLOAD_CODE,\n                        action: PRODUCT_EXPERIENCE.VERIFICATION_CODE.ACTIONS.DOWNLOAD\n                      }\"\n                    >\n                      <i c8yIcon=\"download\"></i>\n                    </button>\n                  </div>\n                </div>\n\n                <div class=\"col-md-6 col-lg-6\">\n                  <c8y-form-group>\n                    <label\n                      class=\"control-label\"\n                      for=\"signedVerificationCode\"\n                    >\n                      {{ 'Signed verification code' | translate }}\n                      <button\n                        class=\"btn-help btn-help--sm\"\n                        [attr.aria-label]=\"'Help' | translate\"\n                        popover=\"{{ SIGNED_VERIFICATION_CODE_POPOVER | translate }}\"\n                        placement=\"top\"\n                        container=\"body\"\n                        type=\"button\"\n                        [outsideClick]=\"true\"\n                      ></button>\n                    </label>\n                    <textarea\n                      class=\"form-control no-resize\"\n                      id=\"signedVerificationCode\"\n                      name=\"signedVerificationCode\"\n                      type=\"text\"\n                      rows=\"5\"\n                      [(ngModel)]=\"trustedCertificate.signedVerificationCode\"\n                    ></textarea>\n                  </c8y-form-group>\n                  <div class=\"d-flex\">\n                    <button\n                      class=\"btn btn-primary btn-sm\"\n                      title=\"{{ 'Verify signed verification code' | translate }}\"\n                      type=\"button\"\n                      (click)=\"verifySignedVerificationCode(trustedCertificate)\"\n                      [disabled]=\"!trustedCertificate.signedVerificationCode\"\n                    >\n                      {{ 'Verify`signed verification code`' | translate }}\n                    </button>\n                    <button\n                      class=\"btn btn-sm btn-default m-l-auto\"\n                      [attr.aria-label]=\"'Upload file' | translate\"\n                      tooltip=\"{{ 'Upload file' | translate }}\"\n                      type=\"button\"\n                      [delay]=\"500\"\n                      (click)=\"fileInput.click()\"\n                    >\n                      <i c8yIcon=\"upload\"></i>\n                    </button>\n                    <input\n                      class=\"hidden\"\n                      type=\"file\"\n                      #fileInput\n                      (change)=\"onFileInput($event, trustedCertificate)\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalService }, { type: i2$1.AlertService }, { type: i2.TrustedCertificateService }, { type: i2$1.ModalService }, { type: i4$1.TranslateService }, { type: i2$1.ClipboardService }, { type: i2$1.GainsightService }]; } });

class TrustedCertificatesNavigationFactory {
    constructor() {
        this.navs = [];
    }
    async get() {
        if (this.navs.length === 0) {
            this.navs.push(new NavigatorNode({
                label: gettext('Trusted certificates'),
                icon: 'certificate',
                path: '/trusted-certificates',
                parent: gettext('Management'),
                priority: 100
            }));
        }
        return this.navs;
    }
}
TrustedCertificatesNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesNavigationFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
TrustedCertificatesNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesNavigationFactory, decorators: [{
            type: Injectable
        }] });

/* tslint:disable:max-line-length */
const MESSAGES = {
    '^Cannot find certificate with fingerprint (.+?).$': {
        gettext: gettext('Could not find {{ fingerprint }} certificate.'),
        placeholders: {
            fingerprint: '$1'
        }
    },
    '^Wrong proof of possession verification code used for tenant (.+?). Certificate (.+?), usage not granted.$': {
        gettext: gettext('Could not confirm the ownership of {{ fingerprint }} certificate: invalid proof of possession verification code provided, sign verification code with private key.'),
        placeholders: {
            tenant: '$1',
            fingerprint: '$2'
        }
    },
    '^Proof of possession verification code used for tenant (.+?) expired. Certificate (.+?), usage not granted.': {
        gettext: gettext('Could not confirm the ownership of {{ fingerprint }} certificate: proof of possession verification code has expired, generate a new code and try again.'),
        placeholders: {
            tenant: '$1',
            fingerprint: '$2'
        }
    }
};

const trustedCertificatesRoutes = [
    {
        path: 'trusted-certificates',
        component: TrustedCertificatesComponent
    }
];
class TrustedCertificatesModule {
}
TrustedCertificatesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TrustedCertificatesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesModule, declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent], imports: [CoreModule,
        CommonModule, i1$1.RouterModule, i2$2.BsDropdownModule, TooltipModule,
        ReactiveFormsModule,
        ButtonsModule,
        PopoverModule] });
TrustedCertificatesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesModule, providers: [hookNavigator(TrustedCertificatesNavigationFactory), hookPatternMessages(MESSAGES)], imports: [CoreModule,
        CommonModule,
        RouterModule.forChild(trustedCertificatesRoutes),
        BsDropdownModule.forRoot(),
        TooltipModule,
        ReactiveFormsModule,
        ButtonsModule,
        PopoverModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TrustedCertificatesModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                    exports: [],
                    imports: [
                        CoreModule,
                        CommonModule,
                        RouterModule.forChild(trustedCertificatesRoutes),
                        BsDropdownModule.forRoot(),
                        TooltipModule,
                        ReactiveFormsModule,
                        ButtonsModule,
                        PopoverModule
                    ],
                    entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                    providers: [hookNavigator(TrustedCertificatesNavigationFactory), hookPatternMessages(MESSAGES)]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { AddTrustedCertificateComponent, TrustedCertificatesComponent, TrustedCertificatesModule, TrustedCertificatesNavigationFactory };
//# sourceMappingURL=c8y-ngx-components-trusted-certificates.mjs.map
