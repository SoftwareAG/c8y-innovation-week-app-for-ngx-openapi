{"version":3,"file":"c8y-ngx-components-widgets-implementations-map.mjs","sources":["../../widgets/implementations/map/map-event-info.component.ts","../../widgets/implementations/map/map-event-info.component.html","../../widgets/implementations/map/map-widget-config.component.ts","../../widgets/implementations/map/map-widget-config.component.html","../../widgets/implementations/map/map-widget.component.ts","../../widgets/implementations/map/map-widget.component.html","../../widgets/implementations/map/map-widget.module.ts","../../widgets/implementations/map/c8y-ngx-components-widgets-implementations-map.ts"],"sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\nimport { EventService, IEvent, IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-map-event-info',\n  templateUrl: './map-event-info.component.html'\n})\nexport class MapEventInfoComponent implements OnChanges {\n  @Input()\n  asset: IManagedObject;\n\n  loading = true;\n\n  event: IEvent;\n\n  constructor(private eventService: EventService) {}\n\n  async ngOnChanges() {\n    this.loading = true;\n    const { data } = await this.eventService.list({\n      dateFrom: '1970-01-01',\n      dateTo: new Date(Date.now()).toISOString(),\n      fragmentType: 'c8y_Position',\n      pageSize: 1,\n      source: this.asset.id\n    });\n    this.event = data[0];\n    this.loading = false;\n  }\n}\n","<div class=\"text-muted text-10 p-t-4 p-b-4\">\n  <span translate>Last position update:</span>\n  <br />\n  <c8y-loading *ngIf=\"loading\"></c8y-loading>\n  <ng-container *ngIf=\"!loading\">\n    <i *ngIf=\"!event\" translate>No information found</i>\n    <ng-container *ngIf=\"event\">\n      <i>{{ event.time | c8yDate }}</i>\n      <ng-content></ng-content>\n    </ng-container>\n  </ng-container>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IconSelectorService } from '@c8y/ngx-components/icon-selector';\nimport {\n  ClusterMapConfig,\n  defaultMapConfig,\n  MapComponent,\n  MapDefaultConfig,\n  MapService,\n  MAP_DEFAULT_CONFIG,\n  PositionManagedObject\n} from '@c8y/ngx-components/map';\nimport { TranslateService } from '@ngx-translate/core';\nimport type L from 'leaflet';\nimport { MapWidgetConfig, RefreshOptions } from './map-widget.model';\n\n@Component({\n  selector: 'c8y-map-widget-config',\n  templateUrl: './map-widget-config.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class MapWidgetConfigComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: MapWidgetConfig = {\n    mapConfig: undefined\n  };\n\n  formConfig: ClusterMapConfig;\n\n  canAutoCenter = true;\n  isPositionedDevice = false;\n  assets: PositionManagedObject[];\n  refreshOptions: RefreshOptions = 'none';\n\n  private leaflet: typeof L;\n  private centerIcon: L.Marker;\n\n  @ViewChild(MapComponent)\n  private previewMap: MapComponent;\n\n  constructor(\n    private mapService: MapService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    @Optional() @Inject(MAP_DEFAULT_CONFIG) private defaultConfig: MapDefaultConfig,\n    private iconSelector: IconSelectorService\n  ) {\n    if (!this.defaultConfig) {\n      this.defaultConfig = defaultMapConfig;\n    }\n    this.formConfig = {\n      zoomLevel: this.defaultConfig.zoomLevel,\n      center: this.defaultConfig.center\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.config.mapConfig) {\n      this.config.mapConfig = this.formConfig;\n    }\n    this.formConfig = {\n      ...this.formConfig,\n      ...this.config.mapConfig,\n      disablePan: false\n    };\n    await this.updateAsset();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.config.currentValue !== changes.config.previousValue &&\n      !changes.config.firstChange\n    ) {\n      await this.updateAsset();\n    }\n  }\n\n  async ngAfterViewInit() {\n    this.leaflet = await this.mapService.getLeaflet();\n    this.addCenterIcon(this.formConfig.center[0], this.formConfig.center[1]);\n  }\n\n  onBeforeSave() {\n    this.config.mapConfig = this.formConfig;\n    return true;\n  }\n\n  zoomLevelChanged() {\n    this.config.mapConfig = {\n      ...this.config.mapConfig,\n      zoomLevel: this.formConfig.zoomLevel\n    };\n  }\n\n  changeCenter() {\n    this.config.mapConfig = { ...this.formConfig, center: this.formConfig.center };\n  }\n\n  onPreviewZoomStart() {\n    this.centerIcon.remove();\n  }\n\n  onPreviewZoomEnd(event: L.LeafletEvent) {\n    this.formConfig.zoomLevel = Math.floor(event.target.getZoom());\n  }\n\n  onPreviewMapMove(event: L.LeafletEvent) {\n    if (this.centerIcon) {\n      this.centerIcon.remove();\n    }\n    const { lat, lng } = event.target.getBounds().getCenter();\n    this.addCenterIcon(lat, lng);\n    this.formConfig.center = [lat, lng];\n  }\n\n  useOwnPosition() {\n    navigator.geolocation.getCurrentPosition(({ coords }) => {\n      this.formConfig.center = [coords.latitude, coords.longitude];\n      this.changeCenter();\n    });\n  }\n\n  centerToAsset() {\n    this.formConfig.center = [\n      this.config.device.c8y_Position.lat,\n      this.config.device.c8y_Position.lng\n    ];\n    this.changeCenter();\n  }\n\n  updateRefreshOptions() {\n    this.formConfig.realtime = this.refreshOptions === 'realtime';\n    this.formConfig.refreshInterval = this.refreshOptions === 'interval' ? 5000 : null;\n    if (!this.formConfig.realtime) {\n      this.formConfig.follow = false;\n    }\n  }\n\n  async openIconSelector() {\n    try {\n      const icon = await this.iconSelector.selectIcon({\n        currentSelection: this.formConfig.icon\n      });\n      this.formConfig.icon = icon;\n      this.config.mapConfig = { ...this.config.mapConfig, icon };\n    } catch {\n      // nothing to do\n    }\n  }\n\n  removeIcon() {\n    this.formConfig.icon = undefined;\n    this.config.mapConfig.icon = undefined;\n    this.previewMap.refreshMarkers();\n  }\n\n  private async updateAsset() {\n    this.canAutoCenter = this.mapService.hasPosition(this.config.device);\n    this.isPositionedDevice = this.mapService.isPositionedDevice(this.config.device);\n    this.refreshOptions = this.getRefreshOptions();\n    this.updateRefreshOptions();\n\n    const { data, paging } = await this.mapService.getAllPositionsMOs(this.config.device);\n    this.assets = data;\n    if (paging.totalPages > 1) {\n      this.alertService.danger(\n        gettext(\n          'It might be possible that assets are not shown in the preview, as the current selection has more than 500 assets and the preview only supports a maximum of 500 assets.'\n        )\n      );\n    }\n  }\n\n  private getRefreshOptions(): RefreshOptions {\n    let option: RefreshOptions = 'none';\n    if (this.formConfig.realtime) {\n      option = 'realtime';\n    } else if (this.formConfig.refreshInterval) {\n      option = 'interval';\n    }\n    const isNotAllowedOption =\n      (!this.isPositionedDevice && option === 'realtime') ||\n      (this.isPositionedDevice && option === 'interval');\n    option = isNotAllowedOption ? 'none' : option;\n    return option;\n  }\n\n  private addCenterIcon(lat: number, lng: number) {\n    const titleText = this.translateService.instant(gettext('Map center'));\n    const icon = this.leaflet.divIcon({\n      html: `<i style=\"pointer-events: none\" class=\"c8y-map-marker-icon text-muted dlt-c8y-icon-target icon-2x\" title=\"${titleText}\" />`\n    });\n    this.centerIcon = this.leaflet.marker([lat, lng], {\n      icon\n    });\n    this.previewMap.addMarkerToMap(this.centerIcon);\n  }\n}\n","<div class=\"row p-t-16\">\n  <div class=\"col-xs-2\">\n    <c8y-form-group class=\"m-b-0 text-center form-group-sm\">\n      <label translate>Marker icon</label>\n      <div\n        class=\"icon-32 text-muted text-center p-b-8\"\n        *ngIf=\"formConfig.icon\"\n      >\n        <i [c8yIcon]=\"formConfig.icon\"></i>\n      </div>\n      <div\n        class=\"icon-32 text-muted text-center\"\n        *ngIf=\"!formConfig.icon\"\n      >\n        <span class=\"d-block text-12 p-b-16 p-t-16\">\n          <em>{{ 'Auto' | translate }}</em>\n        </span>\n      </div>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Select icon to override default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"!formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Select' | translate }}\n      </button>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Change icon' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Change' | translate }}\n      </button>\n      <button\n        class=\"btn btn-danger btn-xs btn-block\"\n        title=\"{{ 'Remove icon and use default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"removeIcon()\"\n      >\n        {{ 'Remove' | translate }}\n      </button>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-xs-10\">\n    <div class=\"row tight-grid separator-bottom\">\n      <div class=\"col-xs-4\">\n        <div class=\"form-group form-group-sm\">\n          <label translate>Zoom level</label>\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"zoomLevel\"\n            #range\n            [(ngModel)]=\"formConfig.zoomLevel\"\n            (change)=\"zoomLevelChanged()\"\n          >\n            <input\n              type=\"range\"\n              min=\"2\"\n              max=\"18\"\n              step=\"1\"\n            />\n          </c8y-range>\n        </div>\n      </div>\n      <div class=\"col-xs-8\">\n        <c8y-form-group class=\"form-group-sm m-b-8\">\n          <label translate>Center bound</label>\n          <div class=\"input-group input-group-sm\">\n            <input\n              class=\"form-control\"\n              placeholder=\"lat\"\n              name=\"centerLat\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[0]\"\n              (change)=\"changeCenter()\"\n            />\n            <input\n              class=\"form-control\"\n              placeholder=\"lng\"\n              name=\"centerLng\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[1]\"\n              (change)=\"changeCenter()\"\n            />\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use your location' | translate\"\n                [tooltip]=\"'Use your location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"useOwnPosition()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location-arrow\"\n                ></i>\n              </button>\n            </div>\n            <div\n              class=\"input-group-btn\"\n              *ngIf=\"canAutoCenter\"\n            >\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use selected asset location' | translate\"\n                [tooltip]=\"'Use selected asset location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"centerToAsset()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"help-block\">\n            {{ 'Drag the map to the desired position' | translate }}\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"row tight-grid p-t-8 d-flex a-i-center\">\n      <div class=\"col-xs-4\">\n        <c8y-form-group class=\"m-b-0 form-group-sm\">\n          <div class=\"c8y-select-wrapper\">\n            <select\n              class=\"form-control\"\n              title=\"{{ 'Refresh options' | translate }}\"\n              id=\"selectExample\"\n              name=\"refreshSelection\"\n              [(ngModel)]=\"refreshOptions\"\n              (change)=\"updateRefreshOptions()\"\n            >\n              <option\n                [title]=\"'Only refreshing on interaction' | translate\"\n                value=\"none\"\n                translate\n              >\n                No automatic refresh\n              </option>\n              <option\n                [title]=\"'Refreshing after a give interval and on interaction' | translate\"\n                value=\"interval\"\n                *ngIf=\"!isPositionedDevice\"\n                translate\n              >\n                Use refresh interval\n              </option>\n              <option\n                [title]=\"'Live updating on each position change' | translate\"\n                value=\"realtime\"\n                *ngIf=\"isPositionedDevice\"\n                translate\n              >\n                Realtime\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-8\">\n        <div class=\"form-group form-group-sm m-b-0\">\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"refreshInterval\"\n            #intervalRange\n            [(ngModel)]=\"formConfig.refreshInterval\"\n            *ngIf=\"refreshOptions === 'interval'\"\n          >\n            <ng-template #c8yRangeValue>\n              <div>\n                <span\n                  translate\n                  [translateParams]=\"{ intervalInSeconds: intervalRange.value * 0.001 }\"\n                  ngNonBindable\n                >\n                  {{ intervalInSeconds }} s\n                </span>\n              </div>\n            </ng-template>\n            <input\n              type=\"range\"\n              min=\"5000\"\n              max=\"100000\"\n              step=\"1000\"\n            />\n          </c8y-range>\n        </div>\n        <label\n          class=\"c8y-switch c8y-switch--inline\"\n          *ngIf=\"refreshOptions === 'realtime'\"\n        >\n          <input\n            name=\"follow\"\n            type=\"checkbox\"\n            [(ngModel)]=\"formConfig.follow\"\n          />\n          <span></span>\n          <span\n            class=\"text-12\"\n            translate\n          >\n            Follow selected\n          </span>\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"p-t-16 p-b-16\"\n  style=\"width: 100%; height: 240px\"\n>\n  <c8y-map\n    [assets]=\"assets\"\n    (onMove)=\"onPreviewMapMove($event)\"\n    (onZoomStart)=\"onPreviewZoomStart()\"\n    (onZoomEnd)=\"onPreviewZoomEnd($event)\"\n    [config]=\"config.mapConfig\"\n  ></c8y-map>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { ClusterMapComponent, ClusterMapConfig } from '@c8y/ngx-components/map';\nimport { DashboardChildComponent } from '@c8y/ngx-components';\nimport { MapWidgetConfig } from './map-widget.model';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'c8y-map-widget',\n  templateUrl: './map-widget.component.html'\n})\nexport class MapWidgetComponent implements OnInit, OnDestroy {\n  mapConfig: ClusterMapConfig = { center: [0, 0] };\n  rootNode: IManagedObject;\n  config: MapWidgetConfig;\n\n  @ViewChild(ClusterMapComponent)\n  clusterMap: ClusterMapComponent;\n\n  private savedNode: IManagedObject;\n  private destroy$ = new Subject();\n\n  constructor(dashboardChild: DashboardChildComponent) {\n    this.listenToWidgetResizeEvent(dashboardChild);\n  }\n\n  ngOnInit(): void {\n    if (this.config.device) {\n      this.rootNode = this.config.device;\n    }\n    this.mapConfig = { ...this.config.mapConfig };\n    this.savedNode = this.rootNode;\n  }\n\n  startFollow(context) {\n    if (context.id !== this.rootNode?.id) {\n      this.rootNode = context;\n    }\n    this.mapConfig = {\n      ...this.config.mapConfig,\n      follow: true,\n      realtime: true\n    };\n  }\n\n  stopFollow() {\n    this.mapConfig = {\n      ...this.config.mapConfig,\n      follow: false\n    };\n    this.rootNode = this.savedNode;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private listenToWidgetResizeEvent(dashboardChild: DashboardChildComponent) {\n    dashboardChild.changeEnd\n      .pipe(\n        filter(child => child.lastChange === 'resize'),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.clusterMap.reset();\n      });\n  }\n}\n","<c8y-map-status\n  [clusterMap]=\"mapWidget\"\n  [(config)]=\"mapConfig\"\n  (onUnfollow)=\"stopFollow()\"\n></c8y-map-status>\n<c8y-cluster-map #mapWidget [rootNode]=\"rootNode\" [config]=\"mapConfig\">\n  <div *c8yMapPopup=\"let context\" class=\"map-marker\">\n    <a class=\"text-truncate deviceLink text-12\" routerLink=\"/device/{{ context.id }}\">\n      <strong>{{ context.name }}</strong>\n    </a>\n    <c8y-map-event-info [asset]=\"context\">\n      <button\n        type=\"button\"\n        class=\"btn btn-default btn-xs btn-block m-t-8\"\n        (click)=\"startFollow(context)\"\n        [title]=\"'Activate realtime on this asset and follow it if it moves' | translate\"\n        *ngIf=\"!mapConfig.follow\"\n        translate\n      >\n        Follow\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-default btn-xs btn-block m-t-8\"\n        (click)=\"stopFollow()\"\n        [title]=\"'Stop following this asset.' | translate\"\n        *ngIf=\"mapConfig.follow\"\n        translate\n      >\n        Unfollow\n      </button>\n    </c8y-map-event-info>\n  </div>\n</c8y-cluster-map>\n","import { CommonModule as NgCommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule as NgFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule, FormsModule } from '@c8y/ngx-components';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { MapModule } from '@c8y/ngx-components/map';\nimport { MapEventInfoComponent } from './map-event-info.component';\nimport { MapWidgetConfigComponent } from './map-widget-config.component';\nimport { MapWidgetComponent } from './map-widget.component';\n\n@NgModule({\n  declarations: [MapWidgetComponent, MapWidgetConfigComponent, MapEventInfoComponent],\n  imports: [\n    NgCommonModule,\n    NgFormsModule,\n    CommonModule,\n    FormsModule,\n    MapModule,\n    RouterModule,\n    TooltipModule.forRoot()\n  ],\n  exports: [MapWidgetComponent, MapWidgetConfigComponent, MapEventInfoComponent]\n})\nexport class MapWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3","i1","i4","i5.MapEventInfoComponent","NgCommonModule","NgFormsModule","CommonModule","FormsModule"],"mappings":"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"}