import { InjectionToken } from '@angular/core';
import { IManagedObject } from '@c8y/client';
import type * as L from 'leaflet';
export declare function getStatus(device: PositionManagedObject): "text-primary" | "status critical" | "status major" | "status warning" | "status minor";
export declare function getC8yMarker(marker: L.Marker, asset: PositionManagedObject): C8yMarker;
export declare const MAP_TILE_LAYER: InjectionToken<MapTileLayer[]>;
export type C8yMarker = L.Marker & {
    asset: PositionManagedObject;
};
export declare enum ClusterSize {
    NONE = 0,
    FOUR = 1,
    SIXTEEN = 2
}
export interface MapTileLayer {
    layerUrl: string;
    options: L.TileLayerOptions;
    label: string;
    priority?: number;
}
export interface PositionManagedObject extends IManagedObject {
    c8y_Position: {
        lat: number;
        lng: number;
    };
    c8y_ActiveAlarmsStatus?: {
        minor: number;
        major: number;
        warning: number;
        critical: number;
    };
    icon?: {
        name: string;
    };
}
export interface ClusterMapConfig extends MapConfig {
    center: [number, number];
    refreshInterval?: number;
}
export interface MapConfig {
    center?: [number, number];
    follow?: boolean;
    realtime?: boolean;
    zoomLevel?: number;
    icon?: string;
    color?: string;
    disableZoom?: boolean;
    disablePan?: boolean;
}
export declare const MAP_DEFAULT_CONFIG: InjectionToken<MapDefaultConfig>;
export type MapDefaultConfig = Pick<MapConfig, 'center' | 'zoomLevel'>;
export declare const defaultLayer: MapTileLayer;
export declare const defaultMapConfig: MapDefaultConfig;
