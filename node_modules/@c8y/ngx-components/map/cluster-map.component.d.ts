import { EventEmitter, IterableDiffers, SimpleChange, SimpleChanges } from '@angular/core';
import { IManagedObject } from '@c8y/client';
import { ColorService, ManagedObjectRealtimeService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import type * as L from 'leaflet';
import { BehaviorSubject } from 'rxjs';
import { MapComponent } from './map.component';
import { ClusterMapConfig, MapDefaultConfig, MapTileLayer, PositionManagedObject } from './map.model';
import { MapService } from './map.service';
import * as i0 from "@angular/core";
export declare class ClusterMapComponent extends MapComponent {
    protected moRealtimeService: ManagedObjectRealtimeService;
    protected mapService: MapService;
    protected layers: Array<MapTileLayer | MapTileLayer[]>;
    protected defaultConfig: MapDefaultConfig;
    protected translateService: TranslateService;
    private iterable;
    private colorService;
    isLoading$: BehaviorSubject<boolean>;
    msUntilRefresh$: BehaviorSubject<number>;
    config: ClusterMapConfig;
    rootNode: IManagedObject;
    assets: PositionManagedObject;
    showClusterColor: boolean;
    mapChange: EventEmitter<L.LeafletEvent>;
    private reloadTrigger$;
    private clusters;
    private readonly MIN_INTERVAL;
    private readonly EVENT_THROTTLE_TIME;
    constructor(moRealtimeService: ManagedObjectRealtimeService, mapService: MapService, layers: Array<MapTileLayer | MapTileLayer[]>, defaultConfig: MapDefaultConfig, translateService: TranslateService, iterable: IterableDiffers, colorService: ColorService);
    ngOnChanges(changes: SimpleChanges): Promise<void>;
    changeConfig(change: SimpleChange): void;
    ngAfterViewInit(): Promise<void>;
    reset(): Promise<void>;
    reload(): void;
    cancelReload(): void;
    listenToClusterChanges(): void;
    refreshMarkers(): void;
    private changeRootNode;
    private getClusterRects;
    private getRect;
    private clearClusters;
    private updateCluster;
    private createOrUpdateCluster;
    static ɵfac: i0.ɵɵFactoryDeclaration<ClusterMapComponent, [null, null, { optional: true; }, { optional: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ClusterMapComponent, "c8y-cluster-map", never, { "config": "config"; "rootNode": "rootNode"; "assets": "asset"; "showClusterColor": "showClusterColor"; }, { "mapChange": "mapChange"; }, never, ["*"], false, never>;
}
