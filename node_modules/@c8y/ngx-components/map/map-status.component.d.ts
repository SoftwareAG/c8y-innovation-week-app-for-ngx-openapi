import { EventEmitter, SimpleChanges } from '@angular/core';
import { ClusterMapComponent } from './cluster-map.component';
import { ClusterMapConfig } from './map.model';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class MapStatusComponent {
    config: ClusterMapConfig;
    configChange: EventEmitter<ClusterMapConfig>;
    onUnfollow: EventEmitter<ClusterMapConfig>;
    clusterMap: ClusterMapComponent;
    showCenter: boolean;
    secondsUntilRefresh$: Observable<string>;
    initConfig: ClusterMapConfig;
    private destroy$;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    center(): void;
    reload(): void;
    cancelReload(): void;
    toggleRealtime(): void;
    unfollow(): void;
    follow(): void;
    ngOnDestroy(): void;
    private checkIfMapIsAlreadyCentered;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapStatusComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MapStatusComponent, "c8y-map-status", never, { "config": "config"; "clusterMap": "clusterMap"; }, { "configChange": "configChange"; "onUnfollow": "onUnfollow"; }, never, never, false, never>;
}
