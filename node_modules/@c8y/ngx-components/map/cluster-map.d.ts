import { IterableDiffers } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import type * as L from 'leaflet';
import { C8yMarker, PositionManagedObject } from './map.model';
export declare class ClusterMap {
    private iterable;
    private addAssetCallback;
    private translateService;
    markers: C8yMarker[];
    positions: PositionManagedObject[];
    set clusterMarker(item: L.Layer);
    get clusterMarker(): L.Layer;
    set rect(item: L.Rectangle);
    get rect(): L.Rectangle;
    private _clusterMarker;
    private _rect;
    private iterableDiffer;
    constructor(iterable: IterableDiffers, addAssetCallback: (asset: PositionManagedObject) => C8yMarker, translateService: TranslateService);
    render(map: L.Map): void;
    clear(map: L.Map): void;
    removeClusterToBigMarker(): void;
    addMarkerToMap(device: PositionManagedObject, map: L.Map): void;
    setClusterToBigMarker(map: L.Map, count: any, leaflet: typeof L): void;
    private updateChanges;
    private trackBy;
    private removeMarkerFromMap;
}
