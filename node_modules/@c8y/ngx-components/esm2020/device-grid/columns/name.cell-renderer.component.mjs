import { Component } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { ColumnUtilService } from './column-util.service';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "./column-util.service";
export class NameCellRendererComponent {
    constructor(context, columnUtilService) {
        this.context = context;
        this.columnUtilService = columnUtilService;
    }
}
NameCellRendererComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NameCellRendererComponent, deps: [{ token: i1.CellRendererContext }, { token: i2.ColumnUtilService }], target: i0.ɵɵFactoryTarget.Component });
NameCellRendererComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: NameCellRendererComponent, selector: "ng-component", ngImport: i0, template: `
    <a
      [href]="columnUtilService.getHref(context.item)"
      title="{{ columnUtilService.getProperName(context.item) }}"
      class="interact"
    >
      {{ columnUtilService.getProperName(context.item) }}
    </a>
  `, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NameCellRendererComponent, decorators: [{
            type: Component,
            args: [{
                    template: `
    <a
      [href]="columnUtilService.getHref(context.item)"
      title="{{ columnUtilService.getProperName(context.item) }}"
      class="interact"
    >
      {{ columnUtilService.getProperName(context.item) }}
    </a>
  `
                }]
        }], ctorParameters: function () { return [{ type: i1.CellRendererContext }, { type: i2.ColumnUtilService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldmljZS1ncmlkL2NvbHVtbnMvbmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0FBYTFELE1BQU0sT0FBTyx5QkFBeUI7SUFDcEMsWUFBbUIsT0FBNEIsRUFBUyxpQkFBb0M7UUFBekUsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7UUFBUyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0lBQUcsQ0FBQzs7c0hBRHJGLHlCQUF5QjswR0FBekIseUJBQXlCLG9EQVYxQjs7Ozs7Ozs7R0FRVDsyRkFFVSx5QkFBeUI7a0JBWHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBDb2x1bW5VdGlsU2VydmljZSB9IGZyb20gJy4vY29sdW1uLXV0aWwuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxhXG4gICAgICBbaHJlZl09XCJjb2x1bW5VdGlsU2VydmljZS5nZXRIcmVmKGNvbnRleHQuaXRlbSlcIlxuICAgICAgdGl0bGU9XCJ7eyBjb2x1bW5VdGlsU2VydmljZS5nZXRQcm9wZXJOYW1lKGNvbnRleHQuaXRlbSkgfX1cIlxuICAgICAgY2xhc3M9XCJpbnRlcmFjdFwiXG4gICAgPlxuICAgICAge3sgY29sdW1uVXRpbFNlcnZpY2UuZ2V0UHJvcGVyTmFtZShjb250ZXh0Lml0ZW0pIH19XG4gICAgPC9hPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dDogQ2VsbFJlbmRlcmVyQ29udGV4dCwgcHVibGljIGNvbHVtblV0aWxTZXJ2aWNlOiBDb2x1bW5VdGlsU2VydmljZSkge31cbn1cbiJdfQ==