import { Component } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "ngx-bootstrap/popover";
export class AlarmsHeaderCellRendererComponent {
    constructor(context) {
        this.context = context;
    }
}
AlarmsHeaderCellRendererComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AlarmsHeaderCellRendererComponent, deps: [{ token: i1.CellRendererContext }], target: i0.ɵɵFactoryTarget.Component });
AlarmsHeaderCellRendererComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AlarmsHeaderCellRendererComponent, selector: "ng-component", ngImport: i0, template: `
    <div class="d-flex">
      <span class="text-truncate" [title]="context.property.header | translate">
        {{ context.property.header | translate }}
      </span>
      <button
        class="btn-help btn-help--sm a-s-center"
        type="button"
        [attr.aria-label]="'Help' | translate"
        [popover]="'Only includes alarms for the parent device.' | translate"
        placement="bottom"
        triggers="focus"
        container="body"
        (click)="$event.stopPropagation()"
      >
        <i c8yIcon="question-circle-o"></i>
      </button>
    </div>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AlarmsHeaderCellRendererComponent, decorators: [{
            type: Component,
            args: [{
                    template: `
    <div class="d-flex">
      <span class="text-truncate" [title]="context.property.header | translate">
        {{ context.property.header | translate }}
      </span>
      <button
        class="btn-help btn-help--sm a-s-center"
        type="button"
        [attr.aria-label]="'Help' | translate"
        [popover]="'Only includes alarms for the parent device.' | translate"
        placement="bottom"
        triggers="focus"
        container="body"
        (click)="$event.stopPropagation()"
      >
        <i c8yIcon="question-circle-o"></i>
      </button>
    </div>
  `
                }]
        }], ctorParameters: function () { return [{ type: i1.CellRendererContext }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxhcm1zLmhlYWRlci1jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldmljZS1ncmlkL2NvbHVtbnMvYWxhcm1zLmhlYWRlci1jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBdUIxRCxNQUFNLE9BQU8saUNBQWlDO0lBQzVDLFlBQW1CLE9BQTRCO1FBQTVCLFlBQU8sR0FBUCxPQUFPLENBQXFCO0lBQUcsQ0FBQzs7OEhBRHhDLGlDQUFpQztrSEFBakMsaUNBQWlDLG9EQXBCbEM7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCVDsyRkFFVSxpQ0FBaUM7a0JBckI3QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JUO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXhcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC10cnVuY2F0ZVwiIFt0aXRsZV09XCJjb250ZXh0LnByb3BlcnR5LmhlYWRlciB8IHRyYW5zbGF0ZVwiPlxuICAgICAgICB7eyBjb250ZXh0LnByb3BlcnR5LmhlYWRlciB8IHRyYW5zbGF0ZSB9fVxuICAgICAgPC9zcGFuPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBjbGFzcz1cImJ0bi1oZWxwIGJ0bi1oZWxwLS1zbSBhLXMtY2VudGVyXCJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiJ0hlbHAnIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgW3BvcG92ZXJdPVwiJ09ubHkgaW5jbHVkZXMgYWxhcm1zIGZvciB0aGUgcGFyZW50IGRldmljZS4nIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgcGxhY2VtZW50PVwiYm90dG9tXCJcbiAgICAgICAgdHJpZ2dlcnM9XCJmb2N1c1wiXG4gICAgICAgIGNvbnRhaW5lcj1cImJvZHlcIlxuICAgICAgICAoY2xpY2spPVwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCJcbiAgICAgID5cbiAgICAgICAgPGkgYzh5SWNvbj1cInF1ZXN0aW9uLWNpcmNsZS1vXCI+PC9pPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgQWxhcm1zSGVhZGVyQ2VsbFJlbmRlcmVyQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHVibGljIGNvbnRleHQ6IENlbGxSZW5kZXJlckNvbnRleHQpIHt9XG59XG4iXX0=