import { Injectable, Optional } from '@angular/core';
import { OperationService, SmartRulesService } from '@c8y/client';
import { Ng1SmartRulesService } from '@c8y/ngx-components/upgrade';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "@c8y/ngx-components/upgrade";
export class OperationsListService {
    constructor(operationService, smartRulesService, ng1SmartRulesService) {
        this.operationService = operationService;
        this.smartRulesService = smartRulesService;
        this.ng1SmartRulesService = ng1SmartRulesService;
    }
    getOperations(customFilter = {}) {
        const filter = {
            withTotalPages: true,
            withDeleted: true,
            pageSize: 50,
            dateFrom: new Date(0).toISOString(),
            revert: true,
            ...customFilter
        };
        return this.operationService.list(filter);
    }
    isSmartRulesMicroserviceAvailable() {
        return this.smartRulesService.isMicroserviceAvailable();
    }
    getSmartRulesCreatePermissions() {
        if (this.ng1SmartRulesService && this.ng1SmartRulesService.permissionsCfgs) {
            return this.ng1SmartRulesService.permissionsCfgs.create;
        }
    }
    async createSmartRule(operation) {
        if (this.ng1SmartRulesService) {
            return await this.ng1SmartRulesService.addNewForOutputOperationWithUI(operation);
        }
    }
}
OperationsListService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListService, deps: [{ token: i1.OperationService }, { token: i1.SmartRulesService }, { token: i2.Ng1SmartRulesService, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
OperationsListService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationsListService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.OperationService }, { type: i1.SmartRulesService }, { type: i2.Ng1SmartRulesService, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9ucy1saXN0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL29wZXJhdGlvbnMtbGlzdC9vcGVyYXRpb25zLWxpc3Quc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQWMsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDOUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7QUFHbkUsTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxZQUNVLGdCQUFrQyxFQUNsQyxpQkFBb0MsRUFDeEIsb0JBQTBDO1FBRnRELHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUN4Qix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO0lBQzdELENBQUM7SUFFSixhQUFhLENBQUMsWUFBWSxHQUFHLEVBQUU7UUFDN0IsTUFBTSxNQUFNLEdBQUc7WUFDYixjQUFjLEVBQUUsSUFBSTtZQUNwQixXQUFXLEVBQUUsSUFBSTtZQUNqQixRQUFRLEVBQUUsRUFBRTtZQUNaLFFBQVEsRUFBRSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUU7WUFDbkMsTUFBTSxFQUFFLElBQUk7WUFDWixHQUFHLFlBQVk7U0FDaEIsQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsaUNBQWlDO1FBQy9CLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLHVCQUF1QixFQUFFLENBQUM7SUFDMUQsQ0FBQztJQUVELDhCQUE4QjtRQUM1QixJQUFJLElBQUksQ0FBQyxvQkFBb0IsSUFBSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsZUFBZSxFQUFFO1lBQzFFLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLGVBQWUsQ0FBQyxTQUE4QjtRQUNsRCxJQUFJLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM3QixPQUFPLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLDhCQUE4QixDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2xGO0lBQ0gsQ0FBQzs7a0hBbENVLHFCQUFxQjtzSEFBckIscUJBQXFCOzJGQUFyQixxQkFBcUI7a0JBRGpDLFVBQVU7OzBCQUtOLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiwgT3BlcmF0aW9uU2VydmljZSwgU21hcnRSdWxlc1NlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBOZzFTbWFydFJ1bGVzU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvdXBncmFkZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPcGVyYXRpb25zTGlzdFNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIG9wZXJhdGlvblNlcnZpY2U6IE9wZXJhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBzbWFydFJ1bGVzU2VydmljZTogU21hcnRSdWxlc1NlcnZpY2UsXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBuZzFTbWFydFJ1bGVzU2VydmljZTogTmcxU21hcnRSdWxlc1NlcnZpY2VcbiAgKSB7fVxuXG4gIGdldE9wZXJhdGlvbnMoY3VzdG9tRmlsdGVyID0ge30pIHtcbiAgICBjb25zdCBmaWx0ZXIgPSB7XG4gICAgICB3aXRoVG90YWxQYWdlczogdHJ1ZSxcbiAgICAgIHdpdGhEZWxldGVkOiB0cnVlLFxuICAgICAgcGFnZVNpemU6IDUwLFxuICAgICAgZGF0ZUZyb206IG5ldyBEYXRlKDApLnRvSVNPU3RyaW5nKCksXG4gICAgICByZXZlcnQ6IHRydWUsXG4gICAgICAuLi5jdXN0b21GaWx0ZXJcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9uU2VydmljZS5saXN0KGZpbHRlcik7XG4gIH1cblxuICBpc1NtYXJ0UnVsZXNNaWNyb3NlcnZpY2VBdmFpbGFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc21hcnRSdWxlc1NlcnZpY2UuaXNNaWNyb3NlcnZpY2VBdmFpbGFibGUoKTtcbiAgfVxuXG4gIGdldFNtYXJ0UnVsZXNDcmVhdGVQZXJtaXNzaW9ucygpIHtcbiAgICBpZiAodGhpcy5uZzFTbWFydFJ1bGVzU2VydmljZSAmJiB0aGlzLm5nMVNtYXJ0UnVsZXNTZXJ2aWNlLnBlcm1pc3Npb25zQ2Zncykge1xuICAgICAgcmV0dXJuIHRoaXMubmcxU21hcnRSdWxlc1NlcnZpY2UucGVybWlzc2lvbnNDZmdzLmNyZWF0ZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBjcmVhdGVTbWFydFJ1bGUob3BlcmF0aW9uOiBQYXJ0aWFsPElPcGVyYXRpb24+KSB7XG4gICAgaWYgKHRoaXMubmcxU21hcnRSdWxlc1NlcnZpY2UpIHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLm5nMVNtYXJ0UnVsZXNTZXJ2aWNlLmFkZE5ld0Zvck91dHB1dE9wZXJhdGlvbldpdGhVSShvcGVyYXRpb24pO1xuICAgIH1cbiAgfVxufVxuIl19