import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Output, QueryList, ViewChildren } from '@angular/core';
import { gettext, ListItemRadioComponent, memoize } from '@c8y/ngx-components';
import { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository/shared';
import { TranslateService } from '@ngx-translate/core';
import { get, isEqual, property, uniqWith } from 'lodash-es';
import { BehaviorSubject, combineLatest, from, Observable } from 'rxjs';
import { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/repository/shared";
import * as i2 from "@ngx-translate/core";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "@c8y/ngx-components/operations/stepper-frames";
export class SelectSoftwareStepComponent {
    constructor(repositoryService, translate) {
        this.repositoryService = repositoryService;
        this.translate = translate;
        this.software = new EventEmitter();
        this.textFilter$ = new BehaviorSubject('');
        this.deviceType$ = new BehaviorSubject('');
        this.softwareTypeFilter$ = new BehaviorSubject('');
        this.deviceTypes = [];
        this.selectedDeviceType = { name: '' };
        this.isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);
        this.software$ = combineLatest(this.textFilter$, this.deviceType$, this.softwareTypeFilter$).pipe(switchMap(([name, deviceType, softwareType]) => this.getSoftware(name, deviceType, softwareType)), shareReplay(1));
        this.NO_DEVICE_TYPE_AVAILABLE = gettext('No device type available');
        this.loadDeviceTypes();
    }
    getBaseVersionsCount$(software) {
        return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));
    }
    getVersions(software) {
        return this.repositoryService.listAllVersions(software);
    }
    getDeviceTypeTitle(software) {
        return get(software, 'c8y_Filter.type', this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));
    }
    loadDeviceTypes() {
        this.deviceTypeSubscription = this.deviceType$
            .pipe(debounceTime(300), distinctUntilChanged(), switchMap(searchStr => {
            const query = { 'c8y_Filter.type': `*${searchStr}*` };
            return from(this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query }));
        }))
            .subscribe(result => {
            const { data } = result;
            this.deviceTypes = uniqWith(data.map(val => ({ name: val.c8y_Filter.type })), isEqual);
        });
    }
    ngOnDestroy() {
        this.deviceTypeSubscription.unsubscribe();
    }
    resetSelection() {
        this.radioButtons.map(radio => radio.reset());
    }
    selectSoftware({ option, software }) {
        software.selectedId = option.id;
        option.action = 'install';
        this.emitSoftware({ option, software });
    }
    emitSoftware({ option, software }) {
        const emitData = Object.assign({}, { software }, { version: option }, { action: option.action });
        this.software.emit(emitData);
    }
    getSoftware(name, deviceType, softwareType) {
        const query = name ? { name: `*${name}*` } : {};
        if (deviceType) {
            query.__or = [{ 'c8y_Filter.type': deviceType }, { __not: { __has: `c8y_Filter.type` } }];
        }
        if (softwareType) {
            query.__or = { softwareType };
        }
        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query });
    }
}
SelectSoftwareStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SelectSoftwareStepComponent, deps: [{ token: i1.RepositoryService }, { token: i2.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
SelectSoftwareStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: SelectSoftwareStepComponent, selector: "c8y-select-software-step", outputs: { software: "software" }, viewQueries: [{ propertyName: "radioButtons", predicate: ListItemRadioComponent, descendants: true }], ngImport: i0, template: "<c8y-select-step-frame\n  [header]=\"'Select software' | translate\"\n  [noResults]=\"\n    ((textFilter$ | async)?.length ||\n      (deviceType$ | async)?.length ||\n      (softwareTypeFilter$ | async)?.length) &&\n    (software$ | async)?.data.length === 0\n  \"\n>\n  <div filters class=\"row\">\n    <div class=\"col-md-4 m-b-xs-8 m-b-sm-8\">\n      <div class=\"input-group input-group-search\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          title=\"{{ 'Filter software\u2026' | translate }}\"\n          placeholder=\"{{ 'Filter software\u2026' | translate }}\"\n          [ngModel]=\"textFilter$ | async\"\n          (ngModelChange)=\"textFilter$.next($event)\"\n        />\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n          <i\n            c8yIcon=\"times\"\n            class=\"text-muted\"\n            *ngIf=\"(textFilter$ | async).length > 0\"\n            (click)=\"textFilter$.next('')\"\n          ></i>\n        </span>\n      </div>\n    </div>\n    <div class=\"col-md-4 m-b-xs-8 m-b-sm-8\">\n      <c8y-form-group class=\"m-0\">\n        <c8y-typeahead\n          name=\"deviceType\"\n          [(ngModel)]=\"selectedDeviceType\"\n          placeholder=\"{{ 'Type to filter device types\u2026' | translate }}\"\n          (onSearch)=\"deviceType$.next($event)\"\n          [allowFreeEntries]=\"false\"\n        >\n          <c8y-li\n            class=\"p-l-8 p-r-8 c8y-list__item--link\"\n            (click)=\"selectedDeviceType = { name: '' }; deviceType$.next('')\"\n            [active]=\"!selectedDeviceType?.name\"\n          >\n            <span>{{ 'All device types' | translate }}</span>\n          </c8y-li>\n          <c8y-li\n            *ngFor=\"let deviceType of deviceTypes\"\n            class=\"p-l-8 p-r-8 c8y-list__item--link\"\n            (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n            [active]=\"selectedDeviceType === deviceType\"\n          >\n            <c8y-highlight [text]=\"deviceType.name\" [pattern]=\"deviceType$ | async\"></c8y-highlight>\n          </c8y-li>\n        </c8y-typeahead>\n        <c8y-messages>\n          <c8y-message\n            name=\"notExisting\"\n            [text]=\"'Select one of the existing device types.' | translate\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n    <div class=\"col-md-4\">\n      <c8y-form-group class=\"m-0\">\n        <c8y-software-type\n          [required]=\"false\"\n          [emitResultsOnly]=\"true\"\n          [showBtnInNotFoundMessage]=\"false\"\n          [allowFreeEntries]=\"false\"\n          [placeholder]=\"'Type to filter software types\u2026' | translate\"\n          [showClearSelectionOption]=\"true\"\n          (onSelectSoftware)=\"softwareTypeFilter$.next($event?.softwareType)\"\n        ></c8y-software-type>\n        <c8y-messages>\n          <c8y-message\n            name=\"notExisting\"\n            [text]=\"'Select one of the existing device types.' | translate\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n  </div>\n  <c8y-li header class=\"hidden-sm hidden-xs m-r-8 m-l-8\">\n    <c8y-li-icon><i class=\"p-l-24\"></i></c8y-li-icon>\n    <c8y-li-body class=\"content-flex-40 p-r-32\">\n      <div class=\"col-5\">\n        <span class=\"text-truncate\" title=\" {{ 'Name' | translate }} \">\n          {{ 'Name' | translate }}\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <span class=\"text-truncate\" title=\"{{ 'Device type' | translate }}\">\n          {{ 'Device type' | translate }}\n        </span>\n      </div>\n      <div class=\"col-3\">\n        <span class=\"text-truncate\" title=\"{{ 'Software type' | translate }}\">\n          {{ 'Software type' | translate }}\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <span class=\"text-truncate\" title=\"{{ 'Versions' | translate }}\">\n          {{ 'Versions' | translate }}\n        </span>\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-list-group list>\n    <c8y-li *c8yFor=\"let software of software$ | async; loadMore: 'auto'\" #li>\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <div class=\"content-flex-40\">\n        <div class=\"col-5 m-b-xs-8\">\n          <button\n            class=\"btn-clean\"\n            type=\"button\"\n            title=\"{{ software.name }}\"\n            (click)=\"li.collapsed = !li.collapsed\"\n          >\n            <c8y-highlight [text]=\"software.name\" [pattern]=\"textFilter$ | async\"></c8y-highlight>\n          </button>\n        </div>\n        <div class=\"col-2 m-b-xs-8\">\n          <div\n            class=\"text-truncate\"\n            title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(software) }}\"\n          >\n            <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>Device type</span>\n            <span *ngIf=\"software.c8y_Filter?.type; else noType\">\n              {{ software.c8y_Filter?.type }}\n            </span>\n            <ng-template #noType>\n              <small>\n                <em class=\"text-muted\" translate>Undefined`device type`</em>\n              </small>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"col-3 m-b-xs-8\">\n          <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>Software type</span>\n          <span *ngIf=\"software.softwareType; else emptyText\" class=\"label label-info\">\n            {{ software.softwareType }}\n          </span>\n          <ng-template #emptyText>\n            <small class=\"text-muted\">\n              <em translate>Undefined`software type`</em>\n            </small>\n          </ng-template>\n        </div>\n        <div class=\"col-2\">\n          <span *ngIf=\"isLegacy(software)\" class=\"label label-warning m-l-auto-sm\">\n            <span translate>Legacy</span>\n          </span>\n          <span *ngIf=\"!isLegacy(software)\">\n            <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n              <span class=\"label label-info\">\n                <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n              </span>\n            </span>\n            <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n              <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n                <ng-template ngPluralCase=\"=1\">\n                  <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>\n                    version\n                  </span>\n                  <span class=\"badge badge-info m-l-auto-sm\">1</span>\n                </ng-template>\n                <ng-template ngPluralCase=\"other\">\n                  <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>\n                    versions\n                  </span>\n                  <span class=\"badge badge-info m-l-auto-sm\">\n                    {{ getBaseVersionsCount$(software) | async }}\n                  </span>\n                </ng-template>\n              </span>\n            </span>\n          </span>\n        </div>\n      </div>\n      <c8y-li-collapse>\n        <c8y-list-group>\n          <c8y-li *c8yFor=\"let option of getVersions(software) | async\">\n            <c8y-li-radio\n              [name]=\"software.id\"\n              (onSelect)=\"selectSoftware({ option: option, software: software })\"\n            ></c8y-li-radio>\n            <c8y-li-body class=\"content-flex-40 p-r-16\">\n              <div class=\"col-4\">\n                {{ option.c8y_Software.version }}\n              </div>\n              <div class=\"col-5\">\n                <div class=\"text-truncate\" title=\"{{ option.c8y_Software.url }}\">\n                  <span class=\"text-label-small m-r-4\" translate>File</span>\n                  <span>{{ option.c8y_Software.url }}</span>\n                </div>\n              </div>\n              <div class=\"col-3 d-flex\" *ngIf=\"option.id === software.selectedId\">\n                <div class=\"c8y-select-wrapper d-inline-block m-l-auto\" style=\"margin: -4px 0\">\n                  <select\n                    id=\"action\"\n                    class=\"form-control input-sm\"\n                    [(ngModel)]=\"option.action\"\n                    (change)=\"emitSoftware({ option: option, software: software })\"\n                  >\n                    <option [ngValue]=\"'install'\">\n                      {{ 'Install/update`software`' | translate }}\n                    </option>\n                    <option [ngValue]=\"'delete'\">{{ 'Remove`software`' | translate }}</option>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n            </c8y-li-body>\n          </c8y-li>\n        </c8y-list-group>\n      </c8y-li-collapse>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-select-step-frame>\n", dependencies: [{ kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i3.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgPlural, selector: "[ngPlural]", inputs: ["ngPlural"] }, { kind: "directive", type: i4.NgPluralCase, selector: "[ngPluralCase]" }, { kind: "directive", type: i3.ForOfDirective, selector: "[c8yFor]", inputs: ["c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForMaxIterations", "c8yForLoadingTemplate", "c8yForLoadNextLabel", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForComparator", "c8yForEnableVirtualScroll", "c8yForVirtualScrollElementSize", "c8yForVirtualScrollStrategy", "c8yForVirtualScrollContainerHeight"], outputs: ["c8yForCount"] }, { kind: "component", type: i3.HighlightComponent, selector: "c8y-highlight", inputs: ["pattern", "text", "elementClass", "shouldTrimPattern"] }, { kind: "component", type: i3.TypeaheadComponent, selector: "c8y-typeahead", inputs: ["required", "maxlength", "disabled", "allowFreeEntries", "placeholder", "displayProperty", "icon", "name", "autoClose", "hideNew", "container", "selected"], outputs: ["onSearch", "onIconClick"] }, { kind: "directive", type: i5.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i5.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i3.MessageDirective, selector: "c8y-message", inputs: ["name", "text"] }, { kind: "component", type: i3.MessagesComponent, selector: "c8y-messages", inputs: ["show", "defaults"] }, { kind: "component", type: i3.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i3.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i3.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i3.ListItemBodyComponent, selector: "c8y-list-item-body, c8y-li-body", inputs: ["body"] }, { kind: "component", type: i3.ListItemCollapseComponent, selector: "c8y-list-item-collapse, c8y-li-collapse", inputs: ["collapseWay"] }, { kind: "component", type: i3.ListItemRadioComponent, selector: "c8y-list-item-radio, c8y-li-radio", inputs: ["selected", "name", "disabled", "value"], outputs: ["onSelect"] }, { kind: "component", type: i1.SoftwareTypeComponent, selector: "c8y-software-type", inputs: ["softwareTypeMO", "disabled", "style", "required", "placeholder", "emitResultsOnly", "showBtnInNotFoundMessage", "allowFreeEntries", "showClearSelectionOption", "clearSelectionOptionLabel"], outputs: ["onSelectSoftware"] }, { kind: "component", type: i6.SelectStepFrameComponent, selector: "c8y-select-step-frame", inputs: ["header", "noResults"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }] });
__decorate([
    memoize(property('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Observable)
], SelectSoftwareStepComponent.prototype, "getBaseVersionsCount$", null);
__decorate([
    memoize(property('id')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], SelectSoftwareStepComponent.prototype, "getVersions", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SelectSoftwareStepComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-select-software-step', template: "<c8y-select-step-frame\n  [header]=\"'Select software' | translate\"\n  [noResults]=\"\n    ((textFilter$ | async)?.length ||\n      (deviceType$ | async)?.length ||\n      (softwareTypeFilter$ | async)?.length) &&\n    (software$ | async)?.data.length === 0\n  \"\n>\n  <div filters class=\"row\">\n    <div class=\"col-md-4 m-b-xs-8 m-b-sm-8\">\n      <div class=\"input-group input-group-search\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          title=\"{{ 'Filter software\u2026' | translate }}\"\n          placeholder=\"{{ 'Filter software\u2026' | translate }}\"\n          [ngModel]=\"textFilter$ | async\"\n          (ngModelChange)=\"textFilter$.next($event)\"\n        />\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n          <i\n            c8yIcon=\"times\"\n            class=\"text-muted\"\n            *ngIf=\"(textFilter$ | async).length > 0\"\n            (click)=\"textFilter$.next('')\"\n          ></i>\n        </span>\n      </div>\n    </div>\n    <div class=\"col-md-4 m-b-xs-8 m-b-sm-8\">\n      <c8y-form-group class=\"m-0\">\n        <c8y-typeahead\n          name=\"deviceType\"\n          [(ngModel)]=\"selectedDeviceType\"\n          placeholder=\"{{ 'Type to filter device types\u2026' | translate }}\"\n          (onSearch)=\"deviceType$.next($event)\"\n          [allowFreeEntries]=\"false\"\n        >\n          <c8y-li\n            class=\"p-l-8 p-r-8 c8y-list__item--link\"\n            (click)=\"selectedDeviceType = { name: '' }; deviceType$.next('')\"\n            [active]=\"!selectedDeviceType?.name\"\n          >\n            <span>{{ 'All device types' | translate }}</span>\n          </c8y-li>\n          <c8y-li\n            *ngFor=\"let deviceType of deviceTypes\"\n            class=\"p-l-8 p-r-8 c8y-list__item--link\"\n            (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n            [active]=\"selectedDeviceType === deviceType\"\n          >\n            <c8y-highlight [text]=\"deviceType.name\" [pattern]=\"deviceType$ | async\"></c8y-highlight>\n          </c8y-li>\n        </c8y-typeahead>\n        <c8y-messages>\n          <c8y-message\n            name=\"notExisting\"\n            [text]=\"'Select one of the existing device types.' | translate\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n    <div class=\"col-md-4\">\n      <c8y-form-group class=\"m-0\">\n        <c8y-software-type\n          [required]=\"false\"\n          [emitResultsOnly]=\"true\"\n          [showBtnInNotFoundMessage]=\"false\"\n          [allowFreeEntries]=\"false\"\n          [placeholder]=\"'Type to filter software types\u2026' | translate\"\n          [showClearSelectionOption]=\"true\"\n          (onSelectSoftware)=\"softwareTypeFilter$.next($event?.softwareType)\"\n        ></c8y-software-type>\n        <c8y-messages>\n          <c8y-message\n            name=\"notExisting\"\n            [text]=\"'Select one of the existing device types.' | translate\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n  </div>\n  <c8y-li header class=\"hidden-sm hidden-xs m-r-8 m-l-8\">\n    <c8y-li-icon><i class=\"p-l-24\"></i></c8y-li-icon>\n    <c8y-li-body class=\"content-flex-40 p-r-32\">\n      <div class=\"col-5\">\n        <span class=\"text-truncate\" title=\" {{ 'Name' | translate }} \">\n          {{ 'Name' | translate }}\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <span class=\"text-truncate\" title=\"{{ 'Device type' | translate }}\">\n          {{ 'Device type' | translate }}\n        </span>\n      </div>\n      <div class=\"col-3\">\n        <span class=\"text-truncate\" title=\"{{ 'Software type' | translate }}\">\n          {{ 'Software type' | translate }}\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <span class=\"text-truncate\" title=\"{{ 'Versions' | translate }}\">\n          {{ 'Versions' | translate }}\n        </span>\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <c8y-list-group list>\n    <c8y-li *c8yFor=\"let software of software$ | async; loadMore: 'auto'\" #li>\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <div class=\"content-flex-40\">\n        <div class=\"col-5 m-b-xs-8\">\n          <button\n            class=\"btn-clean\"\n            type=\"button\"\n            title=\"{{ software.name }}\"\n            (click)=\"li.collapsed = !li.collapsed\"\n          >\n            <c8y-highlight [text]=\"software.name\" [pattern]=\"textFilter$ | async\"></c8y-highlight>\n          </button>\n        </div>\n        <div class=\"col-2 m-b-xs-8\">\n          <div\n            class=\"text-truncate\"\n            title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(software) }}\"\n          >\n            <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>Device type</span>\n            <span *ngIf=\"software.c8y_Filter?.type; else noType\">\n              {{ software.c8y_Filter?.type }}\n            </span>\n            <ng-template #noType>\n              <small>\n                <em class=\"text-muted\" translate>Undefined`device type`</em>\n              </small>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"col-3 m-b-xs-8\">\n          <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>Software type</span>\n          <span *ngIf=\"software.softwareType; else emptyText\" class=\"label label-info\">\n            {{ software.softwareType }}\n          </span>\n          <ng-template #emptyText>\n            <small class=\"text-muted\">\n              <em translate>Undefined`software type`</em>\n            </small>\n          </ng-template>\n        </div>\n        <div class=\"col-2\">\n          <span *ngIf=\"isLegacy(software)\" class=\"label label-warning m-l-auto-sm\">\n            <span translate>Legacy</span>\n          </span>\n          <span *ngIf=\"!isLegacy(software)\">\n            <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n              <span class=\"label label-info\">\n                <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n              </span>\n            </span>\n            <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n              <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n                <ng-template ngPluralCase=\"=1\">\n                  <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>\n                    version\n                  </span>\n                  <span class=\"badge badge-info m-l-auto-sm\">1</span>\n                </ng-template>\n                <ng-template ngPluralCase=\"other\">\n                  <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>\n                    versions\n                  </span>\n                  <span class=\"badge badge-info m-l-auto-sm\">\n                    {{ getBaseVersionsCount$(software) | async }}\n                  </span>\n                </ng-template>\n              </span>\n            </span>\n          </span>\n        </div>\n      </div>\n      <c8y-li-collapse>\n        <c8y-list-group>\n          <c8y-li *c8yFor=\"let option of getVersions(software) | async\">\n            <c8y-li-radio\n              [name]=\"software.id\"\n              (onSelect)=\"selectSoftware({ option: option, software: software })\"\n            ></c8y-li-radio>\n            <c8y-li-body class=\"content-flex-40 p-r-16\">\n              <div class=\"col-4\">\n                {{ option.c8y_Software.version }}\n              </div>\n              <div class=\"col-5\">\n                <div class=\"text-truncate\" title=\"{{ option.c8y_Software.url }}\">\n                  <span class=\"text-label-small m-r-4\" translate>File</span>\n                  <span>{{ option.c8y_Software.url }}</span>\n                </div>\n              </div>\n              <div class=\"col-3 d-flex\" *ngIf=\"option.id === software.selectedId\">\n                <div class=\"c8y-select-wrapper d-inline-block m-l-auto\" style=\"margin: -4px 0\">\n                  <select\n                    id=\"action\"\n                    class=\"form-control input-sm\"\n                    [(ngModel)]=\"option.action\"\n                    (change)=\"emitSoftware({ option: option, software: software })\"\n                  >\n                    <option [ngValue]=\"'install'\">\n                      {{ 'Install/update`software`' | translate }}\n                    </option>\n                    <option [ngValue]=\"'delete'\">{{ 'Remove`software`' | translate }}</option>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n            </c8y-li-body>\n          </c8y-li>\n        </c8y-list-group>\n      </c8y-li-collapse>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-select-step-frame>\n" }]
        }], ctorParameters: function () { return [{ type: i1.RepositoryService }, { type: i2.TranslateService }]; }, propDecorators: { software: [{
                type: Output
            }], radioButtons: [{
                type: ViewChildren,
                args: [ListItemRadioComponent]
            }], getBaseVersionsCount$: [], getVersions: [] } });
//# sourceMappingURL=data:application/json;base64,