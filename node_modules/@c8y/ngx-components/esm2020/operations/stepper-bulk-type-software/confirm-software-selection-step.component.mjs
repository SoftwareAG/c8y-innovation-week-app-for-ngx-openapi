import { Component, Input } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { has, uniq } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "@c8y/ngx-components/operations/stepper-frames";
export class ConfirmSoftwareSelectionStepComponent {
    ngOnChanges(changes) {
        if (changes.selectedItems) {
            const deviceTypes = this.deviceTypes;
            this.title =
                deviceTypes && deviceTypes.length
                    ? deviceTypes.join(', ')
                    : gettext('Undefined`device type`');
        }
    }
    get selectedToInstall() {
        return this.selectedItems.filter(software => software.action === 'install');
    }
    get selectedToDelete() {
        return this.selectedItems.filter(software => software.action === 'delete');
    }
    get deviceTypes() {
        return uniq(this.selectedItems
            .filter(val => has(val, ['software', 'c8y_Filter', 'type']))
            .map(val => val.software.c8y_Filter.type)
            .filter(val => !!val));
    }
}
ConfirmSoftwareSelectionStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmSoftwareSelectionStepComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConfirmSoftwareSelectionStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ConfirmSoftwareSelectionStepComponent, selector: "c8y-confirm-software-selection-step", inputs: { selectedItems: "selectedItems" }, usesOnChanges: true, ngImport: i0, template: "<c8y-preview-selection-frame [header]=\"'Confirm selection' | translate\">\n  <ng-container *previewBlock=\"'Device type' | translate\">\n    <ng-container *ngIf=\"deviceTypes.length > 0; else noType\">\n      <span *ngFor=\"let deviceType of deviceTypes; let last = last\"\n        >{{ deviceType }}{{ last ? '' : ', ' }}</span\n      >\n    </ng-container>\n    <ng-template #noType>\n      <em class=\"text-muted\" translate>Undefined`device type`</em>\n    </ng-template>\n  </ng-container>\n  <c8y-list-group\n    *previewBlock=\"'Installations/updates`software`' | translate; if: !!selectedToInstall.length\"\n  >\n    <c8y-li *ngFor=\"let selectedItem of selectedToInstall\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-10\">\n        <div class=\"col-6 text-truncate\" title=\"{{ selectedItem.software.name }}\">\n          {{ selectedItem.software.name }}\n        </div>\n        <div class=\"col-6 text-right\" *ngIf=\"!!selectedItem?.version?.c8y_Software?.version\">\n          <span class=\"text-label-small m-r-4\" translate> Version </span>\n          <span>\n            {{ selectedItem.version.c8y_Software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Removals`software`' | translate; if: !!selectedToDelete.length\">\n    <c8y-li *ngFor=\"let selectedItem of selectedToDelete\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-10\">\n        <div class=\"col-6\">\n          {{ selectedItem.software.name }}\n        </div>\n        <div class=\"col-6 text-right\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ selectedItem.version.c8y_Software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-preview-selection-frame>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i1.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i1.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i1.ListItemBodyComponent, selector: "c8y-list-item-body, c8y-li-body", inputs: ["body"] }, { kind: "component", type: i3.PreviewSelectionFrameComponent, selector: "c8y-preview-selection-frame", inputs: ["header", "name", "description", "type"] }, { kind: "directive", type: i3.PreviewBlockDirective, selector: "[previewBlock]", inputs: ["previewBlock", "previewBlockIf"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmSoftwareSelectionStepComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-confirm-software-selection-step', template: "<c8y-preview-selection-frame [header]=\"'Confirm selection' | translate\">\n  <ng-container *previewBlock=\"'Device type' | translate\">\n    <ng-container *ngIf=\"deviceTypes.length > 0; else noType\">\n      <span *ngFor=\"let deviceType of deviceTypes; let last = last\"\n        >{{ deviceType }}{{ last ? '' : ', ' }}</span\n      >\n    </ng-container>\n    <ng-template #noType>\n      <em class=\"text-muted\" translate>Undefined`device type`</em>\n    </ng-template>\n  </ng-container>\n  <c8y-list-group\n    *previewBlock=\"'Installations/updates`software`' | translate; if: !!selectedToInstall.length\"\n  >\n    <c8y-li *ngFor=\"let selectedItem of selectedToInstall\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-10\">\n        <div class=\"col-6 text-truncate\" title=\"{{ selectedItem.software.name }}\">\n          {{ selectedItem.software.name }}\n        </div>\n        <div class=\"col-6 text-right\" *ngIf=\"!!selectedItem?.version?.c8y_Software?.version\">\n          <span class=\"text-label-small m-r-4\" translate> Version </span>\n          <span>\n            {{ selectedItem.version.c8y_Software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Removals`software`' | translate; if: !!selectedToDelete.length\">\n    <c8y-li *ngFor=\"let selectedItem of selectedToDelete\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-10\">\n        <div class=\"col-6\">\n          {{ selectedItem.software.name }}\n        </div>\n        <div class=\"col-6 text-right\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ selectedItem.version.c8y_Software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-preview-selection-frame>\n" }]
        }], propDecorators: { selectedItems: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1zb2Z0d2FyZS1zZWxlY3Rpb24tc3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLXNvZnR3YXJlL2NvbmZpcm0tc29mdHdhcmUtc2VsZWN0aW9uLXN0ZXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1zb2Z0d2FyZS9jb25maXJtLXNvZnR3YXJlLXNlbGVjdGlvbi1zdGVwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7O0FBT3RDLE1BQU0sT0FBTyxxQ0FBcUM7SUFJaEQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLGFBQWEsRUFBRTtZQUN6QixNQUFNLFdBQVcsR0FBYSxJQUFJLENBQUMsV0FBVyxDQUFDO1lBQy9DLElBQUksQ0FBQyxLQUFLO2dCQUNSLFdBQVcsSUFBSSxXQUFXLENBQUMsTUFBTTtvQkFDL0IsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO29CQUN4QixDQUFDLENBQUMsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0lBRUQsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUVELElBQUksZ0JBQWdCO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxLQUFLLFFBQVEsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FDVCxJQUFJLENBQUMsYUFBYTthQUNmLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUUsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7YUFDM0QsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO2FBQ3hDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FDeEIsQ0FBQztJQUNKLENBQUM7O2tJQTdCVSxxQ0FBcUM7c0hBQXJDLHFDQUFxQyw0SUNUbEQsaytEQWtEQTsyRkR6Q2EscUNBQXFDO2tCQUpqRCxTQUFTOytCQUNFLHFDQUFxQzs4QkFJdEMsYUFBYTtzQkFBckIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgaGFzLCB1bmlxIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IElTZWxlY3RlZFNvZnR3YXJlIH0gZnJvbSAnLi9zZWxlY3Qtc29mdHdhcmUubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29uZmlybS1zb2Z0d2FyZS1zZWxlY3Rpb24tc3RlcCcsXG4gIHRlbXBsYXRlVXJsOiAnY29uZmlybS1zb2Z0d2FyZS1zZWxlY3Rpb24tc3RlcC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlybVNvZnR3YXJlU2VsZWN0aW9uU3RlcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHNlbGVjdGVkSXRlbXM6IElTZWxlY3RlZFNvZnR3YXJlW107XG4gIHRpdGxlOiBzdHJpbmc7XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLnNlbGVjdGVkSXRlbXMpIHtcbiAgICAgIGNvbnN0IGRldmljZVR5cGVzOiBzdHJpbmdbXSA9IHRoaXMuZGV2aWNlVHlwZXM7XG4gICAgICB0aGlzLnRpdGxlID1cbiAgICAgICAgZGV2aWNlVHlwZXMgJiYgZGV2aWNlVHlwZXMubGVuZ3RoXG4gICAgICAgICAgPyBkZXZpY2VUeXBlcy5qb2luKCcsICcpXG4gICAgICAgICAgOiBnZXR0ZXh0KCdVbmRlZmluZWRgZGV2aWNlIHR5cGVgJyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IHNlbGVjdGVkVG9JbnN0YWxsKCkge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdGVkSXRlbXMuZmlsdGVyKHNvZnR3YXJlID0+IHNvZnR3YXJlLmFjdGlvbiA9PT0gJ2luc3RhbGwnKTtcbiAgfVxuXG4gIGdldCBzZWxlY3RlZFRvRGVsZXRlKCkge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdGVkSXRlbXMuZmlsdGVyKHNvZnR3YXJlID0+IHNvZnR3YXJlLmFjdGlvbiA9PT0gJ2RlbGV0ZScpO1xuICB9XG5cbiAgZ2V0IGRldmljZVR5cGVzKCkge1xuICAgIHJldHVybiB1bmlxKFxuICAgICAgdGhpcy5zZWxlY3RlZEl0ZW1zXG4gICAgICAgIC5maWx0ZXIodmFsID0+IGhhcyh2YWwsIFsnc29mdHdhcmUnLCAnYzh5X0ZpbHRlcicsICd0eXBlJ10pKVxuICAgICAgICAubWFwKHZhbCA9PiB2YWwuc29mdHdhcmUuYzh5X0ZpbHRlci50eXBlKVxuICAgICAgICAuZmlsdGVyKHZhbCA9PiAhIXZhbClcbiAgICApO1xuICB9XG59XG4iLCI8Yzh5LXByZXZpZXctc2VsZWN0aW9uLWZyYW1lIFtoZWFkZXJdPVwiJ0NvbmZpcm0gc2VsZWN0aW9uJyB8IHRyYW5zbGF0ZVwiPlxuICA8bmctY29udGFpbmVyICpwcmV2aWV3QmxvY2s9XCInRGV2aWNlIHR5cGUnIHwgdHJhbnNsYXRlXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRldmljZVR5cGVzLmxlbmd0aCA+IDA7IGVsc2Ugbm9UeXBlXCI+XG4gICAgICA8c3BhbiAqbmdGb3I9XCJsZXQgZGV2aWNlVHlwZSBvZiBkZXZpY2VUeXBlczsgbGV0IGxhc3QgPSBsYXN0XCJcbiAgICAgICAgPnt7IGRldmljZVR5cGUgfX17eyBsYXN0ID8gJycgOiAnLCAnIH19PC9zcGFuXG4gICAgICA+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNub1R5cGU+XG4gICAgICA8ZW0gY2xhc3M9XCJ0ZXh0LW11dGVkXCIgdHJhbnNsYXRlPlVuZGVmaW5lZGBkZXZpY2UgdHlwZWA8L2VtPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIDwvbmctY29udGFpbmVyPlxuICA8Yzh5LWxpc3QtZ3JvdXBcbiAgICAqcHJldmlld0Jsb2NrPVwiJ0luc3RhbGxhdGlvbnMvdXBkYXRlc2Bzb2Z0d2FyZWAnIHwgdHJhbnNsYXRlOyBpZjogISFzZWxlY3RlZFRvSW5zdGFsbC5sZW5ndGhcIlxuICA+XG4gICAgPGM4eS1saSAqbmdGb3I9XCJsZXQgc2VsZWN0ZWRJdGVtIG9mIHNlbGVjdGVkVG9JbnN0YWxsXCI+XG4gICAgICA8Yzh5LWxpLWljb24+XG4gICAgICAgIDxpIGM4eUljb249XCJjOHktdG9vbHNcIj48L2k+XG4gICAgICA8L2M4eS1saS1pY29uPlxuICAgICAgPGM4eS1saS1ib2R5IGNsYXNzPVwiY29udGVudC1mbGV4LTEwXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtNiB0ZXh0LXRydW5jYXRlXCIgdGl0bGU9XCJ7eyBzZWxlY3RlZEl0ZW0uc29mdHdhcmUubmFtZSB9fVwiPlxuICAgICAgICAgIHt7IHNlbGVjdGVkSXRlbS5zb2Z0d2FyZS5uYW1lIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTYgdGV4dC1yaWdodFwiICpuZ0lmPVwiISFzZWxlY3RlZEl0ZW0/LnZlcnNpb24/LmM4eV9Tb2Z0d2FyZT8udmVyc2lvblwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1sYWJlbC1zbWFsbCBtLXItNFwiIHRyYW5zbGF0ZT4gVmVyc2lvbiA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICB7eyBzZWxlY3RlZEl0ZW0udmVyc2lvbi5jOHlfU29mdHdhcmUudmVyc2lvbiB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2M4eS1saS1ib2R5PlxuICAgIDwvYzh5LWxpPlxuICA8L2M4eS1saXN0LWdyb3VwPlxuICA8Yzh5LWxpc3QtZ3JvdXAgKnByZXZpZXdCbG9jaz1cIidSZW1vdmFsc2Bzb2Z0d2FyZWAnIHwgdHJhbnNsYXRlOyBpZjogISFzZWxlY3RlZFRvRGVsZXRlLmxlbmd0aFwiPlxuICAgIDxjOHktbGkgKm5nRm9yPVwibGV0IHNlbGVjdGVkSXRlbSBvZiBzZWxlY3RlZFRvRGVsZXRlXCI+XG4gICAgICA8Yzh5LWxpLWljb24+XG4gICAgICAgIDxpIGM4eUljb249XCJjOHktdG9vbHNcIj48L2k+XG4gICAgICA8L2M4eS1saS1pY29uPlxuICAgICAgPGM4eS1saS1ib2R5IGNsYXNzPVwiY29udGVudC1mbGV4LTEwXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtNlwiPlxuICAgICAgICAgIHt7IHNlbGVjdGVkSXRlbS5zb2Z0d2FyZS5uYW1lIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTYgdGV4dC1yaWdodFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1sYWJlbC1zbWFsbCBtLXItOFwiIHRyYW5zbGF0ZT4gVmVyc2lvbiA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICB7eyBzZWxlY3RlZEl0ZW0udmVyc2lvbi5jOHlfU29mdHdhcmUudmVyc2lvbiB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2M4eS1saS1ib2R5PlxuICAgIDwvYzh5LWxpPlxuICA8L2M4eS1saXN0LWdyb3VwPlxuPC9jOHktcHJldmlldy1zZWxlY3Rpb24tZnJhbWU+XG4iXX0=