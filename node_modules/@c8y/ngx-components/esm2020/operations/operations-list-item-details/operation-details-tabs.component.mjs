import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "@c8y/ngx-components/operations/bulk-single-operations-list";
import * as i4 from "./operation-details.component";
export class OperationDetailsTabsComponent {
    constructor() {
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.showFailedOperation = new EventEmitter();
        this.tabs = [];
    }
    ngOnInit() {
        this.template = this.detailsTemplate;
        this.tabs = [
            {
                label: gettext('Details'),
                path: null,
                icon: 'asterisk',
                template: this.detailsTemplate
            },
            {
                label: gettext('History of changes'),
                path: null,
                icon: 'archive',
                template: this.auditTemplate
            }
        ];
    }
}
OperationDetailsTabsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsTabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
OperationDetailsTabsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: OperationDetailsTabsComponent, selector: "c8y-operation-details-tabs", inputs: { operation: "operation", readOnly: "readOnly", bulkOperationModalDetailsService: "bulkOperationModalDetailsService" }, outputs: { onRetryFailedOperations: "onRetryFailedOperations", showFailedOperation: "showFailedOperation" }, viewQueries: [{ propertyName: "detailsTemplate", first: true, predicate: ["details"], descendants: true, static: true }, { propertyName: "auditTemplate", first: true, predicate: ["audit"], descendants: true, static: true }], ngImport: i0, template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  ></c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n", dependencies: [{ kind: "component", type: i1.AuditLogComponent, selector: "c8y-audit-log", inputs: ["source"] }, { kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3.SingleOperationsListComponent, selector: "c8y-single-operations-list", inputs: ["bulkOperation", "readOnly"], outputs: ["onRetryFailedOperations"] }, { kind: "component", type: i4.OperationDetailsComponent, selector: "c8y-operation-details", inputs: ["operation", "bulkOperationModalDetailsService"], outputs: ["showFailedOperation"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationDetailsTabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-operation-details-tabs', template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  ></c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n" }]
        }], propDecorators: { operation: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], bulkOperationModalDetailsService: [{
                type: Input
            }], onRetryFailedOperations: [{
                type: Output
            }], showFailedOperation: [{
                type: Output
            }], detailsTemplate: [{
                type: ViewChild,
                args: ['details', { static: true }]
            }], auditTemplate: [{
                type: ViewChild,
                args: ['audit', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL29wZXJhdGlvbnMtbGlzdC1pdGVtLWRldGFpbHMvb3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL29wZXJhdGlvbnMtbGlzdC1pdGVtLWRldGFpbHMvb3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBRUwsTUFBTSxFQUNOLFNBQVMsRUFFVixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsT0FBTyxFQUFPLE1BQU0scUJBQXFCLENBQUM7Ozs7OztBQU9uRCxNQUFNLE9BQU8sNkJBQTZCO0lBSjFDO1FBUUUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUlQLDRCQUF1QixHQUEwQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3BGLHdCQUFtQixHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBS3pFLFNBQUksR0FBVSxFQUFFLENBQUM7S0FxQmxCO0lBbEJDLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7UUFFckMsSUFBSSxDQUFDLElBQUksR0FBRztZQUNWO2dCQUNFLEtBQUssRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDO2dCQUN6QixJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsVUFBVTtnQkFDaEIsUUFBUSxFQUFFLElBQUksQ0FBQyxlQUFlO2FBQy9CO1lBQ0Q7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztnQkFDcEMsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhO2FBQzdCO1NBQ0YsQ0FBQztJQUNKLENBQUM7OzBIQWxDVSw2QkFBNkI7OEdBQTdCLDZCQUE2QixnaEJDakIxQywrbENBZ0NBOzJGRGZhLDZCQUE2QjtrQkFKekMsU0FBUzsrQkFDRSw0QkFBNEI7OEJBS3RDLFNBQVM7c0JBRFIsS0FBSztnQkFHTixRQUFRO3NCQURQLEtBQUs7Z0JBSU4sZ0NBQWdDO3NCQUQvQixLQUFLO2dCQUVJLHVCQUF1QjtzQkFBaEMsTUFBTTtnQkFDRyxtQkFBbUI7c0JBQTVCLE1BQU07Z0JBRWlDLGVBQWU7c0JBQXRELFNBQVM7dUJBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFDQSxhQUFhO3NCQUFsRCxTQUFTO3VCQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uLCBJT3BlcmF0aW9uQnVsayB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQsIFRhYiB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbk1vZGFsRGV0YWlsc1NlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tbW9kYWwtZGV0YWlscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1vcGVyYXRpb24tZGV0YWlscy10YWJzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL29wZXJhdGlvbi1kZXRhaWxzLXRhYnMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIE9wZXJhdGlvbkRldGFpbHNUYWJzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgb3BlcmF0aW9uOiBQYXJ0aWFsPElPcGVyYXRpb24gJiBJT3BlcmF0aW9uQnVsaz47XG4gIEBJbnB1dCgpXG4gIHJlYWRPbmx5ID0gZmFsc2U7XG5cbiAgQElucHV0KClcbiAgYnVsa09wZXJhdGlvbk1vZGFsRGV0YWlsc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25Nb2RhbERldGFpbHNTZXJ2aWNlO1xuICBAT3V0cHV0KCkgb25SZXRyeUZhaWxlZE9wZXJhdGlvbnM6IEV2ZW50RW1pdHRlcjxQYXJ0aWFsPElPcGVyYXRpb25CdWxrPj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBzaG93RmFpbGVkT3BlcmF0aW9uOiBFdmVudEVtaXR0ZXI8bnVtYmVyPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAVmlld0NoaWxkKCdkZXRhaWxzJywgeyBzdGF0aWM6IHRydWUgfSkgZGV0YWlsc1RlbXBsYXRlOiBhbnk7XG4gIEBWaWV3Q2hpbGQoJ2F1ZGl0JywgeyBzdGF0aWM6IHRydWUgfSkgYXVkaXRUZW1wbGF0ZTogYW55O1xuXG4gIHRhYnM6IFRhYltdID0gW107XG4gIHRlbXBsYXRlOiBWaWV3Q29udGFpbmVyUmVmO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMudGVtcGxhdGUgPSB0aGlzLmRldGFpbHNUZW1wbGF0ZTtcblxuICAgIHRoaXMudGFicyA9IFtcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ0RldGFpbHMnKSxcbiAgICAgICAgcGF0aDogbnVsbCxcbiAgICAgICAgaWNvbjogJ2FzdGVyaXNrJyxcbiAgICAgICAgdGVtcGxhdGU6IHRoaXMuZGV0YWlsc1RlbXBsYXRlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnSGlzdG9yeSBvZiBjaGFuZ2VzJyksXG4gICAgICAgIHBhdGg6IG51bGwsXG4gICAgICAgIGljb246ICdhcmNoaXZlJyxcbiAgICAgICAgdGVtcGxhdGU6IHRoaXMuYXVkaXRUZW1wbGF0ZVxuICAgICAgfVxuICAgIF07XG4gIH1cbn1cbiIsIjxkaXYgI2NvbnRhaW5lciBjbGFzcz1cInRhYkNvbnRhaW5lclwiPlxuICA8dWwgY2xhc3M9XCJuYXYgbmF2LXRhYnMgbmF2LXRhYnNjOHlcIj5cbiAgICA8bGkgW25nQ2xhc3NdPVwieyBhY3RpdmU6IHRhYi50ZW1wbGF0ZSA9PT0gdGVtcGxhdGUgfVwiICpuZ0Zvcj1cImxldCB0YWIgb2YgdGFic1wiPlxuICAgICAgPGJ1dHRvbiBbdGl0bGVdPVwidGFiLmxhYmVsIHwgdHJhbnNsYXRlXCIgY2xhc3M9XCJidG5cIiAoY2xpY2spPVwidGVtcGxhdGUgPSB0YWIudGVtcGxhdGVcIj5cbiAgICAgICAgPGkgW2M4eUljb25dPVwidGFiLmljb25cIj48L2k+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidHh0XCI+e3sgdGFiLmxhYmVsIHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9saT5cbiAgPC91bD5cbjwvZGl2PlxuXG48bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGVtcGxhdGVcIj48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlICNkZXRhaWxzPlxuICA8Yzh5LW9wZXJhdGlvbi1kZXRhaWxzXG4gICAgW29wZXJhdGlvbl09XCJvcGVyYXRpb25cIlxuICAgIChzaG93RmFpbGVkT3BlcmF0aW9uKT1cInNob3dGYWlsZWRPcGVyYXRpb24uZW1pdCgkZXZlbnQpXCJcbiAgICBbYnVsa09wZXJhdGlvbk1vZGFsRGV0YWlsc1NlcnZpY2VdPVwiYnVsa09wZXJhdGlvbk1vZGFsRGV0YWlsc1NlcnZpY2VcIlxuICA+PC9jOHktb3BlcmF0aW9uLWRldGFpbHM+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI2F1ZGl0PlxuICA8Yzh5LWF1ZGl0LWxvZyBbc291cmNlXT1cIm9wZXJhdGlvbi5pZFwiPjwvYzh5LWF1ZGl0LWxvZz5cbjwvbmctdGVtcGxhdGU+XG5cbjxjOHktc2luZ2xlLW9wZXJhdGlvbnMtbGlzdFxuICAqbmdJZj1cIm9wZXJhdGlvbi5vcGVyYXRpb25Qcm90b3R5cGVcIlxuICBbYnVsa09wZXJhdGlvbl09XCJvcGVyYXRpb25cIlxuICBbcmVhZE9ubHldPVwicmVhZE9ubHlcIlxuICAob25SZXRyeUZhaWxlZE9wZXJhdGlvbnMpPVwib25SZXRyeUZhaWxlZE9wZXJhdGlvbnMuZW1pdCgkZXZlbnQpXCJcbiAgY2xhc3M9XCJkLWZsZXggZC1jb2xcIlxuPjwvYzh5LXNpbmdsZS1vcGVyYXRpb25zLWxpc3Q+XG4iXX0=