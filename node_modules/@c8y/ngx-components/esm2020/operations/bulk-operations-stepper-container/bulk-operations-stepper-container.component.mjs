import { ChangeDetectorRef, Component, ViewChild, ViewContainerRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@c8y/ngx-components/operations/bulk-operations-service";
import * as i3 from "@c8y/ngx-components";
export class BulkOperationsStepperContainerComponent {
    constructor(activatedRoute, bulkOpsService, changeDetector) {
        this.activatedRoute = activatedRoute;
        this.bulkOpsService = bulkOpsService;
        this.changeDetector = changeDetector;
    }
    ngOnInit() {
        this.activatedRoute.params.subscribe(params => {
            if (params && params.type) {
                this.bulkOperationType = params.type;
                this.component = this.bulkOpsService
                    .getBulkTypes()
                    .find(element => element.path.includes(this.bulkOperationType)).component;
                this.changeDetector.detectChanges();
                this.createComponent(this.component);
            }
        });
    }
    createComponent(component) {
        if (component) {
            this.container.createComponent(component);
        }
    }
}
BulkOperationsStepperContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationsStepperContainerComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.BulkOperationsService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
BulkOperationsStepperContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: BulkOperationsStepperContainerComponent, selector: "bulk-operations-stepper-container", viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<c8y-title>{{ 'Add bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <div class=\"d-contents\">\n    <template #container></template>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i3.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationsStepperContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bulk-operations-stepper-container', template: "<c8y-title>{{ 'Add bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <div class=\"d-contents\">\n    <template #container></template>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.BulkOperationsService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { container: [{
                type: ViewChild,
                args: ['container', { static: false, read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyL2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lci9idWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBVSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEcsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDOzs7OztBQU0vRixNQUFNLE9BQU8sdUNBQXVDO0lBS2xELFlBQ1UsY0FBOEIsRUFDOUIsY0FBcUMsRUFDckMsY0FBaUM7UUFGakMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLG1CQUFjLEdBQWQsY0FBYyxDQUF1QjtRQUNyQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFDeEMsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDNUMsSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLElBQUksRUFBRTtnQkFDekIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBRXJDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWM7cUJBQ2pDLFlBQVksRUFBRTtxQkFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFFNUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDcEMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDdEM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxlQUFlLENBQUMsU0FBUztRQUMvQixJQUFJLFNBQVMsRUFBRTtZQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzNDO0lBQ0gsQ0FBQzs7b0lBOUJVLHVDQUF1Qzt3SEFBdkMsdUNBQXVDLDRKQUNILGdCQUFnQiw2QkNUakUsa01BTUE7MkZERWEsdUNBQXVDO2tCQUpuRCxTQUFTOytCQUNFLG1DQUFtQzt5S0FJc0IsU0FBUztzQkFBM0UsU0FBUzt1QkFBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uc1NlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdidWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXInLFxuICB0ZW1wbGF0ZVVybDogJ2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvbnNTdGVwcGVyQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgnY29udGFpbmVyJywgeyBzdGF0aWM6IGZhbHNlLCByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIGNvbnRhaW5lcjtcbiAgYnVsa09wZXJhdGlvblR5cGU6IHN0cmluZztcblxuICBwcml2YXRlIGNvbXBvbmVudDogYW55O1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICBwcml2YXRlIGJ1bGtPcHNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWZcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuYWN0aXZhdGVkUm91dGUucGFyYW1zLnN1YnNjcmliZShwYXJhbXMgPT4ge1xuICAgICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMudHlwZSkge1xuICAgICAgICB0aGlzLmJ1bGtPcGVyYXRpb25UeXBlID0gcGFyYW1zLnR5cGU7XG5cbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlXG4gICAgICAgICAgLmdldEJ1bGtUeXBlcygpXG4gICAgICAgICAgLmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LnBhdGguaW5jbHVkZXModGhpcy5idWxrT3BlcmF0aW9uVHlwZSkpLmNvbXBvbmVudDtcblxuICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KSB7XG4gICAgaWYgKGNvbXBvbmVudCkge1xuICAgICAgdGhpcy5jb250YWluZXIuY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudCk7XG4gICAgfVxuICB9XG59XG4iLCI8Yzh5LXRpdGxlPnt7ICdBZGQgYnVsayBvcGVyYXRpb24nIHwgdHJhbnNsYXRlIH19PC9jOHktdGl0bGU+XG48ZGl2IGNsYXNzPVwiY2FyZCBjYXJkLS1ncmlkLS1mdWxscGFnZVwiPlxuICA8ZGl2IGNsYXNzPVwiZC1jb250ZW50c1wiPlxuICAgIDx0ZW1wbGF0ZSAjY29udGFpbmVyPjwvdGVtcGxhdGU+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=