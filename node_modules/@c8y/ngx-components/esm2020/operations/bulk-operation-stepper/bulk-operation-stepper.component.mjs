import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChild } from '@angular/core';
import { AlertService, C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { CreateBulkOperationDetailsComponent } from '@c8y/ngx-components/operations/create-bulk-operation-details';
import { BULK_OPERATION_EVENT } from '@c8y/ngx-components/operations/product-experience';
import { get } from 'lodash-es';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { CustomStep } from './custom-step.directive';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/operations/bulk-operations-service";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/stepper";
import * as i5 from "@c8y/ngx-components/operations/device-selector";
import * as i6 from "@c8y/ngx-components/operations/create-bulk-operation-details";
import * as i7 from "@c8y/ngx-components/operations/operation-summary";
export class BulkOperationStepper {
    constructor(bulkOperationService, modal, alert) {
        this.bulkOperationService = bulkOperationService;
        this.modal = modal;
        this.alert = alert;
        this.BULK_OPERATION_EVENT = BULK_OPERATION_EVENT;
        this.selectionChange = new EventEmitter();
        this.steps = [];
        this.showStepper = false;
        this.showButtons = false;
        this.stepperButtonsLabels = { custom: gettext('Schedule') };
        this.deviceTypesSubject$ = new Subject();
        this.endSubscriptions = new Subject();
        this.deviceTypes$ = this.deviceTypesSubject$.asObservable();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            // wait for the next event loop turn as `steps` has already been checked in this CD cycle
            this.steps = this.customSteps.toArray();
            this.showStepper = true;
            setTimeout(() => {
                // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered
                this.showButtons = true;
                if (this.stepper) {
                    this.stepper.selectionChange.pipe(takeUntil(this.endSubscriptions)).subscribe(event => {
                        this.selectionChange.next(event);
                    });
                    this.operationDetailsForm =
                        this.createBulkOperationDetailsComponent.fgOperationDescription;
                }
            });
        });
    }
    changeDeviceTypes(deviceTypes) {
        if (deviceTypes) {
            this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);
        }
        else {
            this.deviceTypesSubject$.next([]);
        }
    }
    async confirmDeviceSelection($event) {
        if (!this.deviceQueryString) {
            try {
                await this.modal.confirm(gettext('All devices selected'), gettext('You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'), Status.WARNING, { ok: gettext('Schedule for all devices'), cancel: gettext('Cancel and select devices') });
                $event.step.completed = true;
                $event.stepper.next();
                this.operationDetails = this.retrieveOperationDetails
                    ? await this.retrieveOperationDetails()
                    : undefined;
            }
            catch (ex) {
                // Intentionally empty
            }
        }
        else {
            $event.step.completed = true;
            $event.stepper.next();
            this.operationDetails = this.retrieveOperationDetails
                ? await this.retrieveOperationDetails()
                : undefined;
        }
        this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(get(this.operationDetails, 'prototype'));
        if (this.operationDetailsForm &&
            get(this.operationDetailsForm, 'controls.description.pristine') &&
            this.operationDetails) {
            this.operationDetailsForm.patchValue({
                description: get(this.operationDetails, 'prototype.description')
            });
        }
    }
    cancel() {
        this.close();
    }
    async scheduleBulkOperation() {
        this.pendingStatus = true;
        try {
            this.operationDetails.prototype.description = get(this.operationDetailsForm, 'controls.description.value');
            this.operationDetails.note = get(this.operationDetailsForm, 'controls.note.value');
            this.operationDetails.schedule = get(this.operationDetailsForm, 'controls.schedule.value');
            await this.bulkOperationService.scheduleBulkOperation(this.deviceQueryString, this.operationDetails);
            this.alert.success(gettext('New bulk operation scheduled.'));
            this.close();
        }
        catch (ex) {
            this.alert.addServerFailure(ex);
        }
        this.pendingStatus = false;
    }
    ngOnDestroy() {
        this.endSubscriptions.next();
        this.endSubscriptions.complete();
    }
    close() {
        this.stepper.reset();
        this.bulkOperationService.returnToBulkOperationOverview();
    }
}
BulkOperationStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationStepper, deps: [{ token: i1.BulkOperationsService }, { token: i2.ModalService }, { token: i2.AlertService }], target: i0.ɵɵFactoryTarget.Component });
BulkOperationStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: BulkOperationStepper, selector: "c8y-bulk-operation-stepper", inputs: { type: "type" }, outputs: { selectionChange: "selectionChange" }, queries: [{ propertyName: "customSteps", predicate: CustomStep }], viewQueries: [{ propertyName: "stepper", first: true, predicate: C8yStepper, descendants: true }, { propertyName: "createBulkOperationDetailsComponent", first: true, predicate: CreateBulkOperationDetailsComponent, descendants: true }], ngImport: i0, template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"d-col no-align-items fit-h c8y-stepper--no-btns a-i-center\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-xs-10', 'col-sm-8', 'm-t-24', 'm-b-40', 'p-0', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n    c8yProductExperience\n    [actionName]=\"BULK_OPERATION_EVENT\"\n    [actionData]=\"{ bulkOperationType: type }\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Filter target devices' | translate\">\n      <div class=\"card-block p-b-0 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Filter target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block flex-no-shrink p-b-0 p-t-0 separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"d-flex j-c-center p-t-8 p-b-8\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-operation-summary\n                  [name]=\"operationDetails?.name | translate\"\n                  [description]=\"operationDetails?.description | translate\"\n                  [deviceQueryString]=\"deviceQueryString\"\n                ></c8y-operation-summary>\n              </div>\n            </div>\n            <div class=\"d-flex j-c-center\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-create-bulk-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-create-bulk-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.C8yStepper, selector: "c8y-stepper", inputs: ["disableDefaultIcons", "disableProgressButtons", "customClasses", "hideStepProgress", "useStepLabelsAsTitlesOnly"], outputs: ["onStepChange"] }, { kind: "component", type: i4.CdkStep, selector: "cdk-step", inputs: ["stepControl", "label", "errorMessage", "aria-label", "aria-labelledby", "state", "editable", "optional", "completed", "hasError"], outputs: ["interacted"], exportAs: ["cdkStep"] }, { kind: "component", type: i2.C8yStepperButtons, selector: "c8y-stepper-buttons", inputs: ["labels", "pending", "disabled", "showButtons"], outputs: ["onCancel", "onNext", "onBack", "onCustom"] }, { kind: "directive", type: i2.ProductExperienceDirective, selector: "[c8yProductExperience]", inputs: ["actionName", "actionData", "inherit", "suppressDataOverriding"] }, { kind: "component", type: i5.DeviceSelectorComponent, selector: "c8y-device-selector", inputs: ["deviceTypes"], outputs: ["onDeviceQueryStringChange"] }, { kind: "component", type: i6.CreateBulkOperationDetailsComponent, selector: "c8y-create-bulk-operation-details", inputs: ["bulkOperationType"] }, { kind: "component", type: i7.OperationSummaryComponent, selector: "c8y-operation-summary", inputs: ["name", "description", "deviceQueryString"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationStepper, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-bulk-operation-stepper', template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"d-col no-align-items fit-h c8y-stepper--no-btns a-i-center\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-xs-10', 'col-sm-8', 'm-t-24', 'm-b-40', 'p-0', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n    c8yProductExperience\n    [actionName]=\"BULK_OPERATION_EVENT\"\n    [actionData]=\"{ bulkOperationType: type }\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Filter target devices' | translate\">\n      <div class=\"card-block p-b-0 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Filter target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block flex-no-shrink p-b-0 p-t-0 separator-bottom col-xs-12\">\n        <div class=\"d-flex j-c-center p-b-8 p-t-4\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <h4 class=\"text-center text-normal m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"d-flex j-c-center p-t-8 p-b-8\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-operation-summary\n                  [name]=\"operationDetails?.name | translate\"\n                  [description]=\"operationDetails?.description | translate\"\n                  [deviceQueryString]=\"deviceQueryString\"\n                ></c8y-operation-summary>\n              </div>\n            </div>\n            <div class=\"d-flex j-c-center\">\n              <div class=\"col-xs-12 col-sm-6\">\n                <c8y-create-bulk-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-create-bulk-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator fit-w sticky-bottom bg-level-0\"\n        *ngIf=\"showButtons\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BulkOperationsService }, { type: i2.ModalService }, { type: i2.AlertService }]; }, propDecorators: { type: [{
                type: Input
            }], selectionChange: [{
                type: Output
            }], customSteps: [{
                type: ContentChildren,
                args: [CustomStep]
            }], stepper: [{
                type: ViewChild,
                args: [C8yStepper, { static: false }]
            }], createBulkOperationDetailsComponent: [{
                type: ViewChild,
                args: [CreateBulkOperationDetailsComponent, { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXIvYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXIvYnVsay1vcGVyYXRpb24tc3RlcHBlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsU0FBUyxFQUNULGVBQWUsRUFDZixZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFOUYsT0FBTyxFQUNMLHFCQUFxQixFQUd0QixNQUFNLHdEQUF3RCxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ25ILE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7Ozs7QUFNckQsTUFBTSxPQUFPLG9CQUFvQjtJQTJCL0IsWUFDVSxvQkFBMkMsRUFDM0MsS0FBbUIsRUFDbkIsS0FBbUI7UUFGbkIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF1QjtRQUMzQyxVQUFLLEdBQUwsS0FBSyxDQUFjO1FB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dGVwLCBTdGVwcGVyU2VsZWN0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZHJlbixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25EZXN0cm95LFxuICBPdXRwdXQsXG4gIFF1ZXJ5TGlzdCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBDOHlTdGVwcGVyLCBnZXR0ZXh0LCBNb2RhbFNlcnZpY2UsIFN0YXR1cyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT3BlcmF0aW9uU2NoZWR1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc2NoZWR1bGVyJztcbmltcG9ydCB7XG4gIEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgQnVsa09wZXJhdGlvblR5cGUsXG4gIE9wZXJhdGlvbkRldGFpbHNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IENyZWF0ZUJ1bGtPcGVyYXRpb25EZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2NyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzJztcbmltcG9ydCB7IEJVTEtfT1BFUkFUSU9OX0VWRU5UIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL3Byb2R1Y3QtZXhwZXJpZW5jZSc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ3VzdG9tU3RlcCB9IGZyb20gJy4vY3VzdG9tLXN0ZXAuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJ1bGstb3BlcmF0aW9uLXN0ZXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJ2J1bGstb3BlcmF0aW9uLXN0ZXBwZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25TdGVwcGVyIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgQlVMS19PUEVSQVRJT05fRVZFTlQgPSBCVUxLX09QRVJBVElPTl9FVkVOVDtcblxuICBASW5wdXQoKSB0eXBlOiBCdWxrT3BlcmF0aW9uVHlwZSB8IHN0cmluZztcbiAgQE91dHB1dCgpIHNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPFN0ZXBwZXJTZWxlY3Rpb25FdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBDb250ZW50Q2hpbGRyZW4oQ3VzdG9tU3RlcCkgY3VzdG9tU3RlcHM6IFF1ZXJ5TGlzdDxDdXN0b21TdGVwPjtcbiAgQFZpZXdDaGlsZChDOHlTdGVwcGVyLCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgc3RlcHBlcjogQzh5U3RlcHBlcjtcbiAgQFZpZXdDaGlsZChDcmVhdGVCdWxrT3BlcmF0aW9uRGV0YWlsc0NvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIGNyZWF0ZUJ1bGtPcGVyYXRpb25EZXRhaWxzQ29tcG9uZW50OiBDcmVhdGVCdWxrT3BlcmF0aW9uRGV0YWlsc0NvbXBvbmVudDtcblxuICBzdGVwczogQ3VzdG9tU3RlcFtdID0gW107XG4gIHNob3dTdGVwcGVyID0gZmFsc2U7XG4gIHNob3dCdXR0b25zID0gZmFsc2U7XG4gIHBlbmRpbmdTdGF0dXM6IGJvb2xlYW47XG4gIHN0ZXBwZXJCdXR0b25zTGFiZWxzID0geyBjdXN0b206IGdldHRleHQoJ1NjaGVkdWxlJykgfTtcbiAgZGV2aWNlVHlwZXMkOiBPYnNlcnZhYmxlPHN0cmluZ1tdPjtcbiAgZGV2aWNlUXVlcnlTdHJpbmc6IHN0cmluZztcbiAgYnVsa09wZXJhdGlvblR5cGU6IEJ1bGtPcGVyYXRpb25UeXBlO1xuICBzY2hlZHVsZURhdGE6IE9wZXJhdGlvblNjaGVkdWxlO1xuICBvcGVyYXRpb25EZXRhaWxzRm9ybTogRm9ybUdyb3VwO1xuICBvcGVyYXRpb25EZXRhaWxzOiBPcGVyYXRpb25EZXRhaWxzO1xuICByZXRyaWV2ZU9wZXJhdGlvbkRldGFpbHM6ICgpID0+IE9wZXJhdGlvbkRldGFpbHMgfCBQcm9taXNlPE9wZXJhdGlvbkRldGFpbHM+O1xuXG4gIHByaXZhdGUgZGV2aWNlVHlwZXNTdWJqZWN0JDogU3ViamVjdDxzdHJpbmdbXT4gPSBuZXcgU3ViamVjdCgpO1xuICBwcml2YXRlIGVuZFN1YnNjcmlwdGlvbnM6IFN1YmplY3Q8dm9pZD4gPSBuZXcgU3ViamVjdCgpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvblNlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsOiBNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMuZGV2aWNlVHlwZXMkID0gdGhpcy5kZXZpY2VUeXBlc1N1YmplY3QkLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgLy8gd2FpdCBmb3IgdGhlIG5leHQgZXZlbnQgbG9vcCB0dXJuIGFzIGBzdGVwc2AgaGFzIGFscmVhZHkgYmVlbiBjaGVja2VkIGluIHRoaXMgQ0QgY3ljbGVcbiAgICAgIHRoaXMuc3RlcHMgPSB0aGlzLmN1c3RvbVN0ZXBzLnRvQXJyYXkoKTtcbiAgICAgIHRoaXMuc2hvd1N0ZXBwZXIgPSB0cnVlO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIC8vIHBvc3Rwb25lIHJlbmRlcmluZyBvZiBidXR0b25zIGZvciBjdXN0b20gc3RlcHMgdG8gdGhlIHBvaW50IHdoZXJlIGN1c3RvbSBzdGVwcyBoYXZlIGFscmVhZHkgYmVlbiByZW5kZXJlZFxuICAgICAgICB0aGlzLnNob3dCdXR0b25zID0gdHJ1ZTtcbiAgICAgICAgaWYgKHRoaXMuc3RlcHBlcikge1xuICAgICAgICAgIHRoaXMuc3RlcHBlci5zZWxlY3Rpb25DaGFuZ2UucGlwZSh0YWtlVW50aWwodGhpcy5lbmRTdWJzY3JpcHRpb25zKSkuc3Vic2NyaWJlKGV2ZW50ID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uQ2hhbmdlLm5leHQoZXZlbnQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlsc0Zvcm0gPVxuICAgICAgICAgICAgdGhpcy5jcmVhdGVCdWxrT3BlcmF0aW9uRGV0YWlsc0NvbXBvbmVudC5mZ09wZXJhdGlvbkRlc2NyaXB0aW9uO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGNoYW5nZURldmljZVR5cGVzKGRldmljZVR5cGVzOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICAgIGlmIChkZXZpY2VUeXBlcykge1xuICAgICAgdGhpcy5kZXZpY2VUeXBlc1N1YmplY3QkLm5leHQoQXJyYXkuaXNBcnJheShkZXZpY2VUeXBlcykgPyBkZXZpY2VUeXBlcyA6IFtkZXZpY2VUeXBlc10pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRldmljZVR5cGVzU3ViamVjdCQubmV4dChbXSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY29uZmlybURldmljZVNlbGVjdGlvbigkZXZlbnQ6IHsgc3RlcHBlcjogQzh5U3RlcHBlcjsgc3RlcDogQ2RrU3RlcCB9KSB7XG4gICAgaWYgKCF0aGlzLmRldmljZVF1ZXJ5U3RyaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLm1vZGFsLmNvbmZpcm0oXG4gICAgICAgICAgZ2V0dGV4dCgnQWxsIGRldmljZXMgc2VsZWN0ZWQnKSxcbiAgICAgICAgICBnZXR0ZXh0KFxuICAgICAgICAgICAgJ1lvdSBhcmUgYWJvdXQgdG8gc2NoZWR1bGUgdGhlIGJ1bGsgb3BlcmF0aW9uIHRvIGJlIGV4ZWN1dGVkIGZvciBhbGwgZGV2aWNlcy4gRG8geW91IHdhbnQgdG8gcHJvY2VlZD8nXG4gICAgICAgICAgKSxcbiAgICAgICAgICBTdGF0dXMuV0FSTklORyxcbiAgICAgICAgICB7IG9rOiBnZXR0ZXh0KCdTY2hlZHVsZSBmb3IgYWxsIGRldmljZXMnKSwgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwgYW5kIHNlbGVjdCBkZXZpY2VzJykgfVxuICAgICAgICApO1xuICAgICAgICAkZXZlbnQuc3RlcC5jb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgICAkZXZlbnQuc3RlcHBlci5uZXh0KCk7XG4gICAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlscyA9IHRoaXMucmV0cmlldmVPcGVyYXRpb25EZXRhaWxzXG4gICAgICAgICAgPyBhd2FpdCB0aGlzLnJldHJpZXZlT3BlcmF0aW9uRGV0YWlscygpXG4gICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAvLyBJbnRlbnRpb25hbGx5IGVtcHR5XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICRldmVudC5zdGVwLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAkZXZlbnQuc3RlcHBlci5uZXh0KCk7XG4gICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHMgPSB0aGlzLnJldHJpZXZlT3BlcmF0aW9uRGV0YWlsc1xuICAgICAgICA/IGF3YWl0IHRoaXMucmV0cmlldmVPcGVyYXRpb25EZXRhaWxzKClcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgdGhpcy5idWxrT3BlcmF0aW9uVHlwZSA9IHRoaXMuYnVsa09wZXJhdGlvblNlcnZpY2UucmV0cmlldmVCdWxrT3BlcmF0aW9uVHlwZShcbiAgICAgIGdldCh0aGlzLm9wZXJhdGlvbkRldGFpbHMsICdwcm90b3R5cGUnKVxuICAgICk7XG4gICAgaWYgKFxuICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzRm9ybSAmJlxuICAgICAgZ2V0KHRoaXMub3BlcmF0aW9uRGV0YWlsc0Zvcm0sICdjb250cm9scy5kZXNjcmlwdGlvbi5wcmlzdGluZScpICYmXG4gICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHNcbiAgICApIHtcbiAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlsc0Zvcm0ucGF0Y2hWYWx1ZSh7XG4gICAgICAgIGRlc2NyaXB0aW9uOiBnZXQodGhpcy5vcGVyYXRpb25EZXRhaWxzLCAncHJvdG90eXBlLmRlc2NyaXB0aW9uJylcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLmNsb3NlKCk7XG4gIH1cblxuICBhc3luYyBzY2hlZHVsZUJ1bGtPcGVyYXRpb24oKSB7XG4gICAgdGhpcy5wZW5kaW5nU3RhdHVzID0gdHJ1ZTtcblxuICAgIHRyeSB7XG4gICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHMucHJvdG90eXBlLmRlc2NyaXB0aW9uID0gZ2V0KFxuICAgICAgICB0aGlzLm9wZXJhdGlvbkRldGFpbHNGb3JtLFxuICAgICAgICAnY29udHJvbHMuZGVzY3JpcHRpb24udmFsdWUnXG4gICAgICApO1xuICAgICAgdGhpcy5vcGVyYXRpb25EZXRhaWxzLm5vdGUgPSBnZXQodGhpcy5vcGVyYXRpb25EZXRhaWxzRm9ybSwgJ2NvbnRyb2xzLm5vdGUudmFsdWUnKTtcbiAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlscy5zY2hlZHVsZSA9IGdldCh0aGlzLm9wZXJhdGlvbkRldGFpbHNGb3JtLCAnY29udHJvbHMuc2NoZWR1bGUudmFsdWUnKTtcblxuICAgICAgYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uU2VydmljZS5zY2hlZHVsZUJ1bGtPcGVyYXRpb24oXG4gICAgICAgIHRoaXMuZGV2aWNlUXVlcnlTdHJpbmcsXG4gICAgICAgIHRoaXMub3BlcmF0aW9uRGV0YWlsc1xuICAgICAgKTtcbiAgICAgIHRoaXMuYWxlcnQuc3VjY2VzcyhnZXR0ZXh0KCdOZXcgYnVsayBvcGVyYXRpb24gc2NoZWR1bGVkLicpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGV4KTtcbiAgICB9XG5cbiAgICB0aGlzLnBlbmRpbmdTdGF0dXMgPSBmYWxzZTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuZW5kU3Vic2NyaXB0aW9ucy5uZXh0KCk7XG4gICAgdGhpcy5lbmRTdWJzY3JpcHRpb25zLmNvbXBsZXRlKCk7XG4gIH1cblxuICBwcml2YXRlIGNsb3NlKCkge1xuICAgIHRoaXMuc3RlcHBlci5yZXNldCgpO1xuICAgIHRoaXMuYnVsa09wZXJhdGlvblNlcnZpY2UucmV0dXJuVG9CdWxrT3BlcmF0aW9uT3ZlcnZpZXcoKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImZpdC1oXCI+XG4gIDxjOHktc3RlcHBlclxuICAgIGNsYXNzPVwiZC1jb2wgbm8tYWxpZ24taXRlbXMgZml0LWggYzh5LXN0ZXBwZXItLW5vLWJ0bnMgYS1pLWNlbnRlclwiXG4gICAgbGluZWFyXG4gICAgW2Rpc2FibGVEZWZhdWx0SWNvbnNdPVwieyBlZGl0OiB0cnVlLCBkb25lOiBmYWxzZSB9XCJcbiAgICBbY3VzdG9tQ2xhc3Nlc109XCJbJ2NvbC14cy0xMCcsICdjb2wtc20tOCcsICdtLXQtMjQnLCAnbS1iLTQwJywgJ3AtMCcsICdmbGV4LW5vLXNocmluayddXCJcbiAgICAqbmdJZj1cInNob3dTdGVwcGVyXCJcbiAgICBjOHlQcm9kdWN0RXhwZXJpZW5jZVxuICAgIFthY3Rpb25OYW1lXT1cIkJVTEtfT1BFUkFUSU9OX0VWRU5UXCJcbiAgICBbYWN0aW9uRGF0YV09XCJ7IGJ1bGtPcGVyYXRpb25UeXBlOiB0eXBlIH1cIlxuICA+XG4gICAgPCEtLSBDVVNUT00gU1RFUFMgMSB0byBOLTIgLS0+XG4gICAgPGNkay1zdGVwXG4gICAgICAqbmdGb3I9XCJsZXQgc3RlcCBvZiBzdGVwc1wiXG4gICAgICBbbGFiZWxdPVwic3RlcC5sYWJlbCB8IHRyYW5zbGF0ZVwiXG4gICAgICBbY29tcGxldGVkXT1cInN0ZXAuY29tcGxldGVkXCJcbiAgICA+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwic3RlcC50ZW1wbGF0ZVJlZlwiPjwvbmctY29udGFpbmVyPlxuICAgICAgPGM4eS1zdGVwcGVyLWJ1dHRvbnNcbiAgICAgICAgY2xhc3M9XCJkLWJsb2NrIGNhcmQtZm9vdGVyIHAtMjQgc2VwYXJhdG9yIGZpdC13IHN0aWNreS1ib3R0b20gYmctbGV2ZWwtMFwiXG4gICAgICAgICpuZ0lmPVwic2hvd0J1dHRvbnNcIlxuICAgICAgICBbZGlzYWJsZWRdPVwic3RlcC5idXR0b25zRGlzYWJsZWRcIlxuICAgICAgICAob25OZXh0KT1cInN0ZXAub25OZXh0KCRldmVudClcIlxuICAgICAgICAob25DYW5jZWwpPVwiY2FuY2VsKClcIlxuICAgICAgPjwvYzh5LXN0ZXBwZXItYnV0dG9ucz5cbiAgICA8L2Nkay1zdGVwPlxuICAgIDwhLS0gU1RFUCBOLTEgLSBEYXRhLWdyaWQgLS0+XG4gICAgPGNkay1zdGVwIFtsYWJlbF09XCInRmlsdGVyIHRhcmdldCBkZXZpY2VzJyB8IHRyYW5zbGF0ZVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYmxvY2sgcC1iLTAgcC10LTAgZmxleC1uby1zaHJpbmsgc2VwYXJhdG9yLWJvdHRvbSBjb2wteHMtMTJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqLWMtY2VudGVyIHAtYi04IHAtdC00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtc20tNlwiPlxuICAgICAgICAgICAgPGg0IGNsYXNzPVwidGV4dC1jZW50ZXIgdGV4dC1ub3JtYWwgbS1iLTE2XCI+XG4gICAgICAgICAgICAgIHt7ICdGaWx0ZXIgdGFyZ2V0IGRldmljZXMnIHwgdHJhbnNsYXRlIH19XG4gICAgICAgICAgICA8L2g0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTEyIGZsZXgtZ3JvdyBuby1ndXR0ZXJcIj5cbiAgICAgICAgPGM4eS1kZXZpY2Utc2VsZWN0b3JcbiAgICAgICAgICBbZGV2aWNlVHlwZXNdPVwiZGV2aWNlVHlwZXMkXCJcbiAgICAgICAgICAob25EZXZpY2VRdWVyeVN0cmluZ0NoYW5nZSk9XCJkZXZpY2VRdWVyeVN0cmluZyA9ICRldmVudFwiXG4gICAgICAgID48L2M4eS1kZXZpY2Utc2VsZWN0b3I+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxjOHktc3RlcHBlci1idXR0b25zXG4gICAgICAgIGNsYXNzPVwiZC1ibG9jayBjYXJkLWZvb3RlciBwLTI0IHNlcGFyYXRvciBmaXQtdyBzdGlja3ktYm90dG9tIGJnLWxldmVsLTBcIlxuICAgICAgICAqbmdJZj1cInNob3dCdXR0b25zXCJcbiAgICAgICAgKG9uTmV4dCk9XCJjb25maXJtRGV2aWNlU2VsZWN0aW9uKCRldmVudClcIlxuICAgICAgICAob25DYW5jZWwpPVwiY2FuY2VsKClcIlxuICAgICAgPjwvYzh5LXN0ZXBwZXItYnV0dG9ucz5cbiAgICA8L2Nkay1zdGVwPlxuXG4gICAgPCEtLSBTVEVQIE4gLSBTY2hlZHVsZXIgLS0+XG4gICAgPGNkay1zdGVwIFtsYWJlbF09XCInQ29uZmlybSBhbmQgc2NoZWR1bGUgYnVsayBvcGVyYXRpb24nIHwgdHJhbnNsYXRlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ibG9jayBmbGV4LW5vLXNocmluayBwLWItMCBwLXQtMCBzZXBhcmF0b3ItYm90dG9tIGNvbC14cy0xMlwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGotYy1jZW50ZXIgcC1iLTggcC10LTRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTEyIGNvbC1zbS02XCI+XG4gICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LW5vcm1hbCBtLWItMTZcIj5cbiAgICAgICAgICAgICAge3sgJ0NvbmZpcm0gYW5kIHNjaGVkdWxlIGJ1bGsgb3BlcmF0aW9uJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBmbGV4LWdyb3cgbm8tZ3V0dGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWlubmVyLXNjcm9sbCBmaXQtaFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrIHAtYi0wXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGotYy1jZW50ZXIgcC10LTggcC1iLThcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtc20tNlwiPlxuICAgICAgICAgICAgICAgIDxjOHktb3BlcmF0aW9uLXN1bW1hcnlcbiAgICAgICAgICAgICAgICAgIFtuYW1lXT1cIm9wZXJhdGlvbkRldGFpbHM/Lm5hbWUgfCB0cmFuc2xhdGVcIlxuICAgICAgICAgICAgICAgICAgW2Rlc2NyaXB0aW9uXT1cIm9wZXJhdGlvbkRldGFpbHM/LmRlc2NyaXB0aW9uIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICAgIFtkZXZpY2VRdWVyeVN0cmluZ109XCJkZXZpY2VRdWVyeVN0cmluZ1wiXG4gICAgICAgICAgICAgICAgPjwvYzh5LW9wZXJhdGlvbi1zdW1tYXJ5PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqLWMtY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTZcIj5cbiAgICAgICAgICAgICAgICA8Yzh5LWNyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzXG4gICAgICAgICAgICAgICAgICBbYnVsa09wZXJhdGlvblR5cGVdPVwiYnVsa09wZXJhdGlvblR5cGVcIlxuICAgICAgICAgICAgICAgID48L2M4eS1jcmVhdGUtYnVsay1vcGVyYXRpb24tZGV0YWlscz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxjOHktc3RlcHBlci1idXR0b25zXG4gICAgICAgIGNsYXNzPVwiZC1ibG9jayBjYXJkLWZvb3RlciBwLTI0IHNlcGFyYXRvciBmaXQtdyBzdGlja3ktYm90dG9tIGJnLWxldmVsLTBcIlxuICAgICAgICAqbmdJZj1cInNob3dCdXR0b25zXCJcbiAgICAgICAgW2xhYmVsc109XCJzdGVwcGVyQnV0dG9uc0xhYmVsc1wiXG4gICAgICAgIFtwZW5kaW5nXT1cInBlbmRpbmdTdGF0dXNcIlxuICAgICAgICBbZGlzYWJsZWRdPVwib3BlcmF0aW9uRGV0YWlsc0Zvcm0/LmludmFsaWRcIlxuICAgICAgICAob25DYW5jZWwpPVwiY2FuY2VsKClcIlxuICAgICAgICAob25DdXN0b20pPVwic2NoZWR1bGVCdWxrT3BlcmF0aW9uKClcIlxuICAgICAgPjwvYzh5LXN0ZXBwZXItYnV0dG9ucz5cbiAgICA8L2Nkay1zdGVwPlxuICA8L2M4eS1zdGVwcGVyPlxuPC9kaXY+XG4iXX0=