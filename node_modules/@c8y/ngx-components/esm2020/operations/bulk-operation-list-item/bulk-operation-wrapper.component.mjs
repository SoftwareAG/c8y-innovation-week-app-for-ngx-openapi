import { Component, Inject, Input, Optional, ViewChild } from '@angular/core';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { assign } from 'lodash-es';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { BULK_OPERATION_WRAPPER_MODAL_BODY_COMPONENT } from './bulk-operation-wrapper.model';
import { ModalBodyHostDirective } from './modal-body-host.directive';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/operations/bulk-operations-service";
import * as i2 from "ngx-bootstrap/modal";
import * as i3 from "./modal-body-host.directive";
import * as i4 from "@c8y/ngx-components";
export class BulkOperationWrapperComponent {
    constructor(bulkOperationsService, modalRef, modalService, modalBodyConfig) {
        this.bulkOperationsService = bulkOperationsService;
        this.modalRef = modalRef;
        this.modalService = modalService;
        this.modalBodyConfig = modalBodyConfig;
        this.destroyed$ = new Subject();
    }
    ngOnInit() {
        if (this.modalBodyConfig) {
            const componentRef = this.modalBodyHost.viewContainerRef.createComponent(this.modalBodyConfig.component);
            assign(componentRef.instance, this.modalBodyConfig.config);
            componentRef.instance.bulkOperation = this.bulkOperation;
            componentRef.instance.showFailedOperation
                .pipe(takeUntil(this.destroyed$))
                .subscribe(event => this.openDetails(event));
        }
    }
    ngOnDestroy() {
        this.destroyed$.next();
        this.destroyed$.complete();
    }
    // openDetails function needs to be defined in the both places (component and the service) to avoid circular dependency.
    async openDetails(bulkOperationId) {
        const bulkOperation = (await this.bulkOperationsService.getBulkOperationById(bulkOperationId)).data;
        const initialState = { bulkOperation };
        this.modalService.show(BulkOperationWrapperComponent, {
            initialState,
            class: 'modal-lg',
            ariaDescribedby: 'modal-body',
            ariaLabelledBy: 'modal-title'
        });
    }
}
BulkOperationWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationWrapperComponent, deps: [{ token: i1.BulkOperationsService }, { token: i2.BsModalRef }, { token: i2.BsModalService }, { token: BULK_OPERATION_WRAPPER_MODAL_BODY_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Component });
BulkOperationWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: BulkOperationWrapperComponent, selector: "c8y-bulk-operations-wrapper", inputs: { bulkOperation: "bulkOperation" }, viewQueries: [{ propertyName: "modalBodyHost", first: true, predicate: ModalBodyHostDirective, descendants: true, static: true }], ngImport: i0, template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3 id=\"modal-title\">{{ 'Bulk operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\" id=\"modal-body\">\n    <ng-container modalBodyHost></ng-container>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      (click)=\"modalRef.hide()\"\n    >\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i3.ModalBodyHostDirective, selector: "[modalBodyHost]" }, { kind: "pipe", type: i4.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BulkOperationWrapperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-bulk-operations-wrapper', template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3 id=\"modal-title\">{{ 'Bulk operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\" id=\"modal-body\">\n    <ng-container modalBodyHost></ng-container>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      (click)=\"modalRef.hide()\"\n    >\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BulkOperationsService }, { type: i2.BsModalRef }, { type: i2.BsModalService }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [BULK_OPERATION_WRAPPER_MODAL_BODY_COMPONENT]
                }] }]; }, propDecorators: { bulkOperation: [{
                type: Input
            }], modalBodyHost: [{
                type: ViewChild,
                args: [ModalBodyHostDirective, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24td3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWxpc3QtaXRlbS9idWxrLW9wZXJhdGlvbi13cmFwcGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tbGlzdC1pdGVtL2J1bGstb3BlcmF0aW9uLXdyYXBwZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFxQixRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQy9GLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbkMsT0FBTyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBR0wsMkNBQTJDLEVBQzVDLE1BQU0sZ0NBQWdDLENBQUM7QUFDeEMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7OztBQUtyRSxNQUFNLE9BQU8sNkJBQTZCO0lBUXhDLFlBQ1MscUJBQTRDLEVBQzVDLFFBQW9CLEVBQ25CLFlBQTRCLEVBRzVCLGVBQTJEO1FBTDVELDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsYUFBUSxHQUFSLFFBQVEsQ0FBWTtRQUNuQixpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7UUFHNUIsb0JBQWUsR0FBZixlQUFlLENBQTRDO1FBUjdELGVBQVUsR0FBa0IsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVMvQyxDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixNQUFNLFlBQVksR0FDaEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQ2pELElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUMvQixDQUFDO1lBQ0osTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMzRCxZQUFZLENBQUMsUUFBUSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1lBQ3pELFlBQVksQ0FBQyxRQUFRLENBQUMsbUJBQW1CO2lCQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztpQkFDaEMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELHdIQUF3SDtJQUN4SCxLQUFLLENBQUMsV0FBVyxDQUFDLGVBQWdDO1FBQ2hELE1BQU0sYUFBYSxHQUFtQixDQUNwQyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLENBQUMsQ0FDdkUsQ0FBQyxJQUFJLENBQUM7UUFDUCxNQUFNLFlBQVksR0FBRyxFQUFFLGFBQWEsRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLDZCQUE2QixFQUFFO1lBQ3BELFlBQVk7WUFDWixLQUFLLEVBQUUsVUFBVTtZQUNqQixlQUFlLEVBQUUsWUFBWTtZQUM3QixjQUFjLEVBQUUsYUFBYTtTQUM5QixDQUFDLENBQUM7SUFDTCxDQUFDOzswSEFoRFUsNkJBQTZCLCtHQWE5QiwyQ0FBMkM7OEdBYjFDLDZCQUE2Qiw4SkFHN0Isc0JBQXNCLDhEQ3BCbkMsMmdCQW9CQTsyRkRIYSw2QkFBNkI7a0JBSnpDLFNBQVM7K0JBQ0UsNkJBQTZCOzswQkFlcEMsUUFBUTs7MEJBQ1IsTUFBTTsyQkFBQywyQ0FBMkM7NENBWjVDLGFBQWE7c0JBQXJCLEtBQUs7Z0JBR04sYUFBYTtzQkFEWixTQUFTO3VCQUFDLHNCQUFzQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE9wdGlvbmFsLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IGFzc2lnbiB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCc01vZGFsUmVmLCBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtcbiAgQnVsa09wZXJhdGlvbkRldGFpbHNNb2RhbEJvZHksXG4gIEJ1bGtPcGVyYXRpb25EZXRhaWxzTW9kYWxCb2R5Q29uZmlndXJhdGlvbixcbiAgQlVMS19PUEVSQVRJT05fV1JBUFBFUl9NT0RBTF9CT0RZX0NPTVBPTkVOVFxufSBmcm9tICcuL2J1bGstb3BlcmF0aW9uLXdyYXBwZXIubW9kZWwnO1xuaW1wb3J0IHsgTW9kYWxCb2R5SG9zdERpcmVjdGl2ZSB9IGZyb20gJy4vbW9kYWwtYm9keS1ob3N0LmRpcmVjdGl2ZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYnVsay1vcGVyYXRpb25zLXdyYXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vYnVsay1vcGVyYXRpb24td3JhcHBlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvbldyYXBwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIEBJbnB1dCgpIGJ1bGtPcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+O1xuXG4gIEBWaWV3Q2hpbGQoTW9kYWxCb2R5SG9zdERpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgbW9kYWxCb2R5SG9zdDogTW9kYWxCb2R5SG9zdERpcmVjdGl2ZTtcblxuICBwcml2YXRlIGRlc3Ryb3llZCQ6IFN1YmplY3Q8dm9pZD4gPSBuZXcgU3ViamVjdCgpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBidWxrT3BlcmF0aW9uc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwdWJsaWMgbW9kYWxSZWY6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlLFxuICAgIEBPcHRpb25hbCgpXG4gICAgQEluamVjdChCVUxLX09QRVJBVElPTl9XUkFQUEVSX01PREFMX0JPRFlfQ09NUE9ORU5UKVxuICAgIHByaXZhdGUgbW9kYWxCb2R5Q29uZmlnOiBCdWxrT3BlcmF0aW9uRGV0YWlsc01vZGFsQm9keUNvbmZpZ3VyYXRpb25cbiAgKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLm1vZGFsQm9keUNvbmZpZykge1xuICAgICAgY29uc3QgY29tcG9uZW50UmVmID1cbiAgICAgICAgdGhpcy5tb2RhbEJvZHlIb3N0LnZpZXdDb250YWluZXJSZWYuY3JlYXRlQ29tcG9uZW50PEJ1bGtPcGVyYXRpb25EZXRhaWxzTW9kYWxCb2R5PihcbiAgICAgICAgICB0aGlzLm1vZGFsQm9keUNvbmZpZy5jb21wb25lbnRcbiAgICAgICAgKTtcbiAgICAgIGFzc2lnbihjb21wb25lbnRSZWYuaW5zdGFuY2UsIHRoaXMubW9kYWxCb2R5Q29uZmlnLmNvbmZpZyk7XG4gICAgICBjb21wb25lbnRSZWYuaW5zdGFuY2UuYnVsa09wZXJhdGlvbiA9IHRoaXMuYnVsa09wZXJhdGlvbjtcbiAgICAgIGNvbXBvbmVudFJlZi5pbnN0YW5jZS5zaG93RmFpbGVkT3BlcmF0aW9uXG4gICAgICAgIC5waXBlKHRha2VVbnRpbCh0aGlzLmRlc3Ryb3llZCQpKVxuICAgICAgICAuc3Vic2NyaWJlKGV2ZW50ID0+IHRoaXMub3BlbkRldGFpbHMoZXZlbnQpKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmRlc3Ryb3llZCQubmV4dCgpO1xuICAgIHRoaXMuZGVzdHJveWVkJC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgLy8gb3BlbkRldGFpbHMgZnVuY3Rpb24gbmVlZHMgdG8gYmUgZGVmaW5lZCBpbiB0aGUgYm90aCBwbGFjZXMgKGNvbXBvbmVudCBhbmQgdGhlIHNlcnZpY2UpIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY3kuXG4gIGFzeW5jIG9wZW5EZXRhaWxzKGJ1bGtPcGVyYXRpb25JZDogc3RyaW5nIHwgbnVtYmVyKSB7XG4gICAgY29uc3QgYnVsa09wZXJhdGlvbjogSU9wZXJhdGlvbkJ1bGsgPSAoXG4gICAgICBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRCdWxrT3BlcmF0aW9uQnlJZChidWxrT3BlcmF0aW9uSWQpXG4gICAgKS5kYXRhO1xuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHsgYnVsa09wZXJhdGlvbiB9O1xuICAgIHRoaXMubW9kYWxTZXJ2aWNlLnNob3coQnVsa09wZXJhdGlvbldyYXBwZXJDb21wb25lbnQsIHtcbiAgICAgIGluaXRpYWxTdGF0ZSxcbiAgICAgIGNsYXNzOiAnbW9kYWwtbGcnLFxuICAgICAgYXJpYURlc2NyaWJlZGJ5OiAnbW9kYWwtYm9keScsXG4gICAgICBhcmlhTGFiZWxsZWRCeTogJ21vZGFsLXRpdGxlJ1xuICAgIH0pO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwidmlld3BvcnQtbW9kYWxcIj5cbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlxuICAgIDxoMyBpZD1cIm1vZGFsLXRpdGxlXCI+e3sgJ0J1bGsgb3BlcmF0aW9uIGRldGFpbHMnIHwgdHJhbnNsYXRlIH19PC9oMz5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWlubmVyLXNjcm9sbFwiIGlkPVwibW9kYWwtYm9keVwiPlxuICAgIDxuZy1jb250YWluZXIgbW9kYWxCb2R5SG9zdD48L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWZvb3RlclwiPlxuICAgIDxidXR0b25cbiAgICAgIHRpdGxlPVwie3sgJ0Nsb3NlJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0XCJcbiAgICAgIChjbGljayk9XCJtb2RhbFJlZi5oaWRlKClcIlxuICAgID5cbiAgICAgIHt7ICdDbG9zZScgfCB0cmFuc2xhdGUgfX1cbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==