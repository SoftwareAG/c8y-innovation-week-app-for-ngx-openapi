import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';
import { DeviceProfileModule } from '@c8y/ngx-components/device-profile';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { baseUrl, BulkOperationType, hookListBulkType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { StepperFramesModule } from '@c8y/ngx-components/operations/stepper-frames';
import { ConfirmDeviceProfileSelectionStepComponent } from './confirm-device-profile-selection-step.component';
import { SelectDeviceProfileStepComponent } from './select-device-profile-step.component';
import { StepperBulkTypeDeviceProfileComponent } from './stepper-bulk-type-device-profile.component';
import * as i0 from "@angular/core";
/** Module for the 'Apply device profile' operation type stepper */
export class StepperBulkTypeDeviceProfileModule {
}
StepperBulkTypeDeviceProfileModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StepperBulkTypeDeviceProfileModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileModule, declarations: [StepperBulkTypeDeviceProfileComponent,
        SelectDeviceProfileStepComponent,
        ConfirmDeviceProfileSelectionStepComponent], imports: [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        DeviceProfileModule,
        StepperFramesModule], exports: [StepperBulkTypeDeviceProfileComponent] });
StepperBulkTypeDeviceProfileModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileModule, providers: [
        hookListBulkType({
            type: BulkOperationType.DEVICE_PROFILE,
            c8yIcon: 'c8y-device-profile',
            name: gettext('Apply device profile'),
            path: `${baseUrl}device-profile`,
            component: StepperBulkTypeDeviceProfileComponent,
            fragments: ['c8y_DeviceProfile'],
            selected: false
        })
    ], imports: [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        DeviceProfileModule,
        StepperFramesModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        StepperBulkTypeDeviceProfileComponent,
                        SelectDeviceProfileStepComponent,
                        ConfirmDeviceProfileSelectionStepComponent
                    ],
                    imports: [
                        CoreModule,
                        FormsModule,
                        ReactiveFormsModule,
                        BulkOperationStepperModule,
                        DeviceProfileModule,
                        StepperFramesModule
                    ],
                    providers: [
                        hookListBulkType({
                            type: BulkOperationType.DEVICE_PROFILE,
                            c8yIcon: 'c8y-device-profile',
                            name: gettext('Apply device profile'),
                            path: `${baseUrl}device-profile`,
                            component: StepperBulkTypeDeviceProfileComponent,
                            fragments: ['c8y_DeviceProfile'],
                            selected: false
                        })
                    ],
                    entryComponents: [StepperBulkTypeDeviceProfileComponent],
                    exports: [StepperBulkTypeDeviceProfileComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZGV2aWNlLXByb2ZpbGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNuRyxPQUFPLEVBQ0wsT0FBTyxFQUNQLGlCQUFpQixFQUNqQixnQkFBZ0IsRUFDakIsTUFBTSx3REFBd0QsQ0FBQztBQUNoRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUVwRixPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUMvRyxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRixPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQzs7QUFFckcsbUVBQW1FO0FBNkJuRSxNQUFNLE9BQU8sa0NBQWtDOzsrSEFBbEMsa0NBQWtDO2dJQUFsQyxrQ0FBa0MsaUJBMUIzQyxxQ0FBcUM7UUFDckMsZ0NBQWdDO1FBQ2hDLDBDQUEwQyxhQUcxQyxVQUFVO1FBQ1YsV0FBVztRQUNYLG1CQUFtQjtRQUNuQiwwQkFBMEI7UUFDMUIsbUJBQW1CO1FBQ25CLG1CQUFtQixhQWNYLHFDQUFxQztnSUFFcEMsa0NBQWtDLGFBZGxDO1FBQ1QsZ0JBQWdCLENBQUM7WUFDZixJQUFJLEVBQUUsaUJBQWlCLENBQUMsY0FBYztZQUN0QyxPQUFPLEVBQUUsb0JBQW9CO1lBQzdCLElBQUksRUFBRSxPQUFPLENBQUMsc0JBQXNCLENBQUM7WUFDckMsSUFBSSxFQUFFLEdBQUcsT0FBTyxnQkFBZ0I7WUFDaEMsU0FBUyxFQUFFLHFDQUFxQztZQUNoRCxTQUFTLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztZQUNoQyxRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFDO0tBQ0gsWUFqQkMsVUFBVTtRQUNWLFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsMEJBQTBCO1FBQzFCLG1CQUFtQjtRQUNuQixtQkFBbUI7MkZBZ0JWLGtDQUFrQztrQkE1QjlDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLHFDQUFxQzt3QkFDckMsZ0NBQWdDO3dCQUNoQywwQ0FBMEM7cUJBQzNDO29CQUNELE9BQU8sRUFBRTt3QkFDUCxVQUFVO3dCQUNWLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQiwwQkFBMEI7d0JBQzFCLG1CQUFtQjt3QkFDbkIsbUJBQW1CO3FCQUNwQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsZ0JBQWdCLENBQUM7NEJBQ2YsSUFBSSxFQUFFLGlCQUFpQixDQUFDLGNBQWM7NEJBQ3RDLE9BQU8sRUFBRSxvQkFBb0I7NEJBQzdCLElBQUksRUFBRSxPQUFPLENBQUMsc0JBQXNCLENBQUM7NEJBQ3JDLElBQUksRUFBRSxHQUFHLE9BQU8sZ0JBQWdCOzRCQUNoQyxTQUFTLEVBQUUscUNBQXFDOzRCQUNoRCxTQUFTLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQzs0QkFDaEMsUUFBUSxFQUFFLEtBQUs7eUJBQ2hCLENBQUM7cUJBQ0g7b0JBQ0QsZUFBZSxFQUFFLENBQUMscUNBQXFDLENBQUM7b0JBQ3hELE9BQU8sRUFBRSxDQUFDLHFDQUFxQyxDQUFDO2lCQUNqRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBGb3Jtc01vZHVsZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLXByb2ZpbGUnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBiYXNlVXJsLFxuICBCdWxrT3BlcmF0aW9uVHlwZSxcbiAgaG9va0xpc3RCdWxrVHlwZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcHBlckZyYW1lc01vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9zdGVwcGVyLWZyYW1lcyc7XG5cbmltcG9ydCB7IENvbmZpcm1EZXZpY2VQcm9maWxlU2VsZWN0aW9uU3RlcENvbXBvbmVudCB9IGZyb20gJy4vY29uZmlybS1kZXZpY2UtcHJvZmlsZS1zZWxlY3Rpb24tc3RlcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VsZWN0RGV2aWNlUHJvZmlsZVN0ZXBDb21wb25lbnQgfSBmcm9tICcuL3NlbGVjdC1kZXZpY2UtcHJvZmlsZS1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGVwcGVyQnVsa1R5cGVEZXZpY2VQcm9maWxlQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQnO1xuXG4vKiogTW9kdWxlIGZvciB0aGUgJ0FwcGx5IGRldmljZSBwcm9maWxlJyBvcGVyYXRpb24gdHlwZSBzdGVwcGVyICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTdGVwcGVyQnVsa1R5cGVEZXZpY2VQcm9maWxlQ29tcG9uZW50LFxuICAgIFNlbGVjdERldmljZVByb2ZpbGVTdGVwQ29tcG9uZW50LFxuICAgIENvbmZpcm1EZXZpY2VQcm9maWxlU2VsZWN0aW9uU3RlcENvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEJ1bGtPcGVyYXRpb25TdGVwcGVyTW9kdWxlLFxuICAgIERldmljZVByb2ZpbGVNb2R1bGUsXG4gICAgU3RlcHBlckZyYW1lc01vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBob29rTGlzdEJ1bGtUeXBlKHtcbiAgICAgIHR5cGU6IEJ1bGtPcGVyYXRpb25UeXBlLkRFVklDRV9QUk9GSUxFLFxuICAgICAgYzh5SWNvbjogJ2M4eS1kZXZpY2UtcHJvZmlsZScsXG4gICAgICBuYW1lOiBnZXR0ZXh0KCdBcHBseSBkZXZpY2UgcHJvZmlsZScpLFxuICAgICAgcGF0aDogYCR7YmFzZVVybH1kZXZpY2UtcHJvZmlsZWAsXG4gICAgICBjb21wb25lbnQ6IFN0ZXBwZXJCdWxrVHlwZURldmljZVByb2ZpbGVDb21wb25lbnQsXG4gICAgICBmcmFnbWVudHM6IFsnYzh5X0RldmljZVByb2ZpbGUnXSxcbiAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgIH0pXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1N0ZXBwZXJCdWxrVHlwZURldmljZVByb2ZpbGVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbU3RlcHBlckJ1bGtUeXBlRGV2aWNlUHJvZmlsZUNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgU3RlcHBlckJ1bGtUeXBlRGV2aWNlUHJvZmlsZU1vZHVsZSB7fVxuIl19