import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { get } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/operations/bulk-operation-stepper";
import * as i2 from "./select-device-profile-step.component";
import * as i3 from "./confirm-device-profile-selection-step.component";
import * as i4 from "@c8y/ngx-components";
export class StepperBulkTypeDeviceProfileComponent extends BaseStepperComponent {
    constructor() {
        super(...arguments);
        this.type = BulkOperationType.DEVICE_PROFILE;
    }
    goToConfirmSelection($event) {
        this.deviceTypes = get(this.selectedDeviceProfile, 'c8y_Filter.type');
        $event.stepper.next();
    }
    onDeviceProfileSelected(selectedItem) {
        this.selectedDeviceProfile = selectedItem;
    }
    retrieveOperationPrototype() {
        return {
            name: gettext('Apply device profile'),
            description: get(this.selectedDeviceProfile, 'name'),
            prototype: {
                description: `Apply device profile: ${this.selectedDeviceProfile.name}`,
                profileId: this.selectedDeviceProfile.id,
                profileName: this.selectedDeviceProfile.name,
                c8y_DeviceProfile: this.selectedDeviceProfile.c8y_DeviceProfile
            }
        };
    }
}
StepperBulkTypeDeviceProfileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
StepperBulkTypeDeviceProfileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: StepperBulkTypeDeviceProfileComponent, selector: "c8y-stepper-bulk-type-device-profile", usesInheritance: true, ngImport: i0, template: "<c8y-bulk-operation-stepper [type]=\"type\">\n  <ng-container\n    *customStep=\"\n      'Select device profile' | translate;\n      completed: !!selectedDeviceProfile;\n      buttonsDisabled: !selectedDeviceProfile;\n      onNext: goToConfirmSelection.bind(this)\n    \"\n  >\n    <c8y-select-device-profile-step\n      (deviceProfile)=\"onDeviceProfileSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-device-profile-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected device profile' | translate\">\n    <c8y-confirm-device-profile-selection-step\n      class=\"d-contents\"\n      [selectedDeviceProfile]=\"selectedDeviceProfile\"\n    ></c8y-confirm-device-profile-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n", dependencies: [{ kind: "component", type: i1.BulkOperationStepper, selector: "c8y-bulk-operation-stepper", inputs: ["type"], outputs: ["selectionChange"] }, { kind: "directive", type: i1.CustomStep, selector: "[customStep]", inputs: ["customStep", "customStepCompleted", "customStepButtonsDisabled", "customStepOnNext"] }, { kind: "component", type: i2.SelectDeviceProfileStepComponent, selector: "c8y-select-device-profile-step", outputs: ["deviceProfile"] }, { kind: "component", type: i3.ConfirmDeviceProfileSelectionStepComponent, selector: "c8y-confirm-device-profile-selection-step", inputs: ["selectedDeviceProfile"] }, { kind: "pipe", type: i4.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: StepperBulkTypeDeviceProfileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-stepper-bulk-type-device-profile', template: "<c8y-bulk-operation-stepper [type]=\"type\">\n  <ng-container\n    *customStep=\"\n      'Select device profile' | translate;\n      completed: !!selectedDeviceProfile;\n      buttonsDisabled: !selectedDeviceProfile;\n      onNext: goToConfirmSelection.bind(this)\n    \"\n  >\n    <c8y-select-device-profile-step\n      (deviceProfile)=\"onDeviceProfileSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-device-profile-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected device profile' | translate\">\n    <c8y-confirm-device-profile-selection-step\n      class=\"d-contents\"\n      [selectedDeviceProfile]=\"selectedDeviceProfile\"\n    ></c8y-confirm-device-profile-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZGV2aWNlLXByb2ZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWRldmljZS1wcm9maWxlL3N0ZXBwZXItYnVsay10eXBlLWRldmljZS1wcm9maWxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFDTCxpQkFBaUIsRUFFbEIsTUFBTSx3REFBd0QsQ0FBQztBQUNoRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7Ozs7QUFNaEMsTUFBTSxPQUFPLHFDQUFzQyxTQUFRLG9CQUFvQjtJQUovRTs7UUFLVyxTQUFJLEdBQXNCLGlCQUFpQixDQUFDLGNBQWMsQ0FBQztLQXdCckU7SUFyQkMsb0JBQW9CLENBQUMsTUFBOEM7UUFDakUsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDdEUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsdUJBQXVCLENBQUMsWUFBWTtRQUNsQyxJQUFJLENBQUMscUJBQXFCLEdBQUcsWUFBWSxDQUFDO0lBQzVDLENBQUM7SUFFUywwQkFBMEI7UUFDbEMsT0FBTztZQUNMLElBQUksRUFBRSxPQUFPLENBQUMsc0JBQXNCLENBQUM7WUFDckMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUUsTUFBTSxDQUFDO1lBQ3BELFNBQVMsRUFBRTtnQkFDVCxXQUFXLEVBQUUseUJBQXlCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3ZFLFNBQVMsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsRUFBRTtnQkFDeEMsV0FBVyxFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJO2dCQUM1QyxpQkFBaUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCO2FBQ3ZDO1NBQzNCLENBQUM7SUFDSixDQUFDOztrSUF4QlUscUNBQXFDO3NIQUFyQyxxQ0FBcUMsbUdDZmxELHl3QkFxQkE7MkZETmEscUNBQXFDO2tCQUpqRCxTQUFTOytCQUNFLHNDQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENka1N0ZXAgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJT3BlcmF0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQzh5U3RlcHBlciwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzZVN0ZXBwZXJDb21wb25lbnQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uVHlwZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXN0ZXBwZXItYnVsay10eXBlLWRldmljZS1wcm9maWxlJyxcbiAgdGVtcGxhdGVVcmw6ICdzdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3RlcHBlckJ1bGtUeXBlRGV2aWNlUHJvZmlsZUNvbXBvbmVudCBleHRlbmRzIEJhc2VTdGVwcGVyQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgdHlwZTogQnVsa09wZXJhdGlvblR5cGUgPSBCdWxrT3BlcmF0aW9uVHlwZS5ERVZJQ0VfUFJPRklMRTtcbiAgc2VsZWN0ZWREZXZpY2VQcm9maWxlOiBJTWFuYWdlZE9iamVjdDtcblxuICBnb1RvQ29uZmlybVNlbGVjdGlvbigkZXZlbnQ6IHsgc3RlcHBlcjogQzh5U3RlcHBlcjsgc3RlcDogQ2RrU3RlcCB9KSB7XG4gICAgdGhpcy5kZXZpY2VUeXBlcyA9IGdldCh0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZSwgJ2M4eV9GaWx0ZXIudHlwZScpO1xuICAgICRldmVudC5zdGVwcGVyLm5leHQoKTtcbiAgfVxuXG4gIG9uRGV2aWNlUHJvZmlsZVNlbGVjdGVkKHNlbGVjdGVkSXRlbSkge1xuICAgIHRoaXMuc2VsZWN0ZWREZXZpY2VQcm9maWxlID0gc2VsZWN0ZWRJdGVtO1xuICB9XG5cbiAgcHJvdGVjdGVkIHJldHJpZXZlT3BlcmF0aW9uUHJvdG90eXBlKCk6IE9wZXJhdGlvbkRldGFpbHMge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBnZXR0ZXh0KCdBcHBseSBkZXZpY2UgcHJvZmlsZScpLFxuICAgICAgZGVzY3JpcHRpb246IGdldCh0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZSwgJ25hbWUnKSxcbiAgICAgIHByb3RvdHlwZToge1xuICAgICAgICBkZXNjcmlwdGlvbjogYEFwcGx5IGRldmljZSBwcm9maWxlOiAke3RoaXMuc2VsZWN0ZWREZXZpY2VQcm9maWxlLm5hbWV9YCxcbiAgICAgICAgcHJvZmlsZUlkOiB0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZS5pZCxcbiAgICAgICAgcHJvZmlsZU5hbWU6IHRoaXMuc2VsZWN0ZWREZXZpY2VQcm9maWxlLm5hbWUsXG4gICAgICAgIGM4eV9EZXZpY2VQcm9maWxlOiB0aGlzLnNlbGVjdGVkRGV2aWNlUHJvZmlsZS5jOHlfRGV2aWNlUHJvZmlsZVxuICAgICAgfSBhcyB1bmtub3duIGFzIElPcGVyYXRpb25cbiAgICB9O1xuICB9XG59XG4iLCI8Yzh5LWJ1bGstb3BlcmF0aW9uLXN0ZXBwZXIgW3R5cGVdPVwidHlwZVwiPlxuICA8bmctY29udGFpbmVyXG4gICAgKmN1c3RvbVN0ZXA9XCJcbiAgICAgICdTZWxlY3QgZGV2aWNlIHByb2ZpbGUnIHwgdHJhbnNsYXRlO1xuICAgICAgY29tcGxldGVkOiAhIXNlbGVjdGVkRGV2aWNlUHJvZmlsZTtcbiAgICAgIGJ1dHRvbnNEaXNhYmxlZDogIXNlbGVjdGVkRGV2aWNlUHJvZmlsZTtcbiAgICAgIG9uTmV4dDogZ29Ub0NvbmZpcm1TZWxlY3Rpb24uYmluZCh0aGlzKVxuICAgIFwiXG4gID5cbiAgICA8Yzh5LXNlbGVjdC1kZXZpY2UtcHJvZmlsZS1zdGVwXG4gICAgICAoZGV2aWNlUHJvZmlsZSk9XCJvbkRldmljZVByb2ZpbGVTZWxlY3RlZCgkZXZlbnQpXCJcbiAgICAgIGNsYXNzPVwiZC1jb250ZW50c1wiXG4gICAgPjwvYzh5LXNlbGVjdC1kZXZpY2UtcHJvZmlsZS1zdGVwPlxuICA8L25nLWNvbnRhaW5lcj5cbiAgPG5nLWNvbnRhaW5lciAqY3VzdG9tU3RlcD1cIidDb25maXJtIHNlbGVjdGVkIGRldmljZSBwcm9maWxlJyB8IHRyYW5zbGF0ZVwiPlxuICAgIDxjOHktY29uZmlybS1kZXZpY2UtcHJvZmlsZS1zZWxlY3Rpb24tc3RlcFxuICAgICAgY2xhc3M9XCJkLWNvbnRlbnRzXCJcbiAgICAgIFtzZWxlY3RlZERldmljZVByb2ZpbGVdPVwic2VsZWN0ZWREZXZpY2VQcm9maWxlXCJcbiAgICA+PC9jOHktY29uZmlybS1kZXZpY2UtcHJvZmlsZS1zZWxlY3Rpb24tc3RlcD5cbiAgPC9uZy1jb250YWluZXI+XG48L2M4eS1idWxrLW9wZXJhdGlvbi1zdGVwcGVyPlxuIl19