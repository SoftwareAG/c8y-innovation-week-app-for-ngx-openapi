import { Component, Input } from '@angular/core';
import { get } from 'lodash-es';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@c8y/ngx-components/operations/stepper-frames";
export class ConfirmDeviceProfileSelectionStepComponent {
    constructor(translate) {
        this.translate = translate;
        this.DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');
    }
    get softwares() {
        return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'software'], []);
    }
    get configurations() {
        return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'configuration'], []);
    }
    getDeviceTypeTitle(deviceProfile) {
        return get(deviceProfile, 'c8y_Filter.type', this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));
    }
}
ConfirmDeviceProfileSelectionStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmDeviceProfileSelectionStepComponent, deps: [{ token: i1.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
ConfirmDeviceProfileSelectionStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ConfirmDeviceProfileSelectionStepComponent, selector: "c8y-confirm-device-profile-selection-step", inputs: { selectedDeviceProfile: "selectedDeviceProfile" }, ngImport: i0, template: "<c8y-preview-selection-frame\n  [header]=\"'Confirm selection' | translate\"\n  [name]=\"selectedDeviceProfile?.name\"\n>\n  <ng-container *previewBlock=\"'Device type' | translate\">\n    <ng-container *ngIf=\"selectedDeviceProfile?.c8y_Filter?.type; else noType\">\n      <span>{{ selectedDeviceProfile.c8y_Filter.type }}</span>\n    </ng-container>\n    <ng-template #noType> --- </ng-template>\n  </ng-container>\n  <c8y-list-group\n    *previewBlock=\"'Firmware' | translate; if: selectedDeviceProfile?.c8y_DeviceProfile.firmware\"\n  >\n    <c8y-li>\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-firmware\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Software' | translate; if: softwares?.length\">\n    <c8y-li *ngFor=\"let software of softwares\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ software.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Configuration' | translate; if: configurations?.length\">\n    <c8y-li *ngFor=\"let configuration of configurations\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ configuration.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"label label-info\" *ngIf=\"configuration.type\">\n            {{ configuration.type }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-preview-selection-frame>\n", dependencies: [{ kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i2.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i2.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i2.ListItemBodyComponent, selector: "c8y-list-item-body, c8y-li-body", inputs: ["body"] }, { kind: "component", type: i4.PreviewSelectionFrameComponent, selector: "c8y-preview-selection-frame", inputs: ["header", "name", "description", "type"] }, { kind: "directive", type: i4.PreviewBlockDirective, selector: "[previewBlock]", inputs: ["previewBlock", "previewBlockIf"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmDeviceProfileSelectionStepComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-confirm-device-profile-selection-step', template: "<c8y-preview-selection-frame\n  [header]=\"'Confirm selection' | translate\"\n  [name]=\"selectedDeviceProfile?.name\"\n>\n  <ng-container *previewBlock=\"'Device type' | translate\">\n    <ng-container *ngIf=\"selectedDeviceProfile?.c8y_Filter?.type; else noType\">\n      <span>{{ selectedDeviceProfile.c8y_Filter.type }}</span>\n    </ng-container>\n    <ng-template #noType> --- </ng-template>\n  </ng-container>\n  <c8y-list-group\n    *previewBlock=\"'Firmware' | translate; if: selectedDeviceProfile?.c8y_DeviceProfile.firmware\"\n  >\n    <c8y-li>\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-firmware\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ selectedDeviceProfile.c8y_DeviceProfile.firmware.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Software' | translate; if: softwares?.length\">\n    <c8y-li *ngFor=\"let software of softwares\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ software.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"text-label-small m-r-8\" translate> Version </span>\n          <span>\n            {{ software.version }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n  <c8y-list-group *previewBlock=\"'Configuration' | translate; if: configurations?.length\">\n    <c8y-li *ngFor=\"let configuration of configurations\">\n      <c8y-li-icon>\n        <i c8yIcon=\"c8y-tools\"></i>\n      </c8y-li-icon>\n      <c8y-li-body class=\"content-flex-500\">\n        <div class=\"col-5\">\n          {{ configuration.name }}\n        </div>\n        <div class=\"col-5\">\n          <span class=\"label label-info\" *ngIf=\"configuration.type\">\n            {{ configuration.type }}\n          </span>\n        </div>\n      </c8y-li-body>\n    </c8y-li>\n  </c8y-list-group>\n</c8y-preview-selection-frame>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }]; }, propDecorators: { selectedDeviceProfile: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1kZXZpY2UtcHJvZmlsZS1zZWxlY3Rpb24tc3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWRldmljZS1wcm9maWxlL2NvbmZpcm0tZGV2aWNlLXByb2ZpbGUtc2VsZWN0aW9uLXN0ZXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1kZXZpY2UtcHJvZmlsZS9jb25maXJtLWRldmljZS1wcm9maWxlLXNlbGVjdGlvbi1zdGVwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFaEMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7QUFNdkQsTUFBTSxPQUFPLDBDQUEwQztJQUlyRCxZQUFvQixTQUEyQjtRQUEzQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUZ0Qyw0QkFBdUIsR0FBRyxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUVwQixDQUFDO0lBRW5ELElBQUksU0FBUztRQUNYLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLG1CQUFtQixFQUFFLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUMsbUJBQW1CLEVBQUUsZUFBZSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDckYsQ0FBQztJQUVELGtCQUFrQixDQUFDLGFBQTZCO1FBQzlDLE9BQU8sR0FBRyxDQUNSLGFBQWEsRUFDYixpQkFBaUIsRUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQ3JELENBQUM7SUFDSixDQUFDOzt1SUFwQlUsMENBQTBDOzJIQUExQywwQ0FBMEMsNklDVnZELG15RUFrRUE7MkZEeERhLDBDQUEwQztrQkFKdEQsU0FBUzsrQkFDRSwyQ0FBMkM7dUdBSTVDLHFCQUFxQjtzQkFBN0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbmZpcm0tZGV2aWNlLXByb2ZpbGUtc2VsZWN0aW9uLXN0ZXAnLFxuICB0ZW1wbGF0ZVVybDogJ2NvbmZpcm0tZGV2aWNlLXByb2ZpbGUtc2VsZWN0aW9uLXN0ZXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1EZXZpY2VQcm9maWxlU2VsZWN0aW9uU3RlcENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHNlbGVjdGVkRGV2aWNlUHJvZmlsZTogSU1hbmFnZWRPYmplY3Q7XG4gIHJlYWRvbmx5IERFVklDRV9UWVBFX05PVF9ERUZJTkVEID0gZ2V0dGV4dCgnRGV2aWNlIHR5cGUgbm90IGRlZmluZWQnKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZSkge31cblxuICBnZXQgc29mdHdhcmVzKCkge1xuICAgIHJldHVybiBnZXQodGhpcy5zZWxlY3RlZERldmljZVByb2ZpbGUsIFsnYzh5X0RldmljZVByb2ZpbGUnLCAnc29mdHdhcmUnXSwgW10pO1xuICB9XG5cbiAgZ2V0IGNvbmZpZ3VyYXRpb25zKCkge1xuICAgIHJldHVybiBnZXQodGhpcy5zZWxlY3RlZERldmljZVByb2ZpbGUsIFsnYzh5X0RldmljZVByb2ZpbGUnLCAnY29uZmlndXJhdGlvbiddLCBbXSk7XG4gIH1cblxuICBnZXREZXZpY2VUeXBlVGl0bGUoZGV2aWNlUHJvZmlsZTogSU1hbmFnZWRPYmplY3QpOiBzdHJpbmcge1xuICAgIHJldHVybiBnZXQoXG4gICAgICBkZXZpY2VQcm9maWxlLFxuICAgICAgJ2M4eV9GaWx0ZXIudHlwZScsXG4gICAgICB0aGlzLnRyYW5zbGF0ZS5pbnN0YW50KHRoaXMuREVWSUNFX1RZUEVfTk9UX0RFRklORUQpXG4gICAgKTtcbiAgfVxufVxuIiwiPGM4eS1wcmV2aWV3LXNlbGVjdGlvbi1mcmFtZVxuICBbaGVhZGVyXT1cIidDb25maXJtIHNlbGVjdGlvbicgfCB0cmFuc2xhdGVcIlxuICBbbmFtZV09XCJzZWxlY3RlZERldmljZVByb2ZpbGU/Lm5hbWVcIlxuPlxuICA8bmctY29udGFpbmVyICpwcmV2aWV3QmxvY2s9XCInRGV2aWNlIHR5cGUnIHwgdHJhbnNsYXRlXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInNlbGVjdGVkRGV2aWNlUHJvZmlsZT8uYzh5X0ZpbHRlcj8udHlwZTsgZWxzZSBub1R5cGVcIj5cbiAgICAgIDxzcGFuPnt7IHNlbGVjdGVkRGV2aWNlUHJvZmlsZS5jOHlfRmlsdGVyLnR5cGUgfX08L3NwYW4+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNub1R5cGU+IC0tLSA8L25nLXRlbXBsYXRlPlxuICA8L25nLWNvbnRhaW5lcj5cbiAgPGM4eS1saXN0LWdyb3VwXG4gICAgKnByZXZpZXdCbG9jaz1cIidGaXJtd2FyZScgfCB0cmFuc2xhdGU7IGlmOiBzZWxlY3RlZERldmljZVByb2ZpbGU/LmM4eV9EZXZpY2VQcm9maWxlLmZpcm13YXJlXCJcbiAgPlxuICAgIDxjOHktbGk+XG4gICAgICA8Yzh5LWxpLWljb24+XG4gICAgICAgIDxpIGM4eUljb249XCJjOHktZmlybXdhcmVcIj48L2k+XG4gICAgICA8L2M4eS1saS1pY29uPlxuICAgICAgPGM4eS1saS1ib2R5IGNsYXNzPVwiY29udGVudC1mbGV4LTUwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTVcIj5cbiAgICAgICAgICB7eyBzZWxlY3RlZERldmljZVByb2ZpbGUuYzh5X0RldmljZVByb2ZpbGUuZmlybXdhcmUubmFtZSB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC01XCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWxhYmVsLXNtYWxsIG0tci04XCIgdHJhbnNsYXRlPiBWZXJzaW9uIDwvc3Bhbj5cbiAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIHt7IHNlbGVjdGVkRGV2aWNlUHJvZmlsZS5jOHlfRGV2aWNlUHJvZmlsZS5maXJtd2FyZS52ZXJzaW9uIH19XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvYzh5LWxpLWJvZHk+XG4gICAgPC9jOHktbGk+XG4gIDwvYzh5LWxpc3QtZ3JvdXA+XG4gIDxjOHktbGlzdC1ncm91cCAqcHJldmlld0Jsb2NrPVwiJ1NvZnR3YXJlJyB8IHRyYW5zbGF0ZTsgaWY6IHNvZnR3YXJlcz8ubGVuZ3RoXCI+XG4gICAgPGM4eS1saSAqbmdGb3I9XCJsZXQgc29mdHdhcmUgb2Ygc29mdHdhcmVzXCI+XG4gICAgICA8Yzh5LWxpLWljb24+XG4gICAgICAgIDxpIGM4eUljb249XCJjOHktdG9vbHNcIj48L2k+XG4gICAgICA8L2M4eS1saS1pY29uPlxuICAgICAgPGM4eS1saS1ib2R5IGNsYXNzPVwiY29udGVudC1mbGV4LTUwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTVcIj5cbiAgICAgICAgICB7eyBzb2Z0d2FyZS5uYW1lIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbGFiZWwtc21hbGwgbS1yLThcIiB0cmFuc2xhdGU+IFZlcnNpb24gPC9zcGFuPlxuICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAge3sgc29mdHdhcmUudmVyc2lvbiB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2M4eS1saS1ib2R5PlxuICAgIDwvYzh5LWxpPlxuICA8L2M4eS1saXN0LWdyb3VwPlxuICA8Yzh5LWxpc3QtZ3JvdXAgKnByZXZpZXdCbG9jaz1cIidDb25maWd1cmF0aW9uJyB8IHRyYW5zbGF0ZTsgaWY6IGNvbmZpZ3VyYXRpb25zPy5sZW5ndGhcIj5cbiAgICA8Yzh5LWxpICpuZ0Zvcj1cImxldCBjb25maWd1cmF0aW9uIG9mIGNvbmZpZ3VyYXRpb25zXCI+XG4gICAgICA8Yzh5LWxpLWljb24+XG4gICAgICAgIDxpIGM4eUljb249XCJjOHktdG9vbHNcIj48L2k+XG4gICAgICA8L2M4eS1saS1pY29uPlxuICAgICAgPGM4eS1saS1ib2R5IGNsYXNzPVwiY29udGVudC1mbGV4LTUwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTVcIj5cbiAgICAgICAgICB7eyBjb25maWd1cmF0aW9uLm5hbWUgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtNVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWwgbGFiZWwtaW5mb1wiICpuZ0lmPVwiY29uZmlndXJhdGlvbi50eXBlXCI+XG4gICAgICAgICAgICB7eyBjb25maWd1cmF0aW9uLnR5cGUgfX1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9jOHktbGktYm9keT5cbiAgICA8L2M4eS1saT5cbiAgPC9jOHktbGlzdC1ncm91cD5cbjwvYzh5LXByZXZpZXctc2VsZWN0aW9uLWZyYW1lPlxuIl19