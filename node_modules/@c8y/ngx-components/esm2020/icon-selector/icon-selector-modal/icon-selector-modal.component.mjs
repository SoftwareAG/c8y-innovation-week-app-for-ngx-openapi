import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as i2 from "../icon-selector.component";
import * as i3 from "@c8y/ngx-components";
export class IconSelectorModalComponent {
    constructor(bsModal) {
        this.bsModal = bsModal;
        this.title = gettext('Select icon');
        this.saveButtonLabel = gettext('Select');
        this.iconCategoriesToExclude = [];
        this.showIconClass = true;
        this.result = new Promise((resolve, reject) => {
            this.save = resolve;
            this.cancel = reject;
        });
    }
    close() {
        this.bsModal.hide();
        this.cancel();
    }
    saveChanges() {
        this.bsModal.hide();
        this.save(this.currentSelection);
    }
    selectionChange(newSelection) {
        this.currentSelection = newSelection;
    }
}
IconSelectorModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: IconSelectorModalComponent, deps: [{ token: i1.BsModalRef }], target: i0.ɵɵFactoryTarget.Component });
IconSelectorModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: IconSelectorModalComponent, selector: "c8y-icon-selector-modal", ngImport: i0, template: "<div class=\"modal-header\">\n  <div id=\"modal-title\" class=\"modal-title h4\">{{ title | translate }}</div>\n</div>\n<div id=\"modal-body\">\n  <c8y-icon-selector\n    (onSelect)=\"selectionChange($event)\"\n    [selectedIcon]=\"currentSelection\"\n    [iconCategoriesToExclude]=\"iconCategoriesToExclude\"\n    [showIconClass]=\"showIconClass\"\n  ></c8y-icon-selector>\n</div>\n<div class=\"modal-footer separator text-center\">\n  <button class=\"btn btn-default\" (click)=\"close()\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button class=\"btn btn-primary\" [disabled]=\"!currentSelection\" (click)=\"saveChanges()\">\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n", dependencies: [{ kind: "component", type: i2.IconSelectorComponent, selector: "c8y-icon-selector", inputs: ["iconCategoriesToExclude", "showIconClass", "selectedIcon"], outputs: ["onSelect"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: IconSelectorModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-icon-selector-modal', template: "<div class=\"modal-header\">\n  <div id=\"modal-title\" class=\"modal-title h4\">{{ title | translate }}</div>\n</div>\n<div id=\"modal-body\">\n  <c8y-icon-selector\n    (onSelect)=\"selectionChange($event)\"\n    [selectedIcon]=\"currentSelection\"\n    [iconCategoriesToExclude]=\"iconCategoriesToExclude\"\n    [showIconClass]=\"showIconClass\"\n  ></c8y-icon-selector>\n</div>\n<div class=\"modal-footer separator text-center\">\n  <button class=\"btn btn-default\" (click)=\"close()\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button class=\"btn btn-primary\" [disabled]=\"!currentSelection\" (click)=\"saveChanges()\">\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1zZWxlY3Rvci1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9pY29uLXNlbGVjdG9yL2ljb24tc2VsZWN0b3ItbW9kYWwvaWNvbi1zZWxlY3Rvci1tb2RhbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9pY29uLXNlbGVjdG9yL2ljb24tc2VsZWN0b3ItbW9kYWwvaWNvbi1zZWxlY3Rvci1tb2RhbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7O0FBTWpELE1BQU0sT0FBTywwQkFBMEI7SUFlckMsWUFBb0IsT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQWR2QyxVQUFLLEdBQVcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRXZDLG9CQUFlLEdBQVcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVDLDRCQUF1QixHQUFhLEVBQUUsQ0FBQztRQUN2QyxrQkFBYSxHQUFHLElBQUksQ0FBQztRQUVaLFdBQU0sR0FBb0IsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDakUsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7WUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFLdUMsQ0FBQztJQUUzQyxLQUFLO1FBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELGVBQWUsQ0FBQyxZQUFvQjtRQUNsQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsWUFBWSxDQUFDO0lBQ3ZDLENBQUM7O3VIQTdCVSwwQkFBMEI7MkdBQTFCLDBCQUEwQiwrRENSdkMseXJCQW1CQTsyRkRYYSwwQkFBMEI7a0JBSnRDLFNBQVM7K0JBQ0UseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1pY29uLXNlbGVjdG9yLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ljb24tc2VsZWN0b3ItbW9kYWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEljb25TZWxlY3Rvck1vZGFsQ29tcG9uZW50IHtcbiAgdGl0bGU6IHN0cmluZyA9IGdldHRleHQoJ1NlbGVjdCBpY29uJyk7XG4gIGN1cnJlbnRTZWxlY3Rpb246IHN0cmluZztcbiAgc2F2ZUJ1dHRvbkxhYmVsOiBzdHJpbmcgPSBnZXR0ZXh0KCdTZWxlY3QnKTtcbiAgaWNvbkNhdGVnb3JpZXNUb0V4Y2x1ZGU6IHN0cmluZ1tdID0gW107XG4gIHNob3dJY29uQ2xhc3MgPSB0cnVlO1xuXG4gIHJlYWRvbmx5IHJlc3VsdDogUHJvbWlzZTxzdHJpbmc+ID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRoaXMuc2F2ZSA9IHJlc29sdmU7XG4gICAgdGhpcy5jYW5jZWwgPSByZWplY3Q7XG4gIH0pO1xuXG4gIHByaXZhdGUgc2F2ZTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG4gIHByaXZhdGUgY2FuY2VsOiAocmVhc29uPzogYW55KSA9PiB2b2lkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYnNNb2RhbDogQnNNb2RhbFJlZikge31cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmJzTW9kYWwuaGlkZSgpO1xuICAgIHRoaXMuY2FuY2VsKCk7XG4gIH1cblxuICBzYXZlQ2hhbmdlcygpOiB2b2lkIHtcbiAgICB0aGlzLmJzTW9kYWwuaGlkZSgpO1xuICAgIHRoaXMuc2F2ZSh0aGlzLmN1cnJlbnRTZWxlY3Rpb24pO1xuICB9XG5cbiAgc2VsZWN0aW9uQ2hhbmdlKG5ld1NlbGVjdGlvbjogc3RyaW5nKSB7XG4gICAgdGhpcy5jdXJyZW50U2VsZWN0aW9uID0gbmV3U2VsZWN0aW9uO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XG4gIDxkaXYgaWQ9XCJtb2RhbC10aXRsZVwiIGNsYXNzPVwibW9kYWwtdGl0bGUgaDRcIj57eyB0aXRsZSB8IHRyYW5zbGF0ZSB9fTwvZGl2PlxuPC9kaXY+XG48ZGl2IGlkPVwibW9kYWwtYm9keVwiPlxuICA8Yzh5LWljb24tc2VsZWN0b3JcbiAgICAob25TZWxlY3QpPVwic2VsZWN0aW9uQ2hhbmdlKCRldmVudClcIlxuICAgIFtzZWxlY3RlZEljb25dPVwiY3VycmVudFNlbGVjdGlvblwiXG4gICAgW2ljb25DYXRlZ29yaWVzVG9FeGNsdWRlXT1cImljb25DYXRlZ29yaWVzVG9FeGNsdWRlXCJcbiAgICBbc2hvd0ljb25DbGFzc109XCJzaG93SWNvbkNsYXNzXCJcbiAgPjwvYzh5LWljb24tc2VsZWN0b3I+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXIgc2VwYXJhdG9yIHRleHQtY2VudGVyXCI+XG4gIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIiAoY2xpY2spPVwiY2xvc2UoKVwiPlxuICAgIHt7ICdDYW5jZWwnIHwgdHJhbnNsYXRlIH19XG4gIDwvYnV0dG9uPlxuICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgW2Rpc2FibGVkXT1cIiFjdXJyZW50U2VsZWN0aW9uXCIgKGNsaWNrKT1cInNhdmVDaGFuZ2VzKClcIj5cbiAgICB7eyBzYXZlQnV0dG9uTGFiZWwgfCB0cmFuc2xhdGUgfX1cbiAgPC9idXR0b24+XG48L2Rpdj5cbiJdfQ==