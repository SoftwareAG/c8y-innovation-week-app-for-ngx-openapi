import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, Permissions } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
export class NavigationFactory {
    constructor(permissions) {
        this.permissions = permissions;
        this.navs = [];
    }
    async get() {
        const userHasPermission = this.permissions.hasAnyRole([
            'ROLE_TENANT_ADMIN',
            'ROLE_TENANT_MANAGEMENT_ADMIN'
        ]);
        if (this.navs.length === 0 && userHasPermission) {
            this.navs.push(new NavigatorNode({
                label: gettext('Authentication'),
                icon: 'c8y-shield',
                path: '/auth-configuration',
                parent: gettext('Settings'),
                routerLinkExact: false,
                priority: 2000
            }));
        }
        return this.navs;
    }
}
NavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigationFactory, deps: [{ token: i1.Permissions }], target: i0.ɵɵFactoryTarget.Injectable });
NavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Permissions }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vYXV0aC1jb25maWd1cmF0aW9uL2ZhY3Rvcmllcy9uYXZpZ2F0aW9uLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQUdoRyxNQUFNLE9BQU8saUJBQWlCO0lBRzVCLFlBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBRjVDLFNBQUksR0FBb0IsRUFBRSxDQUFDO0lBRW9CLENBQUM7SUFFaEQsS0FBSyxDQUFDLEdBQUc7UUFDUCxNQUFNLGlCQUFpQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDO1lBQ3BELG1CQUFtQjtZQUNuQiw4QkFBOEI7U0FDL0IsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksaUJBQWlCLEVBQUU7WUFDL0MsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1osSUFBSSxhQUFhLENBQUM7Z0JBQ2hCLEtBQUssRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7Z0JBQ2hDLElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUscUJBQXFCO2dCQUMzQixNQUFNLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQztnQkFDM0IsZUFBZSxFQUFFLEtBQUs7Z0JBQ3RCLFFBQVEsRUFBRSxJQUFJO2FBQ2YsQ0FBQyxDQUNILENBQUM7U0FDSDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDOzs4R0F2QlUsaUJBQWlCO2tIQUFqQixpQkFBaUI7MkZBQWpCLGlCQUFpQjtrQkFEN0IsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5LCBQZXJtaXNzaW9ucyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIG5hdnM6IE5hdmlnYXRvck5vZGVbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25zKSB7fVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICBjb25zdCB1c2VySGFzUGVybWlzc2lvbiA9IHRoaXMucGVybWlzc2lvbnMuaGFzQW55Um9sZShbXG4gICAgICAnUk9MRV9URU5BTlRfQURNSU4nLFxuICAgICAgJ1JPTEVfVEVOQU5UX01BTkFHRU1FTlRfQURNSU4nXG4gICAgXSk7XG4gICAgaWYgKHRoaXMubmF2cy5sZW5ndGggPT09IDAgJiYgdXNlckhhc1Blcm1pc3Npb24pIHtcbiAgICAgIHRoaXMubmF2cy5wdXNoKFxuICAgICAgICBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ0F1dGhlbnRpY2F0aW9uJyksXG4gICAgICAgICAgaWNvbjogJ2M4eS1zaGllbGQnLFxuICAgICAgICAgIHBhdGg6ICcvYXV0aC1jb25maWd1cmF0aW9uJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ1NldHRpbmdzJyksXG4gICAgICAgICAgcm91dGVyTGlua0V4YWN0OiBmYWxzZSxcbiAgICAgICAgICBwcmlvcml0eTogMjAwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19