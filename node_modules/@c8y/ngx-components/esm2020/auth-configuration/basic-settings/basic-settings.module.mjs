import { NgModule } from '@angular/core';
import { CoreModule, hookRoute } from '@c8y/ngx-components';
import { BasicAuthSettingsComponent } from './basic-auth-settings.component';
import { AuthConfigurationGuard } from '../auth-configuration.guard';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { AuthConfigurationService } from './auth-configuration.service';
import { AuthConfigurationComponent } from './auth-configuration.component';
import { TfaSettingsComponent } from './tfa-settings.component';
import { SessionConfigurationComponent } from './session-configuration.component';
import { LoginSettingsComponent } from './login-settings.component';
import { TenantLoginOptionMapper } from './tenant-login-option.mapper';
import * as i0 from "@angular/core";
export class BasicSettingsModule {
}
BasicSettingsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BasicSettingsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BasicSettingsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: BasicSettingsModule, declarations: [SessionConfigurationComponent,
        LoginSettingsComponent,
        BasicAuthSettingsComponent,
        AuthConfigurationComponent,
        TfaSettingsComponent], imports: [CoreModule, PopoverModule] });
BasicSettingsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BasicSettingsModule, providers: [
        AuthConfigurationService,
        TenantLoginOptionMapper,
        hookRoute({
            path: 'auth-configuration/basic_settings',
            component: AuthConfigurationComponent,
            canActivate: [AuthConfigurationGuard]
        })
    ], imports: [CoreModule, PopoverModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BasicSettingsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        SessionConfigurationComponent,
                        LoginSettingsComponent,
                        BasicAuthSettingsComponent,
                        AuthConfigurationComponent,
                        TfaSettingsComponent
                    ],
                    exports: [],
                    imports: [CoreModule, PopoverModule],
                    providers: [
                        AuthConfigurationService,
                        TenantLoginOptionMapper,
                        hookRoute({
                            path: 'auth-configuration/basic_settings',
                            component: AuthConfigurationComponent,
                            canActivate: [AuthConfigurationGuard]
                        })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWMtc2V0dGluZ3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vYXV0aC1jb25maWd1cmF0aW9uL2Jhc2ljLXNldHRpbmdzL2Jhc2ljLXNldHRpbmdzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQXNCdkUsTUFBTSxPQUFPLG1CQUFtQjs7Z0hBQW5CLG1CQUFtQjtpSEFBbkIsbUJBQW1CLGlCQWxCNUIsNkJBQTZCO1FBQzdCLHNCQUFzQjtRQUN0QiwwQkFBMEI7UUFDMUIsMEJBQTBCO1FBQzFCLG9CQUFvQixhQUdaLFVBQVUsRUFBRSxhQUFhO2lIQVd4QixtQkFBbUIsYUFWbkI7UUFDVCx3QkFBd0I7UUFDeEIsdUJBQXVCO1FBQ3ZCLFNBQVMsQ0FBQztZQUNSLElBQUksRUFBRSxtQ0FBbUM7WUFDekMsU0FBUyxFQUFFLDBCQUEwQjtZQUNyQyxXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztTQUN0QyxDQUFDO0tBQ0gsWUFUUyxVQUFVLEVBQUUsYUFBYTsyRkFXeEIsbUJBQW1CO2tCQXBCL0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osNkJBQTZCO3dCQUM3QixzQkFBc0I7d0JBQ3RCLDBCQUEwQjt3QkFDMUIsMEJBQTBCO3dCQUMxQixvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRSxFQUFFO29CQUNYLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUM7b0JBQ3BDLFNBQVMsRUFBRTt3QkFDVCx3QkFBd0I7d0JBQ3hCLHVCQUF1Qjt3QkFDdkIsU0FBUyxDQUFDOzRCQUNSLElBQUksRUFBRSxtQ0FBbUM7NEJBQ3pDLFNBQVMsRUFBRSwwQkFBMEI7NEJBQ3JDLFdBQVcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3lCQUN0QyxDQUFDO3FCQUNIO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIGhvb2tSb3V0ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzaWNBdXRoU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tICcuL2Jhc2ljLWF1dGgtc2V0dGluZ3MuY29tcG9uZW50JztcbmltcG9ydCB7IEF1dGhDb25maWd1cmF0aW9uR3VhcmQgfSBmcm9tICcuLi9hdXRoLWNvbmZpZ3VyYXRpb24uZ3VhcmQnO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBBdXRoQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2F1dGgtY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9hdXRoLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFRmYVNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi90ZmEtc2V0dGluZ3MuY29tcG9uZW50JztcbmltcG9ydCB7IFNlc3Npb25Db25maWd1cmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9zZXNzaW9uLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IExvZ2luU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tICcuL2xvZ2luLXNldHRpbmdzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUZW5hbnRMb2dpbk9wdGlvbk1hcHBlciB9IGZyb20gJy4vdGVuYW50LWxvZ2luLW9wdGlvbi5tYXBwZXInO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTZXNzaW9uQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBMb2dpblNldHRpbmdzQ29tcG9uZW50LFxuICAgIEJhc2ljQXV0aFNldHRpbmdzQ29tcG9uZW50LFxuICAgIEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgIFRmYVNldHRpbmdzQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgUG9wb3Zlck1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIEF1dGhDb25maWd1cmF0aW9uU2VydmljZSxcbiAgICBUZW5hbnRMb2dpbk9wdGlvbk1hcHBlcixcbiAgICBob29rUm91dGUoe1xuICAgICAgcGF0aDogJ2F1dGgtY29uZmlndXJhdGlvbi9iYXNpY19zZXR0aW5ncycsXG4gICAgICBjb21wb25lbnQ6IEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgICAgY2FuQWN0aXZhdGU6IFtBdXRoQ29uZmlndXJhdGlvbkd1YXJkXVxuICAgIH0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQmFzaWNTZXR0aW5nc01vZHVsZSB7fVxuIl19