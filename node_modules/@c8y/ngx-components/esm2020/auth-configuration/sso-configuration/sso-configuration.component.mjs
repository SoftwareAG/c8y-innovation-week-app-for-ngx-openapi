import { Component, EventEmitter } from '@angular/core';
import { ApplicationService, UserGroupService, TenantLoginOptionType, InventoryRoleService } from '@c8y/client';
import { gettext, AlertService, ModalService, Status, LoginService, AppStateService, TenantUiService } from '@c8y/ngx-components';
import { BehaviorSubject, forkJoin, Subject } from 'rxjs';
import { shareReplay, tap, switchMap } from 'rxjs/operators';
import { TemplateType, templateTypeConfig } from './sso-configuration.model';
import { SsoConfigurationService } from './sso-configuration.service';
import * as i0 from "@angular/core";
import * as i1 from "./sso-configuration.service";
import * as i2 from "@c8y/client";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "./templates/custom-template.component";
import * as i7 from "./templates/key-cloak-template.component";
import * as i8 from "./templates/aad-template.component";
export class SsoConfigurationComponent {
    constructor(ssoConfigurationService, applicationService, userGroupService, inventoryRoleService, alertService, modalService, loginService, appStateService, tenantUiService) {
        this.ssoConfigurationService = ssoConfigurationService;
        this.applicationService = applicationService;
        this.userGroupService = userGroupService;
        this.inventoryRoleService = inventoryRoleService;
        this.alertService = alertService;
        this.modalService = modalService;
        this.loginService = loginService;
        this.appStateService = appStateService;
        this.tenantUiService = tenantUiService;
        this.templateType = TemplateType;
        this.templateTypeConfig = templateTypeConfig;
        this.reloading$ = new BehaviorSubject(false);
        this.reload = new EventEmitter();
        this.saveSubject = new Subject();
        this.data$ = this.reload.pipe(tap(() => this.reloading$.next(true)), switchMap(() => forkJoin({
            ssoConfiguration: this.ssoConfigurationService.getSsoConfiguration$(),
            apps: this.getApplications(),
            groups: this.getGroups(),
            inventoryRoles: this.getInventoryRoles()
        })), tap(() => this.reloading$.next(false)), shareReplay(1));
    }
    ngOnInit() {
        this.dataSubscription = this.data$.subscribe(({ ssoConfiguration, apps, groups, inventoryRoles }) => {
            this.apps = apps;
            this.groups = groups;
            this.inventoryRoles = inventoryRoles;
            this.ssoConfiguration = ssoConfiguration;
        });
        this.loadSsoConfiguration();
    }
    ngOnDestroy() {
        this.dataSubscription.unsubscribe();
    }
    loadSsoConfiguration() {
        this.reload.next();
    }
    async save(ssoConfiguration) {
        try {
            await this.warnAboutForceUsersLogOut();
            const logoutRequired = this.tenantUiService.getCurrentUserLoginMode() !== TenantLoginOptionType.BASIC;
            if (logoutRequired) {
                await this.modalService.confirmLogout();
            }
            await this.ssoConfigurationService.save(ssoConfiguration);
            if (logoutRequired) {
                await this.loginService.logout(true);
            }
            else {
                this.loadSsoConfiguration();
                this.alertService.success(gettext('Configuration saved.'));
            }
        }
        catch (ex) {
            if (ex) {
                this.alertService.addServerFailure(ex);
            }
        }
    }
    getApplications() {
        return this.applicationService.list({ pageSize: 100 }).then(res => res.data, error => this.alertService.addServerFailure(error));
    }
    getGroups() {
        return this.userGroupService.list({ pageSize: 100 }).then(res => res.data, error => this.alertService.addServerFailure(error));
    }
    getInventoryRoles() {
        return this.inventoryRoleService.list({ pageSize: 100 }).then(res => res.data, error => this.alertService.addServerFailure(error));
    }
    async warnAboutForceUsersLogOut() {
        const modalLabels = { ok: gettext('Update and log out users'), cancel: gettext('Cancel') };
        const modalBody = gettext('Updating SSO configuration will log out all users logged with "OAI-Secure" or "Single sign-on redirect". Do you want to proceed?');
        return await this.modalService.confirm(gettext('Force users to log out'), modalBody, Status.WARNING, modalLabels);
    }
}
SsoConfigurationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SsoConfigurationComponent, deps: [{ token: i1.SsoConfigurationService }, { token: i2.ApplicationService }, { token: i2.UserGroupService }, { token: i2.InventoryRoleService }, { token: i3.AlertService }, { token: i3.ModalService }, { token: i3.LoginService }, { token: i3.AppStateService }, { token: i3.TenantUiService }], target: i0.ɵɵFactoryTarget.Component });
SsoConfigurationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: SsoConfigurationComponent, selector: "c8y-sso-configuration", ngImport: i0, template: "<c8y-title>{{ 'Single sign-on' | translate }}</c8y-title>\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [label]=\"'Settings' | translate\"\n    [icon]=\"'cog'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'cog'\"\n    [label]=\"'Single sign-on' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    title=\"{{ 'Reload' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-link\"\n    (click)=\"loadSsoConfiguration()\"\n  >\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'icon-spin': reloading$ | async }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'left'\"\n  itemClass=\"navbar-form hidden-xs\"\n>\n  <div\n    title=\"{{ 'Template' | translate }}\"\n    class=\"form-group\"\n  >\n    <label\n      for=\"template\"\n      class=\"control-label\"\n    >\n      {{ 'Template' | translate }}\n    </label>\n    <div class=\"c8y-select-wrapper\">\n      <select\n        class=\"form-control\"\n        *ngIf=\"ssoConfiguration\"\n        name=\"template\"\n        id=\"template\"\n        [(ngModel)]=\"ssoConfiguration.template\"\n      >\n        <option\n          *ngFor=\"let templateType of templateTypeConfig | keyvalue\"\n          [ngValue]=\"templateType.key\"\n        >\n          {{ templateType.value.label | translate }}\n        </option>\n      </select>\n      <span></span>\n    </div>\n  </div>\n</c8y-action-bar-item>\n\n<div class=\"row\">\n  <div class=\"col-lg-12 col-lg-max\">\n    <form\n      class=\"card card--fullpage\"\n      #ssoConfigurationForm=\"ngForm\"\n      novalidate\n    >\n      <div class=\"card-header separator\">\n        <div class=\"card-title\">\n          {{ 'Single sign-on' | translate }}\n        </div>\n      </div>\n\n      <div class=\"inner-scroll\">\n        <div\n          class=\"card-block p-0\"\n          *ngIf=\"ssoConfiguration\"\n        >\n          <c8y-custom-template\n            *ngIf=\"ssoConfiguration.template === templateType.CUSTOM\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-custom-template>\n\n          <c8y-aad-template\n            *ngIf=\"ssoConfiguration.template === templateType.AZURE\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-aad-template>\n\n          <c8y-key-cloak-template\n            *ngIf=\"ssoConfiguration.template === templateType.KEYCLOAK\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-key-cloak-template>\n        </div>\n      </div>\n      <div class=\"card-footer separator\">\n        <button\n          title=\"{{ 'Save' | translate }}\"\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          (click)=\"saveSubject.next()\"\n          [disabled]=\"!ssoConfigurationForm.form.valid || ssoConfigurationForm.form.pristine\"\n        >\n          {{ 'Save' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i3.ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: ["placement", "priority", "itemClass", "injector", "groupId"] }, { kind: "component", type: i3.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i3.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "directive", type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i5.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i5.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i5.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i6.CustomTemplateComponent, selector: "c8y-custom-template" }, { kind: "component", type: i7.KeyCloakTemplateComponent, selector: "c8y-key-cloak-template" }, { kind: "component", type: i8.AadTemplateComponent, selector: "c8y-aad-template" }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.KeyValuePipe, name: "keyvalue" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SsoConfigurationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-sso-configuration', template: "<c8y-title>{{ 'Single sign-on' | translate }}</c8y-title>\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [label]=\"'Settings' | translate\"\n    [icon]=\"'cog'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'cog'\"\n    [label]=\"'Single sign-on' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    title=\"{{ 'Reload' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-link\"\n    (click)=\"loadSsoConfiguration()\"\n  >\n    <i\n      c8yIcon=\"refresh\"\n      [ngClass]=\"{ 'icon-spin': reloading$ | async }\"\n    ></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'left'\"\n  itemClass=\"navbar-form hidden-xs\"\n>\n  <div\n    title=\"{{ 'Template' | translate }}\"\n    class=\"form-group\"\n  >\n    <label\n      for=\"template\"\n      class=\"control-label\"\n    >\n      {{ 'Template' | translate }}\n    </label>\n    <div class=\"c8y-select-wrapper\">\n      <select\n        class=\"form-control\"\n        *ngIf=\"ssoConfiguration\"\n        name=\"template\"\n        id=\"template\"\n        [(ngModel)]=\"ssoConfiguration.template\"\n      >\n        <option\n          *ngFor=\"let templateType of templateTypeConfig | keyvalue\"\n          [ngValue]=\"templateType.key\"\n        >\n          {{ templateType.value.label | translate }}\n        </option>\n      </select>\n      <span></span>\n    </div>\n  </div>\n</c8y-action-bar-item>\n\n<div class=\"row\">\n  <div class=\"col-lg-12 col-lg-max\">\n    <form\n      class=\"card card--fullpage\"\n      #ssoConfigurationForm=\"ngForm\"\n      novalidate\n    >\n      <div class=\"card-header separator\">\n        <div class=\"card-title\">\n          {{ 'Single sign-on' | translate }}\n        </div>\n      </div>\n\n      <div class=\"inner-scroll\">\n        <div\n          class=\"card-block p-0\"\n          *ngIf=\"ssoConfiguration\"\n        >\n          <c8y-custom-template\n            *ngIf=\"ssoConfiguration.template === templateType.CUSTOM\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-custom-template>\n\n          <c8y-aad-template\n            *ngIf=\"ssoConfiguration.template === templateType.AZURE\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-aad-template>\n\n          <c8y-key-cloak-template\n            *ngIf=\"ssoConfiguration.template === templateType.KEYCLOAK\"\n            [ssoConfiguration]=\"ssoConfiguration\"\n            [ssoConfigurationChangeTrigger]=\"saveSubject.asObservable()\"\n            (ssoConfigurationChange)=\"save($event)\"\n            [apps]=\"apps\"\n            [groups]=\"groups\"\n            [inventoryRoles]=\"inventoryRoles\"\n          ></c8y-key-cloak-template>\n        </div>\n      </div>\n      <div class=\"card-footer separator\">\n        <button\n          title=\"{{ 'Save' | translate }}\"\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          (click)=\"saveSubject.next()\"\n          [disabled]=\"!ssoConfigurationForm.form.valid || ssoConfigurationForm.form.pristine\"\n        >\n          {{ 'Save' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.SsoConfigurationService }, { type: i2.ApplicationService }, { type: i2.UserGroupService }, { type: i2.InventoryRoleService }, { type: i3.AlertService }, { type: i3.ModalService }, { type: i3.LoginService }, { type: i3.AppStateService }, { type: i3.TenantUiService }]; } });
//# sourceMappingURL=data:application/json;base64,