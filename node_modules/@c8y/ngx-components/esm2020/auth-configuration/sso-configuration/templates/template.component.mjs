import { Input, Output, EventEmitter, Component } from '@angular/core';
import { SsoConfigurationMapper } from './sso-configuration.mapper';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./sso-configuration.mapper";
export class TemplateComponent {
    constructor(configurationMapper) {
        this.configurationMapper = configurationMapper;
        this.ssoConfigurationChange = new EventEmitter();
    }
    ngOnInit() {
        this.triggerSubscription = this.ssoConfigurationChangeTrigger.subscribe(() => {
            this.emitSsoConfiguration();
        });
    }
    ngOnChanges(changes) {
        if (changes.ssoConfiguration && changes.ssoConfiguration.currentValue) {
            this.mapSsoConfiguration(changes.ssoConfiguration.currentValue);
        }
    }
    ngOnDestroy() {
        this.triggerSubscription.unsubscribe();
    }
    mapSsoConfiguration(ssoConfiguration) {
        this.templateModel = this.configurationMapper.mapTo(ssoConfiguration);
    }
    emitSsoConfiguration() {
        const ssoConfiguration = this.configurationMapper.mapFrom(this.templateModel);
        if (this.ssoConfiguration.id) {
            ssoConfiguration.id = this.ssoConfiguration.id;
        }
        this.ssoConfigurationChange.emit(ssoConfiguration);
    }
}
TemplateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TemplateComponent, deps: [{ token: i1.SsoConfigurationMapper }], target: i0.ɵɵFactoryTarget.Component });
TemplateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: TemplateComponent, selector: "ng-component", inputs: { apps: "apps", groups: "groups", inventoryRoles: "inventoryRoles", ssoConfiguration: "ssoConfiguration", ssoConfigurationChangeTrigger: "ssoConfigurationChangeTrigger" }, outputs: { ssoConfigurationChange: "ssoConfigurationChange" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TemplateComponent, decorators: [{
            type: Component,
            args: [{
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i1.SsoConfigurationMapper }]; }, propDecorators: { apps: [{
                type: Input
            }], groups: [{
                type: Input
            }], inventoryRoles: [{
                type: Input
            }], ssoConfiguration: [{
                type: Input
            }], ssoConfigurationChangeTrigger: [{
                type: Input
            }], ssoConfigurationChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vYXV0aC1jb25maWd1cmF0aW9uL3Nzby1jb25maWd1cmF0aW9uL3RlbXBsYXRlcy90ZW1wbGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFcEUsT0FBTyxFQUFFLFVBQVUsRUFBZ0IsTUFBTSxNQUFNLENBQUM7OztBQU1oRCxNQUFNLE9BQWdCLGlCQUFpQjtJQVdyQyxZQUFnQyxtQkFBOEM7UUFBOUMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUEyQjtRQUpwRSwyQkFBc0IsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztJQUlTLENBQUM7SUFFbEYsUUFBUTtRQUNOLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsNkJBQTZCLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUMzRSxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsZ0JBQWdCLElBQUksT0FBTyxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRTtZQUNyRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2pFO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsbUJBQW1CLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDekMsQ0FBQztJQUVPLG1CQUFtQixDQUFDLGdCQUFnQjtRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQU0sQ0FBQztJQUM3RSxDQUFDO0lBRU8sb0JBQW9CO1FBQzFCLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDOUUsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFO1lBQzVCLGdCQUFnQixDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDO1NBQ2hEO1FBQ0QsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3JELENBQUM7OzhHQXZDbUIsaUJBQWlCO2tHQUFqQixpQkFBaUIsNFRBRjNCLEVBQUU7MkZBRVEsaUJBQWlCO2tCQUh0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxFQUFFO2lCQUNiOzZHQUdVLElBQUk7c0JBQVosS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFDRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBQ0csNkJBQTZCO3NCQUFyQyxLQUFLO2dCQUNJLHNCQUFzQjtzQkFBL0IsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgQ29tcG9uZW50LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTc29Db25maWd1cmF0aW9uTWFwcGVyIH0gZnJvbSAnLi9zc28tY29uZmlndXJhdGlvbi5tYXBwZXInO1xuaW1wb3J0IHsgU3NvQ29uZmlndXJhdGlvbiB9IGZyb20gJy4uL3Nzby1jb25maWd1cmF0aW9uLm1vZGVsJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSUFwcGxpY2F0aW9uLCBJSWRlbnRpZmllZCwgSVVzZXJHcm91cCB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUZW1wbGF0ZUNvbXBvbmVudDxUPiB7XG4gIHRlbXBsYXRlTW9kZWw6IFQ7XG4gIEBJbnB1dCgpIGFwcHM6IElBcHBsaWNhdGlvbltdO1xuICBASW5wdXQoKSBncm91cHM6IElVc2VyR3JvdXBbXTtcbiAgQElucHV0KCkgaW52ZW50b3J5Um9sZXM6IElJZGVudGlmaWVkW107XG4gIEBJbnB1dCgpIHNzb0NvbmZpZ3VyYXRpb246IFNzb0NvbmZpZ3VyYXRpb247XG4gIEBJbnB1dCgpIHNzb0NvbmZpZ3VyYXRpb25DaGFuZ2VUcmlnZ2VyOiBPYnNlcnZhYmxlPHZvaWQ+O1xuICBAT3V0cHV0KCkgc3NvQ29uZmlndXJhdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8U3NvQ29uZmlndXJhdGlvbj4oKTtcblxuICB0cmlnZ2VyU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjb25maWd1cmF0aW9uTWFwcGVyOiBTc29Db25maWd1cmF0aW9uTWFwcGVyPFQ+KSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMudHJpZ2dlclN1YnNjcmlwdGlvbiA9IHRoaXMuc3NvQ29uZmlndXJhdGlvbkNoYW5nZVRyaWdnZXIuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuZW1pdFNzb0NvbmZpZ3VyYXRpb24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcy5zc29Db25maWd1cmF0aW9uICYmIGNoYW5nZXMuc3NvQ29uZmlndXJhdGlvbi5jdXJyZW50VmFsdWUpIHtcbiAgICAgIHRoaXMubWFwU3NvQ29uZmlndXJhdGlvbihjaGFuZ2VzLnNzb0NvbmZpZ3VyYXRpb24uY3VycmVudFZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnRyaWdnZXJTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIHByaXZhdGUgbWFwU3NvQ29uZmlndXJhdGlvbihzc29Db25maWd1cmF0aW9uKSB7XG4gICAgdGhpcy50ZW1wbGF0ZU1vZGVsID0gdGhpcy5jb25maWd1cmF0aW9uTWFwcGVyLm1hcFRvKHNzb0NvbmZpZ3VyYXRpb24pIGFzIFQ7XG4gIH1cblxuICBwcml2YXRlIGVtaXRTc29Db25maWd1cmF0aW9uKCkge1xuICAgIGNvbnN0IHNzb0NvbmZpZ3VyYXRpb24gPSB0aGlzLmNvbmZpZ3VyYXRpb25NYXBwZXIubWFwRnJvbSh0aGlzLnRlbXBsYXRlTW9kZWwpO1xuICAgIGlmICh0aGlzLnNzb0NvbmZpZ3VyYXRpb24uaWQpIHtcbiAgICAgIHNzb0NvbmZpZ3VyYXRpb24uaWQgPSB0aGlzLnNzb0NvbmZpZ3VyYXRpb24uaWQ7XG4gICAgfVxuICAgIHRoaXMuc3NvQ29uZmlndXJhdGlvbkNoYW5nZS5lbWl0KHNzb0NvbmZpZ3VyYXRpb24pO1xuICB9XG59XG4iXX0=