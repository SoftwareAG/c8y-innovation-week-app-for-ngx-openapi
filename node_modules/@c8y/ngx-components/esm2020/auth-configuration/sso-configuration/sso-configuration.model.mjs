import { gettext } from '@c8y/ngx-components';
export var TemplateType;
(function (TemplateType) {
    TemplateType["CUSTOM"] = "CUSTOM";
    TemplateType["AZURE"] = "AZURE";
    TemplateType["KEYCLOAK"] = "KEYCLOAK";
})(TemplateType || (TemplateType = {}));
export const templateTypeConfig = {
    [TemplateType.CUSTOM]: {
        name: 'CUSTOM',
        value: 'CUSTOM',
        label: gettext('Custom')
    },
    [TemplateType.AZURE]: {
        name: 'AZURE',
        value: 'AZURE',
        label: gettext('Azure AD')
    },
    [TemplateType.KEYCLOAK]: {
        name: 'KEYCLOAK',
        value: 'KEYCLOAK',
        label: gettext('Keycloak')
    }
};
export var ValidationMethod;
(function (ValidationMethod) {
    ValidationMethod["USERINFO"] = "USERINFO";
    ValidationMethod["INTROSPECTION"] = "INTROSPECTION";
})(ValidationMethod || (ValidationMethod = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3NvLWNvbmZpZ3VyYXRpb24ubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24vc3NvLWNvbmZpZ3VyYXRpb24ubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTlDLE1BQU0sQ0FBTixJQUFZLFlBSVg7QUFKRCxXQUFZLFlBQVk7SUFDdEIsaUNBQWlCLENBQUE7SUFDakIsK0JBQWUsQ0FBQTtJQUNmLHFDQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUFKVyxZQUFZLEtBQVosWUFBWSxRQUl2QjtBQUVELE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHO0lBQ2hDLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ3JCLElBQUksRUFBRSxRQUFRO1FBQ2QsS0FBSyxFQUFFLFFBQVE7UUFDZixLQUFLLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztLQUN6QjtJQUNELENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3BCLElBQUksRUFBRSxPQUFPO1FBQ2IsS0FBSyxFQUFFLE9BQU87UUFDZCxLQUFLLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQztLQUMzQjtJQUNELENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3ZCLElBQUksRUFBRSxVQUFVO1FBQ2hCLEtBQUssRUFBRSxVQUFVO1FBQ2pCLEtBQUssRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDO0tBQzNCO0NBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBTixJQUFZLGdCQUdYO0FBSEQsV0FBWSxnQkFBZ0I7SUFDMUIseUNBQXFCLENBQUE7SUFDckIsbURBQStCLENBQUE7QUFDakMsQ0FBQyxFQUhXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFHM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVGVuYW50TG9naW5PcHRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbmV4cG9ydCBlbnVtIFRlbXBsYXRlVHlwZSB7XG4gIENVU1RPTSA9ICdDVVNUT00nLFxuICBBWlVSRSA9ICdBWlVSRScsXG4gIEtFWUNMT0FLID0gJ0tFWUNMT0FLJ1xufVxuXG5leHBvcnQgY29uc3QgdGVtcGxhdGVUeXBlQ29uZmlnID0ge1xuICBbVGVtcGxhdGVUeXBlLkNVU1RPTV06IHtcbiAgICBuYW1lOiAnQ1VTVE9NJyxcbiAgICB2YWx1ZTogJ0NVU1RPTScsXG4gICAgbGFiZWw6IGdldHRleHQoJ0N1c3RvbScpXG4gIH0sXG4gIFtUZW1wbGF0ZVR5cGUuQVpVUkVdOiB7XG4gICAgbmFtZTogJ0FaVVJFJyxcbiAgICB2YWx1ZTogJ0FaVVJFJyxcbiAgICBsYWJlbDogZ2V0dGV4dCgnQXp1cmUgQUQnKVxuICB9LFxuICBbVGVtcGxhdGVUeXBlLktFWUNMT0FLXToge1xuICAgIG5hbWU6ICdLRVlDTE9BSycsXG4gICAgdmFsdWU6ICdLRVlDTE9BSycsXG4gICAgbGFiZWw6IGdldHRleHQoJ0tleWNsb2FrJylcbiAgfVxufTtcblxuZXhwb3J0IGVudW0gVmFsaWRhdGlvbk1ldGhvZCB7XG4gIFVTRVJJTkZPID0gJ1VTRVJJTkZPJyxcbiAgSU5UUk9TUEVDVElPTiA9ICdJTlRST1NQRUNUSU9OJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc1Rva2VuVG9Vc2VyRGF0YU1hcHBpbmdzIHtcbiAgZmlyc3ROYW1lQ2xhaW1OYW1lPzogc3RyaW5nO1xuICBsYXN0TmFtZUNsYWltTmFtZT86IHN0cmluZztcbiAgZW1haWxDbGFpbU5hbWU/OiBzdHJpbmc7XG4gIHBob25lTnVtYmVyQ2xhaW1OYW1lPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RQYXJhbXMge1xuICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGVhZGVycyB7XG4gIFtrZXk6IHN0cmluZ106IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBPbk5ld1VzZXIge1xuICBkeW5hbWljTWFwcGluZzogRHluYW1pY01hcHBpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvbiB7XG4gIG1hcFJvbGVzT25seUZvck5ld1VzZXI6IGJvb2xlYW47XG4gIG1hbmFnZVJvbGVzT25seUZyb21BY2Nlc3NNYXBwaW5nOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENoaWxkUHJlZGljYXRlIHtcbiAgb3BlcmF0b3I6ICdFUScgfCAnTkVRJyB8ICdHVCcgfCAnTFQnIHwgJ0dURScgfCAnTFRFJyB8ICdJTic7XG4gIHBhcmFtZXRlclBhdGg6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXaGVuSXRlbXNBcmVNYXBwZWQge1xuICBjaGlsZFByZWRpY2F0ZXM6IENoaWxkUHJlZGljYXRlW107XG4gIG9wZXJhdG9yOiAnQU5EJztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NNYXBwaW5nIHtcbiAgdGhlbkFwcGxpY2F0aW9uczogbnVtYmVyW107XG4gIHRoZW5Hcm91cHM6IG51bWJlcltdO1xuICB3aGVuOiBXaGVuSXRlbXNBcmVNYXBwZWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY01hcHBpbmcge1xuICBjb25maWd1cmF0aW9uPzogQ29uZmlndXJhdGlvbjtcbiAgbWFwcGluZ3M6IEFjY2Vzc01hcHBpbmdbXTtcbiAgaW52ZW50b3J5TWFwcGluZ3M6IEludmVudG9yeU1hcHBpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbnZlbnRvcnlNYXBwaW5nIHtcbiAgd2hlbjogV2hlbkl0ZW1zQXJlTWFwcGVkO1xuICB0aGVuSW52ZW50b3J5Um9sZXM6IEludmVudG9yeVJvbGVbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbnZlbnRvcnlSb2xlIHtcbiAgcm9sZUlkczogbnVtYmVyW107XG4gIG1hbmFnZWRPYmplY3Q6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNYXBSb2xlc09ubHlGb3JOZXdVc2VyIHtcbiAgY29uZmlndXJhdGlvbjogQ29uZmlndXJhdGlvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDdXN0b21TaWduYXR1cmVWZXJpZmljYXRpb25Db25maWcge1xuICBjZXJ0SWRGcm9tRmllbGQ6IGJvb2xlYW47XG4gIGNlcnRJZEZpZWxkPzogc3RyaW5nO1xuICBjZXJ0aWZpY2F0ZXM/OiB7XG4gICAgW2NlcnRJZFZhbHVlOiBzdHJpbmddOiBDZXJ0aWZpY2F0ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDZXJ0aWZpY2F0ZSB7XG4gIGFsZzogJ1BDS1MnIHwgJ1JTQSc7XG4gIHB1YmxpY0tleTogc3RyaW5nO1xuICB2YWxpZEZyb20/OiBEYXRlO1xuICB2YWxpZFRpbGw/OiBEYXRlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFhZFNpZ25hdHVyZVZlcmlmaWNhdGlvbkNvbmZpZyB7XG4gIHB1YmxpY0tleURpc2NvdmVyeVVybDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEp3a3NTaWduYXR1cmVWZXJpZmljYXRpb25Db25maWcge1xuICBqd2tzVXJpOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWRmc1NpZ25hdHVyZVZlcmlmaWNhdGlvbkNvbmZpZyB7XG4gIG1hbmlmZXN0VXJsOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2lnbmF0dXJlVmVyaWZpY2F0aW9uQ29uZmlnIHtcbiAgbWFudWFsPzogQ3VzdG9tU2lnbmF0dXJlVmVyaWZpY2F0aW9uQ29uZmlnO1xuICBhYWQ/OiBBYWRTaWduYXR1cmVWZXJpZmljYXRpb25Db25maWc7XG4gIGp3a3M/OiBKd2tzU2lnbmF0dXJlVmVyaWZpY2F0aW9uQ29uZmlnO1xuICBhZGZzTWFuaWZlc3Q/OiBBZGZzU2lnbmF0dXJlVmVyaWZpY2F0aW9uQ29uZmlnO1xuICB0ZW1wbGF0ZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0IHtcbiAgYm9keT86IHN0cmluZztcbiAgaGVhZGVyczogSGVhZGVycztcbiAgbWV0aG9kOiBzdHJpbmc7XG4gIG9wZXJhdGlvbjogc3RyaW5nO1xuICByZXF1ZXN0UGFyYW1zOiBSZXF1ZXN0UGFyYW1zO1xuICB1cmw/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlcklkQ29uZmlnIHtcbiAgand0RmllbGQ/OiBzdHJpbmc7XG4gIGNvbnN0YW50VmFsdWU/OiBzdHJpbmc7XG4gIHVzZUNvbnN0YW50VmFsdWU6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXh0ZXJuYWxUb2tlbkNvbmZpZyB7XG4gIGVuYWJsZWQ6IGJvb2xlYW47XG4gIHVzZXJPckFwcElkQ29uZmlnPzogVXNlcklkQ29uZmlnO1xuICB2YWxpZGF0aW9uTWV0aG9kPzogVmFsaWRhdGlvbk1ldGhvZDtcbiAgdmFsaWRhdGlvblJlcXVpcmVkPzogYm9vbGVhbjtcbiAgdG9rZW5WYWxpZGF0aW9uUmVxdWVzdD86IFJlcXVlc3Q7XG4gIGFjY2Vzc1Rva2VuVmFsaWRpdHlDaGVja0ludGVydmFsSW5NaW51dGVzPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNzb0NvbmZpZ3VyYXRpb24gZXh0ZW5kcyBJVGVuYW50TG9naW5PcHRpb24ge1xuICBhY2Nlc3NUb2tlblRvVXNlckRhdGFNYXBwaW5nczogQWNjZXNzVG9rZW5Ub1VzZXJEYXRhTWFwcGluZ3M7XG4gIGF1ZGllbmNlOiBzdHJpbmc7XG4gIGF1dGhvcml6YXRpb25SZXF1ZXN0OiBSZXF1ZXN0O1xuICBidXR0b25OYW1lOiBzdHJpbmc7XG4gIGNsaWVudElkOiBzdHJpbmc7XG4gIGlkPzogc3RyaW5nO1xuICBpc3N1ZXI6IHN0cmluZztcbiAgbG9nb3V0UmVxdWVzdDogUmVxdWVzdDtcbiAgb25OZXdVc2VyOiBPbk5ld1VzZXI7XG4gIHByb3ZpZGVyTmFtZTogc3RyaW5nO1xuICByZWRpcmVjdFRvUGxhdGZvcm06IHN0cmluZztcbiAgcmVmcmVzaFJlcXVlc3Q6IFJlcXVlc3Q7XG4gIHNlbGY/OiBzdHJpbmc7XG4gIHNpZ25hdHVyZVZlcmlmaWNhdGlvbkNvbmZpZzogU2lnbmF0dXJlVmVyaWZpY2F0aW9uQ29uZmlnO1xuICB0ZW1wbGF0ZTogVGVtcGxhdGVUeXBlO1xuICB0b2tlblJlcXVlc3Q6IFJlcXVlc3Q7XG4gIHVzZXJJZENvbmZpZzogVXNlcklkQ29uZmlnO1xuICB2aXNpYmxlT25Mb2dpblBhZ2U6IGJvb2xlYW47XG4gIGV4dGVybmFsVG9rZW5Db25maWc/OiBFeHRlcm5hbFRva2VuQ29uZmlnO1xufVxuIl19