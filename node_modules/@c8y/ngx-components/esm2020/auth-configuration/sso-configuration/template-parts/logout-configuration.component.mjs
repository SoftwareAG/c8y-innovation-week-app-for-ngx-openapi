import { Component, Input } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
export class LogoutConfigurationComponent {
}
LogoutConfigurationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LogoutConfigurationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LogoutConfigurationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: LogoutConfigurationComponent, selector: "c8y-sso-logout-configuration", inputs: { templateModel: "templateModel" }, ngImport: i0, template: "<div class=\"col-md-12 p-t-16\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <div class=\"h4 text-normal text-right text-left-xs\" translate>Logout configuration</div>\n    </div>\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\">\n      <c8y-form-group>\n        <label\n          for=\"redirectAfterLogout\"\n          title=\"{{ 'Redirect after logout' | translate }}\"\n          class=\"c8y-switch\"\n        >\n          <input\n            type=\"checkbox\"\n            [(ngModel)]=\"templateModel.redirectAfterLogout\"\n            name=\"redirectAfterLogout\"\n            id=\"redirectAfterLogout\"\n          />\n          <span></span>\n          <span class=\"control-label\">{{ 'Redirect after logout' | translate }}</span>\n        </label>\n      </c8y-form-group>\n\n      <c8y-form-group *ngIf=\"templateModel.redirectAfterLogout\">\n        <label for=\"redirectAfterLogoutUrl\" class=\"control-label\" translate>Redirect URL</label>\n        <input\n          class=\"form-control\"\n          name=\"redirectAfterLogoutUrl\"\n          id=\"redirectAfterLogoutUrl\"\n          type=\"url\"\n          [(ngModel)]=\"templateModel.redirectAfterLogoutUrl\"\n          placeholder=\"{{ 'e.g. https://my-tenant.cumulocity.com/apps/cockpit' | translate }}\"\n          c8yDefaultValidation=\"httpUrl\"\n          required\n        />\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.DefaultValidationDirective, selector: "[c8yDefaultValidation]", inputs: ["c8yDefaultValidation"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i1.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i1.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LogoutConfigurationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-sso-logout-configuration', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"col-md-12 p-t-16\">\n  <div class=\"row m-l-8 m-r-8\">\n    <div class=\"col-xs-12 col-sm-3 col-md-2\">\n      <div class=\"h4 text-normal text-right text-left-xs\" translate>Logout configuration</div>\n    </div>\n    <div class=\"col-xs-12 col-sm-9 col-md-10 col-lg-9\">\n      <c8y-form-group>\n        <label\n          for=\"redirectAfterLogout\"\n          title=\"{{ 'Redirect after logout' | translate }}\"\n          class=\"c8y-switch\"\n        >\n          <input\n            type=\"checkbox\"\n            [(ngModel)]=\"templateModel.redirectAfterLogout\"\n            name=\"redirectAfterLogout\"\n            id=\"redirectAfterLogout\"\n          />\n          <span></span>\n          <span class=\"control-label\">{{ 'Redirect after logout' | translate }}</span>\n        </label>\n      </c8y-form-group>\n\n      <c8y-form-group *ngIf=\"templateModel.redirectAfterLogout\">\n        <label for=\"redirectAfterLogoutUrl\" class=\"control-label\" translate>Redirect URL</label>\n        <input\n          class=\"form-control\"\n          name=\"redirectAfterLogoutUrl\"\n          id=\"redirectAfterLogoutUrl\"\n          type=\"url\"\n          [(ngModel)]=\"templateModel.redirectAfterLogoutUrl\"\n          placeholder=\"{{ 'e.g. https://my-tenant.cumulocity.com/apps/cockpit' | translate }}\"\n          c8yDefaultValidation=\"httpUrl\"\n          required\n        />\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n" }]
        }], propDecorators: { templateModel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nb3V0LWNvbmZpZ3VyYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vYXV0aC1jb25maWd1cmF0aW9uL3Nzby1jb25maWd1cmF0aW9uL3RlbXBsYXRlLXBhcnRzL2xvZ291dC1jb25maWd1cmF0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL2F1dGgtY29uZmlndXJhdGlvbi9zc28tY29uZmlndXJhdGlvbi90ZW1wbGF0ZS1wYXJ0cy9sb2dvdXQtY29uZmlndXJhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBTzFELE1BQU0sT0FBTyw0QkFBNEI7O3lIQUE1Qiw0QkFBNEI7NkdBQTVCLDRCQUE0QixnSENSekMsdTdDQXVDQSx5cEREakNpQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzsyRkFFeEQsNEJBQTRCO2tCQUx4QyxTQUFTOytCQUNFLDhCQUE4QixpQkFFekIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUM7OEJBRzFELGFBQWE7c0JBQXJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zc28tbG9nb3V0LWNvbmZpZ3VyYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9nb3V0LWNvbmZpZ3VyYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIExvZ291dENvbmZpZ3VyYXRpb25Db21wb25lbnQge1xuICBASW5wdXQoKSB0ZW1wbGF0ZU1vZGVsO1xufVxuIiwiPGRpdiBjbGFzcz1cImNvbC1tZC0xMiBwLXQtMTZcIj5cbiAgPGRpdiBjbGFzcz1cInJvdyBtLWwtOCBtLXItOFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTMgY29sLW1kLTJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJoNCB0ZXh0LW5vcm1hbCB0ZXh0LXJpZ2h0IHRleHQtbGVmdC14c1wiIHRyYW5zbGF0ZT5Mb2dvdXQgY29uZmlndXJhdGlvbjwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLXNtLTkgY29sLW1kLTEwIGNvbC1sZy05XCI+XG4gICAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgIDxsYWJlbFxuICAgICAgICAgIGZvcj1cInJlZGlyZWN0QWZ0ZXJMb2dvdXRcIlxuICAgICAgICAgIHRpdGxlPVwie3sgJ1JlZGlyZWN0IGFmdGVyIGxvZ291dCcgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgIGNsYXNzPVwiYzh5LXN3aXRjaFwiXG4gICAgICAgID5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICBbKG5nTW9kZWwpXT1cInRlbXBsYXRlTW9kZWwucmVkaXJlY3RBZnRlckxvZ291dFwiXG4gICAgICAgICAgICBuYW1lPVwicmVkaXJlY3RBZnRlckxvZ291dFwiXG4gICAgICAgICAgICBpZD1cInJlZGlyZWN0QWZ0ZXJMb2dvdXRcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY29udHJvbC1sYWJlbFwiPnt7ICdSZWRpcmVjdCBhZnRlciBsb2dvdXQnIHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgPC9jOHktZm9ybS1ncm91cD5cblxuICAgICAgPGM4eS1mb3JtLWdyb3VwICpuZ0lmPVwidGVtcGxhdGVNb2RlbC5yZWRpcmVjdEFmdGVyTG9nb3V0XCI+XG4gICAgICAgIDxsYWJlbCBmb3I9XCJyZWRpcmVjdEFmdGVyTG9nb3V0VXJsXCIgY2xhc3M9XCJjb250cm9sLWxhYmVsXCIgdHJhbnNsYXRlPlJlZGlyZWN0IFVSTDwvbGFiZWw+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICBuYW1lPVwicmVkaXJlY3RBZnRlckxvZ291dFVybFwiXG4gICAgICAgICAgaWQ9XCJyZWRpcmVjdEFmdGVyTG9nb3V0VXJsXCJcbiAgICAgICAgICB0eXBlPVwidXJsXCJcbiAgICAgICAgICBbKG5nTW9kZWwpXT1cInRlbXBsYXRlTW9kZWwucmVkaXJlY3RBZnRlckxvZ291dFVybFwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnZS5nLiBodHRwczovL215LXRlbmFudC5jdW11bG9jaXR5LmNvbS9hcHBzL2NvY2twaXQnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICBjOHlEZWZhdWx0VmFsaWRhdGlvbj1cImh0dHBVcmxcIlxuICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgIC8+XG4gICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19