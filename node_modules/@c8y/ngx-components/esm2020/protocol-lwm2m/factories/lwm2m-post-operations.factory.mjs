import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { Lwm2mMicroserviceSubscribedGuard } from '@c8y/ngx-components/protocol-lwm2m/guards';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/protocol-lwm2m/guards";
export class LWM2MPostOpertaionsNavigationFactory {
    constructor(guard) {
        this.guard = guard;
        this.node = new NavigatorNode({
            label: gettext('LWM2M post-operations'),
            path: 'post-operations',
            icon: 'terminal',
            parent: {
                label: gettext('Device types'),
                icon: 'c8y-device-protocols'
            },
            priority: 0
        });
    }
    get() {
        return this.guard.canActivate() ? this.node : [];
    }
}
LWM2MPostOpertaionsNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOpertaionsNavigationFactory, deps: [{ token: i1.Lwm2mMicroserviceSubscribedGuard }], target: i0.ɵɵFactoryTarget.Injectable });
LWM2MPostOpertaionsNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOpertaionsNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOpertaionsNavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Lwm2mMicroserviceSubscribedGuard }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHdtMm0tcG9zdC1vcGVyYXRpb25zLmZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm90b2NvbC1sd20ybS9mYWN0b3JpZXMvbHdtMm0tcG9zdC1vcGVyYXRpb25zLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQzs7O0FBRzdGLE1BQU0sT0FBTyxvQ0FBb0M7SUFZL0MsWUFBb0IsS0FBdUM7UUFBdkMsVUFBSyxHQUFMLEtBQUssQ0FBa0M7UUFYM0QsU0FBSSxHQUFHLElBQUksYUFBYSxDQUFDO1lBQ3ZCLEtBQUssRUFBRSxPQUFPLENBQUMsdUJBQXVCLENBQUM7WUFDdkMsSUFBSSxFQUFFLGlCQUFpQjtZQUN2QixJQUFJLEVBQUUsVUFBVTtZQUNoQixNQUFNLEVBQUU7Z0JBQ04sS0FBSyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUM7Z0JBQzlCLElBQUksRUFBRSxzQkFBc0I7YUFDN0I7WUFDRCxRQUFRLEVBQUUsQ0FBQztTQUNaLENBQUMsQ0FBQztJQUUyRCxDQUFDO0lBRS9ELEdBQUc7UUFDRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNuRCxDQUFDOztpSUFoQlUsb0NBQW9DO3FJQUFwQyxvQ0FBb0M7MkZBQXBDLG9DQUFvQztrQkFEaEQsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBMd20ybU1pY3Jvc2VydmljZVN1YnNjcmliZWRHdWFyZCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvcHJvdG9jb2wtbHdtMm0vZ3VhcmRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExXTTJNUG9zdE9wZXJ0YWlvbnNOYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgbm9kZSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICBsYWJlbDogZ2V0dGV4dCgnTFdNMk0gcG9zdC1vcGVyYXRpb25zJyksXG4gICAgcGF0aDogJ3Bvc3Qtb3BlcmF0aW9ucycsXG4gICAgaWNvbjogJ3Rlcm1pbmFsJyxcbiAgICBwYXJlbnQ6IHtcbiAgICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXZpY2UgdHlwZXMnKSxcbiAgICAgIGljb246ICdjOHktZGV2aWNlLXByb3RvY29scydcbiAgICB9LFxuICAgIHByaW9yaXR5OiAwXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZ3VhcmQ6IEx3bTJtTWljcm9zZXJ2aWNlU3Vic2NyaWJlZEd1YXJkKSB7fVxuXG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5ndWFyZC5jYW5BY3RpdmF0ZSgpID8gdGhpcy5ub2RlIDogW107XG4gIH1cbn1cbiJdfQ==