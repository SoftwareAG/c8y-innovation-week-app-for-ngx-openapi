import { Injectable } from '@angular/core';
import { FetchClient } from '@c8y/client';
import { Lwm2mClientService } from '@c8y/ngx-components/protocol-lwm2m/services';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
export class LWM2MPostOperationsParametersService extends Lwm2mClientService {
    constructor(client) {
        super(client);
        this.detailUrl = '/postRegistrationOptions';
    }
    get() {
        return super.fetch(this.detailUrl);
    }
    put(data) {
        const headers = { 'content-type': 'application/json', accept: 'application/json' };
        return super.fetch(this.detailUrl, {
            method: 'PUT',
            body: JSON.stringify(data),
            headers: headers
        });
    }
}
LWM2MPostOperationsParametersService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOperationsParametersService, deps: [{ token: i1.FetchClient }], target: i0.ɵɵFactoryTarget.Injectable });
LWM2MPostOperationsParametersService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOperationsParametersService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LWM2MPostOperationsParametersService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.FetchClient }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHdtMm0tcG9zdC1vcGVyYXRpb25zLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm90b2NvbC1sd20ybS9jb21wb25lbnRzL3Bvc3QtcmVnaXN0cmF0aW9uLW9wZXJhdGlvbnMvbHdtMm0tcG9zdC1vcGVyYXRpb25zLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsV0FBVyxFQUFrQixNQUFNLGFBQWEsQ0FBQztBQUMxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7O0FBTWpGLE1BQU0sT0FBTyxvQ0FBcUMsU0FBUSxrQkFBaUQ7SUFHekcsWUFBWSxNQUFtQjtRQUM3QixLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFIQyxjQUFTLEdBQVcsMEJBQTBCLENBQUM7SUFJaEUsQ0FBQztJQUVELEdBQUc7UUFDRCxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxHQUFHLENBQUMsSUFBbUM7UUFDckMsTUFBTSxPQUFPLEdBQUcsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxFQUFFLGtCQUFrQixFQUFFLENBQUM7UUFDbkYsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDakMsTUFBTSxFQUFFLEtBQUs7WUFDYixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFDMUIsT0FBTyxFQUFFLE9BQU87U0FDakIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7aUlBbEJVLG9DQUFvQztxSUFBcEMsb0NBQW9DLGNBRm5DLE1BQU07MkZBRVAsb0NBQW9DO2tCQUhoRCxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZldGNoQ2xpZW50LCBJRmV0Y2hSZXNwb25zZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEx3bTJtQ2xpZW50U2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvcHJvdG9jb2wtbHdtMm0vc2VydmljZXMnO1xuaW1wb3J0IHsgTFdNMk1Qb3N0T3BlcmF0aW9uc1BhcmFtZXRlcnMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3Byb3RvY29sLWx3bTJtL21vZGVsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTFdNMk1Qb3N0T3BlcmF0aW9uc1BhcmFtZXRlcnNTZXJ2aWNlIGV4dGVuZHMgTHdtMm1DbGllbnRTZXJ2aWNlPExXTTJNUG9zdE9wZXJhdGlvbnNQYXJhbWV0ZXJzPiB7XG4gIHByaXZhdGUgcmVhZG9ubHkgZGV0YWlsVXJsOiBzdHJpbmcgPSAnL3Bvc3RSZWdpc3RyYXRpb25PcHRpb25zJztcblxuICBjb25zdHJ1Y3RvcihjbGllbnQ6IEZldGNoQ2xpZW50KSB7XG4gICAgc3VwZXIoY2xpZW50KTtcbiAgfVxuXG4gIGdldCgpOiBQcm9taXNlPElGZXRjaFJlc3BvbnNlPiB7XG4gICAgcmV0dXJuIHN1cGVyLmZldGNoKHRoaXMuZGV0YWlsVXJsKTtcbiAgfVxuXG4gIHB1dChkYXRhOiBMV00yTVBvc3RPcGVyYXRpb25zUGFyYW1ldGVycykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7ICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsIGFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nIH07XG4gICAgcmV0dXJuIHN1cGVyLmZldGNoKHRoaXMuZGV0YWlsVXJsLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICBoZWFkZXJzOiBoZWFkZXJzXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==