import { Injectable } from '@angular/core';
import { FetchClient, Service } from '@c8y/client';
import { agentName, c8y_lwm2m } from '@c8y/ngx-components/protocol-lwm2m/model';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
export class Lwm2mClientService extends Service {
    constructor(client) {
        super(client);
        this.listUrl = 'device';
        this.baseUrl = `/service/${agentName}`;
    }
    isLwm2mDevice(mo) {
        return (!!mo?.c8y_IsLwm2mDevice || mo?.c8y_DeviceTypes?.includes(c8y_lwm2m) || mo?.type === c8y_lwm2m);
    }
    detail(entityOrId, filter = {}) {
        return super.detail(entityOrId, filter);
    }
    update(entity) {
        return super.update(entity);
    }
    fetch(url, init) {
        return super.fetch(url, init);
    }
}
Lwm2mClientService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mClientService, deps: [{ token: i1.FetchClient }], target: i0.ɵɵFactoryTarget.Injectable });
Lwm2mClientService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mClientService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mClientService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.FetchClient }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHdtMm0tY2xpZW50LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm90b2NvbC1sd20ybS9zZXJ2aWNlcy9sd20ybS1jbGllbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFDTCxXQUFXLEVBS1gsT0FBTyxFQUNSLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBc0IsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBDQUEwQyxDQUFDOzs7QUFLcEcsTUFBTSxPQUFPLGtCQUEwQyxTQUFRLE9BQW9CO0lBSWpGLFlBQVksTUFBbUI7UUFDN0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBSk4sWUFBTyxHQUFHLFFBQVEsQ0FBQztRQUNuQixZQUFPLEdBQUcsWUFBWSxTQUFTLEVBQUUsQ0FBQztJQUk1QyxDQUFDO0lBRUQsYUFBYSxDQUFDLEVBQXNCO1FBQ2xDLE9BQU8sQ0FDTCxDQUFDLENBQUMsRUFBRSxFQUFFLGlCQUFpQixJQUFJLEVBQUUsRUFBRSxlQUFlLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxJQUFJLEtBQUssU0FBUyxDQUM5RixDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUErQixFQUFFLFNBQWlCLEVBQUU7UUFDekQsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQThCLENBQUM7SUFDdkUsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFTO1FBQ2QsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBOEIsQ0FBQztJQUMzRCxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQVcsRUFBRSxJQUFvQjtRQUNyQyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OytHQXhCVSxrQkFBa0I7bUhBQWxCLGtCQUFrQixjQUZqQixNQUFNOzJGQUVQLGtCQUFrQjtrQkFIOUIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBGZXRjaENsaWVudCxcbiAgSUZldGNoT3B0aW9ucyxcbiAgSUZldGNoUmVzcG9uc2UsXG4gIElJZGVudGlmaWVkLFxuICBJUmVzdWx0LFxuICBTZXJ2aWNlXG59IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEx3bTJtTWFuYWdlZE9iamVjdCwgYWdlbnROYW1lLCBjOHlfbHdtMm0gfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3Byb3RvY29sLWx3bTJtL21vZGVsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTHdtMm1DbGllbnRTZXJ2aWNlPFQgZXh0ZW5kcyBJSWRlbnRpZmllZD4gZXh0ZW5kcyBTZXJ2aWNlPElJZGVudGlmaWVkPiB7XG4gIHByb3RlY3RlZCBsaXN0VXJsID0gJ2RldmljZSc7XG4gIHByb3RlY3RlZCBiYXNlVXJsID0gYC9zZXJ2aWNlLyR7YWdlbnROYW1lfWA7XG5cbiAgY29uc3RydWN0b3IoY2xpZW50OiBGZXRjaENsaWVudCkge1xuICAgIHN1cGVyKGNsaWVudCk7XG4gIH1cblxuICBpc0x3bTJtRGV2aWNlKG1vOiBMd20ybU1hbmFnZWRPYmplY3QpIHtcbiAgICByZXR1cm4gKFxuICAgICAgISFtbz8uYzh5X0lzTHdtMm1EZXZpY2UgfHwgbW8/LmM4eV9EZXZpY2VUeXBlcz8uaW5jbHVkZXMoYzh5X2x3bTJtKSB8fCBtbz8udHlwZSA9PT0gYzh5X2x3bTJtXG4gICAgKTtcbiAgfVxuXG4gIGRldGFpbChlbnRpdHlPcklkOiBzdHJpbmcgfCBudW1iZXIgfCBULCBmaWx0ZXI6IG9iamVjdCA9IHt9KTogUHJvbWlzZTxJUmVzdWx0PFQgfCBhbnk+PiB7XG4gICAgcmV0dXJuIHN1cGVyLmRldGFpbChlbnRpdHlPcklkLCBmaWx0ZXIpIGFzIFByb21pc2U8SVJlc3VsdDxUIHwgYW55Pj47XG4gIH1cblxuICB1cGRhdGUoZW50aXR5OiBUKTogUHJvbWlzZTxJUmVzdWx0PFQgfCBhbnk+PiB7XG4gICAgcmV0dXJuIHN1cGVyLnVwZGF0ZShlbnRpdHkpIGFzIFByb21pc2U8SVJlc3VsdDxUIHwgYW55Pj47XG4gIH1cblxuICBmZXRjaCh1cmw6IHN0cmluZywgaW5pdD86IElGZXRjaE9wdGlvbnMpOiBQcm9taXNlPElGZXRjaFJlc3BvbnNlPiB7XG4gICAgcmV0dXJuIHN1cGVyLmZldGNoKHVybCwgaW5pdCk7XG4gIH1cbn1cbiJdfQ==