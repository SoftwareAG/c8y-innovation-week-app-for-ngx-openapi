import { Injectable } from '@angular/core';
import { TenantUiService } from '@c8y/ngx-components';
import { Lwm2mBaseGuard } from './lwm2m-base.guard';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
export class Lwm2mMicroserviceSubscribedGuard extends Lwm2mBaseGuard {
    constructor(tenantService) {
        super(tenantService);
        this.tenantService = tenantService;
    }
    additionalChecks(_route) {
        // Lwm2mBaseGuard checks by default for microservice subscription.
        // We don't need additional checks here.
        return true;
    }
}
Lwm2mMicroserviceSubscribedGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mMicroserviceSubscribedGuard, deps: [{ token: i1.TenantUiService }], target: i0.ɵɵFactoryTarget.Injectable });
Lwm2mMicroserviceSubscribedGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mMicroserviceSubscribedGuard });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Lwm2mMicroserviceSubscribedGuard, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TenantUiService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHdtMm0tbWljcm9zZXJ2aWNlLXN1YnNjcmliZWQuZ3VhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm90b2NvbC1sd20ybS9ndWFyZHMvbHdtMm0tbWljcm9zZXJ2aWNlLXN1YnNjcmliZWQuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7QUFHcEQsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLGNBQWM7SUFDbEUsWUFBc0IsYUFBOEI7UUFDbEQsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBREQsa0JBQWEsR0FBYixhQUFhLENBQWlCO0lBRXBELENBQUM7SUFFUyxnQkFBZ0IsQ0FBQyxNQUErQjtRQUN4RCxrRUFBa0U7UUFDbEUsd0NBQXdDO1FBQ3hDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7NkhBVFUsZ0NBQWdDO2lJQUFoQyxnQ0FBZ0M7MkZBQWhDLGdDQUFnQztrQkFENUMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVGVuYW50VWlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBMd20ybUJhc2VHdWFyZCB9IGZyb20gJy4vbHdtMm0tYmFzZS5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMd20ybU1pY3Jvc2VydmljZVN1YnNjcmliZWRHdWFyZCBleHRlbmRzIEx3bTJtQmFzZUd1YXJkIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHRlbmFudFNlcnZpY2U6IFRlbmFudFVpU2VydmljZSkge1xuICAgIHN1cGVyKHRlbmFudFNlcnZpY2UpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGFkZGl0aW9uYWxDaGVja3MoX3JvdXRlPzogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIC8vIEx3bTJtQmFzZUd1YXJkIGNoZWNrcyBieSBkZWZhdWx0IGZvciBtaWNyb3NlcnZpY2Ugc3Vic2NyaXB0aW9uLlxuICAgIC8vIFdlIGRvbid0IG5lZWQgYWRkaXRpb25hbCBjaGVja3MgaGVyZS5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuIl19