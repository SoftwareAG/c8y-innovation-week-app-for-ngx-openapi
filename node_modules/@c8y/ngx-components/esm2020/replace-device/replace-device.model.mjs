import { gettext } from '@c8y/ngx-components';
const REPLACE_DEVICE_STEP_STATES = [
    'Pending',
    'Executing',
    'Skipped',
    'Failed',
    'Successful'
];
export function isValidReplaceDeviceStepState(state) {
    return REPLACE_DEVICE_STEP_STATES.includes(state);
}
export const REPLACE_DEVICE_STEP_STATE = {
    PENDING: gettext('Pending'),
    EXECUTING: gettext('Executing'),
    SKIPPED: gettext('Skipped'),
    FAILED: gettext('Failed'),
    SUCCESSFUL: gettext('Successful')
};
export const REPLACE_DEVICE_STEP_STATES_MAP = {
    Pending: {
        icon: 'clock-o',
        styleClass: 'text-info'
    },
    Executing: {
        icon: 'refresh',
        styleClass: 'text-info'
    },
    Skipped: {
        icon: 'skip',
        styleClass: 'text-info'
    },
    Failed: {
        icon: 'exclamation-circle',
        styleClass: 'text-danger'
    },
    Successful: {
        icon: 'check-circle',
        styleClass: 'text-success'
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGFjZS1kZXZpY2UubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZXBsYWNlLWRldmljZS9yZXBsYWNlLWRldmljZS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUE2RTlDLE1BQU0sMEJBQTBCLEdBQVU7SUFDeEMsU0FBUztJQUNULFdBQVc7SUFDWCxTQUFTO0lBQ1QsUUFBUTtJQUNSLFlBQVk7Q0FDYixDQUFDO0FBR0YsTUFBTSxVQUFVLDZCQUE2QixDQUFDLEtBQWM7SUFDMUQsT0FBTywwQkFBMEIsQ0FBQyxRQUFRLENBQUMsS0FBK0IsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBOEM7SUFDbEYsT0FBTyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7SUFDM0IsU0FBUyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUM7SUFDL0IsT0FBTyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7SUFDM0IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDekIsVUFBVSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7Q0FDbEMsQ0FBQztBQVdGLE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUErQjtJQUN4RSxPQUFPLEVBQUU7UUFDUCxJQUFJLEVBQUUsU0FBUztRQUNmLFVBQVUsRUFBRSxXQUFXO0tBQ3hCO0lBQ0QsU0FBUyxFQUFFO1FBQ1QsSUFBSSxFQUFFLFNBQVM7UUFDZixVQUFVLEVBQUUsV0FBVztLQUN4QjtJQUNELE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRSxNQUFNO1FBQ1osVUFBVSxFQUFFLFdBQVc7S0FDeEI7SUFDRCxNQUFNLEVBQUU7UUFDTixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLFVBQVUsRUFBRSxhQUFhO0tBQzFCO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGNBQWM7UUFDcEIsVUFBVSxFQUFFLGNBQWM7S0FDM0I7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUV4dGVybmFsSWRlbnRpdHksIElNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlcGxhY2VEZXZpY2VDb250ZXh0IHtcbiAgZGV2aWNlVG9SZXBsYWNlOiBJTWFuYWdlZE9iamVjdDtcbiAgcmVwbGFjZW1lbnREZXZpY2U6IElNYW5hZ2VkT2JqZWN0O1xuICByZXBsYWNlbWVudERldmljZUlkOiBzdHJpbmc7XG4gIG5ld0V4dGVybmFsSWRzOiBJRXh0ZXJuYWxJZGVudGl0eVtdO1xuICBvbGRFeHRlcm5hbElkczogSUV4dGVybmFsSWRlbnRpdHlbXTtcbiAgZGVsZXRlUmVwbGFjZWREZXZpY2VPd25lcjogYm9vbGVhbjtcbiAgdGltZTogc3RyaW5nO1xuICBza2lwPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFcnJvciB7XG4gIHRleHQ6IHN0cmluZztcbiAgZGV0YWlsZWREYXRhPzpcbiAgICB8IHN0cmluZ1xuICAgIHwge1xuICAgICAgICBzdGF0dXM6IHN0cmluZztcbiAgICAgICAgc3RhdHVzVGV4dDogc3RyaW5nO1xuICAgICAgfTtcbn1cblxuLyoqXG4gKiBEZWNsYXJlcyBhbiBleGVjdXRpb24gc3RlcCBpbiB0aGUgZGV2aWNlIHJlcGxhY2VtZW50IGZsb3cuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVwbGFjZURldmljZVN0ZXAge1xuICAvKipcbiAgICogTGFiZWwgdG8gYmUgdXNlZCBpbiB0aGUgcmVwbGFjZSBkZXZpY2Ugd2l6YXJkIFVJLlxuICAgKi9cbiAgbGFiZWw6IHN0cmluZztcbiAgLyoqXG4gICAqIFN0ZXAgaW1wbGVtZW50YXRpb24uXG4gICAqL1xuICBhY3Rpb246IChjb250ZXh0OiBSZXBsYWNlRGV2aWNlQ29udGV4dCkgPT4gT2JzZXJ2YWJsZTx1bmtub3duPiB8IFByb21pc2U8dW5rbm93bj47XG4gIC8qKlxuICAgKiBEZWZpbmVzIGlmIHRoZSByZXN1bHQgZnJvbSBzdGVwIGV4ZWN1dGlvbiBzaG91bGQgYmUgcGFzc2VkIHRvIHRoZSBuZXh0IHN0ZXAgaW4gdGhlIGZsb3cuXG4gICAqL1xuICBvdmVycmlkZUNvbnRleHQ/OiBib29sZWFuO1xuICBpbmZvPzogU3RlcEluZm87XG4gIC8qKlxuICAgKiBDdXJyZW50IGV4ZWN1dGlvbiBzdGF0ZSBvZiB0aGUgc3RlcC5cbiAgICovXG4gIHN0YXRlPzogUmVwbGFjZURldmljZVN0ZXBTdGF0ZTtcbiAgLyoqXG4gICAqIEVycm9yIG9jY3VyZWQgZHVyaW5nIHN0ZXAgZXhlY3V0aW9uLlxuICAgKi9cbiAgZXJyb3I/OiBFcnJvcjtcbiAgLyoqXG4gICAqICFJbnRlcm5hbCB1c2Ugb25seSEgRmxhZyB0byBza2lwIHN0ZXAgZXhlY3V0aW9uLCB1c2VkIHRvIGNvbnRyb2wgcmV0cmlhbC5cbiAgICovXG4gIHNraXA/OiBib29sZWFuO1xuICAvKipcbiAgICogIUludGVybmFsIHVzZSBvbmx5ISBTdG9yZXMgdGhlIGNvbnRleHQgdGhlIHN0ZXAgd2FzIGluaXRpYWxseSBleGVjdXRlZCB3aXRoLlxuICAgKi9cbiAgY29udGV4dD86IFJlcGxhY2VEZXZpY2VDb250ZXh0O1xuICAvKipcbiAgICogIUludGVybmFsIHVzZSBvbmx5ISBDb250ZXh0IHRvIGJlIHVzZWQgZm9yIHN0ZXAgcmUtdHJpYWwuXG4gICAqL1xuICBzZWVkPzogUmVwbGFjZURldmljZUNvbnRleHQ7XG59XG5cbi8qKlxuICogQWxsb3dzIHRvIGRpc3BsYXkgYW4gaW5mbyBwb3BvdmVyIGZvciBhIHBhcnRpY3VsYXIgc3RlcC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTdGVwSW5mbyB7XG4gIC8qKlxuICAgKiBNZXNzYWdlIHRoYXQgd2lsbCBiZSBkaXNwbGF5ZWQgYXMgYSBwb3BvdmVyIGZvciB0aGUgZ2l2ZW4gc3RlcC5cbiAgICovXG4gIG1zZz86IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIEEgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGV4ZWN1dGVkXG4gICAqL1xuICBnZXRNZXNzYWdlPzogKGNvbnRleHQ6IFJlcGxhY2VEZXZpY2VDb250ZXh0LCBzdGVwOiBSZXBsYWNlRGV2aWNlU3RlcCkgPT4gc3RyaW5nIHwgdW5kZWZpbmVkO1xufVxuXG5jb25zdCBSRVBMQUNFX0RFVklDRV9TVEVQX1NUQVRFUyA9IDxjb25zdD5bXG4gICdQZW5kaW5nJyxcbiAgJ0V4ZWN1dGluZycsXG4gICdTa2lwcGVkJyxcbiAgJ0ZhaWxlZCcsXG4gICdTdWNjZXNzZnVsJ1xuXTtcbmV4cG9ydCB0eXBlIFJlcGxhY2VEZXZpY2VTdGVwU3RhdGUgPSAodHlwZW9mIFJFUExBQ0VfREVWSUNFX1NURVBfU1RBVEVTKVtudW1iZXJdO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFJlcGxhY2VEZXZpY2VTdGVwU3RhdGUoc3RhdGU6IHVua25vd24pOiBzdGF0ZSBpcyBSZXBsYWNlRGV2aWNlU3RlcFN0YXRlIHtcbiAgcmV0dXJuIFJFUExBQ0VfREVWSUNFX1NURVBfU1RBVEVTLmluY2x1ZGVzKHN0YXRlIGFzIFJlcGxhY2VEZXZpY2VTdGVwU3RhdGUpO1xufVxuXG5leHBvcnQgY29uc3QgUkVQTEFDRV9ERVZJQ0VfU1RFUF9TVEFURTogeyBba2V5OiBzdHJpbmddOiBSZXBsYWNlRGV2aWNlU3RlcFN0YXRlIH0gPSB7XG4gIFBFTkRJTkc6IGdldHRleHQoJ1BlbmRpbmcnKSxcbiAgRVhFQ1VUSU5HOiBnZXR0ZXh0KCdFeGVjdXRpbmcnKSxcbiAgU0tJUFBFRDogZ2V0dGV4dCgnU2tpcHBlZCcpLFxuICBGQUlMRUQ6IGdldHRleHQoJ0ZhaWxlZCcpLFxuICBTVUNDRVNTRlVMOiBnZXR0ZXh0KCdTdWNjZXNzZnVsJylcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xuICBpY29uPzogc3RyaW5nO1xuICBzdHlsZUNsYXNzPzogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBSZXBsYWNlRGV2aWNlU3RlcFN0YXRlc01hcCA9IHtcbiAgW2tleSBpbiBSZXBsYWNlRGV2aWNlU3RlcFN0YXRlXT86IFN0YXRlO1xufTtcblxuZXhwb3J0IGNvbnN0IFJFUExBQ0VfREVWSUNFX1NURVBfU1RBVEVTX01BUDogUmVwbGFjZURldmljZVN0ZXBTdGF0ZXNNYXAgPSB7XG4gIFBlbmRpbmc6IHtcbiAgICBpY29uOiAnY2xvY2stbycsXG4gICAgc3R5bGVDbGFzczogJ3RleHQtaW5mbydcbiAgfSxcbiAgRXhlY3V0aW5nOiB7XG4gICAgaWNvbjogJ3JlZnJlc2gnLFxuICAgIHN0eWxlQ2xhc3M6ICd0ZXh0LWluZm8nXG4gIH0sXG4gIFNraXBwZWQ6IHtcbiAgICBpY29uOiAnc2tpcCcsXG4gICAgc3R5bGVDbGFzczogJ3RleHQtaW5mbydcbiAgfSxcbiAgRmFpbGVkOiB7XG4gICAgaWNvbjogJ2V4Y2xhbWF0aW9uLWNpcmNsZScsXG4gICAgc3R5bGVDbGFzczogJ3RleHQtZGFuZ2VyJ1xuICB9LFxuICBTdWNjZXNzZnVsOiB7XG4gICAgaWNvbjogJ2NoZWNrLWNpcmNsZScsXG4gICAgc3R5bGVDbGFzczogJ3RleHQtc3VjY2VzcydcbiAgfVxufTtcbiJdfQ==