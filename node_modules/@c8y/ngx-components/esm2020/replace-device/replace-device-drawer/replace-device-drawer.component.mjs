import { Component, ViewChild } from '@angular/core';
import { CoreModule } from '@c8y/ngx-components';
import { interval } from 'rxjs';
import { delayWhen } from 'rxjs/operators';
import { ReplaceDeviceWizardComponent } from '../replace-device-wizard/replace-device-wizard.component';
import { ReplaceDeviceService } from '../replace-device.service';
import * as i0 from "@angular/core";
import * as i1 from "../replace-device.service";
import * as i2 from "@angular/common";
export class ReplaceDeviceDrawerComponent {
    constructor(replaceDeviceService) {
        this.replaceDeviceService = replaceDeviceService;
        this.showWizard$ = this.replaceDeviceService.drawerOpen$.pipe(
        // when closing wait for drawer animation to end
        delayWhen(open => interval(open ? 0 : 400)));
    }
    ngOnDestroy() {
        this.replaceDeviceService.closeDrawer();
    }
}
ReplaceDeviceDrawerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ReplaceDeviceDrawerComponent, deps: [{ token: i1.ReplaceDeviceService }], target: i0.ɵɵFactoryTarget.Component });
ReplaceDeviceDrawerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ReplaceDeviceDrawerComponent, isStandalone: true, selector: "c8y-replace-device-drawer", viewQueries: [{ propertyName: "wizard", first: true, predicate: ReplaceDeviceWizardComponent, descendants: true, static: true }], ngImport: i0, template: "<div [ngClass]=\"{ drawerOpen: replaceDeviceService.drawerOpen$ | async }\">\n  <div class=\"bottom-drawer\">\n    <div class=\"d-flex d-col no-align-items fit-h\">\n      <c8y-replace-device-wizard\n        class=\"d-contents\"\n        *ngIf=\"showWizard$ | async\"\n        (onClose)=\"replaceDeviceService.closeDrawer()\"\n      ></c8y-replace-device-wizard>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "ngmodule", type: CoreModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "component", type: ReplaceDeviceWizardComponent, selector: "c8y-replace-device-wizard", outputs: ["onClose"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ReplaceDeviceDrawerComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'c8y-replace-device-drawer', imports: [CoreModule, ReplaceDeviceWizardComponent], template: "<div [ngClass]=\"{ drawerOpen: replaceDeviceService.drawerOpen$ | async }\">\n  <div class=\"bottom-drawer\">\n    <div class=\"d-flex d-col no-align-items fit-h\">\n      <c8y-replace-device-wizard\n        class=\"d-contents\"\n        *ngIf=\"showWizard$ | async\"\n        (onClose)=\"replaceDeviceService.closeDrawer()\"\n      ></c8y-replace-device-wizard>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ReplaceDeviceService }]; }, propDecorators: { wizard: [{
                type: ViewChild,
                args: [ReplaceDeviceWizardComponent, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGFjZS1kZXZpY2UtZHJhd2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlcGxhY2UtZGV2aWNlL3JlcGxhY2UtZGV2aWNlLWRyYXdlci9yZXBsYWNlLWRldmljZS1kcmF3ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcmVwbGFjZS1kZXZpY2UvcmVwbGFjZS1kZXZpY2UtZHJhd2VyL3JlcGxhY2UtZGV2aWNlLWRyYXdlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFhLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFFBQVEsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUM1QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDeEcsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7QUFRakUsTUFBTSxPQUFPLDRCQUE0QjtJQVN2QyxZQUFtQixvQkFBMEM7UUFBMUMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUw3RCxnQkFBVyxHQUF3QixJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFDLElBQUk7UUFDM0UsZ0RBQWdEO1FBQ2hELFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDNUMsQ0FBQztJQUU4RCxDQUFDO0lBRWpFLFdBQVc7UUFDVCxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUMsQ0FBQzs7eUhBYlUsNEJBQTRCOzZHQUE1Qiw0QkFBNEIsNkhBQzVCLDRCQUE0Qiw4RENkekMsNFlBV0EsMkNERFksVUFBVSxzUkFBRSw0QkFBNEI7MkZBR3ZDLDRCQUE0QjtrQkFOeEMsU0FBUztpQ0FDSSxJQUFJLFlBQ04sMkJBQTJCLFdBQzVCLENBQUMsVUFBVSxFQUFFLDRCQUE0QixDQUFDOzJHQUtuRCxNQUFNO3NCQURMLFNBQVM7dUJBQUMsNEJBQTRCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgaW50ZXJ2YWwsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRlbGF5V2hlbiB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFJlcGxhY2VEZXZpY2VXaXphcmRDb21wb25lbnQgfSBmcm9tICcuLi9yZXBsYWNlLWRldmljZS13aXphcmQvcmVwbGFjZS1kZXZpY2Utd2l6YXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXBsYWNlRGV2aWNlU2VydmljZSB9IGZyb20gJy4uL3JlcGxhY2UtZGV2aWNlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgc2VsZWN0b3I6ICdjOHktcmVwbGFjZS1kZXZpY2UtZHJhd2VyJyxcbiAgaW1wb3J0czogW0NvcmVNb2R1bGUsIFJlcGxhY2VEZXZpY2VXaXphcmRDb21wb25lbnRdLFxuICB0ZW1wbGF0ZVVybDogJy4vcmVwbGFjZS1kZXZpY2UtZHJhd2VyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBSZXBsYWNlRGV2aWNlRHJhd2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgQFZpZXdDaGlsZChSZXBsYWNlRGV2aWNlV2l6YXJkQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KVxuICB3aXphcmQ6IFJlcGxhY2VEZXZpY2VXaXphcmRDb21wb25lbnQ7XG5cbiAgc2hvd1dpemFyZCQ6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSB0aGlzLnJlcGxhY2VEZXZpY2VTZXJ2aWNlLmRyYXdlck9wZW4kLnBpcGUoXG4gICAgLy8gd2hlbiBjbG9zaW5nIHdhaXQgZm9yIGRyYXdlciBhbmltYXRpb24gdG8gZW5kXG4gICAgZGVsYXlXaGVuKG9wZW4gPT4gaW50ZXJ2YWwob3BlbiA/IDAgOiA0MDApKVxuICApO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZXBsYWNlRGV2aWNlU2VydmljZTogUmVwbGFjZURldmljZVNlcnZpY2UpIHt9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5yZXBsYWNlRGV2aWNlU2VydmljZS5jbG9zZURyYXdlcigpO1xuICB9XG59XG4iLCI8ZGl2IFtuZ0NsYXNzXT1cInsgZHJhd2VyT3BlbjogcmVwbGFjZURldmljZVNlcnZpY2UuZHJhd2VyT3BlbiQgfCBhc3luYyB9XCI+XG4gIDxkaXYgY2xhc3M9XCJib3R0b20tZHJhd2VyXCI+XG4gICAgPGRpdiBjbGFzcz1cImQtZmxleCBkLWNvbCBuby1hbGlnbi1pdGVtcyBmaXQtaFwiPlxuICAgICAgPGM4eS1yZXBsYWNlLWRldmljZS13aXphcmRcbiAgICAgICAgY2xhc3M9XCJkLWNvbnRlbnRzXCJcbiAgICAgICAgKm5nSWY9XCJzaG93V2l6YXJkJCB8IGFzeW5jXCJcbiAgICAgICAgKG9uQ2xvc2UpPVwicmVwbGFjZURldmljZVNlcnZpY2UuY2xvc2VEcmF3ZXIoKVwiXG4gICAgICA+PC9jOHktcmVwbGFjZS1kZXZpY2Utd2l6YXJkPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19