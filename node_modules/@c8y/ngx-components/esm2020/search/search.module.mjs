import { NgModule } from '@angular/core';
import { CoreModule, hookSearch, hookRoute, SearchModule as CoreSearchModule } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { SearchResultsComponent } from './search-results.component';
import { SearchGridComponent } from './search-grid.component';
import { SearchActionComponent } from './search-action.component';
import { AssetSearchService } from './search.service';
import { SearchCustomFiltersComponent } from './search-custom-filters.component';
import { AssetTypeCellRendererComponent } from './columns/asset-type.cell-renderer.component';
import { SEARCH_CONFIG } from './search-config.model';
import * as i0 from "@angular/core";
export class SearchModule {
    static config(config = {}) {
        return {
            ngModule: SearchModule,
            providers: [
                {
                    provide: SEARCH_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
SearchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SearchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SearchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: SearchModule, declarations: [SearchResultsComponent,
        SearchGridComponent,
        SearchActionComponent,
        SearchCustomFiltersComponent,
        AssetTypeCellRendererComponent], imports: [CoreModule, DeviceGridModule, CoreSearchModule], exports: [SearchResultsComponent, SearchGridComponent] });
SearchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SearchModule, providers: [
        AssetSearchService,
        hookRoute({
            path: 'assetsearch',
            component: SearchResultsComponent
        }),
        hookSearch({
            template: SearchActionComponent,
            onSearch: undefined
        })
    ], imports: [CoreModule, DeviceGridModule, CoreSearchModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SearchModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        SearchResultsComponent,
                        SearchGridComponent,
                        SearchActionComponent,
                        SearchCustomFiltersComponent,
                        AssetTypeCellRendererComponent
                    ],
                    imports: [CoreModule, DeviceGridModule, CoreSearchModule],
                    entryComponents: [SearchResultsComponent, SearchActionComponent],
                    exports: [SearchResultsComponent, SearchGridComponent],
                    providers: [
                        AssetSearchService,
                        hookRoute({
                            path: 'assetsearch',
                            component: SearchResultsComponent
                        }),
                        hookSearch({
                            template: SearchActionComponent,
                            onSearch: undefined
                        })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlYXJjaC9zZWFyY2gubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFDTCxVQUFVLEVBQ1YsVUFBVSxFQUNWLFNBQVMsRUFDVCxZQUFZLElBQUksZ0JBQWdCLEVBQ2pDLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbkUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDOUYsT0FBTyxFQUFnQixhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUF5QnBFLE1BQU0sT0FBTyxZQUFZO0lBQ3ZCLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBdUIsRUFBRTtRQUNyQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVk7WUFDdEIsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxhQUFhO29CQUN0QixRQUFRLEVBQUUsTUFBTTtpQkFDakI7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzt5R0FYVSxZQUFZOzBHQUFaLFlBQVksaUJBckJyQixzQkFBc0I7UUFDdEIsbUJBQW1CO1FBQ25CLHFCQUFxQjtRQUNyQiw0QkFBNEI7UUFDNUIsOEJBQThCLGFBRXRCLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsYUFFOUMsc0JBQXNCLEVBQUUsbUJBQW1COzBHQWExQyxZQUFZLGFBWlo7UUFDVCxrQkFBa0I7UUFDbEIsU0FBUyxDQUFDO1lBQ1IsSUFBSSxFQUFFLGFBQWE7WUFDbkIsU0FBUyxFQUFFLHNCQUFzQjtTQUNsQyxDQUFDO1FBQ0YsVUFBVSxDQUFDO1lBQ1QsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQixRQUFRLEVBQUUsU0FBUztTQUNwQixDQUFDO0tBQ0gsWUFiUyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsZ0JBQWdCOzJGQWU3QyxZQUFZO2tCQXZCeEIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osc0JBQXNCO3dCQUN0QixtQkFBbUI7d0JBQ25CLHFCQUFxQjt3QkFDckIsNEJBQTRCO3dCQUM1Qiw4QkFBOEI7cUJBQy9CO29CQUNELE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQztvQkFDekQsZUFBZSxFQUFFLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7b0JBQ2hFLE9BQU8sRUFBRSxDQUFDLHNCQUFzQixFQUFFLG1CQUFtQixDQUFDO29CQUN0RCxTQUFTLEVBQUU7d0JBQ1Qsa0JBQWtCO3dCQUNsQixTQUFTLENBQUM7NEJBQ1IsSUFBSSxFQUFFLGFBQWE7NEJBQ25CLFNBQVMsRUFBRSxzQkFBc0I7eUJBQ2xDLENBQUM7d0JBQ0YsVUFBVSxDQUFDOzRCQUNULFFBQVEsRUFBRSxxQkFBcUI7NEJBQy9CLFFBQVEsRUFBRSxTQUFTO3lCQUNwQixDQUFDO3FCQUNIO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENvcmVNb2R1bGUsXG4gIGhvb2tTZWFyY2gsXG4gIGhvb2tSb3V0ZSxcbiAgU2VhcmNoTW9kdWxlIGFzIENvcmVTZWFyY2hNb2R1bGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZCc7XG5pbXBvcnQgeyBTZWFyY2hSZXN1bHRzQ29tcG9uZW50IH0gZnJvbSAnLi9zZWFyY2gtcmVzdWx0cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VhcmNoR3JpZENvbXBvbmVudCB9IGZyb20gJy4vc2VhcmNoLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFNlYXJjaEFjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vc2VhcmNoLWFjdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzZXRTZWFyY2hTZXJ2aWNlIH0gZnJvbSAnLi9zZWFyY2guc2VydmljZSc7XG5pbXBvcnQgeyBTZWFyY2hDdXN0b21GaWx0ZXJzQ29tcG9uZW50IH0gZnJvbSAnLi9zZWFyY2gtY3VzdG9tLWZpbHRlcnMuY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2V0VHlwZUNlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vY29sdW1ucy9hc3NldC10eXBlLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFNlYXJjaENvbmZpZywgU0VBUkNIX0NPTkZJRyB9IGZyb20gJy4vc2VhcmNoLWNvbmZpZy5tb2RlbCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFNlYXJjaFJlc3VsdHNDb21wb25lbnQsXG4gICAgU2VhcmNoR3JpZENvbXBvbmVudCxcbiAgICBTZWFyY2hBY3Rpb25Db21wb25lbnQsXG4gICAgU2VhcmNoQ3VzdG9tRmlsdGVyc0NvbXBvbmVudCxcbiAgICBBc3NldFR5cGVDZWxsUmVuZGVyZXJDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW0NvcmVNb2R1bGUsIERldmljZUdyaWRNb2R1bGUsIENvcmVTZWFyY2hNb2R1bGVdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtTZWFyY2hSZXN1bHRzQ29tcG9uZW50LCBTZWFyY2hBY3Rpb25Db21wb25lbnRdLFxuICBleHBvcnRzOiBbU2VhcmNoUmVzdWx0c0NvbXBvbmVudCwgU2VhcmNoR3JpZENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEFzc2V0U2VhcmNoU2VydmljZSxcbiAgICBob29rUm91dGUoe1xuICAgICAgcGF0aDogJ2Fzc2V0c2VhcmNoJyxcbiAgICAgIGNvbXBvbmVudDogU2VhcmNoUmVzdWx0c0NvbXBvbmVudFxuICAgIH0pLFxuICAgIGhvb2tTZWFyY2goe1xuICAgICAgdGVtcGxhdGU6IFNlYXJjaEFjdGlvbkNvbXBvbmVudCxcbiAgICAgIG9uU2VhcmNoOiB1bmRlZmluZWRcbiAgICB9KVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaE1vZHVsZSB7XG4gIHN0YXRpYyBjb25maWcoY29uZmlnOiBTZWFyY2hDb25maWcgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2VhcmNoTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTZWFyY2hNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFNFQVJDSF9DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19