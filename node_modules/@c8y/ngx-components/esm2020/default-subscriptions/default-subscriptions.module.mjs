import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, hookNavigator, hookRoute } from '@c8y/ngx-components';
import { DefaultSubscriptionsComponent } from './default-subscriptions.component';
import { DefaultSubscriptionsService } from './default-subscriptions.service';
import { DefaultSubscriptionsGuard } from './default-subscriptions.guard';
import { DefaultSubscriptionsNavigationFactory } from './default-subscriptions-navigation.factory';
import * as i0 from "@angular/core";
export class DefaultSubscriptionsModule {
}
DefaultSubscriptionsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DefaultSubscriptionsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsModule, declarations: [DefaultSubscriptionsComponent], imports: [CoreModule, ReactiveFormsModule], exports: [DefaultSubscriptionsComponent] });
DefaultSubscriptionsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsModule, providers: [
        DefaultSubscriptionsService,
        DefaultSubscriptionsGuard,
        hookNavigator(DefaultSubscriptionsNavigationFactory),
        hookRoute({
            path: 'default-subscriptions',
            component: DefaultSubscriptionsComponent,
            canActivate: [DefaultSubscriptionsGuard]
        })
    ], imports: [CoreModule, ReactiveFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CoreModule, ReactiveFormsModule],
                    declarations: [DefaultSubscriptionsComponent],
                    entryComponents: [DefaultSubscriptionsComponent],
                    exports: [DefaultSubscriptionsComponent],
                    providers: [
                        DefaultSubscriptionsService,
                        DefaultSubscriptionsGuard,
                        hookNavigator(DefaultSubscriptionsNavigationFactory),
                        hookRoute({
                            path: 'default-subscriptions',
                            component: DefaultSubscriptionsComponent,
                            canActivate: [DefaultSubscriptionsGuard]
                        })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy9kZWZhdWx0LXN1YnNjcmlwdGlvbnMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFM0UsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDMUUsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLE1BQU0sNENBQTRDLENBQUM7O0FBa0JuRyxNQUFNLE9BQU8sMEJBQTBCOzt1SEFBMUIsMEJBQTBCO3dIQUExQiwwQkFBMEIsaUJBZHRCLDZCQUE2QixhQURsQyxVQUFVLEVBQUUsbUJBQW1CLGFBRy9CLDZCQUE2Qjt3SEFZNUIsMEJBQTBCLGFBWDFCO1FBQ1QsMkJBQTJCO1FBQzNCLHlCQUF5QjtRQUN6QixhQUFhLENBQUMscUNBQXFDLENBQUM7UUFDcEQsU0FBUyxDQUFDO1lBQ1IsSUFBSSxFQUFFLHVCQUF1QjtZQUM3QixTQUFTLEVBQUUsNkJBQTZCO1lBQ3hDLFdBQVcsRUFBRSxDQUFDLHlCQUF5QixDQUFDO1NBQ3pDLENBQUM7S0FDSCxZQWJTLFVBQVUsRUFBRSxtQkFBbUI7MkZBZTlCLDBCQUEwQjtrQkFoQnRDLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLG1CQUFtQixDQUFDO29CQUMxQyxZQUFZLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztvQkFDN0MsZUFBZSxFQUFFLENBQUMsNkJBQTZCLENBQUM7b0JBQ2hELE9BQU8sRUFBRSxDQUFDLDZCQUE2QixDQUFDO29CQUN4QyxTQUFTLEVBQUU7d0JBQ1QsMkJBQTJCO3dCQUMzQix5QkFBeUI7d0JBQ3pCLGFBQWEsQ0FBQyxxQ0FBcUMsQ0FBQzt3QkFDcEQsU0FBUyxDQUFDOzRCQUNSLElBQUksRUFBRSx1QkFBdUI7NEJBQzdCLFNBQVMsRUFBRSw2QkFBNkI7NEJBQ3hDLFdBQVcsRUFBRSxDQUFDLHlCQUF5QixDQUFDO3lCQUN6QyxDQUFDO3FCQUNIO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBob29rTmF2aWdhdG9yLCBob29rUm91dGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgRGVmYXVsdFN1YnNjcmlwdGlvbnNDb21wb25lbnQgfSBmcm9tICcuL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGVmYXVsdFN1YnNjcmlwdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi9kZWZhdWx0LXN1YnNjcmlwdGlvbnMuc2VydmljZSc7XG5pbXBvcnQgeyBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkIH0gZnJvbSAnLi9kZWZhdWx0LXN1YnNjcmlwdGlvbnMuZ3VhcmQnO1xuaW1wb3J0IHsgRGVmYXVsdFN1YnNjcmlwdGlvbnNOYXZpZ2F0aW9uRmFjdG9yeSB9IGZyb20gJy4vZGVmYXVsdC1zdWJzY3JpcHRpb25zLW5hdmlnYXRpb24uZmFjdG9yeSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbRGVmYXVsdFN1YnNjcmlwdGlvbnNDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZWZhdWx0U3Vic2NyaXB0aW9uc0NvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtEZWZhdWx0U3Vic2NyaXB0aW9uc0NvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIERlZmF1bHRTdWJzY3JpcHRpb25zU2VydmljZSxcbiAgICBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkLFxuICAgIGhvb2tOYXZpZ2F0b3IoRGVmYXVsdFN1YnNjcmlwdGlvbnNOYXZpZ2F0aW9uRmFjdG9yeSksXG4gICAgaG9va1JvdXRlKHtcbiAgICAgIHBhdGg6ICdkZWZhdWx0LXN1YnNjcmlwdGlvbnMnLFxuICAgICAgY29tcG9uZW50OiBEZWZhdWx0U3Vic2NyaXB0aW9uc0NvbXBvbmVudCxcbiAgICAgIGNhbkFjdGl2YXRlOiBbRGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZF1cbiAgICB9KVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIERlZmF1bHRTdWJzY3JpcHRpb25zTW9kdWxlIHt9XG4iXX0=