import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { DefaultSubscriptionsGuard } from './default-subscriptions.guard';
import * as i0 from "@angular/core";
import * as i1 from "./default-subscriptions.guard";
export class DefaultSubscriptionsNavigationFactory {
    constructor(defaultSubscriptionsGuard) {
        this.defaultSubscriptionsGuard = defaultSubscriptionsGuard;
        this.navNode = new NavigatorNode({
            label: gettext('Default subscriptions'),
            path: '/default-subscriptions',
            icon: 'c8y-c8y-data',
            parent: gettext('Ecosystem'),
            priority: 100
        });
    }
    /** Returns the navigation node if the feature is active. */
    async get() {
        if (await this.defaultSubscriptionsGuard.canActivate()) {
            return this.navNode;
        }
    }
}
DefaultSubscriptionsNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsNavigationFactory, deps: [{ token: i1.DefaultSubscriptionsGuard }], target: i0.ɵɵFactoryTarget.Injectable });
DefaultSubscriptionsNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DefaultSubscriptionsNavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.DefaultSubscriptionsGuard }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy9kZWZhdWx0LXN1YnNjcmlwdGlvbnMtbmF2aWdhdGlvbi5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQXdCLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7OztBQUcxRSxNQUFNLE9BQU8scUNBQXFDO0lBU2hELFlBQW9CLHlCQUFvRDtRQUFwRCw4QkFBeUIsR0FBekIseUJBQXlCLENBQTJCO1FBUmhFLFlBQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQztZQUNsQyxLQUFLLEVBQUUsT0FBTyxDQUFDLHVCQUF1QixDQUFDO1lBQ3ZDLElBQUksRUFBRSx3QkFBd0I7WUFDOUIsSUFBSSxFQUFFLGNBQWM7WUFDcEIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUM7WUFDNUIsUUFBUSxFQUFFLEdBQUc7U0FDZCxDQUFDLENBQUM7SUFFd0UsQ0FBQztJQUU1RSw0REFBNEQ7SUFDNUQsS0FBSyxDQUFDLEdBQUc7UUFDUCxJQUFJLE1BQU0sSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQ3RELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNyQjtJQUNILENBQUM7O2tJQWhCVSxxQ0FBcUM7c0lBQXJDLHFDQUFxQzsyRkFBckMscUNBQXFDO2tCQURqRCxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERlZmF1bHRTdWJzY3JpcHRpb25zR3VhcmQgfSBmcm9tICcuL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U3Vic2NyaXB0aW9uc05hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBwcml2YXRlIG5hdk5vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgbGFiZWw6IGdldHRleHQoJ0RlZmF1bHQgc3Vic2NyaXB0aW9ucycpLFxuICAgIHBhdGg6ICcvZGVmYXVsdC1zdWJzY3JpcHRpb25zJyxcbiAgICBpY29uOiAnYzh5LWM4eS1kYXRhJyxcbiAgICBwYXJlbnQ6IGdldHRleHQoJ0Vjb3N5c3RlbScpLFxuICAgIHByaW9yaXR5OiAxMDBcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkOiBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkKSB7fVxuXG4gIC8qKiBSZXR1cm5zIHRoZSBuYXZpZ2F0aW9uIG5vZGUgaWYgdGhlIGZlYXR1cmUgaXMgYWN0aXZlLiAqL1xuICBhc3luYyBnZXQoKTogUHJvbWlzZTxOYXZpZ2F0b3JOb2RlPiB7XG4gICAgaWYgKGF3YWl0IHRoaXMuZGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZC5jYW5BY3RpdmF0ZSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy5uYXZOb2RlO1xuICAgIH1cbiAgfVxufVxuIl19