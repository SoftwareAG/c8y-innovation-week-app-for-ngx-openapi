import { Component, Inject, Input, Optional, ViewChild } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import { AlertService, gettext } from '@c8y/ngx-components';
import { IconSelectorService } from '@c8y/ngx-components/icon-selector';
import { defaultMapConfig, MapComponent, MapService, MAP_DEFAULT_CONFIG } from '@c8y/ngx-components/map';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/map";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@ngx-translate/core";
import * as i4 from "@c8y/ngx-components/icon-selector";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
import * as i7 from "ngx-bootstrap/tooltip";
export class MapWidgetConfigComponent {
    constructor(mapService, alertService, translateService, defaultConfig, iconSelector) {
        this.mapService = mapService;
        this.alertService = alertService;
        this.translateService = translateService;
        this.defaultConfig = defaultConfig;
        this.iconSelector = iconSelector;
        this.config = {
            mapConfig: undefined
        };
        this.canAutoCenter = true;
        this.isPositionedDevice = false;
        this.refreshOptions = 'none';
        if (!this.defaultConfig) {
            this.defaultConfig = defaultMapConfig;
        }
        this.formConfig = {
            zoomLevel: this.defaultConfig.zoomLevel,
            center: this.defaultConfig.center
        };
    }
    async ngOnInit() {
        if (!this.config.mapConfig) {
            this.config.mapConfig = this.formConfig;
        }
        this.formConfig = {
            ...this.formConfig,
            ...this.config.mapConfig,
            disablePan: false
        };
        await this.updateAsset();
    }
    async ngOnChanges(changes) {
        if (changes.config.currentValue !== changes.config.previousValue &&
            !changes.config.firstChange) {
            await this.updateAsset();
        }
    }
    async ngAfterViewInit() {
        this.leaflet = await this.mapService.getLeaflet();
        this.addCenterIcon(this.formConfig.center[0], this.formConfig.center[1]);
    }
    onBeforeSave() {
        this.config.mapConfig = this.formConfig;
        return true;
    }
    zoomLevelChanged() {
        this.config.mapConfig = {
            ...this.config.mapConfig,
            zoomLevel: this.formConfig.zoomLevel
        };
    }
    changeCenter() {
        this.config.mapConfig = { ...this.formConfig, center: this.formConfig.center };
    }
    onPreviewZoomStart() {
        this.centerIcon.remove();
    }
    onPreviewZoomEnd(event) {
        this.formConfig.zoomLevel = Math.floor(event.target.getZoom());
    }
    onPreviewMapMove(event) {
        if (this.centerIcon) {
            this.centerIcon.remove();
        }
        const { lat, lng } = event.target.getBounds().getCenter();
        this.addCenterIcon(lat, lng);
        this.formConfig.center = [lat, lng];
    }
    useOwnPosition() {
        navigator.geolocation.getCurrentPosition(({ coords }) => {
            this.formConfig.center = [coords.latitude, coords.longitude];
            this.changeCenter();
        });
    }
    centerToAsset() {
        this.formConfig.center = [
            this.config.device.c8y_Position.lat,
            this.config.device.c8y_Position.lng
        ];
        this.changeCenter();
    }
    updateRefreshOptions() {
        this.formConfig.realtime = this.refreshOptions === 'realtime';
        this.formConfig.refreshInterval = this.refreshOptions === 'interval' ? 5000 : null;
        if (!this.formConfig.realtime) {
            this.formConfig.follow = false;
        }
    }
    async openIconSelector() {
        try {
            const icon = await this.iconSelector.selectIcon({
                currentSelection: this.formConfig.icon
            });
            this.formConfig.icon = icon;
            this.config.mapConfig = { ...this.config.mapConfig, icon };
        }
        catch {
            // nothing to do
        }
    }
    removeIcon() {
        this.formConfig.icon = undefined;
        this.config.mapConfig.icon = undefined;
        this.previewMap.refreshMarkers();
    }
    async updateAsset() {
        this.canAutoCenter = this.mapService.hasPosition(this.config.device);
        this.isPositionedDevice = this.mapService.isPositionedDevice(this.config.device);
        this.refreshOptions = this.getRefreshOptions();
        this.updateRefreshOptions();
        const { data, paging } = await this.mapService.getAllPositionsMOs(this.config.device);
        this.assets = data;
        if (paging.totalPages > 1) {
            this.alertService.danger(gettext('It might be possible that assets are not shown in the preview, as the current selection has more than 500 assets and the preview only supports a maximum of 500 assets.'));
        }
    }
    getRefreshOptions() {
        let option = 'none';
        if (this.formConfig.realtime) {
            option = 'realtime';
        }
        else if (this.formConfig.refreshInterval) {
            option = 'interval';
        }
        const isNotAllowedOption = (!this.isPositionedDevice && option === 'realtime') ||
            (this.isPositionedDevice && option === 'interval');
        option = isNotAllowedOption ? 'none' : option;
        return option;
    }
    addCenterIcon(lat, lng) {
        const titleText = this.translateService.instant(gettext('Map center'));
        const icon = this.leaflet.divIcon({
            html: `<i style="pointer-events: none" class="c8y-map-marker-icon text-muted dlt-c8y-icon-target icon-2x" title="${titleText}" />`
        });
        this.centerIcon = this.leaflet.marker([lat, lng], {
            icon
        });
        this.previewMap.addMarkerToMap(this.centerIcon);
    }
}
MapWidgetConfigComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: MapWidgetConfigComponent, deps: [{ token: i1.MapService }, { token: i2.AlertService }, { token: i3.TranslateService }, { token: MAP_DEFAULT_CONFIG, optional: true }, { token: i4.IconSelectorService }], target: i0.ɵɵFactoryTarget.Component });
MapWidgetConfigComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: MapWidgetConfigComponent, selector: "c8y-map-widget-config", inputs: { config: "config" }, viewQueries: [{ propertyName: "previewMap", first: true, predicate: MapComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div class=\"row p-t-16\">\n  <div class=\"col-xs-2\">\n    <c8y-form-group class=\"m-b-0 text-center form-group-sm\">\n      <label translate>Marker icon</label>\n      <div\n        class=\"icon-32 text-muted text-center p-b-8\"\n        *ngIf=\"formConfig.icon\"\n      >\n        <i [c8yIcon]=\"formConfig.icon\"></i>\n      </div>\n      <div\n        class=\"icon-32 text-muted text-center\"\n        *ngIf=\"!formConfig.icon\"\n      >\n        <span class=\"d-block text-12 p-b-16 p-t-16\">\n          <em>{{ 'Auto' | translate }}</em>\n        </span>\n      </div>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Select icon to override default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"!formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Select' | translate }}\n      </button>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Change icon' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Change' | translate }}\n      </button>\n      <button\n        class=\"btn btn-danger btn-xs btn-block\"\n        title=\"{{ 'Remove icon and use default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"removeIcon()\"\n      >\n        {{ 'Remove' | translate }}\n      </button>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-xs-10\">\n    <div class=\"row tight-grid separator-bottom\">\n      <div class=\"col-xs-4\">\n        <div class=\"form-group form-group-sm\">\n          <label translate>Zoom level</label>\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"zoomLevel\"\n            #range\n            [(ngModel)]=\"formConfig.zoomLevel\"\n            (change)=\"zoomLevelChanged()\"\n          >\n            <input\n              type=\"range\"\n              min=\"2\"\n              max=\"18\"\n              step=\"1\"\n            />\n          </c8y-range>\n        </div>\n      </div>\n      <div class=\"col-xs-8\">\n        <c8y-form-group class=\"form-group-sm m-b-8\">\n          <label translate>Center bound</label>\n          <div class=\"input-group input-group-sm\">\n            <input\n              class=\"form-control\"\n              placeholder=\"lat\"\n              name=\"centerLat\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[0]\"\n              (change)=\"changeCenter()\"\n            />\n            <input\n              class=\"form-control\"\n              placeholder=\"lng\"\n              name=\"centerLng\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[1]\"\n              (change)=\"changeCenter()\"\n            />\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use your location' | translate\"\n                [tooltip]=\"'Use your location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"useOwnPosition()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location-arrow\"\n                ></i>\n              </button>\n            </div>\n            <div\n              class=\"input-group-btn\"\n              *ngIf=\"canAutoCenter\"\n            >\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use selected asset location' | translate\"\n                [tooltip]=\"'Use selected asset location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"centerToAsset()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"help-block\">\n            {{ 'Drag the map to the desired position' | translate }}\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"row tight-grid p-t-8 d-flex a-i-center\">\n      <div class=\"col-xs-4\">\n        <c8y-form-group class=\"m-b-0 form-group-sm\">\n          <div class=\"c8y-select-wrapper\">\n            <select\n              class=\"form-control\"\n              title=\"{{ 'Refresh options' | translate }}\"\n              id=\"selectExample\"\n              name=\"refreshSelection\"\n              [(ngModel)]=\"refreshOptions\"\n              (change)=\"updateRefreshOptions()\"\n            >\n              <option\n                [title]=\"'Only refreshing on interaction' | translate\"\n                value=\"none\"\n                translate\n              >\n                No automatic refresh\n              </option>\n              <option\n                [title]=\"'Refreshing after a give interval and on interaction' | translate\"\n                value=\"interval\"\n                *ngIf=\"!isPositionedDevice\"\n                translate\n              >\n                Use refresh interval\n              </option>\n              <option\n                [title]=\"'Live updating on each position change' | translate\"\n                value=\"realtime\"\n                *ngIf=\"isPositionedDevice\"\n                translate\n              >\n                Realtime\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-8\">\n        <div class=\"form-group form-group-sm m-b-0\">\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"refreshInterval\"\n            #intervalRange\n            [(ngModel)]=\"formConfig.refreshInterval\"\n            *ngIf=\"refreshOptions === 'interval'\"\n          >\n            <ng-template #c8yRangeValue>\n              <div>\n                <span\n                  translate\n                  [translateParams]=\"{ intervalInSeconds: intervalRange.value * 0.001 }\"\n                  ngNonBindable\n                >\n                  {{ intervalInSeconds }} s\n                </span>\n              </div>\n            </ng-template>\n            <input\n              type=\"range\"\n              min=\"5000\"\n              max=\"100000\"\n              step=\"1000\"\n            />\n          </c8y-range>\n        </div>\n        <label\n          class=\"c8y-switch c8y-switch--inline\"\n          *ngIf=\"refreshOptions === 'realtime'\"\n        >\n          <input\n            name=\"follow\"\n            type=\"checkbox\"\n            [(ngModel)]=\"formConfig.follow\"\n          />\n          <span></span>\n          <span\n            class=\"text-12\"\n            translate\n          >\n            Follow selected\n          </span>\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"p-t-16 p-b-16\"\n  style=\"width: 100%; height: 240px\"\n>\n  <c8y-map\n    [assets]=\"assets\"\n    (onMove)=\"onPreviewMapMove($event)\"\n    (onZoomStart)=\"onPreviewZoomStart()\"\n    (onZoomEnd)=\"onPreviewZoomEnd($event)\"\n    [config]=\"config.mapConfig\"\n  ></c8y-map>\n</div>\n", dependencies: [{ kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i6.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i6.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i6.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i6.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i6.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.MinValidationDirective, selector: "[min]", inputs: ["min"] }, { kind: "directive", type: i2.MaxValidationDirective, selector: "[max]", inputs: ["max"] }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i2.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "directive", type: i2.RangeDirective, selector: "input[type=\"range\"]" }, { kind: "component", type: i2.RangeComponent, selector: "c8y-range" }, { kind: "component", type: i1.MapComponent, selector: "c8y-map", inputs: ["config", "assets"], outputs: ["onMove", "onMoveEnd", "onZoomStart", "onZoomEnd"] }, { kind: "directive", type: i7.TooltipDirective, selector: "[tooltip], [tooltipHtml]", inputs: ["adaptivePosition", "tooltip", "placement", "triggers", "container", "containerClass", "boundariesElement", "isOpen", "isDisabled", "delay", "tooltipHtml", "tooltipPlacement", "tooltipIsOpen", "tooltipEnable", "tooltipAppendToBody", "tooltipAnimation", "tooltipClass", "tooltipContext", "tooltipPopupDelay", "tooltipFadeDuration", "tooltipTrigger"], outputs: ["tooltipChange", "onShown", "onHidden", "tooltipStateChanged"], exportAs: ["bs-tooltip"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: MapWidgetConfigComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-map-widget-config', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"row p-t-16\">\n  <div class=\"col-xs-2\">\n    <c8y-form-group class=\"m-b-0 text-center form-group-sm\">\n      <label translate>Marker icon</label>\n      <div\n        class=\"icon-32 text-muted text-center p-b-8\"\n        *ngIf=\"formConfig.icon\"\n      >\n        <i [c8yIcon]=\"formConfig.icon\"></i>\n      </div>\n      <div\n        class=\"icon-32 text-muted text-center\"\n        *ngIf=\"!formConfig.icon\"\n      >\n        <span class=\"d-block text-12 p-b-16 p-t-16\">\n          <em>{{ 'Auto' | translate }}</em>\n        </span>\n      </div>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Select icon to override default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"!formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Select' | translate }}\n      </button>\n      <button\n        class=\"btn btn-default btn-xs btn-block\"\n        title=\"{{ 'Change icon' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"openIconSelector()\"\n      >\n        {{ 'Change' | translate }}\n      </button>\n      <button\n        class=\"btn btn-danger btn-xs btn-block\"\n        title=\"{{ 'Remove icon and use default behavior' | translate }}\"\n        type=\"button\"\n        *ngIf=\"formConfig.icon\"\n        (click)=\"removeIcon()\"\n      >\n        {{ 'Remove' | translate }}\n      </button>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-xs-10\">\n    <div class=\"row tight-grid separator-bottom\">\n      <div class=\"col-xs-4\">\n        <div class=\"form-group form-group-sm\">\n          <label translate>Zoom level</label>\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"zoomLevel\"\n            #range\n            [(ngModel)]=\"formConfig.zoomLevel\"\n            (change)=\"zoomLevelChanged()\"\n          >\n            <input\n              type=\"range\"\n              min=\"2\"\n              max=\"18\"\n              step=\"1\"\n            />\n          </c8y-range>\n        </div>\n      </div>\n      <div class=\"col-xs-8\">\n        <c8y-form-group class=\"form-group-sm m-b-8\">\n          <label translate>Center bound</label>\n          <div class=\"input-group input-group-sm\">\n            <input\n              class=\"form-control\"\n              placeholder=\"lat\"\n              name=\"centerLat\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[0]\"\n              (change)=\"changeCenter()\"\n            />\n            <input\n              class=\"form-control\"\n              placeholder=\"lng\"\n              name=\"centerLng\"\n              type=\"number\"\n              required\n              [(ngModel)]=\"formConfig.center[1]\"\n              (change)=\"changeCenter()\"\n            />\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use your location' | translate\"\n                [tooltip]=\"'Use your location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"useOwnPosition()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location-arrow\"\n                ></i>\n              </button>\n            </div>\n            <div\n              class=\"input-group-btn\"\n              *ngIf=\"canAutoCenter\"\n            >\n              <button\n                class=\"btn btn-default\"\n                [attr.aria-label]=\"'Use selected asset location' | translate\"\n                [tooltip]=\"'Use selected asset location' | translate\"\n                placement=\"top\"\n                container=\"body\"\n                (click)=\"centerToAsset()\"\n              >\n                <i\n                  class=\"icon-14\"\n                  c8yIcon=\"location\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"help-block\">\n            {{ 'Drag the map to the desired position' | translate }}\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"row tight-grid p-t-8 d-flex a-i-center\">\n      <div class=\"col-xs-4\">\n        <c8y-form-group class=\"m-b-0 form-group-sm\">\n          <div class=\"c8y-select-wrapper\">\n            <select\n              class=\"form-control\"\n              title=\"{{ 'Refresh options' | translate }}\"\n              id=\"selectExample\"\n              name=\"refreshSelection\"\n              [(ngModel)]=\"refreshOptions\"\n              (change)=\"updateRefreshOptions()\"\n            >\n              <option\n                [title]=\"'Only refreshing on interaction' | translate\"\n                value=\"none\"\n                translate\n              >\n                No automatic refresh\n              </option>\n              <option\n                [title]=\"'Refreshing after a give interval and on interaction' | translate\"\n                value=\"interval\"\n                *ngIf=\"!isPositionedDevice\"\n                translate\n              >\n                Use refresh interval\n              </option>\n              <option\n                [title]=\"'Live updating on each position change' | translate\"\n                value=\"realtime\"\n                *ngIf=\"isPositionedDevice\"\n                translate\n              >\n                Realtime\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-8\">\n        <div class=\"form-group form-group-sm m-b-0\">\n          <c8y-range\n            class=\"label-bottom\"\n            name=\"refreshInterval\"\n            #intervalRange\n            [(ngModel)]=\"formConfig.refreshInterval\"\n            *ngIf=\"refreshOptions === 'interval'\"\n          >\n            <ng-template #c8yRangeValue>\n              <div>\n                <span\n                  translate\n                  [translateParams]=\"{ intervalInSeconds: intervalRange.value * 0.001 }\"\n                  ngNonBindable\n                >\n                  {{ intervalInSeconds }} s\n                </span>\n              </div>\n            </ng-template>\n            <input\n              type=\"range\"\n              min=\"5000\"\n              max=\"100000\"\n              step=\"1000\"\n            />\n          </c8y-range>\n        </div>\n        <label\n          class=\"c8y-switch c8y-switch--inline\"\n          *ngIf=\"refreshOptions === 'realtime'\"\n        >\n          <input\n            name=\"follow\"\n            type=\"checkbox\"\n            [(ngModel)]=\"formConfig.follow\"\n          />\n          <span></span>\n          <span\n            class=\"text-12\"\n            translate\n          >\n            Follow selected\n          </span>\n        </label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"p-t-16 p-b-16\"\n  style=\"width: 100%; height: 240px\"\n>\n  <c8y-map\n    [assets]=\"assets\"\n    (onMove)=\"onPreviewMapMove($event)\"\n    (onZoomStart)=\"onPreviewZoomStart()\"\n    (onZoomEnd)=\"onPreviewZoomEnd($event)\"\n    [config]=\"config.mapConfig\"\n  ></c8y-map>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.MapService }, { type: i2.AlertService }, { type: i3.TranslateService }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [MAP_DEFAULT_CONFIG]
                }] }, { type: i4.IconSelectorService }]; }, propDecorators: { config: [{
                type: Input
            }], previewMap: [{
                type: ViewChild,
                args: [MapComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLXdpZGdldC1jb25maWcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vd2lkZ2V0cy9pbXBsZW1lbnRhdGlvbnMvbWFwL21hcC13aWRnZXQtY29uZmlnLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3dpZGdldHMvaW1wbGVtZW50YXRpb25zL21hcC9tYXAtd2lkZ2V0LWNvbmZpZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULE1BQU0sRUFDTixLQUFLLEVBR0wsUUFBUSxFQUVSLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN4RSxPQUFPLEVBRUwsZ0JBQWdCLEVBQ2hCLFlBQVksRUFFWixVQUFVLEVBQ1Ysa0JBQWtCLEVBRW5CLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7Ozs7OztBQVN2RCxNQUFNLE9BQU8sd0JBQXdCO0lBa0JuQyxZQUNVLFVBQXNCLEVBQ3RCLFlBQTBCLEVBQzFCLGdCQUFrQyxFQUNNLGFBQStCLEVBQ3ZFLFlBQWlDO1FBSmpDLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNNLGtCQUFhLEdBQWIsYUFBYSxDQUFrQjtRQUN2RSxpQkFBWSxHQUFaLFlBQVksQ0FBcUI7UUF0QmxDLFdBQU0sR0FBb0I7WUFDakMsU0FBUyxFQUFFLFNBQVM7U0FDckIsQ0FB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dEI3Qix3QkFBd0IsdUlBZXhCLFlBQVkscUVDL0N6QiwrdE9Bd09BLG1zR0QxTWlCLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDOzJGQUV4RCx3QkFBd0I7a0JBTHBDLFNBQVM7K0JBQ0UsdUJBQXVCLGlCQUVsQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzs7MEJBd0JoRSxRQUFROzswQkFBSSxNQUFNOzJCQUFDLGtCQUFrQjs4RUFyQi9CLE1BQU07c0JBQWQsS0FBSztnQkFlRSxVQUFVO3NCQURqQixTQUFTO3VCQUFDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDb21wb25lbnQsXG4gIEluamVjdCxcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25Jbml0LFxuICBPcHRpb25hbCxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBJY29uU2VsZWN0b3JTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9pY29uLXNlbGVjdG9yJztcbmltcG9ydCB7XG4gIENsdXN0ZXJNYXBDb25maWcsXG4gIGRlZmF1bHRNYXBDb25maWcsXG4gIE1hcENvbXBvbmVudCxcbiAgTWFwRGVmYXVsdENvbmZpZyxcbiAgTWFwU2VydmljZSxcbiAgTUFQX0RFRkFVTFRfQ09ORklHLFxuICBQb3NpdGlvbk1hbmFnZWRPYmplY3Rcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9tYXAnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHR5cGUgTCBmcm9tICdsZWFmbGV0JztcbmltcG9ydCB7IE1hcFdpZGdldENvbmZpZywgUmVmcmVzaE9wdGlvbnMgfSBmcm9tICcuL21hcC13aWRnZXQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktbWFwLXdpZGdldC1jb25maWcnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWFwLXdpZGdldC1jb25maWcuY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIE1hcFdpZGdldENvbmZpZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY29uZmlnOiBNYXBXaWRnZXRDb25maWcgPSB7XG4gICAgbWFwQ29uZmlnOiB1bmRlZmluZWRcbiAgfTtcblxuICBmb3JtQ29uZmlnOiBDbHVzdGVyTWFwQ29uZmlnO1xuXG4gIGNhbkF1dG9DZW50ZXIgPSB0cnVlO1xuICBpc1Bvc2l0aW9uZWREZXZpY2UgPSBmYWxzZTtcbiAgYXNzZXRzOiBQb3NpdGlvbk1hbmFnZWRPYmplY3RbXTtcbiAgcmVmcmVzaE9wdGlvbnM6IFJlZnJlc2hPcHRpb25zID0gJ25vbmUnO1xuXG4gIHByaXZhdGUgbGVhZmxldDogdHlwZW9mIEw7XG4gIHByaXZhdGUgY2VudGVySWNvbjogTC5NYXJrZXI7XG5cbiAgQFZpZXdDaGlsZChNYXBDb21wb25lbnQpXG4gIHByaXZhdGUgcHJldmlld01hcDogTWFwQ29tcG9uZW50O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbWFwU2VydmljZTogTWFwU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBAT3B0aW9uYWwoKSBASW5qZWN0KE1BUF9ERUZBVUxUX0NPTkZJRykgcHJpdmF0ZSBkZWZhdWx0Q29uZmlnOiBNYXBEZWZhdWx0Q29uZmlnLFxuICAgIHByaXZhdGUgaWNvblNlbGVjdG9yOiBJY29uU2VsZWN0b3JTZXJ2aWNlXG4gICkge1xuICAgIGlmICghdGhpcy5kZWZhdWx0Q29uZmlnKSB7XG4gICAgICB0aGlzLmRlZmF1bHRDb25maWcgPSBkZWZhdWx0TWFwQ29uZmlnO1xuICAgIH1cbiAgICB0aGlzLmZvcm1Db25maWcgPSB7XG4gICAgICB6b29tTGV2ZWw6IHRoaXMuZGVmYXVsdENvbmZpZy56b29tTGV2ZWwsXG4gICAgICBjZW50ZXI6IHRoaXMuZGVmYXVsdENvbmZpZy5jZW50ZXJcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLmNvbmZpZy5tYXBDb25maWcpIHtcbiAgICAgIHRoaXMuY29uZmlnLm1hcENvbmZpZyA9IHRoaXMuZm9ybUNvbmZpZztcbiAgICB9XG4gICAgdGhpcy5mb3JtQ29uZmlnID0ge1xuICAgICAgLi4udGhpcy5mb3JtQ29uZmlnLFxuICAgICAgLi4udGhpcy5jb25maWcubWFwQ29uZmlnLFxuICAgICAgZGlzYWJsZVBhbjogZmFsc2VcbiAgICB9O1xuICAgIGF3YWl0IHRoaXMudXBkYXRlQXNzZXQoKTtcbiAgfVxuXG4gIGFzeW5jIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoXG4gICAgICBjaGFuZ2VzLmNvbmZpZy5jdXJyZW50VmFsdWUgIT09IGNoYW5nZXMuY29uZmlnLnByZXZpb3VzVmFsdWUgJiZcbiAgICAgICFjaGFuZ2VzLmNvbmZpZy5maXJzdENoYW5nZVxuICAgICkge1xuICAgICAgYXdhaXQgdGhpcy51cGRhdGVBc3NldCgpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmxlYWZsZXQgPSBhd2FpdCB0aGlzLm1hcFNlcnZpY2UuZ2V0TGVhZmxldCgpO1xuICAgIHRoaXMuYWRkQ2VudGVySWNvbih0aGlzLmZvcm1Db25maWcuY2VudGVyWzBdLCB0aGlzLmZvcm1Db25maWcuY2VudGVyWzFdKTtcbiAgfVxuXG4gIG9uQmVmb3JlU2F2ZSgpIHtcbiAgICB0aGlzLmNvbmZpZy5tYXBDb25maWcgPSB0aGlzLmZvcm1Db25maWc7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICB6b29tTGV2ZWxDaGFuZ2VkKCkge1xuICAgIHRoaXMuY29uZmlnLm1hcENvbmZpZyA9IHtcbiAgICAgIC4uLnRoaXMuY29uZmlnLm1hcENvbmZpZyxcbiAgICAgIHpvb21MZXZlbDogdGhpcy5mb3JtQ29uZmlnLnpvb21MZXZlbFxuICAgIH07XG4gIH1cblxuICBjaGFuZ2VDZW50ZXIoKSB7XG4gICAgdGhpcy5jb25maWcubWFwQ29uZmlnID0geyAuLi50aGlzLmZvcm1Db25maWcsIGNlbnRlcjogdGhpcy5mb3JtQ29uZmlnLmNlbnRlciB9O1xuICB9XG5cbiAgb25QcmV2aWV3Wm9vbVN0YXJ0KCkge1xuICAgIHRoaXMuY2VudGVySWNvbi5yZW1vdmUoKTtcbiAgfVxuXG4gIG9uUHJldmlld1pvb21FbmQoZXZlbnQ6IEwuTGVhZmxldEV2ZW50KSB7XG4gICAgdGhpcy5mb3JtQ29uZmlnLnpvb21MZXZlbCA9IE1hdGguZmxvb3IoZXZlbnQudGFyZ2V0LmdldFpvb20oKSk7XG4gIH1cblxuICBvblByZXZpZXdNYXBNb3ZlKGV2ZW50OiBMLkxlYWZsZXRFdmVudCkge1xuICAgIGlmICh0aGlzLmNlbnRlckljb24pIHtcbiAgICAgIHRoaXMuY2VudGVySWNvbi5yZW1vdmUoKTtcbiAgICB9XG4gICAgY29uc3QgeyBsYXQsIGxuZyB9ID0gZXZlbnQudGFyZ2V0LmdldEJvdW5kcygpLmdldENlbnRlcigpO1xuICAgIHRoaXMuYWRkQ2VudGVySWNvbihsYXQsIGxuZyk7XG4gICAgdGhpcy5mb3JtQ29uZmlnLmNlbnRlciA9IFtsYXQsIGxuZ107XG4gIH1cblxuICB1c2VPd25Qb3NpdGlvbigpIHtcbiAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKCh7IGNvb3JkcyB9KSA9PiB7XG4gICAgICB0aGlzLmZvcm1Db25maWcuY2VudGVyID0gW2Nvb3Jkcy5sYXRpdHVkZSwgY29vcmRzLmxvbmdpdHVkZV07XG4gICAgICB0aGlzLmNoYW5nZUNlbnRlcigpO1xuICAgIH0pO1xuICB9XG5cbiAgY2VudGVyVG9Bc3NldCgpIHtcbiAgICB0aGlzLmZvcm1Db25maWcuY2VudGVyID0gW1xuICAgICAgdGhpcy5jb25maWcuZGV2aWNlLmM4eV9Qb3NpdGlvbi5sYXQsXG4gICAgICB0aGlzLmNvbmZpZy5kZXZpY2UuYzh5X1Bvc2l0aW9uLmxuZ1xuICAgIF07XG4gICAgdGhpcy5jaGFuZ2VDZW50ZXIoKTtcbiAgfVxuXG4gIHVwZGF0ZVJlZnJlc2hPcHRpb25zKCkge1xuICAgIHRoaXMuZm9ybUNvbmZpZy5yZWFsdGltZSA9IHRoaXMucmVmcmVzaE9wdGlvbnMgPT09ICdyZWFsdGltZSc7XG4gICAgdGhpcy5mb3JtQ29uZmlnLnJlZnJlc2hJbnRlcnZhbCA9IHRoaXMucmVmcmVzaE9wdGlvbnMgPT09ICdpbnRlcnZhbCcgPyA1MDAwIDogbnVsbDtcbiAgICBpZiAoIXRoaXMuZm9ybUNvbmZpZy5yZWFsdGltZSkge1xuICAgICAgdGhpcy5mb3JtQ29uZmlnLmZvbGxvdyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIG9wZW5JY29uU2VsZWN0b3IoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGljb24gPSBhd2FpdCB0aGlzLmljb25TZWxlY3Rvci5zZWxlY3RJY29uKHtcbiAgICAgICAgY3VycmVudFNlbGVjdGlvbjogdGhpcy5mb3JtQ29uZmlnLmljb25cbiAgICAgIH0pO1xuICAgICAgdGhpcy5mb3JtQ29uZmlnLmljb24gPSBpY29uO1xuICAgICAgdGhpcy5jb25maWcubWFwQ29uZmlnID0geyAuLi50aGlzLmNvbmZpZy5tYXBDb25maWcsIGljb24gfTtcbiAgICB9IGNhdGNoIHtcbiAgICAgIC8vIG5vdGhpbmcgdG8gZG9cbiAgICB9XG4gIH1cblxuICByZW1vdmVJY29uKCkge1xuICAgIHRoaXMuZm9ybUNvbmZpZy5pY29uID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuY29uZmlnLm1hcENvbmZpZy5pY29uID0gdW5kZWZpbmVkO1xuICAgIHRoaXMucHJldmlld01hcC5yZWZyZXNoTWFya2VycygpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyB1cGRhdGVBc3NldCgpIHtcbiAgICB0aGlzLmNhbkF1dG9DZW50ZXIgPSB0aGlzLm1hcFNlcnZpY2UuaGFzUG9zaXRpb24odGhpcy5jb25maWcuZGV2aWNlKTtcbiAgICB0aGlzLmlzUG9zaXRpb25lZERldmljZSA9IHRoaXMubWFwU2VydmljZS5pc1Bvc2l0aW9uZWREZXZpY2UodGhpcy5jb25maWcuZGV2aWNlKTtcbiAgICB0aGlzLnJlZnJlc2hPcHRpb25zID0gdGhpcy5nZXRSZWZyZXNoT3B0aW9ucygpO1xuICAgIHRoaXMudXBkYXRlUmVmcmVzaE9wdGlvbnMoKTtcblxuICAgIGNvbnN0IHsgZGF0YSwgcGFnaW5nIH0gPSBhd2FpdCB0aGlzLm1hcFNlcnZpY2UuZ2V0QWxsUG9zaXRpb25zTU9zKHRoaXMuY29uZmlnLmRldmljZSk7XG4gICAgdGhpcy5hc3NldHMgPSBkYXRhO1xuICAgIGlmIChwYWdpbmcudG90YWxQYWdlcyA+IDEpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmRhbmdlcihcbiAgICAgICAgZ2V0dGV4dChcbiAgICAgICAgICAnSXQgbWlnaHQgYmUgcG9zc2libGUgdGhhdCBhc3NldHMgYXJlIG5vdCBzaG93biBpbiB0aGUgcHJldmlldywgYXMgdGhlIGN1cnJlbnQgc2VsZWN0aW9uIGhhcyBtb3JlIHRoYW4gNTAwIGFzc2V0cyBhbmQgdGhlIHByZXZpZXcgb25seSBzdXBwb3J0cyBhIG1heGltdW0gb2YgNTAwIGFzc2V0cy4nXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRSZWZyZXNoT3B0aW9ucygpOiBSZWZyZXNoT3B0aW9ucyB7XG4gICAgbGV0IG9wdGlvbjogUmVmcmVzaE9wdGlvbnMgPSAnbm9uZSc7XG4gICAgaWYgKHRoaXMuZm9ybUNvbmZpZy5yZWFsdGltZSkge1xuICAgICAgb3B0aW9uID0gJ3JlYWx0aW1lJztcbiAgICB9IGVsc2UgaWYgKHRoaXMuZm9ybUNvbmZpZy5yZWZyZXNoSW50ZXJ2YWwpIHtcbiAgICAgIG9wdGlvbiA9ICdpbnRlcnZhbCc7XG4gICAgfVxuICAgIGNvbnN0IGlzTm90QWxsb3dlZE9wdGlvbiA9XG4gICAgICAoIXRoaXMuaXNQb3NpdGlvbmVkRGV2aWNlICYmIG9wdGlvbiA9PT0gJ3JlYWx0aW1lJykgfHxcbiAgICAgICh0aGlzLmlzUG9zaXRpb25lZERldmljZSAmJiBvcHRpb24gPT09ICdpbnRlcnZhbCcpO1xuICAgIG9wdGlvbiA9IGlzTm90QWxsb3dlZE9wdGlvbiA/ICdub25lJyA6IG9wdGlvbjtcbiAgICByZXR1cm4gb3B0aW9uO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRDZW50ZXJJY29uKGxhdDogbnVtYmVyLCBsbmc6IG51bWJlcikge1xuICAgIGNvbnN0IHRpdGxlVGV4dCA9IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGdldHRleHQoJ01hcCBjZW50ZXInKSk7XG4gICAgY29uc3QgaWNvbiA9IHRoaXMubGVhZmxldC5kaXZJY29uKHtcbiAgICAgIGh0bWw6IGA8aSBzdHlsZT1cInBvaW50ZXItZXZlbnRzOiBub25lXCIgY2xhc3M9XCJjOHktbWFwLW1hcmtlci1pY29uIHRleHQtbXV0ZWQgZGx0LWM4eS1pY29uLXRhcmdldCBpY29uLTJ4XCIgdGl0bGU9XCIke3RpdGxlVGV4dH1cIiAvPmBcbiAgICB9KTtcbiAgICB0aGlzLmNlbnRlckljb24gPSB0aGlzLmxlYWZsZXQubWFya2VyKFtsYXQsIGxuZ10sIHtcbiAgICAgIGljb25cbiAgICB9KTtcbiAgICB0aGlzLnByZXZpZXdNYXAuYWRkTWFya2VyVG9NYXAodGhpcy5jZW50ZXJJY29uKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInJvdyBwLXQtMTZcIj5cbiAgPGRpdiBjbGFzcz1cImNvbC14cy0yXCI+XG4gICAgPGM4eS1mb3JtLWdyb3VwIGNsYXNzPVwibS1iLTAgdGV4dC1jZW50ZXIgZm9ybS1ncm91cC1zbVwiPlxuICAgICAgPGxhYmVsIHRyYW5zbGF0ZT5NYXJrZXIgaWNvbjwvbGFiZWw+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiaWNvbi0zMiB0ZXh0LW11dGVkIHRleHQtY2VudGVyIHAtYi04XCJcbiAgICAgICAgKm5nSWY9XCJmb3JtQ29uZmlnLmljb25cIlxuICAgICAgPlxuICAgICAgICA8aSBbYzh5SWNvbl09XCJmb3JtQ29uZmlnLmljb25cIj48L2k+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJpY29uLTMyIHRleHQtbXV0ZWQgdGV4dC1jZW50ZXJcIlxuICAgICAgICAqbmdJZj1cIiFmb3JtQ29uZmlnLmljb25cIlxuICAgICAgPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImQtYmxvY2sgdGV4dC0xMiBwLWItMTYgcC10LTE2XCI+XG4gICAgICAgICAgPGVtPnt7ICdBdXRvJyB8IHRyYW5zbGF0ZSB9fTwvZW0+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGJ1dHRvblxuICAgICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdCBidG4teHMgYnRuLWJsb2NrXCJcbiAgICAgICAgdGl0bGU9XCJ7eyAnU2VsZWN0IGljb24gdG8gb3ZlcnJpZGUgZGVmYXVsdCBiZWhhdmlvcicgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgKm5nSWY9XCIhZm9ybUNvbmZpZy5pY29uXCJcbiAgICAgICAgKGNsaWNrKT1cIm9wZW5JY29uU2VsZWN0b3IoKVwiXG4gICAgICA+XG4gICAgICAgIHt7ICdTZWxlY3QnIHwgdHJhbnNsYXRlIH19XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxidXR0b25cbiAgICAgICAgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHQgYnRuLXhzIGJ0bi1ibG9ja1wiXG4gICAgICAgIHRpdGxlPVwie3sgJ0NoYW5nZSBpY29uJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAqbmdJZj1cImZvcm1Db25maWcuaWNvblwiXG4gICAgICAgIChjbGljayk9XCJvcGVuSWNvblNlbGVjdG9yKClcIlxuICAgICAgPlxuICAgICAgICB7eyAnQ2hhbmdlJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgPC9idXR0b24+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1kYW5nZXIgYnRuLXhzIGJ0bi1ibG9ja1wiXG4gICAgICAgIHRpdGxlPVwie3sgJ1JlbW92ZSBpY29uIGFuZCB1c2UgZGVmYXVsdCBiZWhhdmlvcicgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgKm5nSWY9XCJmb3JtQ29uZmlnLmljb25cIlxuICAgICAgICAoY2xpY2spPVwicmVtb3ZlSWNvbigpXCJcbiAgICAgID5cbiAgICAgICAge3sgJ1JlbW92ZScgfCB0cmFuc2xhdGUgfX1cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY29sLXhzLTEwXCI+XG4gICAgPGRpdiBjbGFzcz1cInJvdyB0aWdodC1ncmlkIHNlcGFyYXRvci1ib3R0b21cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtNFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBmb3JtLWdyb3VwLXNtXCI+XG4gICAgICAgICAgPGxhYmVsIHRyYW5zbGF0ZT5ab29tIGxldmVsPC9sYWJlbD5cbiAgICAgICAgICA8Yzh5LXJhbmdlXG4gICAgICAgICAgICBjbGFzcz1cImxhYmVsLWJvdHRvbVwiXG4gICAgICAgICAgICBuYW1lPVwiem9vbUxldmVsXCJcbiAgICAgICAgICAgICNyYW5nZVxuICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJmb3JtQ29uZmlnLnpvb21MZXZlbFwiXG4gICAgICAgICAgICAoY2hhbmdlKT1cInpvb21MZXZlbENoYW5nZWQoKVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXG4gICAgICAgICAgICAgIG1pbj1cIjJcIlxuICAgICAgICAgICAgICBtYXg9XCIxOFwiXG4gICAgICAgICAgICAgIHN0ZXA9XCIxXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktcmFuZ2U+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLThcIj5cbiAgICAgICAgPGM4eS1mb3JtLWdyb3VwIGNsYXNzPVwiZm9ybS1ncm91cC1zbSBtLWItOFwiPlxuICAgICAgICAgIDxsYWJlbCB0cmFuc2xhdGU+Q2VudGVyIGJvdW5kPC9sYWJlbD5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc21cIj5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwibGF0XCJcbiAgICAgICAgICAgICAgbmFtZT1cImNlbnRlckxhdFwiXG4gICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cImZvcm1Db25maWcuY2VudGVyWzBdXCJcbiAgICAgICAgICAgICAgKGNoYW5nZSk9XCJjaGFuZ2VDZW50ZXIoKVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJsbmdcIlxuICAgICAgICAgICAgICBuYW1lPVwiY2VudGVyTG5nXCJcbiAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgIFsobmdNb2RlbCldPVwiZm9ybUNvbmZpZy5jZW50ZXJbMV1cIlxuICAgICAgICAgICAgICAoY2hhbmdlKT1cImNoYW5nZUNlbnRlcigpXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAtYnRuXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCInVXNlIHlvdXIgbG9jYXRpb24nIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICBbdG9vbHRpcF09XCInVXNlIHlvdXIgbG9jYXRpb24nIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICBwbGFjZW1lbnQ9XCJ0b3BcIlxuICAgICAgICAgICAgICAgIGNvbnRhaW5lcj1cImJvZHlcIlxuICAgICAgICAgICAgICAgIChjbGljayk9XCJ1c2VPd25Qb3NpdGlvbigpXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImljb24tMTRcIlxuICAgICAgICAgICAgICAgICAgYzh5SWNvbj1cImxvY2F0aW9uLWFycm93XCJcbiAgICAgICAgICAgICAgICA+PC9pPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzcz1cImlucHV0LWdyb3VwLWJ0blwiXG4gICAgICAgICAgICAgICpuZ0lmPVwiY2FuQXV0b0NlbnRlclwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCInVXNlIHNlbGVjdGVkIGFzc2V0IGxvY2F0aW9uJyB8IHRyYW5zbGF0ZVwiXG4gICAgICAgICAgICAgICAgW3Rvb2x0aXBdPVwiJ1VzZSBzZWxlY3RlZCBhc3NldCBsb2NhdGlvbicgfCB0cmFuc2xhdGVcIlxuICAgICAgICAgICAgICAgIHBsYWNlbWVudD1cInRvcFwiXG4gICAgICAgICAgICAgICAgY29udGFpbmVyPVwiYm9keVwiXG4gICAgICAgICAgICAgICAgKGNsaWNrKT1cImNlbnRlclRvQXNzZXQoKVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uLTE0XCJcbiAgICAgICAgICAgICAgICAgIGM4eUljb249XCJsb2NhdGlvblwiXG4gICAgICAgICAgICAgICAgPjwvaT5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVscC1ibG9ja1wiPlxuICAgICAgICAgICAge3sgJ0RyYWcgdGhlIG1hcCB0byB0aGUgZGVzaXJlZCBwb3NpdGlvbicgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInJvdyB0aWdodC1ncmlkIHAtdC04IGQtZmxleCBhLWktY2VudGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLTRcIj5cbiAgICAgICAgPGM4eS1mb3JtLWdyb3VwIGNsYXNzPVwibS1iLTAgZm9ybS1ncm91cC1zbVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjOHktc2VsZWN0LXdyYXBwZXJcIj5cbiAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICB0aXRsZT1cInt7ICdSZWZyZXNoIG9wdGlvbnMnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgaWQ9XCJzZWxlY3RFeGFtcGxlXCJcbiAgICAgICAgICAgICAgbmFtZT1cInJlZnJlc2hTZWxlY3Rpb25cIlxuICAgICAgICAgICAgICBbKG5nTW9kZWwpXT1cInJlZnJlc2hPcHRpb25zXCJcbiAgICAgICAgICAgICAgKGNoYW5nZSk9XCJ1cGRhdGVSZWZyZXNoT3B0aW9ucygpXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPG9wdGlvblxuICAgICAgICAgICAgICAgIFt0aXRsZV09XCInT25seSByZWZyZXNoaW5nIG9uIGludGVyYWN0aW9uJyB8IHRyYW5zbGF0ZVwiXG4gICAgICAgICAgICAgICAgdmFsdWU9XCJub25lXCJcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIE5vIGF1dG9tYXRpYyByZWZyZXNoXG4gICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uXG4gICAgICAgICAgICAgICAgW3RpdGxlXT1cIidSZWZyZXNoaW5nIGFmdGVyIGEgZ2l2ZSBpbnRlcnZhbCBhbmQgb24gaW50ZXJhY3Rpb24nIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT1cImludGVydmFsXCJcbiAgICAgICAgICAgICAgICAqbmdJZj1cIiFpc1Bvc2l0aW9uZWREZXZpY2VcIlxuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgVXNlIHJlZnJlc2ggaW50ZXJ2YWxcbiAgICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb25cbiAgICAgICAgICAgICAgICBbdGl0bGVdPVwiJ0xpdmUgdXBkYXRpbmcgb24gZWFjaCBwb3NpdGlvbiBjaGFuZ2UnIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT1cInJlYWx0aW1lXCJcbiAgICAgICAgICAgICAgICAqbmdJZj1cImlzUG9zaXRpb25lZERldmljZVwiXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICBSZWFsdGltZVxuICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sLXhzLThcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgZm9ybS1ncm91cC1zbSBtLWItMFwiPlxuICAgICAgICAgIDxjOHktcmFuZ2VcbiAgICAgICAgICAgIGNsYXNzPVwibGFiZWwtYm90dG9tXCJcbiAgICAgICAgICAgIG5hbWU9XCJyZWZyZXNoSW50ZXJ2YWxcIlxuICAgICAgICAgICAgI2ludGVydmFsUmFuZ2VcbiAgICAgICAgICAgIFsobmdNb2RlbCldPVwiZm9ybUNvbmZpZy5yZWZyZXNoSW50ZXJ2YWxcIlxuICAgICAgICAgICAgKm5nSWY9XCJyZWZyZXNoT3B0aW9ucyA9PT0gJ2ludGVydmFsJ1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlICNjOHlSYW5nZVZhbHVlPlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgICAgIFt0cmFuc2xhdGVQYXJhbXNdPVwieyBpbnRlcnZhbEluU2Vjb25kczogaW50ZXJ2YWxSYW5nZS52YWx1ZSAqIDAuMDAxIH1cIlxuICAgICAgICAgICAgICAgICAgbmdOb25CaW5kYWJsZVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHt7IGludGVydmFsSW5TZWNvbmRzIH19IHNcbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxuICAgICAgICAgICAgICBtaW49XCI1MDAwXCJcbiAgICAgICAgICAgICAgbWF4PVwiMTAwMDAwXCJcbiAgICAgICAgICAgICAgc3RlcD1cIjEwMDBcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2M4eS1yYW5nZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxsYWJlbFxuICAgICAgICAgIGNsYXNzPVwiYzh5LXN3aXRjaCBjOHktc3dpdGNoLS1pbmxpbmVcIlxuICAgICAgICAgICpuZ0lmPVwicmVmcmVzaE9wdGlvbnMgPT09ICdyZWFsdGltZSdcIlxuICAgICAgICA+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICBuYW1lPVwiZm9sbG93XCJcbiAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICBbKG5nTW9kZWwpXT1cImZvcm1Db25maWcuZm9sbG93XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LTEyXCJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVxuICAgICAgICAgID5cbiAgICAgICAgICAgIEZvbGxvdyBzZWxlY3RlZFxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48ZGl2XG4gIGNsYXNzPVwicC10LTE2IHAtYi0xNlwiXG4gIHN0eWxlPVwid2lkdGg6IDEwMCU7IGhlaWdodDogMjQwcHhcIlxuPlxuICA8Yzh5LW1hcFxuICAgIFthc3NldHNdPVwiYXNzZXRzXCJcbiAgICAob25Nb3ZlKT1cIm9uUHJldmlld01hcE1vdmUoJGV2ZW50KVwiXG4gICAgKG9uWm9vbVN0YXJ0KT1cIm9uUHJldmlld1pvb21TdGFydCgpXCJcbiAgICAob25ab29tRW5kKT1cIm9uUHJldmlld1pvb21FbmQoJGV2ZW50KVwiXG4gICAgW2NvbmZpZ109XCJjb25maWcubWFwQ29uZmlnXCJcbiAgPjwvYzh5LW1hcD5cbjwvZGl2PlxuIl19