import { Component, Input } from '@angular/core';
import { ControlContainer, FormBuilder, NgForm, Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "ngx-bootstrap/buttons";
export class ThreeDRotationWidgetConfigComponent {
    constructor(formBuilder, form) {
        this.formBuilder = formBuilder;
        this.form = form;
    }
    onBeforeSave(config) {
        if (this.formGroup.valid) {
            Object.assign(config, this.formGroup.value);
            return true;
        }
        return false;
    }
    ngOnInit() {
        this.initForm();
    }
    initForm() {
        this.formGroup = this.createForm(this.formBuilder);
        this.form.form.addControl('config', this.formGroup);
        this.formGroup.patchValue(this.config);
    }
    createForm(formBuilder) {
        return formBuilder.group({
            objectModel: ['box.min.json', [Validators.minLength(1)]],
            isWireframe: [true, []],
            cameraType: ['PC', [Validators.minLength(2), Validators.maxLength(2)]]
        });
    }
}
ThreeDRotationWidgetConfigComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ThreeDRotationWidgetConfigComponent, deps: [{ token: i1.FormBuilder }, { token: i1.NgForm }], target: i0.ɵɵFactoryTarget.Component });
ThreeDRotationWidgetConfigComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ThreeDRotationWidgetConfigComponent, selector: "c8y-three-d-rotation-widget-config", inputs: { config: "config" }, ngImport: i0, template: "<form [formGroup]=\"formGroup\">\n  <c8y-form-group>\n    <label translate>Select object model for rendering</label>\n    <div class=\"c8y-select-wrapper\">\n      <select class=\"form-control\" formControlName=\"objectModel\">\n        <option value=\"box.min.json\" translate>Box model</option>\n        <option value=\"phoneModel.min.json\" translate>Phone model</option>\n      </select>\n    </div>\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Wireframe</label>\n    <button type=\"button\" class=\"btn\" formControlName=\"isWireframe\" btnCheckbox translate>\n      Wireframe\n    </button>\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Camera type</label>\n    <div class=\"c8y-select-wrapper\">\n      <select class=\"form-control\" formControlName=\"cameraType\">\n        <option value=\"OC\" translate>Orthographic camera</option>\n        <option value=\"PC\" translate>Perspective camera</option>\n      </select>\n    </div>\n  </c8y-form-group>\n</form>\n", dependencies: [{ kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i1.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i1.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i3.ButtonCheckboxDirective, selector: "[btnCheckbox]", inputs: ["btnCheckboxTrue", "btnCheckboxFalse"] }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ThreeDRotationWidgetConfigComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-three-d-rotation-widget-config', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<form [formGroup]=\"formGroup\">\n  <c8y-form-group>\n    <label translate>Select object model for rendering</label>\n    <div class=\"c8y-select-wrapper\">\n      <select class=\"form-control\" formControlName=\"objectModel\">\n        <option value=\"box.min.json\" translate>Box model</option>\n        <option value=\"phoneModel.min.json\" translate>Phone model</option>\n      </select>\n    </div>\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Wireframe</label>\n    <button type=\"button\" class=\"btn\" formControlName=\"isWireframe\" btnCheckbox translate>\n      Wireframe\n    </button>\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Camera type</label>\n    <div class=\"c8y-select-wrapper\">\n      <select class=\"form-control\" formControlName=\"cameraType\">\n        <option value=\"OC\" translate>Orthographic camera</option>\n        <option value=\"PC\" translate>Perspective camera</option>\n      </select>\n    </div>\n  </c8y-form-group>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i1.NgForm }]; }, propDecorators: { config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhyZWUtZC1yb3RhdGlvbi13aWRnZXQtY29uZmlnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3dpZGdldHMvaW1wbGVtZW50YXRpb25zL3RocmVlLWQtcm90YXRpb24vdGhyZWUtZC1yb3RhdGlvbi13aWRnZXQtY29uZmlnL3RocmVlLWQtcm90YXRpb24td2lkZ2V0LWNvbmZpZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi93aWRnZXRzL2ltcGxlbWVudGF0aW9ucy90aHJlZS1kLXJvdGF0aW9uL3RocmVlLWQtcm90YXRpb24td2lkZ2V0LWNvbmZpZy90aHJlZS1kLXJvdGF0aW9uLXdpZGdldC1jb25maWcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBVW5GLE1BQU0sT0FBTyxtQ0FBbUM7SUFJOUMsWUFBb0IsV0FBd0IsRUFBVSxJQUFZO1FBQTlDLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBUTtJQUFHLENBQUM7SUFFdEUsWUFBWSxDQUNWLE1BQW1DO1FBRW5DLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUU7WUFDeEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM1QyxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRU8sUUFBUTtRQUNkLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFTyxVQUFVLENBQUMsV0FBd0I7UUFDekMsT0FBTyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLFdBQVcsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4RCxXQUFXLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDO1lBQ3ZCLFVBQVUsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZFLENBQUMsQ0FBQztJQUNMLENBQUM7O2dJQWhDVSxtQ0FBbUM7b0hBQW5DLG1DQUFtQyx3R0NYaEQsbS9CQTRCQSwyOUNEbkJpQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzsyRkFFeEQsbUNBQW1DO2tCQUwvQyxTQUFTOytCQUNFLG9DQUFvQyxpQkFFL0IsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUM7dUhBRzFELE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciwgRm9ybUJ1aWxkZXIsIE5nRm9ybSwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE9uQmVmb3JlU2F2ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgVGhyZWVEUm90YXRpb25XaWRnZXRDb25maWcgfSBmcm9tICcuLi90aHJlZS1kLXJvdGF0aW9uLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXRocmVlLWQtcm90YXRpb24td2lkZ2V0LWNvbmZpZycsXG4gIHRlbXBsYXRlVXJsOiAnLi90aHJlZS1kLXJvdGF0aW9uLXdpZGdldC1jb25maWcuY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIFRocmVlRFJvdGF0aW9uV2lkZ2V0Q29uZmlnQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkJlZm9yZVNhdmUge1xuICBASW5wdXQoKSBjb25maWc6IFRocmVlRFJvdGF0aW9uV2lkZ2V0Q29uZmlnO1xuICBmb3JtR3JvdXA6IFJldHVyblR5cGU8VGhyZWVEUm90YXRpb25XaWRnZXRDb25maWdDb21wb25lbnRbJ2NyZWF0ZUZvcm0nXT47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsIHByaXZhdGUgZm9ybTogTmdGb3JtKSB7fVxuXG4gIG9uQmVmb3JlU2F2ZShcbiAgICBjb25maWc/OiBUaHJlZURSb3RhdGlvbldpZGdldENvbmZpZ1xuICApOiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiB8IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLmZvcm1Hcm91cC52YWxpZCkge1xuICAgICAgT2JqZWN0LmFzc2lnbihjb25maWcsIHRoaXMuZm9ybUdyb3VwLnZhbHVlKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmluaXRGb3JtKCk7XG4gIH1cblxuICBwcml2YXRlIGluaXRGb3JtKCk6IHZvaWQge1xuICAgIHRoaXMuZm9ybUdyb3VwID0gdGhpcy5jcmVhdGVGb3JtKHRoaXMuZm9ybUJ1aWxkZXIpO1xuICAgIHRoaXMuZm9ybS5mb3JtLmFkZENvbnRyb2woJ2NvbmZpZycsIHRoaXMuZm9ybUdyb3VwKTtcbiAgICB0aGlzLmZvcm1Hcm91cC5wYXRjaFZhbHVlKHRoaXMuY29uZmlnKTtcbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlRm9ybShmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHtcbiAgICByZXR1cm4gZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgICAgb2JqZWN0TW9kZWw6IFsnYm94Lm1pbi5qc29uJywgW1ZhbGlkYXRvcnMubWluTGVuZ3RoKDEpXV0sXG4gICAgICBpc1dpcmVmcmFtZTogW3RydWUsIFtdXSxcbiAgICAgIGNhbWVyYVR5cGU6IFsnUEMnLCBbVmFsaWRhdG9ycy5taW5MZW5ndGgoMiksIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDIpXV1cbiAgICB9KTtcbiAgfVxufVxuIiwiPGZvcm0gW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXBcIj5cbiAgPGM4eS1mb3JtLWdyb3VwPlxuICAgIDxsYWJlbCB0cmFuc2xhdGU+U2VsZWN0IG9iamVjdCBtb2RlbCBmb3IgcmVuZGVyaW5nPC9sYWJlbD5cbiAgICA8ZGl2IGNsYXNzPVwiYzh5LXNlbGVjdC13cmFwcGVyXCI+XG4gICAgICA8c2VsZWN0IGNsYXNzPVwiZm9ybS1jb250cm9sXCIgZm9ybUNvbnRyb2xOYW1lPVwib2JqZWN0TW9kZWxcIj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImJveC5taW4uanNvblwiIHRyYW5zbGF0ZT5Cb3ggbW9kZWw8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInBob25lTW9kZWwubWluLmpzb25cIiB0cmFuc2xhdGU+UGhvbmUgbW9kZWw8L29wdGlvbj5cbiAgICAgIDwvc2VsZWN0PlxuICAgIDwvZGl2PlxuICA8L2M4eS1mb3JtLWdyb3VwPlxuXG4gIDxjOHktZm9ybS1ncm91cD5cbiAgICA8bGFiZWwgdHJhbnNsYXRlPldpcmVmcmFtZTwvbGFiZWw+XG4gICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG5cIiBmb3JtQ29udHJvbE5hbWU9XCJpc1dpcmVmcmFtZVwiIGJ0bkNoZWNrYm94IHRyYW5zbGF0ZT5cbiAgICAgIFdpcmVmcmFtZVxuICAgIDwvYnV0dG9uPlxuICA8L2M4eS1mb3JtLWdyb3VwPlxuXG4gIDxjOHktZm9ybS1ncm91cD5cbiAgICA8bGFiZWwgdHJhbnNsYXRlPkNhbWVyYSB0eXBlPC9sYWJlbD5cbiAgICA8ZGl2IGNsYXNzPVwiYzh5LXNlbGVjdC13cmFwcGVyXCI+XG4gICAgICA8c2VsZWN0IGNsYXNzPVwiZm9ybS1jb250cm9sXCIgZm9ybUNvbnRyb2xOYW1lPVwiY2FtZXJhVHlwZVwiPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwiT0NcIiB0cmFuc2xhdGU+T3J0aG9ncmFwaGljIGNhbWVyYTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUENcIiB0cmFuc2xhdGU+UGVyc3BlY3RpdmUgY2FtZXJhPC9vcHRpb24+XG4gICAgICA8L3NlbGVjdD5cbiAgICA8L2Rpdj5cbiAgPC9jOHktZm9ybS1ncm91cD5cbjwvZm9ybT5cbiJdfQ==