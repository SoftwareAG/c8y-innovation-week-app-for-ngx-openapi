import { Component, Input } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { distinctUntilChanged, shareReplay, switchMap, tap } from 'rxjs/operators';
import { ImageWidgetService } from '../image-widget.service';
import * as i0 from "@angular/core";
import * as i1 from "../image-widget.service";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
export class ImageWidgetViewComponent {
    constructor(imageWidget) {
        this.imageWidget = imageWidget;
        this.imageBinaryId$ = new BehaviorSubject(null);
        this.loading = true;
        this.imageDetails$ = this.imageBinaryId$.pipe(distinctUntilChanged(), tap(() => (this.loading = true)), switchMap(imageBinaryId => this.imageWidget.getImageDetails(imageBinaryId)), tap(() => (this.loading = false)), shareReplay(1));
    }
    ngOnChanges(changes) {
        if (changes.config) {
            const value = changes.config.currentValue;
            this.imageBinaryId$.next(value.imageBinaryId);
            this.setStyling(value);
        }
    }
    setStyling(config) {
        this.styling = this.imageWidget.getStyling(config);
    }
}
ImageWidgetViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImageWidgetViewComponent, deps: [{ token: i1.ImageWidgetService }], target: i0.ɵɵFactoryTarget.Component });
ImageWidgetViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ImageWidgetViewComponent, selector: "c8y-image-widget-view", inputs: { config: "config" }, usesOnChanges: true, ngImport: i0, template: "<ng-container *ngIf=\"imageDetails$ | async as details; else empty\">\n  <img\n    [src]=\"details.base64\"\n    [title]=\"details.file.name\"\n    [ngClass]=\"styling ? 'fit-h fit-w' : 'img-responsive'\"\n    [ngStyle]=\"styling\"\n  />\n</ng-container>\n\n<ng-template #empty>\n  <div class=\"d-flex fit-h fit-w j-c-center a-i-center\" *ngIf=\"!loading\">\n    <c8y-ui-empty-state\n      class=\"fit-w\"\n      [icon]=\"'no-image'\"\n      [title]=\"'No image to display.' | translate\"\n      [subtitle]=\"'Upload an image.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n  </div>\n</ng-template>\n<div class=\"d-flex fit-h fit-w j-c-center a-i-center\" *ngIf=\"loading\">\n  <c8y-loading></c8y-loading>\n</div>\n", dependencies: [{ kind: "component", type: i2.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i2.LoadingComponent, selector: "c8y-loading" }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImageWidgetViewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-image-widget-view', template: "<ng-container *ngIf=\"imageDetails$ | async as details; else empty\">\n  <img\n    [src]=\"details.base64\"\n    [title]=\"details.file.name\"\n    [ngClass]=\"styling ? 'fit-h fit-w' : 'img-responsive'\"\n    [ngStyle]=\"styling\"\n  />\n</ng-container>\n\n<ng-template #empty>\n  <div class=\"d-flex fit-h fit-w j-c-center a-i-center\" *ngIf=\"!loading\">\n    <c8y-ui-empty-state\n      class=\"fit-w\"\n      [icon]=\"'no-image'\"\n      [title]=\"'No image to display.' | translate\"\n      [subtitle]=\"'Upload an image.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n  </div>\n</ng-template>\n<div class=\"d-flex fit-h fit-w j-c-center a-i-center\" *ngIf=\"loading\">\n  <c8y-loading></c8y-loading>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ImageWidgetService }]; }, propDecorators: { config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2Utd2lkZ2V0LXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vd2lkZ2V0cy9pbXBsZW1lbnRhdGlvbnMvaW1hZ2UvaW1hZ2Utd2lkZ2V0LXZpZXcvaW1hZ2Utd2lkZ2V0LXZpZXcuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vd2lkZ2V0cy9pbXBsZW1lbnRhdGlvbnMvaW1hZ2UvaW1hZ2Utd2lkZ2V0LXZpZXcvaW1hZ2Utd2lkZ2V0LXZpZXcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxlQUFlLEVBQWMsTUFBTSxNQUFNLENBQUM7QUFDbkQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7O0FBTTdELE1BQU0sT0FBTyx3QkFBd0I7SUFVbkMsWUFBb0IsV0FBK0I7UUFBL0IsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO1FBUm5ELG1CQUFjLEdBQUcsSUFBSSxlQUFlLENBQVMsSUFBSSxDQUFDLENBQUM7UUFNbkQsWUFBTyxHQUFHLElBQUksQ0FBQztRQUdiLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQzNDLG9CQUFvQixFQUFFLEVBQ3RCLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUMsRUFDaEMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUMsRUFDM0UsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUNqQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ2YsQ0FBQztJQUNKLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQ2xCLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBaUMsQ0FBQztZQUMvRCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN4QjtJQUNILENBQUM7SUFFTyxVQUFVLENBQUMsTUFBeUI7UUFDMUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyRCxDQUFDOztxSEE5QlUsd0JBQXdCO3lHQUF4Qix3QkFBd0IsZ0hDVnJDLHV1QkF1QkE7MkZEYmEsd0JBQXdCO2tCQUpwQyxTQUFTOytCQUNFLHVCQUF1Qjt5R0FJeEIsTUFBTTtzQkFBZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRpc3RpbmN0VW50aWxDaGFuZ2VkLCBzaGFyZVJlcGxheSwgc3dpdGNoTWFwLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJbWFnZVdpZGdldENvbmZpZywgSW1hZ2VXaWRnZXRTdHlsZSB9IGZyb20gJy4uL2ltYWdlLXdpZGdldC5tb2RlbCc7XG5pbXBvcnQgeyBJbWFnZVdpZGdldFNlcnZpY2UgfSBmcm9tICcuLi9pbWFnZS13aWRnZXQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1pbWFnZS13aWRnZXQtdmlldycsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbWFnZS13aWRnZXQtdmlldy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSW1hZ2VXaWRnZXRWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY29uZmlnOiBJbWFnZVdpZGdldENvbmZpZztcbiAgaW1hZ2VCaW5hcnlJZCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4obnVsbCk7XG4gIGltYWdlRGV0YWlscyQ6IE9ic2VydmFibGU8e1xuICAgIGZpbGU6IEZpbGU7XG4gICAgYmFzZTY0OiBzdHJpbmc7XG4gIH0+O1xuICBzdHlsaW5nOiBJbWFnZVdpZGdldFN0eWxlIHwgbnVsbDtcbiAgbG9hZGluZyA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbWFnZVdpZGdldDogSW1hZ2VXaWRnZXRTZXJ2aWNlKSB7XG4gICAgdGhpcy5pbWFnZURldGFpbHMkID0gdGhpcy5pbWFnZUJpbmFyeUlkJC5waXBlKFxuICAgICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSxcbiAgICAgIHRhcCgoKSA9PiAodGhpcy5sb2FkaW5nID0gdHJ1ZSkpLFxuICAgICAgc3dpdGNoTWFwKGltYWdlQmluYXJ5SWQgPT4gdGhpcy5pbWFnZVdpZGdldC5nZXRJbWFnZURldGFpbHMoaW1hZ2VCaW5hcnlJZCkpLFxuICAgICAgdGFwKCgpID0+ICh0aGlzLmxvYWRpbmcgPSBmYWxzZSkpLFxuICAgICAgc2hhcmVSZXBsYXkoMSlcbiAgICApO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLmNvbmZpZykge1xuICAgICAgY29uc3QgdmFsdWUgPSBjaGFuZ2VzLmNvbmZpZy5jdXJyZW50VmFsdWUgYXMgSW1hZ2VXaWRnZXRDb25maWc7XG4gICAgICB0aGlzLmltYWdlQmluYXJ5SWQkLm5leHQodmFsdWUuaW1hZ2VCaW5hcnlJZCk7XG4gICAgICB0aGlzLnNldFN0eWxpbmcodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2V0U3R5bGluZyhjb25maWc6IEltYWdlV2lkZ2V0Q29uZmlnKTogdm9pZCB7XG4gICAgdGhpcy5zdHlsaW5nID0gdGhpcy5pbWFnZVdpZGdldC5nZXRTdHlsaW5nKGNvbmZpZyk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJpbWFnZURldGFpbHMkIHwgYXN5bmMgYXMgZGV0YWlsczsgZWxzZSBlbXB0eVwiPlxuICA8aW1nXG4gICAgW3NyY109XCJkZXRhaWxzLmJhc2U2NFwiXG4gICAgW3RpdGxlXT1cImRldGFpbHMuZmlsZS5uYW1lXCJcbiAgICBbbmdDbGFzc109XCJzdHlsaW5nID8gJ2ZpdC1oIGZpdC13JyA6ICdpbWctcmVzcG9uc2l2ZSdcIlxuICAgIFtuZ1N0eWxlXT1cInN0eWxpbmdcIlxuICAvPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSAjZW1wdHk+XG4gIDxkaXYgY2xhc3M9XCJkLWZsZXggZml0LWggZml0LXcgai1jLWNlbnRlciBhLWktY2VudGVyXCIgKm5nSWY9XCIhbG9hZGluZ1wiPlxuICAgIDxjOHktdWktZW1wdHktc3RhdGVcbiAgICAgIGNsYXNzPVwiZml0LXdcIlxuICAgICAgW2ljb25dPVwiJ25vLWltYWdlJ1wiXG4gICAgICBbdGl0bGVdPVwiJ05vIGltYWdlIHRvIGRpc3BsYXkuJyB8IHRyYW5zbGF0ZVwiXG4gICAgICBbc3VidGl0bGVdPVwiJ1VwbG9hZCBhbiBpbWFnZS4nIHwgdHJhbnNsYXRlXCJcbiAgICAgIFtob3Jpem9udGFsXT1cInRydWVcIlxuICAgID48L2M4eS11aS1lbXB0eS1zdGF0ZT5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuPGRpdiBjbGFzcz1cImQtZmxleCBmaXQtaCBmaXQtdyBqLWMtY2VudGVyIGEtaS1jZW50ZXJcIiAqbmdJZj1cImxvYWRpbmdcIj5cbiAgPGM4eS1sb2FkaW5nPjwvYzh5LWxvYWRpbmc+XG48L2Rpdj5cbiJdfQ==