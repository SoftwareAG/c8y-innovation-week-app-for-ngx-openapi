import { Injectable } from '@angular/core';
import { BridgeService } from './bridge.service';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "./bridge.service";
export class Ng1ActionBarFactoryService {
    constructor(bridge) {
        this.bridge = bridge;
        this.routeChanges$ = bridge.$routeChanges;
        this.$ng1RouteChangeSuccess = bridge.$ng1RouteChangeSuccess;
    }
    get() {
        return this.routeChanges$.pipe(switchMap(() => {
            return this.bridge.getActionBarItems();
        }));
    }
}
Ng1ActionBarFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Ng1ActionBarFactoryService, deps: [{ token: i1.BridgeService }], target: i0.ɵɵFactoryTarget.Injectable });
Ng1ActionBarFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Ng1ActionBarFactoryService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: Ng1ActionBarFactoryService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.BridgeService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdXBncmFkZS9hY3Rpb24tYmFyLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7QUFHM0MsTUFBTSxPQUFPLDBCQUEwQjtJQUdyQyxZQUFvQixNQUFxQjtRQUFyQixXQUFNLEdBQU4sTUFBTSxDQUFlO1FBQ3ZDLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUMxQyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsTUFBTSxDQUFDLHNCQUFzQixDQUFDO0lBQzlELENBQUM7SUFFRCxHQUFHO1FBQ0QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDNUIsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pDLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzt1SEFkVSwwQkFBMEI7MkhBQTFCLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQUR0QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uQmFyRmFjdG9yeSwgQWN0aW9uQmFySXRlbSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnJpZGdlU2VydmljZSB9IGZyb20gJy4vYnJpZGdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmcxQWN0aW9uQmFyRmFjdG9yeVNlcnZpY2UgaW1wbGVtZW50cyBBY3Rpb25CYXJGYWN0b3J5IHtcbiAgcm91dGVDaGFuZ2VzJDogT2JzZXJ2YWJsZTxhbnk+O1xuICAkbmcxUm91dGVDaGFuZ2VTdWNjZXNzOiBPYnNlcnZhYmxlPGFueT47XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYnJpZGdlOiBCcmlkZ2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5yb3V0ZUNoYW5nZXMkID0gYnJpZGdlLiRyb3V0ZUNoYW5nZXM7XG4gICAgdGhpcy4kbmcxUm91dGVDaGFuZ2VTdWNjZXNzID0gYnJpZGdlLiRuZzFSb3V0ZUNoYW5nZVN1Y2Nlc3M7XG4gIH1cblxuICBnZXQoKTogT2JzZXJ2YWJsZTxBY3Rpb25CYXJJdGVtPiB7XG4gICAgcmV0dXJuIHRoaXMucm91dGVDaGFuZ2VzJC5waXBlKFxuICAgICAgc3dpdGNoTWFwKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnJpZGdlLmdldEFjdGlvbkJhckl0ZW1zKCk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiJdfQ==