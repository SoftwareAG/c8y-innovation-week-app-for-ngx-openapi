import { ChangeDetectionStrategy, Component, ElementRef, Optional } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
import { WidgetsDashboardComponent } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "./dashboard-bridge.service";
export class WidgetComponent {
    constructor(dashboard, dashboardBridgeService, el) {
        this.dashboard = dashboard;
        this.dashboardBridgeService = dashboardBridgeService;
        this.el = el;
    }
    onBeforeSave() {
        this.ng1Scope.$broadcast('saveWidget');
        return true;
    }
    async ngOnInit() {
        if (this.config) {
            if (this.config.child) {
                this.config.child.alerts = this.alerts;
            }
            this.ng1Scope = await this.dashboardBridgeService.instantiateComponent(this.config, this.el.nativeElement);
            if (this.dashboard) {
                this.resizeSubscription = this.dashboard.onChangeDashboard.subscribe(() => {
                    this.ng1Scope.$broadcast('dashboardResize');
                });
            }
        }
    }
    ngOnDestroy() {
        if (this.ng1Scope) {
            this.ng1Scope.$destroy();
        }
        if (this.resizeSubscription) {
            this.resizeSubscription.unsubscribe();
        }
    }
}
WidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WidgetComponent, deps: [{ token: i1.WidgetsDashboardComponent, optional: true }, { token: i2.DashboardBridgeService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
WidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: WidgetComponent, selector: "c8y-widget-legacy", ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WidgetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'c8y-widget-legacy',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return [{ type: i1.WidgetsDashboardComponent, decorators: [{
                    type: Optional
                }] }, { type: i2.DashboardBridgeService }, { type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3VwZ3JhZGUvZGFzaGJvYXJkL3dpZGdldC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUdWLFFBQVEsRUFDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQWdCLHlCQUF5QixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFROUUsTUFBTSxPQUFPLGVBQWU7SUFLMUIsWUFDc0IsU0FBb0MsRUFDaEQsc0JBQThDLEVBQzlDLEVBQWM7UUFGRixjQUFTLEdBQVQsU0FBUyxDQUEyQjtRQUNoRCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBQzlDLE9BQUUsR0FBRixFQUFFLENBQVk7SUFDckIsQ0FBQztJQUVKLFlBQVk7UUFDVixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN2QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxLQUFLLENBQUMsUUFBUTtRQUNaLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO2FBQ3hDO1lBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDcEUsSUFBSSxDQUFDLE1BQU0sRUFDWCxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FDdEIsQ0FBQztZQUNGLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtvQkFDeEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDOUMsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUMxQjtRQUNELElBQUksSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzNCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN2QztJQUNILENBQUM7OzRHQXhDVSxlQUFlO2dHQUFmLGVBQWUseURBSGhCLEVBQUU7MkZBR0QsZUFBZTtrQkFMM0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixRQUFRLEVBQUUsRUFBRTtvQkFDWixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OzBCQU9JLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBPbkluaXQsXG4gIE9uRGVzdHJveSxcbiAgT3B0aW9uYWxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXNoYm9hcmQtYnJpZGdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgT25CZWZvcmVTYXZlLCBXaWRnZXRzRGFzaGJvYXJkQ29tcG9uZW50IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXdpZGdldC1sZWdhY3knLFxuICB0ZW1wbGF0ZTogJycsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFdpZGdldENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkJlZm9yZVNhdmUge1xuICBuZzFTY29wZTtcbiAgY29uZmlnO1xuICBhbGVydHM7XG4gIHByaXZhdGUgcmVzaXplU3Vic2NyaXB0aW9uPzogU3Vic2NyaXB0aW9uO1xuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGRhc2hib2FyZDogV2lkZ2V0c0Rhc2hib2FyZENvbXBvbmVudCxcbiAgICBwcml2YXRlIGRhc2hib2FyZEJyaWRnZVNlcnZpY2U6IERhc2hib2FyZEJyaWRnZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZlxuICApIHt9XG5cbiAgb25CZWZvcmVTYXZlKCk6IGJvb2xlYW4ge1xuICAgIHRoaXMubmcxU2NvcGUuJGJyb2FkY2FzdCgnc2F2ZVdpZGdldCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuY29uZmlnKSB7XG4gICAgICBpZiAodGhpcy5jb25maWcuY2hpbGQpIHtcbiAgICAgICAgdGhpcy5jb25maWcuY2hpbGQuYWxlcnRzID0gdGhpcy5hbGVydHM7XG4gICAgICB9XG4gICAgICB0aGlzLm5nMVNjb3BlID0gYXdhaXQgdGhpcy5kYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlLmluc3RhbnRpYXRlQ29tcG9uZW50KFxuICAgICAgICB0aGlzLmNvbmZpZyxcbiAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50XG4gICAgICApO1xuICAgICAgaWYgKHRoaXMuZGFzaGJvYXJkKSB7XG4gICAgICAgIHRoaXMucmVzaXplU3Vic2NyaXB0aW9uID0gdGhpcy5kYXNoYm9hcmQub25DaGFuZ2VEYXNoYm9hcmQuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICB0aGlzLm5nMVNjb3BlLiRicm9hZGNhc3QoJ2Rhc2hib2FyZFJlc2l6ZScpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5uZzFTY29wZSkge1xuICAgICAgdGhpcy5uZzFTY29wZS4kZGVzdHJveSgpO1xuICAgIH1cbiAgICBpZiAodGhpcy5yZXNpemVTdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMucmVzaXplU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG59XG4iXX0=