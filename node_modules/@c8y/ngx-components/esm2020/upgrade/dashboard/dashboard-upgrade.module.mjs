import { CommonModule } from '@angular/common';
import { NgModule, NgZone, Optional } from '@angular/core';
import { Router } from '@angular/router';
import { ContextDashboardService } from '@c8y/ngx-components/context-dashboard';
import { Ng1ComponentFactoryService } from './component.factory';
import { DashboardBridgeService } from './dashboard-bridge.service';
import { WidgetComponent } from './widget.component';
import { DeviceSelectorComponent } from './device-selector.component';
import { C8yTranslateModule, hookComponent } from '@c8y/ngx-components';
import { AssetSelectorModule } from '@c8y/ngx-components/assets-navigator';
import * as i0 from "@angular/core";
export class DashboardUpgradeModule {
}
DashboardUpgradeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DashboardUpgradeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DashboardUpgradeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DashboardUpgradeModule, declarations: [DeviceSelectorComponent, WidgetComponent], imports: [CommonModule, C8yTranslateModule, AssetSelectorModule] });
DashboardUpgradeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DashboardUpgradeModule, providers: [
        {
            provide: DashboardBridgeService,
            useFactory: dashboardBridgeFactory,
            deps: ['$injector', NgZone, Router, [new Optional(), ContextDashboardService]]
        },
        hookComponent(Ng1ComponentFactoryService)
    ], imports: [CommonModule, C8yTranslateModule, AssetSelectorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DashboardUpgradeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DeviceSelectorComponent, WidgetComponent],
                    entryComponents: [DeviceSelectorComponent, WidgetComponent],
                    imports: [CommonModule, C8yTranslateModule, AssetSelectorModule],
                    providers: [
                        {
                            provide: DashboardBridgeService,
                            useFactory: dashboardBridgeFactory,
                            deps: ['$injector', NgZone, Router, [new Optional(), ContextDashboardService]]
                        },
                        hookComponent(Ng1ComponentFactoryService)
                    ]
                }]
        }] });
export function dashboardBridgeFactory(injector, ngZone, router, contextDashboardService) {
    return new DashboardBridgeService(injector, ngZone, router, contextDashboardService);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLXVwZ3JhZGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9kYXNoYm9hcmQvZGFzaGJvYXJkLXVwZ3JhZGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7O0FBZTNFLE1BQU0sT0FBTyxzQkFBc0I7O21IQUF0QixzQkFBc0I7b0hBQXRCLHNCQUFzQixpQkFabEIsdUJBQXVCLEVBQUUsZUFBZSxhQUU3QyxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsbUJBQW1CO29IQVVwRCxzQkFBc0IsYUFUdEI7UUFDVDtZQUNFLE9BQU8sRUFBRSxzQkFBc0I7WUFDL0IsVUFBVSxFQUFFLHNCQUFzQjtZQUNsQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztTQUMvRTtRQUNELGFBQWEsQ0FBQywwQkFBMEIsQ0FBQztLQUMxQyxZQVJTLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUI7MkZBVXBELHNCQUFzQjtrQkFibEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxlQUFlLENBQUM7b0JBQ3hELGVBQWUsRUFBRSxDQUFDLHVCQUF1QixFQUFFLGVBQWUsQ0FBQztvQkFDM0QsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGtCQUFrQixFQUFFLG1CQUFtQixDQUFDO29CQUNoRSxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLHNCQUFzQjs0QkFDL0IsVUFBVSxFQUFFLHNCQUFzQjs0QkFDbEMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLHVCQUF1QixDQUFDLENBQUM7eUJBQy9FO3dCQUNELGFBQWEsQ0FBQywwQkFBMEIsQ0FBQztxQkFDMUM7aUJBQ0Y7O0FBR0QsTUFBTSxVQUFVLHNCQUFzQixDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLHVCQUF1QjtJQUN0RixPQUFPLElBQUksc0JBQXNCLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztBQUN2RixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBOZ1pvbmUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29udGV4dERhc2hib2FyZFNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2NvbnRleHQtZGFzaGJvYXJkJztcbmltcG9ydCB7IE5nMUNvbXBvbmVudEZhY3RvcnlTZXJ2aWNlIH0gZnJvbSAnLi9jb21wb25lbnQuZmFjdG9yeSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXNoYm9hcmQtYnJpZGdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi93aWRnZXQuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVNlbGVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9kZXZpY2Utc2VsZWN0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IEM4eVRyYW5zbGF0ZU1vZHVsZSwgaG9va0NvbXBvbmVudCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQXNzZXRTZWxlY3Rvck1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvYXNzZXRzLW5hdmlnYXRvcic7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0RldmljZVNlbGVjdG9yQ29tcG9uZW50LCBXaWRnZXRDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZXZpY2VTZWxlY3RvckNvbXBvbmVudCwgV2lkZ2V0Q29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQzh5VHJhbnNsYXRlTW9kdWxlLCBBc3NldFNlbGVjdG9yTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogRGFzaGJvYXJkQnJpZGdlU2VydmljZSxcbiAgICAgIHVzZUZhY3Rvcnk6IGRhc2hib2FyZEJyaWRnZUZhY3RvcnksXG4gICAgICBkZXBzOiBbJyRpbmplY3RvcicsIE5nWm9uZSwgUm91dGVyLCBbbmV3IE9wdGlvbmFsKCksIENvbnRleHREYXNoYm9hcmRTZXJ2aWNlXV1cbiAgICB9LFxuICAgIGhvb2tDb21wb25lbnQoTmcxQ29tcG9uZW50RmFjdG9yeVNlcnZpY2UpXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkVXBncmFkZU1vZHVsZSB7fVxuXG5leHBvcnQgZnVuY3Rpb24gZGFzaGJvYXJkQnJpZGdlRmFjdG9yeShpbmplY3Rvciwgbmdab25lLCByb3V0ZXIsIGNvbnRleHREYXNoYm9hcmRTZXJ2aWNlKSB7XG4gIHJldHVybiBuZXcgRGFzaGJvYXJkQnJpZGdlU2VydmljZShpbmplY3Rvciwgbmdab25lLCByb3V0ZXIsIGNvbnRleHREYXNoYm9hcmRTZXJ2aWNlKTtcbn1cbiJdfQ==