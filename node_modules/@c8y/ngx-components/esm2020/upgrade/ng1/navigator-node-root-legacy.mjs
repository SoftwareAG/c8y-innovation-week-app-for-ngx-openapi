import { NavigatorNodeRoot } from '@c8y/ngx-components';
import { assign } from 'lodash-es';
export class NavigatorNodeRootLegacy extends NavigatorNodeRoot {
    addRoot(nodeData) {
        let duplicate;
        if (nodeData.path === '') {
            nodeData.path = '/';
        }
        nodeData.label = nodeData.name;
        if (typeof nodeData.parent === 'object') {
            nodeData.parent.label = nodeData.parent.name;
        }
        if (nodeData.preventDuplicates) {
            duplicate = this.find(({ path, parents, label }) => {
                return (path === nodeData.path &&
                    label === nodeData.label &&
                    parents.some(p => p.label === nodeData.parent));
            });
            if (duplicate) {
                duplicate.routerLinkExact = false;
            }
        }
        return duplicate || super.addRoot(nodeData);
    }
    createNode(node) {
        const newNode = super.createNode(node);
        const update = newNode.update.bind(newNode);
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const root = this;
        return Object.defineProperties(assign(newNode, {
            realName: newNode.name || newNode.label,
            _parent: true,
            update(data) {
                if (this._parent === undefined) {
                    // _parent was deleted somene instead to put this in root
                    root.addRoot(this);
                    // put it back so it can be deleted again
                    this._parent = true;
                }
                update(data);
            },
            addChild(nodeChild) {
                this.add(root.createNode(nodeChild));
            }
        }), {
            label: {
                get() {
                    return this.realName || '';
                },
                set(name) {
                    this.realName = name;
                }
            },
            name: {
                get() {
                    return this.realName || '';
                },
                set(name) {
                    this.realName = name;
                }
            },
            show: {
                get() {
                    return !this.hidden;
                },
                set(show) {
                    this.hidden = !show;
                }
            }
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdG9yLW5vZGUtcm9vdC1sZWdhY3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi91cGdyYWRlL25nMS9uYXZpZ2F0b3Itbm9kZS1yb290LWxlZ2FjeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQWlCLE1BQU0scUJBQXFCLENBQUM7QUFDdkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVuQyxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsaUJBQWlCO0lBQzVELE9BQU8sQ0FBQyxRQUFRO1FBQ2QsSUFBSSxTQUFTLENBQUM7UUFDZCxJQUFJLFFBQVEsQ0FBQyxJQUFJLEtBQUssRUFBRSxFQUFFO1lBQ3hCLFFBQVEsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1NBQ3JCO1FBQ0QsUUFBUSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1FBQy9CLElBQUksT0FBTyxRQUFRLENBQUMsTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUN2QyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztTQUM5QztRQUVELElBQUksUUFBUSxDQUFDLGlCQUFpQixFQUFFO1lBQzlCLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7Z0JBQ2pELE9BQU8sQ0FDTCxJQUFJLEtBQUssUUFBUSxDQUFDLElBQUk7b0JBQ3RCLEtBQUssS0FBSyxRQUFRLENBQUMsS0FBSztvQkFDeEIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUMvQyxDQUFDO1lBQ0osQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLFNBQVMsRUFBRTtnQkFDYixTQUFTLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQzthQUNuQztTQUNGO1FBRUQsT0FBTyxTQUFTLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsVUFBVSxDQUFDLElBQUk7UUFDYixNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzVDLDREQUE0RDtRQUM1RCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbEIsT0FBTyxNQUFNLENBQUMsZ0JBQWdCLENBQzVCLE1BQU0sQ0FBQyxPQUFPLEVBQUU7WUFDZCxRQUFRLEVBQUcsT0FBZSxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsS0FBSztZQUNoRCxPQUFPLEVBQUUsSUFBSTtZQUNiLE1BQU0sQ0FBQyxJQUFJO2dCQUNULElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxTQUFTLEVBQUU7b0JBQzlCLHlEQUF5RDtvQkFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDbkIseUNBQXlDO29CQUN6QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztpQkFDckI7Z0JBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2YsQ0FBQztZQUNELFFBQVEsQ0FBQyxTQUFTO2dCQUNoQixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUN2QyxDQUFDO1NBQ0YsQ0FBQyxFQUNGO1lBQ0UsS0FBSyxFQUFFO2dCQUNMLEdBQUc7b0JBQ0QsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztnQkFDN0IsQ0FBQztnQkFDRCxHQUFHLENBQUMsSUFBSTtvQkFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDdkIsQ0FBQzthQUNGO1lBQ0QsSUFBSSxFQUFFO2dCQUNKLEdBQUc7b0JBQ0QsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztnQkFDN0IsQ0FBQztnQkFDRCxHQUFHLENBQUMsSUFBSTtvQkFDTixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDdkIsQ0FBQzthQUNGO1lBQ0QsSUFBSSxFQUFFO2dCQUNKLEdBQUc7b0JBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7Z0JBQ3RCLENBQUM7Z0JBQ0QsR0FBRyxDQUFDLElBQUk7b0JBQ04sSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQztnQkFDdEIsQ0FBQzthQUNGO1NBQ0YsQ0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmF2aWdhdG9yTm9kZVJvb3QsIE5hdmlnYXRvck5vZGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IGFzc2lnbiB9IGZyb20gJ2xvZGFzaC1lcyc7XG5cbmV4cG9ydCBjbGFzcyBOYXZpZ2F0b3JOb2RlUm9vdExlZ2FjeSBleHRlbmRzIE5hdmlnYXRvck5vZGVSb290IHtcbiAgYWRkUm9vdChub2RlRGF0YSk6IE5hdmlnYXRvck5vZGUge1xuICAgIGxldCBkdXBsaWNhdGU7XG4gICAgaWYgKG5vZGVEYXRhLnBhdGggPT09ICcnKSB7XG4gICAgICBub2RlRGF0YS5wYXRoID0gJy8nO1xuICAgIH1cbiAgICBub2RlRGF0YS5sYWJlbCA9IG5vZGVEYXRhLm5hbWU7XG4gICAgaWYgKHR5cGVvZiBub2RlRGF0YS5wYXJlbnQgPT09ICdvYmplY3QnKSB7XG4gICAgICBub2RlRGF0YS5wYXJlbnQubGFiZWwgPSBub2RlRGF0YS5wYXJlbnQubmFtZTtcbiAgICB9XG5cbiAgICBpZiAobm9kZURhdGEucHJldmVudER1cGxpY2F0ZXMpIHtcbiAgICAgIGR1cGxpY2F0ZSA9IHRoaXMuZmluZCgoeyBwYXRoLCBwYXJlbnRzLCBsYWJlbCB9KSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgcGF0aCA9PT0gbm9kZURhdGEucGF0aCAmJlxuICAgICAgICAgIGxhYmVsID09PSBub2RlRGF0YS5sYWJlbCAmJlxuICAgICAgICAgIHBhcmVudHMuc29tZShwID0+IHAubGFiZWwgPT09IG5vZGVEYXRhLnBhcmVudClcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgICAgaWYgKGR1cGxpY2F0ZSkge1xuICAgICAgICBkdXBsaWNhdGUucm91dGVyTGlua0V4YWN0ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGR1cGxpY2F0ZSB8fCBzdXBlci5hZGRSb290KG5vZGVEYXRhKTtcbiAgfVxuXG4gIGNyZWF0ZU5vZGUobm9kZSkge1xuICAgIGNvbnN0IG5ld05vZGUgPSBzdXBlci5jcmVhdGVOb2RlKG5vZGUpO1xuICAgIGNvbnN0IHVwZGF0ZSA9IG5ld05vZGUudXBkYXRlLmJpbmQobmV3Tm9kZSk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby10aGlzLWFsaWFzXG4gICAgY29uc3Qgcm9vdCA9IHRoaXM7XG4gICAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFxuICAgICAgYXNzaWduKG5ld05vZGUsIHtcbiAgICAgICAgcmVhbE5hbWU6IChuZXdOb2RlIGFzIGFueSkubmFtZSB8fCBuZXdOb2RlLmxhYmVsLFxuICAgICAgICBfcGFyZW50OiB0cnVlLCAvLyBqdXN0IHVzZSBpdCB0byBkZXRlY3QgaWYgaXQgaGFzIGJlZW4gZGVsZXRlZFxuICAgICAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICAgIGlmICh0aGlzLl9wYXJlbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gX3BhcmVudCB3YXMgZGVsZXRlZCBzb21lbmUgaW5zdGVhZCB0byBwdXQgdGhpcyBpbiByb290XG4gICAgICAgICAgICByb290LmFkZFJvb3QodGhpcyk7XG4gICAgICAgICAgICAvLyBwdXQgaXQgYmFjayBzbyBpdCBjYW4gYmUgZGVsZXRlZCBhZ2FpblxuICAgICAgICAgICAgdGhpcy5fcGFyZW50ID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdXBkYXRlKGRhdGEpO1xuICAgICAgICB9LFxuICAgICAgICBhZGRDaGlsZChub2RlQ2hpbGQpIHtcbiAgICAgICAgICB0aGlzLmFkZChyb290LmNyZWF0ZU5vZGUobm9kZUNoaWxkKSk7XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAge1xuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlYWxOYW1lIHx8ICcnO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc2V0KG5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMucmVhbE5hbWUgPSBuYW1lO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbmFtZToge1xuICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlYWxOYW1lIHx8ICcnO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc2V0KG5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMucmVhbE5hbWUgPSBuYW1lO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2hvdzoge1xuICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiAhdGhpcy5oaWRkZW47XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZXQoc2hvdykge1xuICAgICAgICAgICAgdGhpcy5oaWRkZW4gPSAhc2hvdztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9XG59XG4iXX0=