import { Component, ElementRef } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "../datapoint-selector.component";
export class DatapointSelectorModalComponent {
    constructor(bsModal, elementRef) {
        this.bsModal = bsModal;
        this.elementRef = elementRef;
        this.allowChangingContext = true;
        this.allowSearch = true;
        this.allowDatapointsFromMultipleAssets = true;
        this.selectedDatapoints = new Array();
        this.title = gettext('Data point selector');
        this.saveButtonLabel = gettext('Add data points');
        this.guessDatapointUnit = true;
        this.defaultActiveState = true;
        this.finishWithFirstSelection = false;
        this.ignoreDatapointTemplates = false;
        this.assetSelectorConfig = {};
        this.result = new Promise((resolve, reject) => {
            this.save = resolve;
            this.cancel = reject;
        });
    }
    ngOnInit() {
        this.applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel();
    }
    saveChanges() {
        this.bsModal.hide();
        this.save(this.selectedDatapoints);
    }
    close() {
        this.bsModal.hide();
        this.cancel();
    }
    selectionChange(selection) {
        this.selectedDatapoints = selection;
        if (this.finishWithFirstSelection) {
            this.saveChanges();
        }
    }
    /**
     * changes the z-index of the modal, to make sure this modal is on top.
     * required as angularJS modals are placing them selves on top via adjusting z-index.
     * while angular modals use the order within the dom for this..
     */
    applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel() {
        const modalContainer = get(this.elementRef, 'nativeElement.parentElement.parentElement.parentElement');
        modalContainer.style.zIndex = '1060';
    }
}
DatapointSelectorModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointSelectorModalComponent, deps: [{ token: i1.BsModalRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
DatapointSelectorModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: DatapointSelectorModalComponent, selector: "c8y-datapoint-selector-modal", ngImport: i0, template: "<div class=\"modal-header separator\">\n  <h4 id=\"modal-title\" class=\"text-medium\">{{ title | translate }}</h4>\n</div>\n<div class=\"modal-inner-scroll modal-inner-scroll--fixed\" id=\"modal-body\">\n  <c8y-datapoint-selector\n    [contextAsset]=\"contextAsset\"\n    [guessDatapointUnit]=\"guessDatapointUnit\"\n    [allowDatapointsFromMultipleAssets]=\"allowDatapointsFromMultipleAssets\"\n    [allowChangingContext]=\"allowChangingContext\"\n    [defaultActiveState]=\"defaultActiveState\"\n    [allowSearch]=\"allowSearch\"\n    [hideSelection]=\"finishWithFirstSelection\"\n    [ignoreDatapointTemplates]=\"ignoreDatapointTemplates\"\n    [ngModel]=\"selectedDatapoints\"\n    (ngModelChange)=\"selectionChange($event)\"\n  ></c8y-datapoint-selector>\n</div>\n<div class=\"modal-footer\">\n  <button\n    type=\"button\"\n    [title]=\"'Cancel' | translate\"\n    class=\"btn btn-default\"\n    (click)=\"close()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    [title]=\"saveButtonLabel | translate\"\n    class=\"btn btn-primary\"\n    [disabled]=\"!this.selectedDatapoints?.length\"\n    (click)=\"saveChanges()\"\n    *ngIf=\"!finishWithFirstSelection\"\n  >\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n", dependencies: [{ kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i5.DatapointSelectorComponent, selector: "c8y-datapoint-selector", inputs: ["contextAsset", "allowChangingContext", "allowDatapointsFromMultipleAssets", "defaultActiveState", "ignoreDatapointTemplates", "guessDatapointUnit", "allowSearch", "hideSelection"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointSelectorModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-datapoint-selector-modal', template: "<div class=\"modal-header separator\">\n  <h4 id=\"modal-title\" class=\"text-medium\">{{ title | translate }}</h4>\n</div>\n<div class=\"modal-inner-scroll modal-inner-scroll--fixed\" id=\"modal-body\">\n  <c8y-datapoint-selector\n    [contextAsset]=\"contextAsset\"\n    [guessDatapointUnit]=\"guessDatapointUnit\"\n    [allowDatapointsFromMultipleAssets]=\"allowDatapointsFromMultipleAssets\"\n    [allowChangingContext]=\"allowChangingContext\"\n    [defaultActiveState]=\"defaultActiveState\"\n    [allowSearch]=\"allowSearch\"\n    [hideSelection]=\"finishWithFirstSelection\"\n    [ignoreDatapointTemplates]=\"ignoreDatapointTemplates\"\n    [ngModel]=\"selectedDatapoints\"\n    (ngModelChange)=\"selectionChange($event)\"\n  ></c8y-datapoint-selector>\n</div>\n<div class=\"modal-footer\">\n  <button\n    type=\"button\"\n    [title]=\"'Cancel' | translate\"\n    class=\"btn btn-default\"\n    (click)=\"close()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    [title]=\"saveButtonLabel | translate\"\n    class=\"btn btn-primary\"\n    [disabled]=\"!this.selectedDatapoints?.length\"\n    (click)=\"saveChanges()\"\n    *ngIf=\"!finishWithFirstSelection\"\n  >\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalRef }, { type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RhdGFwb2ludC1zZWxlY3Rvci9kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwvZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2RhdGFwb2ludC1zZWxlY3Rvci9kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwvZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7OztBQVVqRCxNQUFNLE9BQU8sK0JBQStCO0lBcUIxQyxZQUFvQixPQUFtQixFQUFVLFVBQXNCO1FBQW5ELFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBbkJ2RSx5QkFBb0IsR0FBRyxJQUFJLENBQUM7UUFDNUIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFDbkIsc0NBQWlDLEdBQUcsSUFBSSxDQUFDO1FBQ3pDLHVCQUFrQixHQUFHLElBQUksS0FBSyxFQUFjLENBQUM7UUFDN0MsVUFBSyxHQUFXLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQy9DLG9CQUFlLEdBQVcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDckQsdUJBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQzFCLHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUMxQiw2QkFBd0IsR0FBRyxLQUFLLENBQUM7UUFDakMsNkJBQXdCLEdBQUcsS0FBSyxDQUFDO1FBQ2pDLHdCQUFtQixHQUF3RCxFQUFFLENBQUM7UUFDckUsV0FBTSxHQUEwQixJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUN2RSxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztZQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztJQUt1RSxDQUFDO0lBRTNFLFFBQVE7UUFDTixJQUFJLENBQUMsNERBQTRELEVBQUUsQ0FBQztJQUN0RSxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxlQUFlLENBQUMsU0FBNEI7UUFDMUMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLFNBQVMsQ0FBQztRQUNwQyxJQUFJLElBQUksQ0FBQyx3QkFBd0IsRUFBRTtZQUNqQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLDREQUE0RDtRQUNsRSxNQUFNLGNBQWMsR0FBZ0IsR0FBRyxDQUNyQyxJQUFJLENBQUMsVUFBVSxFQUNmLHlEQUF5RCxDQUMxRCxDQUFDO1FBQ0YsY0FBYyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZDLENBQUM7OzRIQXZEVSwrQkFBK0I7Z0hBQS9CLCtCQUErQixvRUNkNUMsa3VDQXFDQTsyRkR2QmEsK0JBQStCO2tCQUozQyxTQUFTOytCQUNFLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJSWRlbnRpZmllZCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQge1xuICBEYXRhcG9pbnRTZWxlY3Rvck1vZGFsQXNzZXRTZWxlY3Rvck9wdGlvbnMsXG4gIEtQSURldGFpbHNcbn0gZnJvbSAnLi4vZGF0YXBvaW50LXNlbGVjdGlvbi5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXRhcG9pbnRTZWxlY3Rvck1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29udGV4dEFzc2V0OiBJSWRlbnRpZmllZDtcbiAgYWxsb3dDaGFuZ2luZ0NvbnRleHQgPSB0cnVlO1xuICBhbGxvd1NlYXJjaCA9IHRydWU7XG4gIGFsbG93RGF0YXBvaW50c0Zyb21NdWx0aXBsZUFzc2V0cyA9IHRydWU7XG4gIHNlbGVjdGVkRGF0YXBvaW50cyA9IG5ldyBBcnJheTxLUElEZXRhaWxzPigpO1xuICB0aXRsZTogc3RyaW5nID0gZ2V0dGV4dCgnRGF0YSBwb2ludCBzZWxlY3RvcicpO1xuICBzYXZlQnV0dG9uTGFiZWw6IHN0cmluZyA9IGdldHRleHQoJ0FkZCBkYXRhIHBvaW50cycpO1xuICBndWVzc0RhdGFwb2ludFVuaXQgPSB0cnVlO1xuICBkZWZhdWx0QWN0aXZlU3RhdGUgPSB0cnVlO1xuICBmaW5pc2hXaXRoRmlyc3RTZWxlY3Rpb24gPSBmYWxzZTtcbiAgaWdub3JlRGF0YXBvaW50VGVtcGxhdGVzID0gZmFsc2U7XG4gIGFzc2V0U2VsZWN0b3JDb25maWc6IFBhcnRpYWw8RGF0YXBvaW50U2VsZWN0b3JNb2RhbEFzc2V0U2VsZWN0b3JPcHRpb25zPiA9IHt9O1xuICByZWFkb25seSByZXN1bHQ6IFByb21pc2U8S1BJRGV0YWlsc1tdPiA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0aGlzLnNhdmUgPSByZXNvbHZlO1xuICAgIHRoaXMuY2FuY2VsID0gcmVqZWN0O1xuICB9KTtcblxuICBwcml2YXRlIHNhdmU6ICh2YWx1ZTogS1BJRGV0YWlsc1tdKSA9PiB2b2lkO1xuICBwcml2YXRlIGNhbmNlbDogKHJlYXNvbj86IGFueSkgPT4gdm9pZDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGJzTW9kYWw6IEJzTW9kYWxSZWYsIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmFwcGx5V29ya2Fyb3VuZEZvckFuZ3VsYXJKU01vZGFsc1RoYXRNaWdodEJlT3BlbmVkSW5QYXJhbGxlbCgpO1xuICB9XG5cbiAgc2F2ZUNoYW5nZXMoKTogdm9pZCB7XG4gICAgdGhpcy5ic01vZGFsLmhpZGUoKTtcbiAgICB0aGlzLnNhdmUodGhpcy5zZWxlY3RlZERhdGFwb2ludHMpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5ic01vZGFsLmhpZGUoKTtcbiAgICB0aGlzLmNhbmNlbCgpO1xuICB9XG5cbiAgc2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbjogQXJyYXk8S1BJRGV0YWlscz4pIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0YXBvaW50cyA9IHNlbGVjdGlvbjtcbiAgICBpZiAodGhpcy5maW5pc2hXaXRoRmlyc3RTZWxlY3Rpb24pIHtcbiAgICAgIHRoaXMuc2F2ZUNoYW5nZXMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogY2hhbmdlcyB0aGUgei1pbmRleCBvZiB0aGUgbW9kYWwsIHRvIG1ha2Ugc3VyZSB0aGlzIG1vZGFsIGlzIG9uIHRvcC5cbiAgICogcmVxdWlyZWQgYXMgYW5ndWxhckpTIG1vZGFscyBhcmUgcGxhY2luZyB0aGVtIHNlbHZlcyBvbiB0b3AgdmlhIGFkanVzdGluZyB6LWluZGV4LlxuICAgKiB3aGlsZSBhbmd1bGFyIG1vZGFscyB1c2UgdGhlIG9yZGVyIHdpdGhpbiB0aGUgZG9tIGZvciB0aGlzLi5cbiAgICovXG4gIHByaXZhdGUgYXBwbHlXb3JrYXJvdW5kRm9yQW5ndWxhckpTTW9kYWxzVGhhdE1pZ2h0QmVPcGVuZWRJblBhcmFsbGVsKCkge1xuICAgIGNvbnN0IG1vZGFsQ29udGFpbmVyOiBIVE1MRWxlbWVudCA9IGdldChcbiAgICAgIHRoaXMuZWxlbWVudFJlZixcbiAgICAgICduYXRpdmVFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50J1xuICAgICk7XG4gICAgbW9kYWxDb250YWluZXIuc3R5bGUuekluZGV4ID0gJzEwNjAnO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyIHNlcGFyYXRvclwiPlxuICA8aDQgaWQ9XCJtb2RhbC10aXRsZVwiIGNsYXNzPVwidGV4dC1tZWRpdW1cIj57eyB0aXRsZSB8IHRyYW5zbGF0ZSB9fTwvaDQ+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJtb2RhbC1pbm5lci1zY3JvbGwgbW9kYWwtaW5uZXItc2Nyb2xsLS1maXhlZFwiIGlkPVwibW9kYWwtYm9keVwiPlxuICA8Yzh5LWRhdGFwb2ludC1zZWxlY3RvclxuICAgIFtjb250ZXh0QXNzZXRdPVwiY29udGV4dEFzc2V0XCJcbiAgICBbZ3Vlc3NEYXRhcG9pbnRVbml0XT1cImd1ZXNzRGF0YXBvaW50VW5pdFwiXG4gICAgW2FsbG93RGF0YXBvaW50c0Zyb21NdWx0aXBsZUFzc2V0c109XCJhbGxvd0RhdGFwb2ludHNGcm9tTXVsdGlwbGVBc3NldHNcIlxuICAgIFthbGxvd0NoYW5naW5nQ29udGV4dF09XCJhbGxvd0NoYW5naW5nQ29udGV4dFwiXG4gICAgW2RlZmF1bHRBY3RpdmVTdGF0ZV09XCJkZWZhdWx0QWN0aXZlU3RhdGVcIlxuICAgIFthbGxvd1NlYXJjaF09XCJhbGxvd1NlYXJjaFwiXG4gICAgW2hpZGVTZWxlY3Rpb25dPVwiZmluaXNoV2l0aEZpcnN0U2VsZWN0aW9uXCJcbiAgICBbaWdub3JlRGF0YXBvaW50VGVtcGxhdGVzXT1cImlnbm9yZURhdGFwb2ludFRlbXBsYXRlc1wiXG4gICAgW25nTW9kZWxdPVwic2VsZWN0ZWREYXRhcG9pbnRzXCJcbiAgICAobmdNb2RlbENoYW5nZSk9XCJzZWxlY3Rpb25DaGFuZ2UoJGV2ZW50KVwiXG4gID48L2M4eS1kYXRhcG9pbnQtc2VsZWN0b3I+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cbiAgPGJ1dHRvblxuICAgIHR5cGU9XCJidXR0b25cIlxuICAgIFt0aXRsZV09XCInQ2FuY2VsJyB8IHRyYW5zbGF0ZVwiXG4gICAgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIlxuICAgIChjbGljayk9XCJjbG9zZSgpXCJcbiAgICB0cmFuc2xhdGVcbiAgPlxuICAgIENhbmNlbFxuICA8L2J1dHRvbj5cbiAgPGJ1dHRvblxuICAgIFt0aXRsZV09XCJzYXZlQnV0dG9uTGFiZWwgfCB0cmFuc2xhdGVcIlxuICAgIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCJcbiAgICBbZGlzYWJsZWRdPVwiIXRoaXMuc2VsZWN0ZWREYXRhcG9pbnRzPy5sZW5ndGhcIlxuICAgIChjbGljayk9XCJzYXZlQ2hhbmdlcygpXCJcbiAgICAqbmdJZj1cIiFmaW5pc2hXaXRoRmlyc3RTZWxlY3Rpb25cIlxuICA+XG4gICAge3sgc2F2ZUJ1dHRvbkxhYmVsIHwgdHJhbnNsYXRlIH19XG4gIDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=