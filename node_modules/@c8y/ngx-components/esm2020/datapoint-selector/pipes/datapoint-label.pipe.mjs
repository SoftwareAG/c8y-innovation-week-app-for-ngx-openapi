import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class DatapointLabelPipe {
    transform(datapoint, options = { includeDevice: false, doNotUseLabel: false }) {
        let label = '';
        try {
            if (!options?.doNotUseLabel && datapoint.label) {
                label = datapoint.label;
            }
            else {
                label = `${datapoint.fragment} → ${datapoint.series}`;
            }
            if (options?.includeDevice && (datapoint.__target?.name || datapoint.__target?.id)) {
                label += ` (${datapoint.__target?.name || datapoint.__target?.id})`;
            }
        }
        catch (e) {
            // nothing to do
        }
        return label;
    }
}
DatapointLabelPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointLabelPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DatapointLabelPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DatapointLabelPipe, name: "datapointLabel" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointLabelPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'datapointLabel'
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LWxhYmVsLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9kYXRhcG9pbnQtc2VsZWN0b3IvcGlwZXMvZGF0YXBvaW50LWxhYmVsLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7O0FBTXBELE1BQU0sT0FBTyxrQkFBa0I7SUFDN0IsU0FBUyxDQUNQLFNBQXFCLEVBQ3JCLE9BQU8sR0FBRyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRTtRQUV4RCxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJO1lBQ0YsSUFBSSxDQUFDLE9BQU8sRUFBRSxhQUFhLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRTtnQkFDOUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUM7YUFDekI7aUJBQU07Z0JBQ0wsS0FBSyxHQUFHLEdBQUcsU0FBUyxDQUFDLFFBQVEsTUFBTSxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDdkQ7WUFFRCxJQUFJLE9BQU8sRUFBRSxhQUFhLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFO2dCQUNsRixLQUFLLElBQUksS0FBSyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsR0FBRyxDQUFDO2FBQ3JFO1NBQ0Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLGdCQUFnQjtTQUNqQjtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7K0dBckJVLGtCQUFrQjs2R0FBbEIsa0JBQWtCOzJGQUFsQixrQkFBa0I7a0JBSDlCLElBQUk7bUJBQUM7b0JBQ0osSUFBSSxFQUFFLGdCQUFnQjtpQkFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBLUElEZXRhaWxzIH0gZnJvbSAnLi4vZGF0YXBvaW50LXNlbGVjdGlvbi5tb2RlbCc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2RhdGFwb2ludExhYmVsJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXRhcG9pbnRMYWJlbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKFxuICAgIGRhdGFwb2ludDogS1BJRGV0YWlscyxcbiAgICBvcHRpb25zID0geyBpbmNsdWRlRGV2aWNlOiBmYWxzZSwgZG9Ob3RVc2VMYWJlbDogZmFsc2UgfVxuICApOiBzdHJpbmcge1xuICAgIGxldCBsYWJlbCA9ICcnO1xuICAgIHRyeSB7XG4gICAgICBpZiAoIW9wdGlvbnM/LmRvTm90VXNlTGFiZWwgJiYgZGF0YXBvaW50LmxhYmVsKSB7XG4gICAgICAgIGxhYmVsID0gZGF0YXBvaW50LmxhYmVsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGFiZWwgPSBgJHtkYXRhcG9pbnQuZnJhZ21lbnR9IOKGkiAke2RhdGFwb2ludC5zZXJpZXN9YDtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnM/LmluY2x1ZGVEZXZpY2UgJiYgKGRhdGFwb2ludC5fX3RhcmdldD8ubmFtZSB8fCBkYXRhcG9pbnQuX190YXJnZXQ/LmlkKSkge1xuICAgICAgICBsYWJlbCArPSBgICgke2RhdGFwb2ludC5fX3RhcmdldD8ubmFtZSB8fCBkYXRhcG9pbnQuX190YXJnZXQ/LmlkfSlgO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIG5vdGhpbmcgdG8gZG9cbiAgICB9XG5cbiAgICByZXR1cm4gbGFiZWw7XG4gIH1cbn1cbiJdfQ==