import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { gettext } from '@c8y/ngx-components';
import { BehaviorSubject, combineLatest, from } from 'rxjs';
import { debounceTime, distinctUntilChanged, map, shareReplay, switchMap, tap } from 'rxjs/operators';
import { DatapointLibraryService } from './datapoint-library.service';
import * as i0 from "@angular/core";
import * as i1 from "./datapoint-library.service";
import * as i2 from "@c8y/ngx-components/assets-navigator";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "./datapoint-selector-list-item/datapoint-selector-list-item.component";
import * as i7 from "./pipes/includes-datapoint.pipe";
import * as i8 from "./pipes/datapoint-label.pipe";
export class DatapointSelectorComponent {
    constructor(datapointService) {
        this.datapointService = datapointService;
        this.allowChangingContext = true;
        this.allowDatapointsFromMultipleAssets = true;
        this.selectedDatapoints = new Array();
        this.defaultActiveState = true;
        this.ignoreDatapointTemplates = false;
        this.guessDatapointUnit = true;
        this.allowSearch = true;
        this.hideSelection = false;
        this.searchString = '';
        this.maxNumberOfDatapoints = 50;
        this.loadingDatapoints = false;
        this.assetSelection = new BehaviorSubject(null);
        this.emptyStateSubtitleWhenNoMatchingDataPoints = gettext('Try another search term.');
        this.emptyStateSubtitleWhenNoDataPointsInAsset = gettext('Select an asset with data points from the list.');
        this.searchString$ = new BehaviorSubject('');
        this.touched = false;
    }
    ngOnInit() {
        this.setupObservables();
        if (!this.ignoreDatapointTemplates) {
            this.datapointLibraryEntries = from(this.datapointService.getFirstDatapointLibraryPage());
        }
        if (this.contextAsset) {
            this.selectionChanged(this.contextAsset);
        }
    }
    writeValue(obj) {
        this.selectedDatapoints = obj;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    datapointAdded(dp) {
        this.markAsTouched();
        dp.__active = this.defaultActiveState;
        if (this.guessDatapointUnit && !dp.unit) {
            this.datapointService.guessUnitOfDatapoint(dp.fragment, dp.series, dp.__target).then(unit => {
                dp.unit = unit;
            });
        }
        this.selectedDatapoints = [...this.selectedDatapoints, dp];
        this.emitCurrentSelection();
    }
    datapointRemoved(dp) {
        this.markAsTouched();
        this.selectedDatapoints = this.selectedDatapoints.filter(tmp => tmp.fragment !== dp.fragment ||
            tmp.series !== dp.series ||
            tmp.__target?.id !== dp.__target?.id);
        this.emitCurrentSelection();
    }
    selectionChanged(evt) {
        if (Array.isArray(evt) && evt.length !== 0) {
            return this.selectAsset(evt[0]);
        }
        if (!Array.isArray(evt) && evt.items) {
            return this.selectionChanged(evt.items);
        }
        if (!Array.isArray(evt) && evt.id) {
            return this.selectAsset(evt);
        }
        // reset selection
        this.assetSelection.next(null);
    }
    trackByFn(_index, item) {
        return `${item.fragment}-${item.__target?.id}-${item.series}`;
    }
    searchStringChanged(newValue = '') {
        this.searchString$.next(newValue);
        this.searchString = newValue;
    }
    setupObservables() {
        this.datapoints$ = this.assetSelection.pipe(tap(() => {
            this.loadingDatapoints = true;
        }), switchMap(asset => asset?.id
            ? this.datapointService.getDatapointsOfAsset(asset, this.ignoreDatapointTemplates)
            : []), tap(() => (this.loadingDatapoints = false)), shareReplay(1));
        this.searchStringChanges$ = this.searchString$.pipe(distinctUntilChanged(), debounceTime(500), shareReplay(1));
        this.filteredDatapoints$ = combineLatest([this.searchStringChanges$, this.datapoints$]).pipe(map(([searchString, datapoints]) => {
            if (!searchString) {
                return datapoints;
            }
            const lowerCaseSearchString = searchString.toLowerCase();
            return datapoints.filter(datapoint => this.includesSearchString(datapoint, lowerCaseSearchString));
        }), map(filtered => filtered.slice(0, this.maxNumberOfDatapoints)));
    }
    selectAsset(asset) {
        this.assetSelection.next(asset);
        this.searchStringChanged();
        if (!this.allowDatapointsFromMultipleAssets) {
            this.clearSelection();
        }
    }
    clearSelection() {
        this.selectedDatapoints = [];
        this.emitCurrentSelection();
    }
    emitCurrentSelection() {
        this.onChange(this.selectedDatapoints);
    }
    markAsTouched() {
        if (!this.touched) {
            this.onTouched();
            this.touched = true;
        }
    }
    includesSearchString(datapoint, lowerCaseSearchString) {
        const label = datapoint.label?.toLowerCase();
        if (label && label.includes(lowerCaseSearchString)) {
            return true;
        }
        const fragment = datapoint.fragment?.toLowerCase();
        if (fragment && fragment.includes(lowerCaseSearchString)) {
            return true;
        }
        const series = datapoint.series?.toLowerCase();
        if (series && series.includes(lowerCaseSearchString)) {
            return true;
        }
        return false;
    }
}
DatapointSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointSelectorComponent, deps: [{ token: i1.DatapointLibraryService }], target: i0.ɵɵFactoryTarget.Component });
DatapointSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: DatapointSelectorComponent, selector: "c8y-datapoint-selector", inputs: { contextAsset: "contextAsset", allowChangingContext: "allowChangingContext", allowDatapointsFromMultipleAssets: "allowDatapointsFromMultipleAssets", defaultActiveState: "defaultActiveState", ignoreDatapointTemplates: "ignoreDatapointTemplates", guessDatapointUnit: "guessDatapointUnit", allowSearch: "allowSearch", hideSelection: "hideSelection" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => DatapointSelectorComponent)
        }
    ], ngImport: i0, template: "<div\n  class=\"d-grid grid__row--1 fit-h\"\n  [ngClass]=\"{\n    'grid__col--3-6-3--md': allowChangingContext && !hideSelection,\n    'grid__col--8-4--md': !allowChangingContext && !hideSelection,\n    'grid__col--4-8--md': allowChangingContext && hideSelection\n  }\"\n>\n  <div class=\"d-flex d-col p-relative bg-level-1\" *ngIf=\"allowChangingContext\">\n    <c8y-asset-selector-miller\n      class=\"d-contents\"\n      [(ngModel)]=\"contextAsset\"\n      [asset]=\"contextAsset\"\n      (onSelected)=\"selectionChanged($event)\"\n      [container]=\"''\"\n      [config]=\"{\n        view: 'miller',\n        groupsSelectable: true,\n        columnHeaders: true,\n        showChildDevices: true,\n        showUnassignedDevices: true,\n        singleColumn: true,\n        search: allowSearch,\n        showFilter: true\n      }\"\n    ></c8y-asset-selector-miller>\n  </div>\n  <!-- center column -->\n  <div class=\"inner-scroll bg-component\">\n    <ng-template #noDeviceEmptyState>\n      <div class=\"p-16\">\n        <c8y-ui-empty-state\n          [icon]=\"'c8y-data-points'\"\n          [title]=\"'No data points to display.' | translate\"\n          [subtitle]=\"'Select an asset from the list.' | translate\"\n          [horizontal]=\"true\"\n        ></c8y-ui-empty-state>\n      </div>\n    </ng-template>\n    <ng-template #loadingData>\n      <div class=\"p-16 text-center\">\n        <c8y-loading></c8y-loading>\n      </div>\n    </ng-template>\n    <div class=\"bg-inherit\" *ngIf=\"assetSelection | async as asset; else noDeviceEmptyState\">\n      <div class=\"p-l-16 p-r-16 p-t-8 p-b-8 sticky-top bg-inherit separator-bottom\">\n        <p class=\"text-medium text-truncate\" [title]=\"'Available data points' | translate\">\n          {{ 'Available data points' | translate }}\n        </p>\n        <div class=\"input-group input-group-search m-t-4\" id=\"search\" *ngIf=\"!loadingDatapoints\">\n          <input\n            class=\"form-control\"\n            type=\"search\"\n            placeholder=\"Search\u2026\"\n            [ngModel]=\"searchString\"\n            (ngModelChange)=\"searchStringChanged($event)\"\n          />\n          <span class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"!searchString; else clearSearchString\"></i>\n            <ng-template #clearSearchString>\n              <i class=\"text-muted\" c8yIcon=\"times\" (click)=\"searchStringChanged()\"></i>\n            </ng-template>\n          </span>\n        </div>\n      </div>\n      <ng-container *ngIf=\"filteredDatapoints$ | async as filteredDatapoints; else loadingData\">\n        <ng-container *ngIf=\"!loadingDatapoints; else loadingData\">\n          <ng-container *ngIf=\"datapoints$ | async as datapoints\">\n            <div class=\"p-16\" *ngIf=\"!filteredDatapoints.length\">\n              <c8y-ui-empty-state\n                [icon]=\"'c8y-data-points'\"\n                [title]=\"'No data points to display.' | translate\"\n                [subtitle]=\"\n                  datapoints.length\n                    ? (emptyStateSubtitleWhenNoMatchingDataPoints | translate)\n                    : (emptyStateSubtitleWhenNoDataPointsInAsset | translate)\n                \"\n                [horizontal]=\"true\"\n              ></c8y-ui-empty-state>\n            </div>\n\n            <c8y-list-group>\n              <c8y-list-item\n                class=\"sticky-top\"\n                style=\"top: 72px\"\n                *ngIf=\"\n                  datapoints.length > maxNumberOfDatapoints &&\n                  filteredDatapoints.length >= maxNumberOfDatapoints\n                \"\n              >\n                <div class=\"alert alert-warning m-b-0\">\n                  {{\n                    'Due to the large number, only a subset of data points is displayed. Use search to narrow down the number of results.'\n                      | translate\n                  }}\n                </div>\n              </c8y-list-item>\n              <c8y-datapoint-selector-list-item\n                class=\"d-contents\"\n                [ngModel]=\"dp\"\n                [isSelected]=\"selectedDatapoints | includesDatapoint: dp\"\n                [datapointLibraryEntries]=\"datapointLibraryEntries\"\n                [disableTypeaheadIfSelected]=\"true\"\n                (added)=\"datapointAdded($event)\"\n                (removed)=\"datapointRemoved($event)\"\n                [highlightText]=\"searchStringChanges$ | async\"\n                *ngFor=\"let dp of filteredDatapoints; trackBy: trackByFn\"\n              ></c8y-datapoint-selector-list-item>\n            </c8y-list-group>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <!-- last column  -->\n  <div class=\"inner-scroll bg-level-1\" *ngIf=\"!hideSelection\">\n    <p\n      class=\"text-medium p-l-16 p-r-16 p-t-8 p-b-8 separator-bottom sticky-top text-truncate\"\n      [title]=\"'Selected data points' | translate\"\n      translate\n    >\n      Selected data points\n    </p>\n    <div\n      class=\"d-flex flex-wrap gap-8 p-l-16 p-r-16 p-t-8 p-b-16\"\n      *ngIf=\"selectedDatapoints?.length\"\n    >\n      <div class=\"c8y-datapoint-pill\" *ngFor=\"let selectedDp of selectedDatapoints\">\n        <button\n          class=\"c8y-datapoint-pill__btn\"\n          type=\"button\"\n          [title]=\"'Remove' | translate\"\n          (click)=\"datapointRemoved(selectedDp)\"\n        >\n          <i class=\"icon-14\" c8yIcon=\"remove\"></i>\n        </button>\n        <div\n          class=\"c8y-datapoint-pill__label\"\n          [title]=\"selectedDp | datapointLabel: { doNotUseLabel: true, includeDevice: true }\"\n        >\n          <i class=\"m-r-4 icon-14\" c8yIcon=\"circle\" [style.color]=\"selectedDp.color\"></i>\n          <span class=\"text-truncate\">\n            <span class=\"text-truncate\">{{ selectedDp | datapointLabel }}</span>\n            <small class=\"text-muted text-10\" *ngIf=\"selectedDp?.__target?.name\">\n              {{ selectedDp?.__target?.name }}\n            </small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"p-r-8\" *ngIf=\"!selectedDatapoints || !selectedDatapoints.length\">\n      <c8y-ui-empty-state\n        [icon]=\"'c8y-data-points'\"\n        [title]=\"'No data points selected.' | translate\"\n        [subtitle]=\"\n          'Select the asset, then on the available data points list, click on the plus button on the desired data point.'\n            | translate\n        \"\n        [horizontal]=\"true\"\n      ></c8y-ui-empty-state>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i2.MillerViewComponent, selector: "c8y-asset-selector-miller", inputs: ["config", "asset", "selectedDevice", "rootNode", "container"], outputs: ["onSelected", "onClearSelected"] }, { kind: "component", type: i3.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i3.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.LoadingComponent, selector: "c8y-loading" }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i3.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i6.DatapointSelectorListItemComponent, selector: "c8y-datapoint-selector-list-item", inputs: ["defaultFormOptions", "isSelected", "isCollapsed", "showAddRemoveButton", "editable", "showActiveToggle", "activeToggleDisabled", "showOptions", "datapointLibraryEntries", "actions", "optionToRemove", "hasUnlinkTemplateOption", "colorPickerDisabled", "disableTypeaheadIfSelected", "highlightText"], outputs: ["added", "removed"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i7.IncludesDatapointPipe, name: "includesDatapoint" }, { kind: "pipe", type: i8.DatapointLabelPipe, name: "datapointLabel" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DatapointSelectorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-datapoint-selector', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => DatapointSelectorComponent)
                        }
                    ], template: "<div\n  class=\"d-grid grid__row--1 fit-h\"\n  [ngClass]=\"{\n    'grid__col--3-6-3--md': allowChangingContext && !hideSelection,\n    'grid__col--8-4--md': !allowChangingContext && !hideSelection,\n    'grid__col--4-8--md': allowChangingContext && hideSelection\n  }\"\n>\n  <div class=\"d-flex d-col p-relative bg-level-1\" *ngIf=\"allowChangingContext\">\n    <c8y-asset-selector-miller\n      class=\"d-contents\"\n      [(ngModel)]=\"contextAsset\"\n      [asset]=\"contextAsset\"\n      (onSelected)=\"selectionChanged($event)\"\n      [container]=\"''\"\n      [config]=\"{\n        view: 'miller',\n        groupsSelectable: true,\n        columnHeaders: true,\n        showChildDevices: true,\n        showUnassignedDevices: true,\n        singleColumn: true,\n        search: allowSearch,\n        showFilter: true\n      }\"\n    ></c8y-asset-selector-miller>\n  </div>\n  <!-- center column -->\n  <div class=\"inner-scroll bg-component\">\n    <ng-template #noDeviceEmptyState>\n      <div class=\"p-16\">\n        <c8y-ui-empty-state\n          [icon]=\"'c8y-data-points'\"\n          [title]=\"'No data points to display.' | translate\"\n          [subtitle]=\"'Select an asset from the list.' | translate\"\n          [horizontal]=\"true\"\n        ></c8y-ui-empty-state>\n      </div>\n    </ng-template>\n    <ng-template #loadingData>\n      <div class=\"p-16 text-center\">\n        <c8y-loading></c8y-loading>\n      </div>\n    </ng-template>\n    <div class=\"bg-inherit\" *ngIf=\"assetSelection | async as asset; else noDeviceEmptyState\">\n      <div class=\"p-l-16 p-r-16 p-t-8 p-b-8 sticky-top bg-inherit separator-bottom\">\n        <p class=\"text-medium text-truncate\" [title]=\"'Available data points' | translate\">\n          {{ 'Available data points' | translate }}\n        </p>\n        <div class=\"input-group input-group-search m-t-4\" id=\"search\" *ngIf=\"!loadingDatapoints\">\n          <input\n            class=\"form-control\"\n            type=\"search\"\n            placeholder=\"Search\u2026\"\n            [ngModel]=\"searchString\"\n            (ngModelChange)=\"searchStringChanged($event)\"\n          />\n          <span class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"!searchString; else clearSearchString\"></i>\n            <ng-template #clearSearchString>\n              <i class=\"text-muted\" c8yIcon=\"times\" (click)=\"searchStringChanged()\"></i>\n            </ng-template>\n          </span>\n        </div>\n      </div>\n      <ng-container *ngIf=\"filteredDatapoints$ | async as filteredDatapoints; else loadingData\">\n        <ng-container *ngIf=\"!loadingDatapoints; else loadingData\">\n          <ng-container *ngIf=\"datapoints$ | async as datapoints\">\n            <div class=\"p-16\" *ngIf=\"!filteredDatapoints.length\">\n              <c8y-ui-empty-state\n                [icon]=\"'c8y-data-points'\"\n                [title]=\"'No data points to display.' | translate\"\n                [subtitle]=\"\n                  datapoints.length\n                    ? (emptyStateSubtitleWhenNoMatchingDataPoints | translate)\n                    : (emptyStateSubtitleWhenNoDataPointsInAsset | translate)\n                \"\n                [horizontal]=\"true\"\n              ></c8y-ui-empty-state>\n            </div>\n\n            <c8y-list-group>\n              <c8y-list-item\n                class=\"sticky-top\"\n                style=\"top: 72px\"\n                *ngIf=\"\n                  datapoints.length > maxNumberOfDatapoints &&\n                  filteredDatapoints.length >= maxNumberOfDatapoints\n                \"\n              >\n                <div class=\"alert alert-warning m-b-0\">\n                  {{\n                    'Due to the large number, only a subset of data points is displayed. Use search to narrow down the number of results.'\n                      | translate\n                  }}\n                </div>\n              </c8y-list-item>\n              <c8y-datapoint-selector-list-item\n                class=\"d-contents\"\n                [ngModel]=\"dp\"\n                [isSelected]=\"selectedDatapoints | includesDatapoint: dp\"\n                [datapointLibraryEntries]=\"datapointLibraryEntries\"\n                [disableTypeaheadIfSelected]=\"true\"\n                (added)=\"datapointAdded($event)\"\n                (removed)=\"datapointRemoved($event)\"\n                [highlightText]=\"searchStringChanges$ | async\"\n                *ngFor=\"let dp of filteredDatapoints; trackBy: trackByFn\"\n              ></c8y-datapoint-selector-list-item>\n            </c8y-list-group>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <!-- last column  -->\n  <div class=\"inner-scroll bg-level-1\" *ngIf=\"!hideSelection\">\n    <p\n      class=\"text-medium p-l-16 p-r-16 p-t-8 p-b-8 separator-bottom sticky-top text-truncate\"\n      [title]=\"'Selected data points' | translate\"\n      translate\n    >\n      Selected data points\n    </p>\n    <div\n      class=\"d-flex flex-wrap gap-8 p-l-16 p-r-16 p-t-8 p-b-16\"\n      *ngIf=\"selectedDatapoints?.length\"\n    >\n      <div class=\"c8y-datapoint-pill\" *ngFor=\"let selectedDp of selectedDatapoints\">\n        <button\n          class=\"c8y-datapoint-pill__btn\"\n          type=\"button\"\n          [title]=\"'Remove' | translate\"\n          (click)=\"datapointRemoved(selectedDp)\"\n        >\n          <i class=\"icon-14\" c8yIcon=\"remove\"></i>\n        </button>\n        <div\n          class=\"c8y-datapoint-pill__label\"\n          [title]=\"selectedDp | datapointLabel: { doNotUseLabel: true, includeDevice: true }\"\n        >\n          <i class=\"m-r-4 icon-14\" c8yIcon=\"circle\" [style.color]=\"selectedDp.color\"></i>\n          <span class=\"text-truncate\">\n            <span class=\"text-truncate\">{{ selectedDp | datapointLabel }}</span>\n            <small class=\"text-muted text-10\" *ngIf=\"selectedDp?.__target?.name\">\n              {{ selectedDp?.__target?.name }}\n            </small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"p-r-8\" *ngIf=\"!selectedDatapoints || !selectedDatapoints.length\">\n      <c8y-ui-empty-state\n        [icon]=\"'c8y-data-points'\"\n        [title]=\"'No data points selected.' | translate\"\n        [subtitle]=\"\n          'Select the asset, then on the available data points list, click on the plus button on the desired data point.'\n            | translate\n        \"\n        [horizontal]=\"true\"\n      ></c8y-ui-empty-state>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.DatapointLibraryService }]; }, propDecorators: { contextAsset: [{
                type: Input
            }], allowChangingContext: [{
                type: Input
            }], allowDatapointsFromMultipleAssets: [{
                type: Input
            }], defaultActiveState: [{
                type: Input
            }], ignoreDatapointTemplates: [{
                type: Input
            }], guessDatapointUnit: [{
                type: Input
            }], allowSearch: [{
                type: Input
            }], hideSelection: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,