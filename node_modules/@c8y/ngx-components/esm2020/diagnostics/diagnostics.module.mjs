import { DiagnosticsTabGuard } from './diagnostics-tab.guard';
import { ListGroupModule } from '@c8y/ngx-components';
import { RouterModule } from '@angular/router';
import { DiagnosticsService } from './diagnostics.service';
import { CoreModule, gettext, hookRoute, ViewContext } from '@c8y/ngx-components';
import { DiagnosticsComponent } from './diagnostics.component';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { BsDropdownModule, BsDropdownConfig } from 'ngx-bootstrap/dropdown';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import * as i0 from "@angular/core";
export class DiagnosticsModule {
}
DiagnosticsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DiagnosticsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DiagnosticsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DiagnosticsModule, declarations: [DiagnosticsComponent], imports: [CoreModule,
        RouterModule,
        CommonModule,
        ListGroupModule,
        SharedRepositoryModule,
        BsDropdownModule,
        TooltipModule], exports: [DiagnosticsComponent] });
DiagnosticsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DiagnosticsModule, providers: [
        DiagnosticsService,
        BsDropdownConfig,
        DiagnosticsTabGuard,
        hookRoute({
            context: ViewContext.Device,
            path: 'diagnostics',
            component: DiagnosticsComponent,
            label: gettext('Diagnostics'),
            icon: 'stethoscope',
            canActivate: [DiagnosticsTabGuard],
            priority: 200
        })
    ], imports: [CoreModule,
        RouterModule,
        CommonModule,
        ListGroupModule,
        SharedRepositoryModule,
        BsDropdownModule,
        TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DiagnosticsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CoreModule,
                        RouterModule,
                        CommonModule,
                        ListGroupModule,
                        SharedRepositoryModule,
                        BsDropdownModule,
                        TooltipModule
                    ],
                    declarations: [DiagnosticsComponent],
                    exports: [DiagnosticsComponent],
                    providers: [
                        DiagnosticsService,
                        BsDropdownConfig,
                        DiagnosticsTabGuard,
                        hookRoute({
                            context: ViewContext.Device,
                            path: 'diagnostics',
                            component: DiagnosticsComponent,
                            label: gettext('Diagnostics'),
                            icon: 'stethoscope',
                            canActivate: [DiagnosticsTabGuard],
                            priority: 200
                        })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ25vc3RpY3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGlhZ25vc3RpY3MvZGlhZ25vc3RpY3MubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7QUE2Qi9FLE1BQU0sT0FBTyxpQkFBaUI7OzhHQUFqQixpQkFBaUI7K0dBQWpCLGlCQUFpQixpQkFqQmIsb0JBQW9CLGFBUmpDLFVBQVU7UUFDVixZQUFZO1FBQ1osWUFBWTtRQUNaLGVBQWU7UUFDZixzQkFBc0I7UUFDdEIsZ0JBQWdCO1FBQ2hCLGFBQWEsYUFHTCxvQkFBb0I7K0dBZ0JuQixpQkFBaUIsYUFmakI7UUFDVCxrQkFBa0I7UUFDbEIsZ0JBQWdCO1FBQ2hCLG1CQUFtQjtRQUNuQixTQUFTLENBQUM7WUFDUixPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07WUFDM0IsSUFBSSxFQUFFLGFBQWE7WUFDbkIsU0FBUyxFQUFFLG9CQUFvQjtZQUMvQixLQUFLLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQztZQUM3QixJQUFJLEVBQUUsYUFBYTtZQUNuQixXQUFXLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztZQUNsQyxRQUFRLEVBQUUsR0FBRztTQUNkLENBQUM7S0FDSCxZQXZCQyxVQUFVO1FBQ1YsWUFBWTtRQUNaLFlBQVk7UUFDWixlQUFlO1FBQ2Ysc0JBQXNCO1FBQ3RCLGdCQUFnQjtRQUNoQixhQUFhOzJGQW1CSixpQkFBaUI7a0JBM0I3QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxVQUFVO3dCQUNWLFlBQVk7d0JBQ1osWUFBWTt3QkFDWixlQUFlO3dCQUNmLHNCQUFzQjt3QkFDdEIsZ0JBQWdCO3dCQUNoQixhQUFhO3FCQUNkO29CQUNELFlBQVksRUFBRSxDQUFDLG9CQUFvQixDQUFDO29CQUNwQyxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDL0IsU0FBUyxFQUFFO3dCQUNULGtCQUFrQjt3QkFDbEIsZ0JBQWdCO3dCQUNoQixtQkFBbUI7d0JBQ25CLFNBQVMsQ0FBQzs0QkFDUixPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07NEJBQzNCLElBQUksRUFBRSxhQUFhOzRCQUNuQixTQUFTLEVBQUUsb0JBQW9COzRCQUMvQixLQUFLLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQzs0QkFDN0IsSUFBSSxFQUFFLGFBQWE7NEJBQ25CLFdBQVcsRUFBRSxDQUFDLG1CQUFtQixDQUFDOzRCQUNsQyxRQUFRLEVBQUUsR0FBRzt5QkFDZCxDQUFDO3FCQUNIO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlhZ25vc3RpY3NUYWJHdWFyZCB9IGZyb20gJy4vZGlhZ25vc3RpY3MtdGFiLmd1YXJkJztcbmltcG9ydCB7IExpc3RHcm91cE1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IERpYWdub3N0aWNzU2VydmljZSB9IGZyb20gJy4vZGlhZ25vc3RpY3Muc2VydmljZSc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBnZXR0ZXh0LCBob29rUm91dGUsIFZpZXdDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEaWFnbm9zdGljc0NvbXBvbmVudCB9IGZyb20gJy4vZGlhZ25vc3RpY3MuY29tcG9uZW50JztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBCc0Ryb3Bkb3duTW9kdWxlLCBCc0Ryb3Bkb3duQ29uZmlnIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9kcm9wZG93bic7XG5pbXBvcnQgeyBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5L3NoYXJlZCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgTGlzdEdyb3VwTW9kdWxlLFxuICAgIFNoYXJlZFJlcG9zaXRvcnlNb2R1bGUsXG4gICAgQnNEcm9wZG93bk1vZHVsZSxcbiAgICBUb29sdGlwTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW0RpYWdub3N0aWNzQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW0RpYWdub3N0aWNzQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgRGlhZ25vc3RpY3NTZXJ2aWNlLFxuICAgIEJzRHJvcGRvd25Db25maWcsXG4gICAgRGlhZ25vc3RpY3NUYWJHdWFyZCxcbiAgICBob29rUm91dGUoe1xuICAgICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgICAgcGF0aDogJ2RpYWdub3N0aWNzJyxcbiAgICAgIGNvbXBvbmVudDogRGlhZ25vc3RpY3NDb21wb25lbnQsXG4gICAgICBsYWJlbDogZ2V0dGV4dCgnRGlhZ25vc3RpY3MnKSxcbiAgICAgIGljb246ICdzdGV0aG9zY29wZScsXG4gICAgICBjYW5BY3RpdmF0ZTogW0RpYWdub3N0aWNzVGFiR3VhcmRdLFxuICAgICAgcHJpb3JpdHk6IDIwMFxuICAgIH0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGlhZ25vc3RpY3NNb2R1bGUge31cbiJdfQ==