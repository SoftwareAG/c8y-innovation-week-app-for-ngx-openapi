import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PluginSetupStepperComponent } from './plugin-setup-stepper.component';
import { gettext, hookStepper, Steppers } from '@c8y/ngx-components';
import { ApplicationPluginsModule } from '@c8y/ngx-components/ecosystem/application-plugins';
import { LicenseConfirmModule } from '@c8y/ngx-components/ecosystem/license-confirm';
import * as i0 from "@angular/core";
export class PluginSetupStepperModule {
}
PluginSetupStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PluginSetupStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PluginSetupStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: PluginSetupStepperModule, declarations: [PluginSetupStepperComponent], imports: [CommonModule, ApplicationPluginsModule, LicenseConfirmModule] });
PluginSetupStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PluginSetupStepperModule, providers: [
        hookStepper([
            {
                stepperId: Steppers.SETUP,
                component: PluginSetupStepperComponent,
                label: gettext('Plugins'),
                setupId: 'plugins',
                priority: 30
            }
        ])
    ], imports: [CommonModule, ApplicationPluginsModule, LicenseConfirmModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PluginSetupStepperModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ApplicationPluginsModule, LicenseConfirmModule],
                    declarations: [PluginSetupStepperComponent],
                    providers: [
                        hookStepper([
                            {
                                stepperId: Steppers.SETUP,
                                component: PluginSetupStepperComponent,
                                label: gettext('Plugins'),
                                setupId: 'plugins',
                                priority: 30
                            }
                        ])
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLXNldHVwLXN0ZXBwZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZWNvc3lzdGVtL3BsdWdpbi1zZXR1cC1zdGVwcGVyL3BsdWdpbi1zZXR1cC1zdGVwcGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM3RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQzs7QUFpQnJGLE1BQU0sT0FBTyx3QkFBd0I7O3FIQUF4Qix3QkFBd0I7c0hBQXhCLHdCQUF3QixpQkFicEIsMkJBQTJCLGFBRGhDLFlBQVksRUFBRSx3QkFBd0IsRUFBRSxvQkFBb0I7c0hBYzNELHdCQUF3QixhQVp4QjtRQUNULFdBQVcsQ0FBQztZQUNWO2dCQUNFLFNBQVMsRUFBRSxRQUFRLENBQUMsS0FBSztnQkFDekIsU0FBUyxFQUFFLDJCQUEyQjtnQkFDdEMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7Z0JBQ3pCLE9BQU8sRUFBRSxTQUFTO2dCQUNsQixRQUFRLEVBQUUsRUFBRTthQUNiO1NBQ0YsQ0FBQztLQUNILFlBWlMsWUFBWSxFQUFFLHdCQUF3QixFQUFFLG9CQUFvQjsyRkFjM0Qsd0JBQXdCO2tCQWZwQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSx3QkFBd0IsRUFBRSxvQkFBb0IsQ0FBQztvQkFDdkUsWUFBWSxFQUFFLENBQUMsMkJBQTJCLENBQUM7b0JBQzNDLFNBQVMsRUFBRTt3QkFDVCxXQUFXLENBQUM7NEJBQ1Y7Z0NBQ0UsU0FBUyxFQUFFLFFBQVEsQ0FBQyxLQUFLO2dDQUN6QixTQUFTLEVBQUUsMkJBQTJCO2dDQUN0QyxLQUFLLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQztnQ0FDekIsT0FBTyxFQUFFLFNBQVM7Z0NBQ2xCLFFBQVEsRUFBRSxFQUFFOzZCQUNiO3lCQUNGLENBQUM7cUJBQ0g7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFBsdWdpblNldHVwU3RlcHBlckNvbXBvbmVudCB9IGZyb20gJy4vcGx1Z2luLXNldHVwLXN0ZXBwZXIuY29tcG9uZW50JztcbmltcG9ydCB7IGdldHRleHQsIGhvb2tTdGVwcGVyLCBTdGVwcGVycyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25QbHVnaW5zTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9lY29zeXN0ZW0vYXBwbGljYXRpb24tcGx1Z2lucyc7XG5pbXBvcnQgeyBMaWNlbnNlQ29uZmlybU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZWNvc3lzdGVtL2xpY2Vuc2UtY29uZmlybSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEFwcGxpY2F0aW9uUGx1Z2luc01vZHVsZSwgTGljZW5zZUNvbmZpcm1Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtQbHVnaW5TZXR1cFN0ZXBwZXJDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICBob29rU3RlcHBlcihbXG4gICAgICB7XG4gICAgICAgIHN0ZXBwZXJJZDogU3RlcHBlcnMuU0VUVVAsXG4gICAgICAgIGNvbXBvbmVudDogUGx1Z2luU2V0dXBTdGVwcGVyQ29tcG9uZW50LFxuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnUGx1Z2lucycpLFxuICAgICAgICBzZXR1cElkOiAncGx1Z2lucycsXG4gICAgICAgIHByaW9yaXR5OiAzMFxuICAgICAgfVxuICAgIF0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUGx1Z2luU2V0dXBTdGVwcGVyTW9kdWxlIHt9XG4iXX0=