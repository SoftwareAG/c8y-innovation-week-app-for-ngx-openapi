import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ApplicationService } from '@c8y/client';
import { gettext, PluginsService } from '@c8y/ngx-components';
import { BehaviorSubject, combineLatest, merge } from 'rxjs';
import { filter, map, shareReplay, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
export class PackageVersionSelectComponent {
    constructor(applicationService, pluginsService) {
        this.applicationService = applicationService;
        this.pluginsService = pluginsService;
        this.label = gettext('Use plugin version');
        this.onInput$ = new BehaviorSubject('');
        this.isDisabled = false;
        this.packageContextPath$ = new BehaviorSubject('');
        this.packageId$ = new BehaviorSubject('');
        const packageIdFromContextPath$ = this.packageContextPath$.pipe(filter(path => !!path), switchMap(path => this.getPackageIdForContextPath(path)));
        const packageId$ = merge(packageIdFromContextPath$, this.packageId$.pipe(filter(id => !!id)));
        const packageVersions$ = packageId$.pipe(switchMap(id => this.getPackageVersions(id)), shareReplay(1));
        this.versions$ = combineLatest([packageVersions$, this.onInput$.asObservable()]).pipe(map(([resultList, filterStr]) => this.applyFilterToResultList(resultList, filterStr)));
    }
    writeValue(obj) {
        this.selectedVersion = obj;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.isDisabled = isDisabled;
    }
    ngOnChanges(changes) {
        if (changes.packageContextPath) {
            this.packageContextPath$.next(this.packageContextPath);
        }
        if (changes.packageId) {
            this.packageId$.next(this.packageId);
        }
    }
    async getPackageVersions(packageId) {
        return await this.applicationService.listVersions(packageId);
    }
    onVersionSelect(version) {
        this.selectedVersion = version;
        if (this.onChange) {
            this.onChange(version);
        }
        if (this.onTouched) {
            this.onTouched();
        }
    }
    async getPackageIdForContextPath(contextPath) {
        const { data: application } = await this.applicationService.getManifestOfContextPath(contextPath);
        const packageAppId = application.id;
        return packageAppId;
    }
    setInitialValueForInput(versions) {
        if (!this.selectedVersion && versions.length > 0) {
            const latest = versions.find(v => v.tags.includes('latest'));
            this.selectedVersion = latest || versions[0];
            if (this.onChange) {
                this.onChange(this.selectedVersion);
            }
        }
    }
    filterAppVersions(appVersions, filterStr) {
        return filterStr === ''
            ? appVersions
            : appVersions.filter(appVersion => appVersion.version.includes(filterStr) ||
                appVersion.tags?.some(tag => tag.includes(filterStr)));
    }
    applyFilterToResultList(resultList, filterStr) {
        const versionsFilteredByStr = this.filterAppVersions(resultList.data, filterStr);
        const sortedAppVersions = this.pluginsService.sortVersions({
            list: versionsFilteredByStr,
            path: ['version']
        }, 'desc');
        this.setInitialValueForInput(sortedAppVersions);
        return { data: sortedAppVersions, res: resultList.res };
    }
}
PackageVersionSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PackageVersionSelectComponent, deps: [{ token: i1.ApplicationService }, { token: i2.PluginsService }], target: i0.ɵɵFactoryTarget.Component });
PackageVersionSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: PackageVersionSelectComponent, selector: "c8y-package-version-select", inputs: { label: "label", packageContextPath: "packageContextPath", packageId: "packageId" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => PackageVersionSelectComponent)
        }
    ], usesOnChanges: true, ngImport: i0, template: "<label for=\"packageVersion\">{{ label | translate }}</label>\n<c8y-form-group>\n  <c8y-typeahead\n    [(ngModel)]=\"selectedVersion\"\n    name=\"packageVersion\"\n    (onSearch)=\"onInput$.next($event)\"\n    placeholder=\"{{ 'Select below or start typing' | translate }}\"\n    [displayProperty]=\"'version'\"\n    [required]=\"true\"\n    [disabled]=\"isDisabled\"\n    [hideNew]=\"true\"\n    [container]=\"'body'\"\n  >\n    <c8y-li\n      *c8yFor=\"let appVersion of versions$; loadMore: 'auto'; notFound: notFoundTemplate\"\n      (click)=\"onVersionSelect(appVersion)\"\n      class=\"p-l-8 p-r-8 c8y-list__item--link\"\n      [active]=\"selectedVersion === appVersion\"\n    >\n      <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n      <span\n        [ngStyle]=\"{\n          display: 'flex',\n          'flex-direction': 'row',\n          'align-content': 'center',\n          'justify-content': 'space-between',\n          'align-items': 'center'\n        }\"\n      >\n        <c8y-highlight\n          [text]=\"appVersion.version || '--'\"\n          [pattern]=\"onInput$ | async\"\n        ></c8y-highlight>\n        <span>\n          <span *ngFor=\"let tag of appVersion.tags\" class=\"label label-info m-l-4\">\n            {{ tag }}\n          </span>\n        </span>\n      </span>\n    </c8y-li>\n    <ng-template #notFoundTemplate>\n      <c8y-li\n        class=\"bg-gray-lighter p-8\"\n        *ngIf=\"(onInput$ | async)?.length > 0 && (versions$ | async)?.data?.length === 0\"\n      >\n        <span translate>No match found.</span>\n      </c8y-li>\n    </ng-template>\n  </c8y-typeahead>\n</c8y-form-group>\n", dependencies: [{ kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i2.ForOfDirective, selector: "[c8yFor]", inputs: ["c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForMaxIterations", "c8yForLoadingTemplate", "c8yForLoadNextLabel", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForComparator", "c8yForEnableVirtualScroll", "c8yForVirtualScrollElementSize", "c8yForVirtualScrollStrategy", "c8yForVirtualScrollContainerHeight"], outputs: ["c8yForCount"] }, { kind: "component", type: i2.HighlightComponent, selector: "c8y-highlight", inputs: ["pattern", "text", "elementClass", "shouldTrimPattern"] }, { kind: "component", type: i2.TypeaheadComponent, selector: "c8y-typeahead", inputs: ["required", "maxlength", "disabled", "allowFreeEntries", "placeholder", "displayProperty", "icon", "name", "autoClose", "hideNew", "container", "selected"], outputs: ["onSearch", "onIconClick"] }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "component", type: i2.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i2.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PackageVersionSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-package-version-select', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => PackageVersionSelectComponent)
                        }
                    ], template: "<label for=\"packageVersion\">{{ label | translate }}</label>\n<c8y-form-group>\n  <c8y-typeahead\n    [(ngModel)]=\"selectedVersion\"\n    name=\"packageVersion\"\n    (onSearch)=\"onInput$.next($event)\"\n    placeholder=\"{{ 'Select below or start typing' | translate }}\"\n    [displayProperty]=\"'version'\"\n    [required]=\"true\"\n    [disabled]=\"isDisabled\"\n    [hideNew]=\"true\"\n    [container]=\"'body'\"\n  >\n    <c8y-li\n      *c8yFor=\"let appVersion of versions$; loadMore: 'auto'; notFound: notFoundTemplate\"\n      (click)=\"onVersionSelect(appVersion)\"\n      class=\"p-l-8 p-r-8 c8y-list__item--link\"\n      [active]=\"selectedVersion === appVersion\"\n    >\n      <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n      <span\n        [ngStyle]=\"{\n          display: 'flex',\n          'flex-direction': 'row',\n          'align-content': 'center',\n          'justify-content': 'space-between',\n          'align-items': 'center'\n        }\"\n      >\n        <c8y-highlight\n          [text]=\"appVersion.version || '--'\"\n          [pattern]=\"onInput$ | async\"\n        ></c8y-highlight>\n        <span>\n          <span *ngFor=\"let tag of appVersion.tags\" class=\"label label-info m-l-4\">\n            {{ tag }}\n          </span>\n        </span>\n      </span>\n    </c8y-li>\n    <ng-template #notFoundTemplate>\n      <c8y-li\n        class=\"bg-gray-lighter p-8\"\n        *ngIf=\"(onInput$ | async)?.length > 0 && (versions$ | async)?.data?.length === 0\"\n      >\n        <span translate>No match found.</span>\n      </c8y-li>\n    </ng-template>\n  </c8y-typeahead>\n</c8y-form-group>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ApplicationService }, { type: i2.PluginsService }]; }, propDecorators: { label: [{
                type: Input
            }], packageContextPath: [{
                type: Input
            }], packageId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,