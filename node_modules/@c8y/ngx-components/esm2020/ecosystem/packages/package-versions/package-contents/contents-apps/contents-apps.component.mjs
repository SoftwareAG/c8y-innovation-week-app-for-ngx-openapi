import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
export class PackageVersionsAppsComponent {
}
PackageVersionsAppsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PackageVersionsAppsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PackageVersionsAppsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: PackageVersionsAppsComponent, selector: "c8y-contents-apps", inputs: { selectedVersionManifest: "selectedVersionManifest" }, ngImport: i0, template: "<p class=\"legend form-block\">\n  {{ 'Application' | translate }}\n</p>\n\n<div  *ngIf=\"selectedVersionManifest?.name; else emptyApp\">\n  <c8y-li>\n    <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n    <h5 class=\"text-medium text-16 p-b-8\">\n      {{ selectedVersionManifest?.name | humanizeAppName | async }}\n      <small class=\"m-l-8\" *ngIf=\"selectedVersionManifest?.requiredPlatformVersion\">\n        <em>{{ selectedVersionManifest?.requiredPlatformVersion }}</em>\n      </small>\n    </h5>\n    <p *ngIf=\"selectedVersionManifest?.description; else notAvailable\">\n      {{ selectedVersionManifest?.description }}\n    </p>\n  </c8y-li>\n</div>\n\n<ng-template #notAvailable>\n  <p class=\"text-muted\">\n    <em>{{ 'No description available.' | translate }}</em>\n  </p>\n</ng-template>\n\n<ng-template #emptyApp>\n  <c8y-ui-empty-state\n  [icon]=\"'big-parcel'\"\n  [horizontal]=\"true\"\n  [title]=\"'No application.' | translate\"\n  [subtitle]=\"'This package doesn\\'t contain an application.' | translate\"\n  ></c8y-ui-empty-state>\n</ng-template>", dependencies: [{ kind: "component", type: i1.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i1.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.HumanizeAppNamePipe, name: "humanizeAppName" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PackageVersionsAppsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-contents-apps', template: "<p class=\"legend form-block\">\n  {{ 'Application' | translate }}\n</p>\n\n<div  *ngIf=\"selectedVersionManifest?.name; else emptyApp\">\n  <c8y-li>\n    <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n    <h5 class=\"text-medium text-16 p-b-8\">\n      {{ selectedVersionManifest?.name | humanizeAppName | async }}\n      <small class=\"m-l-8\" *ngIf=\"selectedVersionManifest?.requiredPlatformVersion\">\n        <em>{{ selectedVersionManifest?.requiredPlatformVersion }}</em>\n      </small>\n    </h5>\n    <p *ngIf=\"selectedVersionManifest?.description; else notAvailable\">\n      {{ selectedVersionManifest?.description }}\n    </p>\n  </c8y-li>\n</div>\n\n<ng-template #notAvailable>\n  <p class=\"text-muted\">\n    <em>{{ 'No description available.' | translate }}</em>\n  </p>\n</ng-template>\n\n<ng-template #emptyApp>\n  <c8y-ui-empty-state\n  [icon]=\"'big-parcel'\"\n  [horizontal]=\"true\"\n  [title]=\"'No application.' | translate\"\n  [subtitle]=\"'This package doesn\\'t contain an application.' | translate\"\n  ></c8y-ui-empty-state>\n</ng-template>" }]
        }], propDecorators: { selectedVersionManifest: [{
                type: Input,
                args: ['selectedVersionManifest']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudHMtYXBwcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9lY29zeXN0ZW0vcGFja2FnZXMvcGFja2FnZS12ZXJzaW9ucy9wYWNrYWdlLWNvbnRlbnRzL2NvbnRlbnRzLWFwcHMvY29udGVudHMtYXBwcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9lY29zeXN0ZW0vcGFja2FnZXMvcGFja2FnZS12ZXJzaW9ucy9wYWNrYWdlLWNvbnRlbnRzL2NvbnRlbnRzLWFwcHMvY29udGVudHMtYXBwcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU1qRCxNQUFNLE9BQU8sNEJBQTRCOzt5SEFBNUIsNEJBQTRCOzZHQUE1Qiw0QkFBNEIseUhDUHpDLG9qQ0FnQ2M7MkZEekJELDRCQUE0QjtrQkFKeEMsU0FBUzsrQkFDRSxtQkFBbUI7OEJBSUssdUJBQXVCO3NCQUF4RCxLQUFLO3VCQUFDLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNYW5pZmVzdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbnRlbnRzLWFwcHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29udGVudHMtYXBwcy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUGFja2FnZVZlcnNpb25zQXBwc0NvbXBvbmVudCB7XG4gIEBJbnB1dCgnc2VsZWN0ZWRWZXJzaW9uTWFuaWZlc3QnKSBzZWxlY3RlZFZlcnNpb25NYW5pZmVzdDogSU1hbmlmZXN0O1xufVxuIiwiPHAgY2xhc3M9XCJsZWdlbmQgZm9ybS1ibG9ja1wiPlxuICB7eyAnQXBwbGljYXRpb24nIHwgdHJhbnNsYXRlIH19XG48L3A+XG5cbjxkaXYgICpuZ0lmPVwic2VsZWN0ZWRWZXJzaW9uTWFuaWZlc3Q/Lm5hbWU7IGVsc2UgZW1wdHlBcHBcIj5cbiAgPGM4eS1saT5cbiAgICA8Yzh5LWxpLWljb24gaWNvbj1cImJpZy1wYXJjZWxcIj48L2M4eS1saS1pY29uPlxuICAgIDxoNSBjbGFzcz1cInRleHQtbWVkaXVtIHRleHQtMTYgcC1iLThcIj5cbiAgICAgIHt7IHNlbGVjdGVkVmVyc2lvbk1hbmlmZXN0Py5uYW1lIHwgaHVtYW5pemVBcHBOYW1lIHwgYXN5bmMgfX1cbiAgICAgIDxzbWFsbCBjbGFzcz1cIm0tbC04XCIgKm5nSWY9XCJzZWxlY3RlZFZlcnNpb25NYW5pZmVzdD8ucmVxdWlyZWRQbGF0Zm9ybVZlcnNpb25cIj5cbiAgICAgICAgPGVtPnt7IHNlbGVjdGVkVmVyc2lvbk1hbmlmZXN0Py5yZXF1aXJlZFBsYXRmb3JtVmVyc2lvbiB9fTwvZW0+XG4gICAgICA8L3NtYWxsPlxuICAgIDwvaDU+XG4gICAgPHAgKm5nSWY9XCJzZWxlY3RlZFZlcnNpb25NYW5pZmVzdD8uZGVzY3JpcHRpb247IGVsc2Ugbm90QXZhaWxhYmxlXCI+XG4gICAgICB7eyBzZWxlY3RlZFZlcnNpb25NYW5pZmVzdD8uZGVzY3JpcHRpb24gfX1cbiAgICA8L3A+XG4gIDwvYzh5LWxpPlxuPC9kaXY+XG5cbjxuZy10ZW1wbGF0ZSAjbm90QXZhaWxhYmxlPlxuICA8cCBjbGFzcz1cInRleHQtbXV0ZWRcIj5cbiAgICA8ZW0+e3sgJ05vIGRlc2NyaXB0aW9uIGF2YWlsYWJsZS4nIHwgdHJhbnNsYXRlIH19PC9lbT5cbiAgPC9wPlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNlbXB0eUFwcD5cbiAgPGM4eS11aS1lbXB0eS1zdGF0ZVxuICBbaWNvbl09XCInYmlnLXBhcmNlbCdcIlxuICBbaG9yaXpvbnRhbF09XCJ0cnVlXCJcbiAgW3RpdGxlXT1cIidObyBhcHBsaWNhdGlvbi4nIHwgdHJhbnNsYXRlXCJcbiAgW3N1YnRpdGxlXT1cIidUaGlzIHBhY2thZ2UgZG9lc25cXCd0IGNvbnRhaW4gYW4gYXBwbGljYXRpb24uJyB8IHRyYW5zbGF0ZVwiXG4gID48L2M4eS11aS1lbXB0eS1zdGF0ZT5cbjwvbmctdGVtcGxhdGU+Il19