import { Component } from '@angular/core';
import { ApplicationAvailability, ApplicationType } from '@c8y/client';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import { AppStateService, gettext } from '@c8y/ngx-components';
import { PackageAvailabilityService } from './package-availability.service';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/ecosystem/shared";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "./package-availability.service";
export class AddPackageComponent {
    constructor(ecosystemService, appState, packageAvailability) {
        this.ecosystemService = ecosystemService;
        this.appState = appState;
        this.packageAvailability = packageAvailability;
        this.headerText = gettext('Add extension package');
        this.successText = gettext('Extension package created');
        this.createPackageAppHandler = (f) => this.createPackageApp(f);
        this.uploadPackageHandler = (f, app) => this.uploadPackage(f, app);
    }
    async createPackageApp(file) {
        await this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);
        const applicationPackage = await this.ecosystemService.createAppForArchive(file, true);
        return await this.packageAvailability.askIfAvailabilityShouldBeSetTo(applicationPackage, ApplicationAvailability.SHARED);
    }
    uploadPackage(file, pckg) {
        return this.ecosystemService.uploadArchiveToApp(file, pckg, true);
    }
}
AddPackageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddPackageComponent, deps: [{ token: i1.EcosystemService }, { token: i2.AppStateService }, { token: i3.PackageAvailabilityService }], target: i0.ɵɵFactoryTarget.Component });
AddPackageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AddPackageComponent, selector: "c8y-add-package", ngImport: i0, template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'big-parcel'"
    [successText]="successText"
    [createApplicationHandler]="createPackageAppHandler"
    [uploadApplicationHandler]="uploadPackageHandler"
  ></c8y-add-application>`, isInline: true, dependencies: [{ kind: "component", type: i1.AddApplicationComponent, selector: "c8y-add-application", inputs: ["headerText", "headerIcon", "successText", "createApplicationHandler", "uploadApplicationHandler", "canGoBack"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddPackageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'c8y-add-package',
                    template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'big-parcel'"
    [successText]="successText"
    [createApplicationHandler]="createPackageAppHandler"
    [uploadApplicationHandler]="uploadPackageHandler"
  ></c8y-add-application>`
                }]
        }], ctorParameters: function () { return [{ type: i1.EcosystemService }, { type: i2.AppStateService }, { type: i3.PackageAvailabilityService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXBhY2thZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZWNvc3lzdGVtL3BhY2thZ2VzL2FkZC1wYWNrYWdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxlQUFlLEVBQWdCLE1BQU0sYUFBYSxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0QsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7O0FBWTVFLE1BQU0sT0FBTyxtQkFBbUI7SUFJOUIsWUFDVSxnQkFBa0MsRUFDbEMsUUFBeUIsRUFDekIsbUJBQStDO1FBRi9DLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUE0QjtRQU56RCxlQUFVLEdBQVcsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDdEQsZ0JBQVcsR0FBVyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQVEzRCw0QkFBdUIsR0FBRyxDQUFDLENBQU8sRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLHlCQUFvQixHQUFHLENBQUMsQ0FBTyxFQUFFLEdBQWlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBSC9FLENBQUM7SUFLSixLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBVTtRQUMvQixNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6RSxNQUFNLGtCQUFrQixHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN2RixPQUFPLE1BQU0sSUFBSSxDQUFDLG1CQUFtQixDQUFDLDhCQUE4QixDQUNsRSxrQkFBa0IsRUFDbEIsdUJBQXVCLENBQUMsTUFBTSxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVELGFBQWEsQ0FBQyxJQUFVLEVBQUUsSUFBa0I7UUFDMUMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwRSxDQUFDOztnSEF4QlUsbUJBQW1CO29HQUFuQixtQkFBbUIsdURBUnBCOzs7Ozs7MEJBTWM7MkZBRWIsbUJBQW1CO2tCQVYvQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRTs7Ozs7OzBCQU1jO2lCQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25BdmFpbGFiaWxpdHksIEFwcGxpY2F0aW9uVHlwZSwgSUFwcGxpY2F0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgRWNvc3lzdGVtU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZWNvc3lzdGVtL3NoYXJlZCc7XG5pbXBvcnQgeyBBcHBTdGF0ZVNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFBhY2thZ2VBdmFpbGFiaWxpdHlTZXJ2aWNlIH0gZnJvbSAnLi9wYWNrYWdlLWF2YWlsYWJpbGl0eS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFkZC1wYWNrYWdlJyxcbiAgdGVtcGxhdGU6IGA8Yzh5LWFkZC1hcHBsaWNhdGlvblxuICAgIFtoZWFkZXJUZXh0XT1cImhlYWRlclRleHRcIlxuICAgIFtoZWFkZXJJY29uXT1cIidiaWctcGFyY2VsJ1wiXG4gICAgW3N1Y2Nlc3NUZXh0XT1cInN1Y2Nlc3NUZXh0XCJcbiAgICBbY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyXT1cImNyZWF0ZVBhY2thZ2VBcHBIYW5kbGVyXCJcbiAgICBbdXBsb2FkQXBwbGljYXRpb25IYW5kbGVyXT1cInVwbG9hZFBhY2thZ2VIYW5kbGVyXCJcbiAgPjwvYzh5LWFkZC1hcHBsaWNhdGlvbj5gXG59KVxuZXhwb3J0IGNsYXNzIEFkZFBhY2thZ2VDb21wb25lbnQge1xuICBoZWFkZXJUZXh0OiBzdHJpbmcgPSBnZXR0ZXh0KCdBZGQgZXh0ZW5zaW9uIHBhY2thZ2UnKTtcbiAgc3VjY2Vzc1RleHQ6IHN0cmluZyA9IGdldHRleHQoJ0V4dGVuc2lvbiBwYWNrYWdlIGNyZWF0ZWQnKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhcHBTdGF0ZTogQXBwU3RhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgcGFja2FnZUF2YWlsYWJpbGl0eTogUGFja2FnZUF2YWlsYWJpbGl0eVNlcnZpY2VcbiAgKSB7fVxuXG4gIGNyZWF0ZVBhY2thZ2VBcHBIYW5kbGVyID0gKGY6IEZpbGUpID0+IHRoaXMuY3JlYXRlUGFja2FnZUFwcChmKTtcbiAgdXBsb2FkUGFja2FnZUhhbmRsZXIgPSAoZjogRmlsZSwgYXBwOiBJQXBwbGljYXRpb24pID0+IHRoaXMudXBsb2FkUGFja2FnZShmLCBhcHApO1xuXG4gIGFzeW5jIGNyZWF0ZVBhY2thZ2VBcHAoZmlsZTogRmlsZSk6IFByb21pc2U8SUFwcGxpY2F0aW9uPiB7XG4gICAgYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmlzVmFsaWRBcHBUeXBlKGZpbGUsIEFwcGxpY2F0aW9uVHlwZS5IT1NURUQpO1xuICAgIGNvbnN0IGFwcGxpY2F0aW9uUGFja2FnZSA9IGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS5jcmVhdGVBcHBGb3JBcmNoaXZlKGZpbGUsIHRydWUpO1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhY2thZ2VBdmFpbGFiaWxpdHkuYXNrSWZBdmFpbGFiaWxpdHlTaG91bGRCZVNldFRvKFxuICAgICAgYXBwbGljYXRpb25QYWNrYWdlLFxuICAgICAgQXBwbGljYXRpb25BdmFpbGFiaWxpdHkuU0hBUkVEXG4gICAgKTtcbiAgfVxuXG4gIHVwbG9hZFBhY2thZ2UoZmlsZTogRmlsZSwgcGNrZzogSUFwcGxpY2F0aW9uKTogUHJvbWlzZTxJQXBwbGljYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnVwbG9hZEFyY2hpdmVUb0FwcChmaWxlLCBwY2tnLCB0cnVlKTtcbiAgfVxufVxuIl19