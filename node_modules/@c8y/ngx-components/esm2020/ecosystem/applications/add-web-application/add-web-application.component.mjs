import { Component } from '@angular/core';
import { ApplicationType } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/ecosystem/shared";
export class AddWebApplicationComponent {
    constructor(ecosystemService) {
        this.ecosystemService = ecosystemService;
        this.headerText = gettext('Upload web application');
        this.successText = gettext('Application created');
        this.createApplicationHandler = (f) => this.createApplication(f);
        this.uploadApplicationHandler = (f, app) => this.uploadApplication(f, app);
    }
    async createApplication(file) {
        await this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);
        return this.ecosystemService.createAppForArchive(file);
    }
    async uploadApplication(file, app) {
        return this.ecosystemService.uploadArchiveToApp(file, app);
    }
}
AddWebApplicationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddWebApplicationComponent, deps: [{ token: i1.EcosystemService }], target: i0.ɵɵFactoryTarget.Component });
AddWebApplicationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AddWebApplicationComponent, selector: "c8y-add-web-application", ngImport: i0, template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'upload'"
    [successText]="successText"
    [createApplicationHandler]="createApplicationHandler"
    [uploadApplicationHandler]="uploadApplicationHandler"
    [canGoBack]="true"
  ></c8y-add-application>`, isInline: true, dependencies: [{ kind: "component", type: i1.AddApplicationComponent, selector: "c8y-add-application", inputs: ["headerText", "headerIcon", "successText", "createApplicationHandler", "uploadApplicationHandler", "canGoBack"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddWebApplicationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'c8y-add-web-application',
                    template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'upload'"
    [successText]="successText"
    [createApplicationHandler]="createApplicationHandler"
    [uploadApplicationHandler]="uploadApplicationHandler"
    [canGoBack]="true"
  ></c8y-add-application>`
                }]
        }], ctorParameters: function () { return [{ type: i1.EcosystemService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXdlYi1hcHBsaWNhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9lY29zeXN0ZW0vYXBwbGljYXRpb25zL2FkZC13ZWItYXBwbGljYXRpb24vYWRkLXdlYi1hcHBsaWNhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFnQixNQUFNLGFBQWEsQ0FBQztBQUM1RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7OztBQWF4RSxNQUFNLE9BQU8sMEJBQTBCO0lBSXJDLFlBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBSHRELGVBQVUsR0FBVyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUN2RCxnQkFBVyxHQUFXLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBSXJELDZCQUF3QixHQUFHLENBQUMsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEUsNkJBQXdCLEdBQUcsQ0FBQyxDQUFPLEVBQUUsR0FBaUIsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUhqQyxDQUFDO0lBSzFELEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxJQUFVO1FBQ2hDLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxLQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBVSxFQUFFLEdBQWlCO1FBQ25ELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM3RCxDQUFDOzt1SEFoQlUsMEJBQTBCOzJHQUExQiwwQkFBMEIsK0RBVDNCOzs7Ozs7OzBCQU9jOzJGQUViLDBCQUEwQjtrQkFYdEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUU7Ozs7Ozs7MEJBT2M7aUJBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblR5cGUsIElBcHBsaWNhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEVjb3N5c3RlbVNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2Vjb3N5c3RlbS9zaGFyZWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYWRkLXdlYi1hcHBsaWNhdGlvbicsXG4gIHRlbXBsYXRlOiBgPGM4eS1hZGQtYXBwbGljYXRpb25cbiAgICBbaGVhZGVyVGV4dF09XCJoZWFkZXJUZXh0XCJcbiAgICBbaGVhZGVySWNvbl09XCIndXBsb2FkJ1wiXG4gICAgW3N1Y2Nlc3NUZXh0XT1cInN1Y2Nlc3NUZXh0XCJcbiAgICBbY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyXT1cImNyZWF0ZUFwcGxpY2F0aW9uSGFuZGxlclwiXG4gICAgW3VwbG9hZEFwcGxpY2F0aW9uSGFuZGxlcl09XCJ1cGxvYWRBcHBsaWNhdGlvbkhhbmRsZXJcIlxuICAgIFtjYW5Hb0JhY2tdPVwidHJ1ZVwiXG4gID48L2M4eS1hZGQtYXBwbGljYXRpb24+YFxufSlcbmV4cG9ydCBjbGFzcyBBZGRXZWJBcHBsaWNhdGlvbkNvbXBvbmVudCB7XG4gIGhlYWRlclRleHQ6IHN0cmluZyA9IGdldHRleHQoJ1VwbG9hZCB3ZWIgYXBwbGljYXRpb24nKTtcbiAgc3VjY2Vzc1RleHQ6IHN0cmluZyA9IGdldHRleHQoJ0FwcGxpY2F0aW9uIGNyZWF0ZWQnKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UpIHt9XG5cbiAgY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyID0gKGY6IEZpbGUpID0+IHRoaXMuY3JlYXRlQXBwbGljYXRpb24oZik7XG4gIHVwbG9hZEFwcGxpY2F0aW9uSGFuZGxlciA9IChmOiBGaWxlLCBhcHA6IElBcHBsaWNhdGlvbikgPT4gdGhpcy51cGxvYWRBcHBsaWNhdGlvbihmLCBhcHApO1xuXG4gIGFzeW5jIGNyZWF0ZUFwcGxpY2F0aW9uKGZpbGU6IEZpbGUpOiBQcm9taXNlPElBcHBsaWNhdGlvbj4ge1xuICAgIGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS5pc1ZhbGlkQXBwVHlwZShmaWxlLCBBcHBsaWNhdGlvblR5cGUuSE9TVEVEKTtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmNyZWF0ZUFwcEZvckFyY2hpdmUoZmlsZSk7XG4gIH1cblxuICBhc3luYyB1cGxvYWRBcHBsaWNhdGlvbihmaWxlOiBGaWxlLCBhcHA6IElBcHBsaWNhdGlvbik6IFByb21pc2U8SUFwcGxpY2F0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMuZWNvc3lzdGVtU2VydmljZS51cGxvYWRBcmNoaXZlVG9BcHAoZmlsZSwgYXBwKTtcbiAgfVxufVxuIl19