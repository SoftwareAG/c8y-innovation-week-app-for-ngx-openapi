import { Component, Input } from '@angular/core';
import { AlertService } from '@c8y/ngx-components';
import { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components/ecosystem/shared";
import * as i2 from "@c8y/ngx-components";
import * as i3 from "@angular/common";
export class ActivityLogComponent {
    constructor(ecosystemService, alertService) {
        this.ecosystemService = ecosystemService;
        this.alertService = alertService;
        this.hasAdminPermissions = false;
        this.archives = [];
        this.canReactivate = false;
    }
    get uploadProgress() {
        return this.ecosystemService.progress;
    }
    async ngOnInit() {
        this.canReactivate = this.showReactivate();
        this.refresh();
    }
    isActive(archive) {
        return this.application.activeVersionId === archive.id;
    }
    toActivate(archive) {
        return this.toActivateVersionId === archive.id;
    }
    checkIfLast(archive) {
        return archive.id === this.last.id;
    }
    showReactivate() {
        return this.ecosystemService.isApplication(this.application);
    }
    async setActive(archive) {
        const id = archive.id || archive;
        this.toActivateVersionId = id;
        this.isLoading = true;
        try {
            this.application = (await this.ecosystemService.setAppActiveVersion(this.application, id)).data;
        }
        catch (ex) {
            this.alertService.addServerFailure(ex);
        }
        this.isLoading = false;
        this.refresh();
    }
    async deleteArchive(archive) {
        await this.ecosystemService.deleteArchive(archive, this.application);
        this.refresh();
    }
    async downloadArchive(archive) {
        await this.ecosystemService.downloadArchive(this.application, archive);
    }
    async reactivateArchive() {
        await this.ecosystemService.reactivateArchive(this.application);
    }
    async onRefresh() {
        await this.refresh();
    }
    async refresh() {
        this.isLoading = true;
        this.archives = await this.ecosystemService.listArchives(this.application.id);
        if (this.application.manifest?.package === 'blueprint') {
            // filter out entries without description because using them as active may break application's
            //  manifest (changing isPackage property of deployed app to 'true')
            this.archives = this.archives.filter((archive) => !!archive.description);
        }
        this.archives.sort((a, b) => {
            return new Date(b.created) - new Date(a.created);
        });
        this.last = this.archives[this.archives.length - 1];
        this.isLoading = false;
    }
}
ActivityLogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActivityLogComponent, deps: [{ token: i1.EcosystemService }, { token: i2.AlertService }], target: i0.ɵɵFactoryTarget.Component });
ActivityLogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ActivityLogComponent, selector: "c8y-activity-log", inputs: { application: "application", hasAdminPermissions: "hasAdminPermissions" }, ngImport: i0, template: "<div class=\"inner-scroll bg-level-1 flex-grow\">\n  <div class=\"card-block overflow-visible\">\n    <c8y-list-group>\n      <c8y-li-timeline *ngFor=\"let archive of archives\" [ngClass]=\"{ active: isActive(archive) }\">\n        {{ archive.created | date: 'd MMM YYYY' }}\n        {{ archive.created | date: 'shortTime' }}\n        <c8y-li>\n          <c8y-li-icon\n            [icon]=\"checkIfLast(archive) ? 'flag-checkered' : 'file-zip-o'\"\n          ></c8y-li-icon>\n          <c8y-li-body>\n            <div class=\"d-flex a-i-start\">\n              <div style=\"min-width: 0; flex: 1\">\n                <span class=\"text-truncate-wrap\" title=\" {{ archive.description || archive.name }}\">\n                  {{ archive.description || archive.name }}\n                </span>\n                <small *ngIf=\"archive.description\" class=\"text-muted\">{{\n                  archive.description\n                }}</small>\n              </div>\n              <i\n                *ngIf=\"isLoading && toActivate(archive)\"\n                [c8yIcon]=\"'circle-o-notch'\"\n                class=\"icon-spin\"\n                title=\"{{ 'Activating' | translate }}\"\n              ></i>\n\n              <span *ngIf=\"isActive(archive)\" class=\"label label-primary m-l-auto m-t-4\">{{\n                'Active' | translate\n              }}</span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-action\n            (click)=\"setActive(archive)\"\n            *ngIf=\"hasAdminPermissions && !isLoading && !isActive(archive)\"\n            icon=\"check-square-o\"\n          >\n            {{ 'Set as active`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action (click)=\"downloadArchive(archive)\" icon=\"download\">\n            {{ 'Download`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"deleteArchive(archive)\"\n            *ngIf=\"\n              hasAdminPermissions &&\n              archives.length > 1 &&\n              !checkIfLast(archive) &&\n              !isActive(archive)\n            \"\n            icon=\"delete\"\n          >\n            {{ 'Delete`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"reactivateArchive()\"\n            *ngIf=\"hasAdminPermissions && canReactivate && isActive(archive)\"\n            icon=\"undo\"\n          >\n            {{ 'Reactivate archive' | translate }}\n          </c8y-li-action>\n        </c8y-li>\n      </c8y-li-timeline>\n    </c8y-list-group>\n  </div>\n</div>\n<div class=\"card-footer\" *ngIf=\"!isLoading && hasAdminPermissions\">\n  <c8y-form-group class=\"m-auto\">\n    <c8y-upload-archive [(application)]=\"application\" (refresh)=\"onRefresh()\"></c8y-upload-archive>\n  </c8y-form-group>\n</div>\n", dependencies: [{ kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "component", type: i2.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i2.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i2.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i2.ListItemBodyComponent, selector: "c8y-list-item-body, c8y-li-body", inputs: ["body"] }, { kind: "component", type: i2.ListItemActionComponent, selector: "c8y-list-item-action, c8y-li-action", inputs: ["label", "icon"], outputs: ["click"] }, { kind: "component", type: i2.ListItemTimelineComponent, selector: "c8y-list-item-timeline, c8y-li-timeline" }, { kind: "component", type: i1.UploadArchiveComponent, selector: "c8y-upload-archive", inputs: ["application", "uploadNewVersion", "preUploadCallback"], outputs: ["applicationChange", "refresh"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i3.DatePipe, name: "date" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActivityLogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-activity-log', template: "<div class=\"inner-scroll bg-level-1 flex-grow\">\n  <div class=\"card-block overflow-visible\">\n    <c8y-list-group>\n      <c8y-li-timeline *ngFor=\"let archive of archives\" [ngClass]=\"{ active: isActive(archive) }\">\n        {{ archive.created | date: 'd MMM YYYY' }}\n        {{ archive.created | date: 'shortTime' }}\n        <c8y-li>\n          <c8y-li-icon\n            [icon]=\"checkIfLast(archive) ? 'flag-checkered' : 'file-zip-o'\"\n          ></c8y-li-icon>\n          <c8y-li-body>\n            <div class=\"d-flex a-i-start\">\n              <div style=\"min-width: 0; flex: 1\">\n                <span class=\"text-truncate-wrap\" title=\" {{ archive.description || archive.name }}\">\n                  {{ archive.description || archive.name }}\n                </span>\n                <small *ngIf=\"archive.description\" class=\"text-muted\">{{\n                  archive.description\n                }}</small>\n              </div>\n              <i\n                *ngIf=\"isLoading && toActivate(archive)\"\n                [c8yIcon]=\"'circle-o-notch'\"\n                class=\"icon-spin\"\n                title=\"{{ 'Activating' | translate }}\"\n              ></i>\n\n              <span *ngIf=\"isActive(archive)\" class=\"label label-primary m-l-auto m-t-4\">{{\n                'Active' | translate\n              }}</span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-action\n            (click)=\"setActive(archive)\"\n            *ngIf=\"hasAdminPermissions && !isLoading && !isActive(archive)\"\n            icon=\"check-square-o\"\n          >\n            {{ 'Set as active`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action (click)=\"downloadArchive(archive)\" icon=\"download\">\n            {{ 'Download`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"deleteArchive(archive)\"\n            *ngIf=\"\n              hasAdminPermissions &&\n              archives.length > 1 &&\n              !checkIfLast(archive) &&\n              !isActive(archive)\n            \"\n            icon=\"delete\"\n          >\n            {{ 'Delete`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"reactivateArchive()\"\n            *ngIf=\"hasAdminPermissions && canReactivate && isActive(archive)\"\n            icon=\"undo\"\n          >\n            {{ 'Reactivate archive' | translate }}\n          </c8y-li-action>\n        </c8y-li>\n      </c8y-li-timeline>\n    </c8y-list-group>\n  </div>\n</div>\n<div class=\"card-footer\" *ngIf=\"!isLoading && hasAdminPermissions\">\n  <c8y-form-group class=\"m-auto\">\n    <c8y-upload-archive [(application)]=\"application\" (refresh)=\"onRefresh()\"></c8y-upload-archive>\n  </c8y-form-group>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.EcosystemService }, { type: i2.AlertService }]; }, propDecorators: { application: [{
                type: Input
            }], hasAdminPermissions: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hY3Rpdml0eS1sb2cvYWN0aXZpdHktbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hY3Rpdml0eS1sb2cvYWN0aXZpdHktbG9nLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXpELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVuRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQzs7Ozs7QUFNeEUsTUFBTSxPQUFPLG9CQUFvQjtJQVMvQixZQUFvQixnQkFBa0MsRUFBVSxZQUEwQjtRQUF0RSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQVUsaUJBQVksR0FBWixZQUFZLENBQWM7UUFQakYsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO1FBQ3JDLGFBQVEsR0FBeUIsRUFBRSxDQUFDO1FBSXBDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0lBRXVFLENBQUM7SUFFOUYsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQztJQUN4QyxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVE7UUFDWixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMzQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELFFBQVEsQ0FBQyxPQUEyQjtRQUNsQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxLQUFLLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDekQsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUEyQjtRQUNwQyxPQUFPLElBQUksQ0FBQyxtQkFBbUIsS0FB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LG9CQUFvQiw0SUNWakMscXhGQXVFQTsyRkQ3RGEsb0JBQW9CO2tCQUpoQyxTQUFTOytCQUNFLGtCQUFrQjtrSUFJbkIsV0FBVztzQkFBbkIsS0FBSztnQkFDRyxtQkFBbUI7c0JBQTNCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElBcHBsaWNhdGlvbiwgSUFwcGxpY2F0aW9uQmluYXJ5IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEVjb3N5c3RlbVNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2Vjb3N5c3RlbS9zaGFyZWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYWN0aXZpdHktbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjdGl2aXR5LWxvZy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQWN0aXZpdHlMb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBhcHBsaWNhdGlvbjogSUFwcGxpY2F0aW9uO1xuICBASW5wdXQoKSBoYXNBZG1pblBlcm1pc3Npb25zID0gZmFsc2U7XG4gIGFyY2hpdmVzOiBJQXBwbGljYXRpb25CaW5hcnlbXSA9IFtdO1xuICB0b0FjdGl2YXRlVmVyc2lvbklkOiBzdHJpbmc7XG4gIGxhc3Q6IElBcHBsaWNhdGlvbkJpbmFyeTtcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuICBjYW5SZWFjdGl2YXRlID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlY29zeXN0ZW1TZXJ2aWNlOiBFY29zeXN0ZW1TZXJ2aWNlLCBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlKSB7fVxuXG4gIGdldCB1cGxvYWRQcm9ncmVzcygpOiBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPiB7XG4gICAgcmV0dXJuIHRoaXMuZWNvc3lzdGVtU2VydmljZS5wcm9ncmVzcztcbiAgfVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMuY2FuUmVhY3RpdmF0ZSA9IHRoaXMuc2hvd1JlYWN0aXZhdGUoKTtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG4gIGlzQWN0aXZlKGFyY2hpdmU6IElBcHBsaWNhdGlvbkJpbmFyeSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmFwcGxpY2F0aW9uLmFjdGl2ZVZlcnNpb25JZCA9PT0gYXJjaGl2ZS5pZDtcbiAgfVxuXG4gIHRvQWN0aXZhdGUoYXJjaGl2ZTogSUFwcGxpY2F0aW9uQmluYXJ5KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudG9BY3RpdmF0ZVZlcnNpb25JZCA9PT0gYXJjaGl2ZS5pZDtcbiAgfVxuXG4gIGNoZWNrSWZMYXN0KGFyY2hpdmU6IElBcHBsaWNhdGlvbkJpbmFyeSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBhcmNoaXZlLmlkID09PSB0aGlzLmxhc3QuaWQ7XG4gIH1cblxuICBzaG93UmVhY3RpdmF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmlzQXBwbGljYXRpb24odGhpcy5hcHBsaWNhdGlvbik7XG4gIH1cblxuICBhc3luYyBzZXRBY3RpdmUoYXJjaGl2ZSk6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGlkID0gYXJjaGl2ZS5pZCB8fCBhcmNoaXZlO1xuICAgIHRoaXMudG9BY3RpdmF0ZVZlcnNpb25JZCA9IGlkO1xuICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgdGhpcy5hcHBsaWNhdGlvbiA9IChcbiAgICAgICAgYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnNldEFwcEFjdGl2ZVZlcnNpb24odGhpcy5hcHBsaWNhdGlvbiwgaWQpXG4gICAgICApLmRhdGE7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgIH1cbiAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlQXJjaGl2ZShhcmNoaXZlOiBJQXBwbGljYXRpb25CaW5hcnkpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuZGVsZXRlQXJjaGl2ZShhcmNoaXZlLCB0aGlzLmFwcGxpY2F0aW9uKTtcbiAgICB0aGlzLnJlZnJlc2goKTtcbiAgfVxuXG4gIGFzeW5jIGRvd25sb2FkQXJjaGl2ZShhcmNoaXZlOiBJQXBwbGljYXRpb25CaW5hcnkpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuZG93bmxvYWRBcmNoaXZlKHRoaXMuYXBwbGljYXRpb24sIGFyY2hpdmUpO1xuICB9XG5cbiAgYXN5bmMgcmVhY3RpdmF0ZUFyY2hpdmUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnJlYWN0aXZhdGVBcmNoaXZlKHRoaXMuYXBwbGljYXRpb24pO1xuICB9XG5cbiAgYXN5bmMgb25SZWZyZXNoKCkge1xuICAgIGF3YWl0IHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZWZyZXNoKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICB0aGlzLmFyY2hpdmVzID0gYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmxpc3RBcmNoaXZlcyh0aGlzLmFwcGxpY2F0aW9uLmlkKTtcbiAgICBpZiAodGhpcy5hcHBsaWNhdGlvbi5tYW5pZmVzdD8ucGFja2FnZSA9PT0gJ2JsdWVwcmludCcpIHtcbiAgICAgIC8vIGZpbHRlciBvdXQgZW50cmllcyB3aXRob3V0IGRlc2NyaXB0aW9uIGJlY2F1c2UgdXNpbmcgdGhlbSBhcyBhY3RpdmUgbWF5IGJyZWFrIGFwcGxpY2F0aW9uJ3NcbiAgICAgIC8vICBtYW5pZmVzdCAoY2hhbmdpbmcgaXNQYWNrYWdlIHByb3BlcnR5IG9mIGRlcGxveWVkIGFwcCB0byAndHJ1ZScpXG4gICAgICB0aGlzLmFyY2hpdmVzID0gdGhpcy5hcmNoaXZlcy5maWx0ZXIoKGFyY2hpdmU6IElBcHBsaWNhdGlvbkJpbmFyeSkgPT4gISFhcmNoaXZlLmRlc2NyaXB0aW9uKTtcbiAgICB9XG4gICAgdGhpcy5hcmNoaXZlcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICByZXR1cm4gKG5ldyBEYXRlKGIuY3JlYXRlZCkgYXMgYW55KSAtIChuZXcgRGF0ZShhLmNyZWF0ZWQpIGFzIGFueSk7XG4gICAgfSk7XG4gICAgdGhpcy5sYXN0ID0gdGhpcy5hcmNoaXZlc1t0aGlzLmFyY2hpdmVzLmxlbmd0aCAtIDFdO1xuICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJpbm5lci1zY3JvbGwgYmctbGV2ZWwtMSBmbGV4LWdyb3dcIj5cbiAgPGRpdiBjbGFzcz1cImNhcmQtYmxvY2sgb3ZlcmZsb3ctdmlzaWJsZVwiPlxuICAgIDxjOHktbGlzdC1ncm91cD5cbiAgICAgIDxjOHktbGktdGltZWxpbmUgKm5nRm9yPVwibGV0IGFyY2hpdmUgb2YgYXJjaGl2ZXNcIiBbbmdDbGFzc109XCJ7IGFjdGl2ZTogaXNBY3RpdmUoYXJjaGl2ZSkgfVwiPlxuICAgICAgICB7eyBhcmNoaXZlLmNyZWF0ZWQgfCBkYXRlOiAnZCBNTU0gWVlZWScgfX1cbiAgICAgICAge3sgYXJjaGl2ZS5jcmVhdGVkIHwgZGF0ZTogJ3Nob3J0VGltZScgfX1cbiAgICAgICAgPGM4eS1saT5cbiAgICAgICAgICA8Yzh5LWxpLWljb25cbiAgICAgICAgICAgIFtpY29uXT1cImNoZWNrSWZMYXN0KGFyY2hpdmUpID8gJ2ZsYWctY2hlY2tlcmVkJyA6ICdmaWxlLXppcC1vJ1wiXG4gICAgICAgICAgPjwvYzh5LWxpLWljb24+XG4gICAgICAgICAgPGM4eS1saS1ib2R5PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhLWktc3RhcnRcIj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIm1pbi13aWR0aDogMDsgZmxleDogMVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC10cnVuY2F0ZS13cmFwXCIgdGl0bGU9XCIge3sgYXJjaGl2ZS5kZXNjcmlwdGlvbiB8fCBhcmNoaXZlLm5hbWUgfX1cIj5cbiAgICAgICAgICAgICAgICAgIHt7IGFyY2hpdmUuZGVzY3JpcHRpb24gfHwgYXJjaGl2ZS5uYW1lIH19XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzbWFsbCAqbmdJZj1cImFyY2hpdmUuZGVzY3JpcHRpb25cIiBjbGFzcz1cInRleHQtbXV0ZWRcIj57e1xuICAgICAgICAgICAgICAgICAgYXJjaGl2ZS5kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgIH19PC9zbWFsbD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgKm5nSWY9XCJpc0xvYWRpbmcgJiYgdG9BY3RpdmF0ZShhcmNoaXZlKVwiXG4gICAgICAgICAgICAgICAgW2M4eUljb25dPVwiJ2NpcmNsZS1vLW5vdGNoJ1wiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uLXNwaW5cIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwie3sgJ0FjdGl2YXRpbmcnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgPjwvaT5cblxuICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cImlzQWN0aXZlKGFyY2hpdmUpXCIgY2xhc3M9XCJsYWJlbCBsYWJlbC1wcmltYXJ5IG0tbC1hdXRvIG0tdC00XCI+e3tcbiAgICAgICAgICAgICAgICAnQWN0aXZlJyB8IHRyYW5zbGF0ZVxuICAgICAgICAgICAgICB9fTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYzh5LWxpLWJvZHk+XG4gICAgICAgICAgPGM4eS1saS1hY3Rpb25cbiAgICAgICAgICAgIChjbGljayk9XCJzZXRBY3RpdmUoYXJjaGl2ZSlcIlxuICAgICAgICAgICAgKm5nSWY9XCJoYXNBZG1pblBlcm1pc3Npb25zICYmICFpc0xvYWRpbmcgJiYgIWlzQWN0aXZlKGFyY2hpdmUpXCJcbiAgICAgICAgICAgIGljb249XCJjaGVjay1zcXVhcmUtb1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3sgJ1NldCBhcyBhY3RpdmVgYXJjaGl2ZWAnIHwgdHJhbnNsYXRlIH19XG4gICAgICAgICAgPC9jOHktbGktYWN0aW9uPlxuICAgICAgICAgIDxjOHktbGktYWN0aW9uIChjbGljayk9XCJkb3dubG9hZEFyY2hpdmUoYXJjaGl2ZSlcIiBpY29uPVwiZG93bmxvYWRcIj5cbiAgICAgICAgICAgIHt7ICdEb3dubG9hZGBhcmNoaXZlYCcgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgICA8L2M4eS1saS1hY3Rpb24+XG4gICAgICAgICAgPGM4eS1saS1hY3Rpb25cbiAgICAgICAgICAgIChjbGljayk9XCJkZWxldGVBcmNoaXZlKGFyY2hpdmUpXCJcbiAgICAgICAgICAgICpuZ0lmPVwiXG4gICAgICAgICAgICAgIGhhc0FkbWluUGVybWlzc2lvbnMgJiZcbiAgICAgICAgICAgICAgYXJjaGl2ZXMubGVuZ3RoID4gMSAmJlxuICAgICAgICAgICAgICAhY2hlY2tJZkxhc3QoYXJjaGl2ZSkgJiZcbiAgICAgICAgICAgICAgIWlzQWN0aXZlKGFyY2hpdmUpXG4gICAgICAgICAgICBcIlxuICAgICAgICAgICAgaWNvbj1cImRlbGV0ZVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3sgJ0RlbGV0ZWBhcmNoaXZlYCcgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgICA8L2M4eS1saS1hY3Rpb24+XG4gICAgICAgICAgPGM4eS1saS1hY3Rpb25cbiAgICAgICAgICAgIChjbGljayk9XCJyZWFjdGl2YXRlQXJjaGl2ZSgpXCJcbiAgICAgICAgICAgICpuZ0lmPVwiaGFzQWRtaW5QZXJtaXNzaW9ucyAmJiBjYW5SZWFjdGl2YXRlICYmIGlzQWN0aXZlKGFyY2hpdmUpXCJcbiAgICAgICAgICAgIGljb249XCJ1bmRvXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7eyAnUmVhY3RpdmF0ZSBhcmNoaXZlJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvYzh5LWxpLWFjdGlvbj5cbiAgICAgICAgPC9jOHktbGk+XG4gICAgICA8L2M4eS1saS10aW1lbGluZT5cbiAgICA8L2M4eS1saXN0LWdyb3VwPlxuICA8L2Rpdj5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cImNhcmQtZm9vdGVyXCIgKm5nSWY9XCIhaXNMb2FkaW5nICYmIGhhc0FkbWluUGVybWlzc2lvbnNcIj5cbiAgPGM4eS1mb3JtLWdyb3VwIGNsYXNzPVwibS1hdXRvXCI+XG4gICAgPGM4eS11cGxvYWQtYXJjaGl2ZSBbKGFwcGxpY2F0aW9uKV09XCJhcHBsaWNhdGlvblwiIChyZWZyZXNoKT1cIm9uUmVmcmVzaCgpXCI+PC9jOHktdXBsb2FkLWFyY2hpdmU+XG4gIDwvYzh5LWZvcm0tZ3JvdXA+XG48L2Rpdj5cbiJdfQ==