import { Injectable } from '@angular/core';
import { Permissions } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
export class EcosystemNavigationFactory {
    constructor(permissions) {
        this.permissions = permissions;
        this.navs = [];
        this.showNavigatorNodes = this.permissions.hasAnyRole([
            'ROLE_APPLICATION_MANAGEMENT_READ',
            'ROLE_APPLICATION_MANAGEMENT_ADMIN'
        ]);
    }
    async get() {
        /*
    The NavigatorNodes are added in AngularJS code to keep the Quick links widget working.
    After the Quick links widget is migrated to Angular, the logic of adding the NavigatorNodes can be migrated as well.
        if (this.navs.length === 0 && this.showNavigatorNodes) {
          const applicationsNode: NavigatorNode = new NavigatorNode({
            label: gettext('Applications'),
            icon: 'c8y-modules',
            path: '/ecosystem',
            priority: 300,
            routerLinkExact: false
          });
    
          const microservicesNode = new NavigatorNode({
            label: gettext('Microservices'),
            icon: 'microchip',
            path: '/microservices',
            priority: 200,
            routerLinkExact: false
          });
    
          this.navs.push(
            new NavigatorNode({
              label: gettext('Ecosystem'),
              icon: 'c8y-atom',
              priority: 3200,
              children: [applicationsNode, microservicesNode]
            })
          );
        }
    */
        return this.navs;
    }
}
EcosystemNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: EcosystemNavigationFactory, deps: [{ token: i1.Permissions }], target: i0.ɵɵFactoryTarget.Injectable });
EcosystemNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: EcosystemNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: EcosystemNavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Permissions }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNvc3lzdGVtLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Vjb3N5c3RlbS9lY29zeXN0ZW0tbmF2aWdhdGlvbi5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUF1QyxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBR3ZGLE1BQU0sT0FBTywwQkFBMEI7SUFJckMsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFIcEMsU0FBSSxHQUFvQixFQUFFLENBQUM7UUFJakMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDO1lBQ3BELGtDQUFrQztZQUNsQyxtQ0FBbUM7U0FDcEMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFHO1FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BNkJGO1FBQ0UsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7O3VIQTNDVSwwQkFBMEI7MkhBQTFCLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQUR0QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnksIFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFY29zeXN0ZW1OYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgcHJpdmF0ZSBuYXZzOiBOYXZpZ2F0b3JOb2RlW10gPSBbXTtcbiAgcHJpdmF0ZSBzaG93TmF2aWdhdG9yTm9kZXM6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwZXJtaXNzaW9uczogUGVybWlzc2lvbnMpIHtcbiAgICB0aGlzLnNob3dOYXZpZ2F0b3JOb2RlcyA9IHRoaXMucGVybWlzc2lvbnMuaGFzQW55Um9sZShbXG4gICAgICAnUk9MRV9BUFBMSUNBVElPTl9NQU5BR0VNRU5UX1JFQUQnLFxuICAgICAgJ1JPTEVfQVBQTElDQVRJT05fTUFOQUdFTUVOVF9BRE1JTidcbiAgICBdKTtcbiAgfVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICAvKlxuVGhlIE5hdmlnYXRvck5vZGVzIGFyZSBhZGRlZCBpbiBBbmd1bGFySlMgY29kZSB0byBrZWVwIHRoZSBRdWljayBsaW5rcyB3aWRnZXQgd29ya2luZy5cbkFmdGVyIHRoZSBRdWljayBsaW5rcyB3aWRnZXQgaXMgbWlncmF0ZWQgdG8gQW5ndWxhciwgdGhlIGxvZ2ljIG9mIGFkZGluZyB0aGUgTmF2aWdhdG9yTm9kZXMgY2FuIGJlIG1pZ3JhdGVkIGFzIHdlbGwuXG4gICAgaWYgKHRoaXMubmF2cy5sZW5ndGggPT09IDAgJiYgdGhpcy5zaG93TmF2aWdhdG9yTm9kZXMpIHtcbiAgICAgIGNvbnN0IGFwcGxpY2F0aW9uc05vZGU6IE5hdmlnYXRvck5vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdBcHBsaWNhdGlvbnMnKSxcbiAgICAgICAgaWNvbjogJ2M4eS1tb2R1bGVzJyxcbiAgICAgICAgcGF0aDogJy9lY29zeXN0ZW0nLFxuICAgICAgICBwcmlvcml0eTogMzAwLFxuICAgICAgICByb3V0ZXJMaW5rRXhhY3Q6IGZhbHNlXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgbWljcm9zZXJ2aWNlc05vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdNaWNyb3NlcnZpY2VzJyksXG4gICAgICAgIGljb246ICdtaWNyb2NoaXAnLFxuICAgICAgICBwYXRoOiAnL21pY3Jvc2VydmljZXMnLFxuICAgICAgICBwcmlvcml0eTogMjAwLFxuICAgICAgICByb3V0ZXJMaW5rRXhhY3Q6IGZhbHNlXG4gICAgICB9KTtcblxuICAgICAgdGhpcy5uYXZzLnB1c2goXG4gICAgICAgIG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRWNvc3lzdGVtJyksXG4gICAgICAgICAgaWNvbjogJ2M4eS1hdG9tJyxcbiAgICAgICAgICBwcmlvcml0eTogMzIwMCxcbiAgICAgICAgICBjaGlsZHJlbjogW2FwcGxpY2F0aW9uc05vZGUsIG1pY3Jvc2VydmljZXNOb2RlXVxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4qL1xuICAgIHJldHVybiB0aGlzLm5hdnM7XG4gIH1cbn1cbiJdfQ==