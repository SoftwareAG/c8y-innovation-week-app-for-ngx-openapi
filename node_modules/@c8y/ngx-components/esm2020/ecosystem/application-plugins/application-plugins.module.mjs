import { NgModule } from '@angular/core';
import { CoreModule } from '@c8y/ngx-components';
import { SharedEcosystemModule } from '@c8y/ngx-components/ecosystem/shared';
import { ApplicationPluginsComponent } from './application-plugins.component';
import { UpdatePluginOfAppComponent } from './update-plugin-of-app/update-plugin-of-app.component';
import { AppStatePipe } from './appState.pipe';
import { AppsToUpdateRemotesSelectComponent } from './apps-to-update-remotes-select.component';
import { InstallPluginComponent } from './install-plugin.component';
import { OrphanedStatusCellRendererComponent } from './orphaned-status-cell-renderer.component';
import { PluginListItemComponent } from './plugin-list-item.component';
import { PluginListComponent } from './plugin-list.component';
import { LabelCellRendererComponent } from './label-cell-renderer.component';
import { gettext, hookRoute, ViewContext } from '@c8y/ngx-components';
import { ApplicationPluginsGuard } from './application-plugins.guard';
import { OnlyLatestPluginVersionPipe } from './only-latest-plugin-version.pipe';
import * as i0 from "@angular/core";
export class ApplicationPluginsModule {
}
ApplicationPluginsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ApplicationPluginsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ApplicationPluginsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ApplicationPluginsModule, declarations: [ApplicationPluginsComponent,
        PluginListItemComponent,
        InstallPluginComponent,
        PluginListComponent,
        AppsToUpdateRemotesSelectComponent,
        AppStatePipe,
        LabelCellRendererComponent,
        OrphanedStatusCellRendererComponent,
        UpdatePluginOfAppComponent,
        OnlyLatestPluginVersionPipe], imports: [CoreModule, SharedEcosystemModule], exports: [ApplicationPluginsComponent,
        PluginListItemComponent,
        InstallPluginComponent,
        PluginListComponent,
        AppsToUpdateRemotesSelectComponent,
        AppStatePipe,
        LabelCellRendererComponent,
        OrphanedStatusCellRendererComponent,
        UpdatePluginOfAppComponent] });
ApplicationPluginsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ApplicationPluginsModule, providers: [
        ApplicationPluginsGuard,
        hookRoute([
            {
                path: 'plugins',
                component: ApplicationPluginsComponent,
                icon: 'plugin',
                label: gettext('Plugins'),
                context: ViewContext.Application,
                priority: 3,
                canActivate: [ApplicationPluginsGuard]
            }
        ])
    ], imports: [CoreModule, SharedEcosystemModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ApplicationPluginsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CoreModule, SharedEcosystemModule],
                    declarations: [
                        ApplicationPluginsComponent,
                        PluginListItemComponent,
                        InstallPluginComponent,
                        PluginListComponent,
                        AppsToUpdateRemotesSelectComponent,
                        AppStatePipe,
                        LabelCellRendererComponent,
                        OrphanedStatusCellRendererComponent,
                        UpdatePluginOfAppComponent,
                        OnlyLatestPluginVersionPipe
                    ],
                    exports: [
                        ApplicationPluginsComponent,
                        PluginListItemComponent,
                        InstallPluginComponent,
                        PluginListComponent,
                        AppsToUpdateRemotesSelectComponent,
                        AppStatePipe,
                        LabelCellRendererComponent,
                        OrphanedStatusCellRendererComponent,
                        UpdatePluginOfAppComponent
                    ],
                    providers: [
                        ApplicationPluginsGuard,
                        hookRoute([
                            {
                                path: 'plugins',
                                component: ApplicationPluginsComponent,
                                icon: 'plugin',
                                label: gettext('Plugins'),
                                context: ViewContext.Application,
                                priority: 3,
                                canActivate: [ApplicationPluginsGuard]
                            }
                        ])
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb24tcGx1Z2lucy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9lY29zeXN0ZW0vYXBwbGljYXRpb24tcGx1Z2lucy9hcHBsaWNhdGlvbi1wbHVnaW5zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNuRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDL0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDaEcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7O0FBMENoRixNQUFNLE9BQU8sd0JBQXdCOztxSEFBeEIsd0JBQXdCO3NIQUF4Qix3QkFBd0IsaUJBckNqQywyQkFBMkI7UUFDM0IsdUJBQXVCO1FBQ3ZCLHNCQUFzQjtRQUN0QixtQkFBbUI7UUFDbkIsa0NBQWtDO1FBQ2xDLFlBQVk7UUFDWiwwQkFBMEI7UUFDMUIsbUNBQW1DO1FBQ25DLDBCQUEwQjtRQUMxQiwyQkFBMkIsYUFYbkIsVUFBVSxFQUFFLHFCQUFxQixhQWN6QywyQkFBMkI7UUFDM0IsdUJBQXVCO1FBQ3ZCLHNCQUFzQjtRQUN0QixtQkFBbUI7UUFDbkIsa0NBQWtDO1FBQ2xDLFlBQVk7UUFDWiwwQkFBMEI7UUFDMUIsbUNBQW1DO1FBQ25DLDBCQUEwQjtzSEFpQmpCLHdCQUF3QixhQWZ4QjtRQUNULHVCQUF1QjtRQUN2QixTQUFTLENBQUM7WUFDUjtnQkFDRSxJQUFJLEVBQUUsU0FBUztnQkFDZixTQUFTLEVBQUUsMkJBQTJCO2dCQUN0QyxJQUFJLEVBQUUsUUFBUTtnQkFDZCxLQUFLLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQztnQkFDekIsT0FBTyxFQUFFLFdBQVcsQ0FBQyxXQUFXO2dCQUNoQyxRQUFRLEVBQUUsQ0FBQztnQkFDWCxXQUFXLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQzthQUN2QztTQUNGLENBQUM7S0FDSCxZQXJDUyxVQUFVLEVBQUUscUJBQXFCOzJGQXVDaEMsd0JBQXdCO2tCQXhDcEMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUscUJBQXFCLENBQUM7b0JBQzVDLFlBQVksRUFBRTt3QkFDWiwyQkFBMkI7d0JBQzNCLHVCQUF1Qjt3QkFDdkIsc0JBQXNCO3dCQUN0QixtQkFBbUI7d0JBQ25CLGtDQUFrQzt3QkFDbEMsWUFBWTt3QkFDWiwwQkFBMEI7d0JBQzFCLG1DQUFtQzt3QkFDbkMsMEJBQTBCO3dCQUMxQiwyQkFBMkI7cUJBQzVCO29CQUNELE9BQU8sRUFBRTt3QkFDUCwyQkFBMkI7d0JBQzNCLHVCQUF1Qjt3QkFDdkIsc0JBQXNCO3dCQUN0QixtQkFBbUI7d0JBQ25CLGtDQUFrQzt3QkFDbEMsWUFBWTt3QkFDWiwwQkFBMEI7d0JBQzFCLG1DQUFtQzt3QkFDbkMsMEJBQTBCO3FCQUMzQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsdUJBQXVCO3dCQUN2QixTQUFTLENBQUM7NEJBQ1I7Z0NBQ0UsSUFBSSxFQUFFLFNBQVM7Z0NBQ2YsU0FBUyxFQUFFLDJCQUEyQjtnQ0FDdEMsSUFBSSxFQUFFLFFBQVE7Z0NBQ2QsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7Z0NBQ3pCLE9BQU8sRUFBRSxXQUFXLENBQUMsV0FBVztnQ0FDaEMsUUFBUSxFQUFFLENBQUM7Z0NBQ1gsV0FBVyxFQUFFLENBQUMsdUJBQXVCLENBQUM7NkJBQ3ZDO3lCQUNGLENBQUM7cUJBQ0g7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgU2hhcmVkRWNvc3lzdGVtTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9lY29zeXN0ZW0vc2hhcmVkJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uUGx1Z2luc0NvbXBvbmVudCB9IGZyb20gJy4vYXBwbGljYXRpb24tcGx1Z2lucy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVXBkYXRlUGx1Z2luT2ZBcHBDb21wb25lbnQgfSBmcm9tICcuL3VwZGF0ZS1wbHVnaW4tb2YtYXBwL3VwZGF0ZS1wbHVnaW4tb2YtYXBwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBTdGF0ZVBpcGUgfSBmcm9tICcuL2FwcFN0YXRlLnBpcGUnO1xuaW1wb3J0IHsgQXBwc1RvVXBkYXRlUmVtb3Rlc1NlbGVjdENvbXBvbmVudCB9IGZyb20gJy4vYXBwcy10by11cGRhdGUtcmVtb3Rlcy1zZWxlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IEluc3RhbGxQbHVnaW5Db21wb25lbnQgfSBmcm9tICcuL2luc3RhbGwtcGx1Z2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPcnBoYW5lZFN0YXR1c0NlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vb3JwaGFuZWQtc3RhdHVzLWNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFBsdWdpbkxpc3RJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9wbHVnaW4tbGlzdC1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQbHVnaW5MaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9wbHVnaW4tbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGFiZWxDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2xhYmVsLWNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IGdldHRleHQsIGhvb2tSb3V0ZSwgVmlld0NvbnRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uUGx1Z2luc0d1YXJkIH0gZnJvbSAnLi9hcHBsaWNhdGlvbi1wbHVnaW5zLmd1YXJkJztcbmltcG9ydCB7IE9ubHlMYXRlc3RQbHVnaW5WZXJzaW9uUGlwZSB9IGZyb20gJy4vb25seS1sYXRlc3QtcGx1Z2luLXZlcnNpb24ucGlwZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBTaGFyZWRFY29zeXN0ZW1Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBBcHBsaWNhdGlvblBsdWdpbnNDb21wb25lbnQsXG4gICAgUGx1Z2luTGlzdEl0ZW1Db21wb25lbnQsXG4gICAgSW5zdGFsbFBsdWdpbkNvbXBvbmVudCxcbiAgICBQbHVnaW5MaXN0Q29tcG9uZW50LFxuICAgIEFwcHNUb1VwZGF0ZVJlbW90ZXNTZWxlY3RDb21wb25lbnQsXG4gICAgQXBwU3RhdGVQaXBlLFxuICAgIExhYmVsQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIE9ycGhhbmVkU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIFVwZGF0ZVBsdWdpbk9mQXBwQ29tcG9uZW50LFxuICAgIE9ubHlMYXRlc3RQbHVnaW5WZXJzaW9uUGlwZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQXBwbGljYXRpb25QbHVnaW5zQ29tcG9uZW50LFxuICAgIFBsdWdpbkxpc3RJdGVtQ29tcG9uZW50LFxuICAgIEluc3RhbGxQbHVnaW5Db21wb25lbnQsXG4gICAgUGx1Z2luTGlzdENvbXBvbmVudCxcbiAgICBBcHBzVG9VcGRhdGVSZW1vdGVzU2VsZWN0Q29tcG9uZW50LFxuICAgIEFwcFN0YXRlUGlwZSxcbiAgICBMYWJlbENlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgICBPcnBoYW5lZFN0YXR1c0NlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgICBVcGRhdGVQbHVnaW5PZkFwcENvbXBvbmVudFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBBcHBsaWNhdGlvblBsdWdpbnNHdWFyZCxcbiAgICBob29rUm91dGUoW1xuICAgICAge1xuICAgICAgICBwYXRoOiAncGx1Z2lucycsXG4gICAgICAgIGNvbXBvbmVudDogQXBwbGljYXRpb25QbHVnaW5zQ29tcG9uZW50LFxuICAgICAgICBpY29uOiAncGx1Z2luJyxcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ1BsdWdpbnMnKSxcbiAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuQXBwbGljYXRpb24sXG4gICAgICAgIHByaW9yaXR5OiAzLFxuICAgICAgICBjYW5BY3RpdmF0ZTogW0FwcGxpY2F0aW9uUGx1Z2luc0d1YXJkXVxuICAgICAgfVxuICAgIF0pXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQXBwbGljYXRpb25QbHVnaW5zTW9kdWxlIHt9XG4iXX0=