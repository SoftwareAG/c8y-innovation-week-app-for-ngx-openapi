import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
export class PluginListItemComponent {
    constructor() {
        this.isItemSelected = new EventEmitter();
    }
    onChange(event) {
        this.isItemSelected.next(event);
    }
}
PluginListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PluginListItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PluginListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: PluginListItemComponent, selector: "c8y-plugin-list-item", inputs: { plugin: "plugin", selectable: "selectable" }, outputs: { isItemSelected: "isItemSelected" }, ngImport: i0, template: "\n  <c8y-li-checkbox\n    (change)=\"onChange($event.target.checked)\"\n    *ngIf=\"selectable\"\n    [disabled]=\"plugin.installed\"\n    class=\"p-r-16 p-l-0\"\n  ></c8y-li-checkbox>\n  <c8y-li-icon class=\"p-l-0\">\n    <i class=\"c8y-plugin-icon\">\n      <span>{{ plugin.name?.substr(0, 2) }}</span>\n    </i>\n  </c8y-li-icon>\n  <div class=\"d-flex\">\n    <div [ngClass]=\"{'p-r-8' : selectable}\">\n      <p>\n        <span class=\"text-medium\">{{ plugin.name }}</span>\n        <em class=\"text-muted small m-l-8\">{{ plugin.version }}</em>\n        <span *ngIf=\"plugin.installed\">\n          <i [c8yIcon]=\"'check-circle'\" class=\"text-success\"></i>\n          <em class=\"text-muted small\" translate>Installed`plugins`</em>\n        </span>\n      </p>\n      <p class=\"small l-h-tight\">{{ plugin.description }}</p>\n    </div>\n    <span *ngIf=\"selectable\" class=\"label label-info m-l-auto a-s-start\">{{\n      plugin.contextPath\n    }}</span>\n  </div>\n     \n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: ["icon", "status"] }, { kind: "component", type: i1.ListItemCheckboxComponent, selector: "c8y-list-item-checkbox, c8y-li-checkbox", inputs: ["selected", "disabled", "displayAsSwitch"], outputs: ["onSelect"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: PluginListItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-plugin-list-item', template: "\n  <c8y-li-checkbox\n    (change)=\"onChange($event.target.checked)\"\n    *ngIf=\"selectable\"\n    [disabled]=\"plugin.installed\"\n    class=\"p-r-16 p-l-0\"\n  ></c8y-li-checkbox>\n  <c8y-li-icon class=\"p-l-0\">\n    <i class=\"c8y-plugin-icon\">\n      <span>{{ plugin.name?.substr(0, 2) }}</span>\n    </i>\n  </c8y-li-icon>\n  <div class=\"d-flex\">\n    <div [ngClass]=\"{'p-r-8' : selectable}\">\n      <p>\n        <span class=\"text-medium\">{{ plugin.name }}</span>\n        <em class=\"text-muted small m-l-8\">{{ plugin.version }}</em>\n        <span *ngIf=\"plugin.installed\">\n          <i [c8yIcon]=\"'check-circle'\" class=\"text-success\"></i>\n          <em class=\"text-muted small\" translate>Installed`plugins`</em>\n        </span>\n      </p>\n      <p class=\"small l-h-tight\">{{ plugin.description }}</p>\n    </div>\n    <span *ngIf=\"selectable\" class=\"label label-info m-l-auto a-s-start\">{{\n      plugin.contextPath\n    }}</span>\n  </div>\n     \n" }]
        }], propDecorators: { plugin: [{
                type: Input
            }], selectable: [{
                type: Input
            }], isItemSelected: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLWxpc3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9lY29zeXN0ZW0vYXBwbGljYXRpb24tcGx1Z2lucy9wbHVnaW4tbGlzdC1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hcHBsaWNhdGlvbi1wbHVnaW5zL3BsdWdpbi1saXN0LWl0ZW0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU92RSxNQUFNLE9BQU8sdUJBQXVCO0lBSnBDO1FBT1ksbUJBQWMsR0FBMEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztLQUt0RTtJQUhDLFFBQVEsQ0FBQyxLQUFLO1FBQ1osSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7b0hBUFUsdUJBQXVCO3dHQUF2Qix1QkFBdUIsbUtDUHBDLDg5QkE2QkE7MkZEdEJhLHVCQUF1QjtrQkFKbkMsU0FBUzsrQkFDRSxzQkFBc0I7OEJBSXZCLE1BQU07c0JBQWQsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNJLGNBQWM7c0JBQXZCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25QbHVnaW4gfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXBsdWdpbi1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcGx1Z2luLWxpc3QtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUGx1Z2luTGlzdEl0ZW1Db21wb25lbnQge1xuICBASW5wdXQoKSBwbHVnaW46IEFwcGxpY2F0aW9uUGx1Z2luO1xuICBASW5wdXQoKSBzZWxlY3RhYmxlOiBib29sZWFuO1xuICBAT3V0cHV0KCkgaXNJdGVtU2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBvbkNoYW5nZShldmVudCkge1xuICAgIHRoaXMuaXNJdGVtU2VsZWN0ZWQubmV4dChldmVudCk7XG4gIH1cbn1cbiIsIlxuICA8Yzh5LWxpLWNoZWNrYm94XG4gICAgKGNoYW5nZSk9XCJvbkNoYW5nZSgkZXZlbnQudGFyZ2V0LmNoZWNrZWQpXCJcbiAgICAqbmdJZj1cInNlbGVjdGFibGVcIlxuICAgIFtkaXNhYmxlZF09XCJwbHVnaW4uaW5zdGFsbGVkXCJcbiAgICBjbGFzcz1cInAtci0xNiBwLWwtMFwiXG4gID48L2M4eS1saS1jaGVja2JveD5cbiAgPGM4eS1saS1pY29uIGNsYXNzPVwicC1sLTBcIj5cbiAgICA8aSBjbGFzcz1cImM4eS1wbHVnaW4taWNvblwiPlxuICAgICAgPHNwYW4+e3sgcGx1Z2luLm5hbWU/LnN1YnN0cigwLCAyKSB9fTwvc3Bhbj5cbiAgICA8L2k+XG4gIDwvYzh5LWxpLWljb24+XG4gIDxkaXYgY2xhc3M9XCJkLWZsZXhcIj5cbiAgICA8ZGl2IFtuZ0NsYXNzXT1cInsncC1yLTgnIDogc2VsZWN0YWJsZX1cIj5cbiAgICAgIDxwPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbWVkaXVtXCI+e3sgcGx1Z2luLm5hbWUgfX08L3NwYW4+XG4gICAgICAgIDxlbSBjbGFzcz1cInRleHQtbXV0ZWQgc21hbGwgbS1sLThcIj57eyBwbHVnaW4udmVyc2lvbiB9fTwvZW0+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwicGx1Z2luLmluc3RhbGxlZFwiPlxuICAgICAgICAgIDxpIFtjOHlJY29uXT1cIidjaGVjay1jaXJjbGUnXCIgY2xhc3M9XCJ0ZXh0LXN1Y2Nlc3NcIj48L2k+XG4gICAgICAgICAgPGVtIGNsYXNzPVwidGV4dC1tdXRlZCBzbWFsbFwiIHRyYW5zbGF0ZT5JbnN0YWxsZWRgcGx1Z2luc2A8L2VtPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L3A+XG4gICAgICA8cCBjbGFzcz1cInNtYWxsIGwtaC10aWdodFwiPnt7IHBsdWdpbi5kZXNjcmlwdGlvbiB9fTwvcD5cbiAgICA8L2Rpdj5cbiAgICA8c3BhbiAqbmdJZj1cInNlbGVjdGFibGVcIiBjbGFzcz1cImxhYmVsIGxhYmVsLWluZm8gbS1sLWF1dG8gYS1zLXN0YXJ0XCI+e3tcbiAgICAgIHBsdWdpbi5jb250ZXh0UGF0aFxuICAgIH19PC9zcGFuPlxuICA8L2Rpdj5cbiAgICAgXG4iXX0=