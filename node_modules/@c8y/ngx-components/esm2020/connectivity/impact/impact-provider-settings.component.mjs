import { Component } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { TenantConnectionStatus } from './impact.model';
import * as i0 from "@angular/core";
import * as i1 from "./impact-connectivity.service";
import * as i2 from "@angular/forms";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
import * as i5 from "ngx-bootstrap/popover";
import * as i6 from "./status-display.component";
export class ImpactProviderSettingsComponent {
    constructor(impactService, formBuilder, modal, alert) {
        this.impactService = impactService;
        this.formBuilder = formBuilder;
        this.modal = modal;
        this.alert = alert;
        this.isEdit = false;
        this.credentialsExist = false;
    }
    async ngOnInit() {
        this.initForm();
        const response = await this.impactService.getOptions();
        this.connectionStatus = await response.json();
        if (this.connectionStatus && this.connectionStatus.options) {
            this.formGroup.patchValue({ ...this.connectionStatus.options });
            this.credentialsExist = true;
        }
        else {
            this.isEdit = true;
        }
    }
    replaceCredentials() {
        this.isEdit = true;
    }
    async saveCredentials() {
        if (this.formGroup.valid) {
            this.connectionStatus.status = TenantConnectionStatus.CONNECTING_IN_PROGRESS;
            const updated = await this.safelyUpdateCredentials(this.formGroup.value);
            if (updated) {
                const response = await this.impactService.getOptions();
                this.connectionStatus = await response.json();
                if (this.connectionStatus.status === TenantConnectionStatus.CONNECTED_SUCCESSFULLY) {
                    this.isEdit = false;
                }
                this.alert.success(gettext('Credentials saved.'));
            }
            else {
                this.connectionStatus.status = TenantConnectionStatus.UNKNOWN;
            }
        }
    }
    async deleteCredentials() {
        try {
            await this.modal.confirm(gettext('Delete credentials'), gettext('You are about to delete your IMPACT credentials. Deleting credentials will break connection to IMPACT instance. Do you want to proceed?'), Status.DANGER, { ok: gettext('Delete'), cancel: gettext('Cancel') });
            await this.safelyDeleteCredentials();
        }
        catch (ex) {
            // Intentionally empty
        }
    }
    initForm() {
        this.formGroup = this.formBuilder.group({
            baseUrl: [],
            user: ['', Validators.required],
            password: ['', Validators.required],
            groupName: [],
            initializeDevices: [false]
        });
    }
    resetForm() {
        this.formGroup.reset();
    }
    async safelyUpdateCredentials(options) {
        try {
            const res = await this.impactService.updateOptions(options);
            if (res && res.status !== 200) {
                const data = res.json ? await res.json() : undefined;
                this.alert.addServerFailure({ data, res });
                return Promise.resolve(false);
            }
            else {
                return Promise.resolve(true);
            }
        }
        catch (ex) {
            this.alert.addServerFailure(ex);
            return Promise.resolve(false);
        }
    }
    async safelyDeleteCredentials() {
        try {
            const res = await this.impactService.deleteOptions();
            if (res && res.status !== 200) {
                const data = res.json ? await res.json() : undefined;
                this.alert.addServerFailure({ data, res });
            }
            else {
                this.credentialsExist = false;
                this.resetForm();
                this.connectionStatus = null;
                this.alert.success(gettext('Credentials deleted.'));
            }
        }
        catch (ex) {
            this.alert.addServerFailure(ex);
        }
    }
}
ImpactProviderSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactProviderSettingsComponent, deps: [{ token: i1.ImpactConnectivityService }, { token: i2.FormBuilder }, { token: i3.ModalService }, { token: i3.AlertService }], target: i0.ɵɵFactoryTarget.Component });
ImpactProviderSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ImpactProviderSettingsComponent, selector: "c8y-impact-provider-settings", ngImport: i0, template: "<c8y-title>{{ 'Connectivity' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [label]=\"'Settings' | translate\" [icon]=\"'cog'\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [icon]=\"'cog'\" [label]=\"'Connectivity' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'cog'\"\n    [label]=\"'IMPACT provider settings' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-8\">\n    <form class=\"card card--fullpage\" [formGroup]=\"formGroup\" novalidate>\n      <div class=\"card-header separator\">\n        <div class=\"card-title\" translate>Credentials</div>\n      </div>\n      <div class=\"inner-scroll\">\n        <div class=\"card-block\" *ngIf=\"isEdit\">\n          <c8y-form-group>\n            <label for=\"baseUrl\" translate>Base URL</label>\n            <input\n              id=\"baseUrl\"\n              name=\"baseUrl\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. https://impact.example.com' | translate }}\"\n              autocomplete=\"off\"\n              formControlName=\"baseUrl\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"user\" translate>User</label>\n            <input\n              id=\"user\"\n              name=\"user\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"user\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"password\" translate>Password</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. my_password' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"password\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"groupName\" translate>IMPACT group name prefix</label>\n            <input\n              id=\"groupName\"\n              name=\"groupName\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. Europe.Nokia`LOCALIZE`' | translate }}\"\n              formControlName=\"groupName\"\n            />\n          </c8y-form-group>\n        </div>\n        <div class=\"card-block bg-level-1\">\n          <div class=\"d-flex\">\n            <c8y-status-display\n              [status]=\"connectionStatus?.status\"\n              [baseUrl]=\"connectionStatus?.options?.baseUrl\"\n            ></c8y-status-display>\n\n            <div class=\"d-flex m-t-auto m-b-auto m-l-auto\">\n              <label class=\"c8y-switch\">\n                <input type=\"checkbox\" formControlName=\"initializeDevices\" />\n                <span></span>\n                {{ 'Refresh devices' | translate }}\n              </label>\n              <button\n                class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n                type=\"button\"\n                [attr.aria-label]=\"'Help' | translate\"\n                popover=\"{{ 'Refresh device resources as part of connecting' | translate }}\"\n                placement=\"right\"\n                triggers=\"focus\"\n                container=\"body\"\n              ></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-block\" *ngIf=\"credentialsExist && !isEdit\">\n          <p translate>\n            Credentials already provided.\n            <br />\n            Click \"Replace credentials\" below to overwrite them.\n          </p>\n        </div>\n      </div>\n      <div class=\"card-footer separator\">\n        <button\n          class=\"btn btn-default\"\n          type=\"submit\"\n          title=\"{{ 'Replace credentials' | translate }}\"\n          *ngIf=\"!isEdit\"\n          (click)=\"replaceCredentials()\"\n        >\n          {{ 'Replace credentials' | translate }}\n        </button>\n        <button\n          class=\"btn btn-danger\"\n          type=\"button\"\n          title=\"{{ 'Delete credentials' | translate }}\"\n          *ngIf=\"credentialsExist && isEdit\"\n          (click)=\"deleteCredentials()\"\n        >\n          {{ 'Delete credentials' | translate }}\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          title=\"{{ 'Save credentials & connect' | translate }}\"\n          *ngIf=\"isEdit\"\n          [disabled]=\"formGroup.invalid\"\n          (click)=\"saveCredentials()\"\n        >\n          {{ 'Save credentials & connect' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i3.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i3.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "directive", type: i3.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "component", type: i3.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i3.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i5.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "component", type: i6.StatusDisplayComponent, selector: "c8y-status-display", inputs: ["baseUrl", "status"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactProviderSettingsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-impact-provider-settings', template: "<c8y-title>{{ 'Connectivity' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [label]=\"'Settings' | translate\" [icon]=\"'cog'\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [icon]=\"'cog'\" [label]=\"'Connectivity' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'cog'\"\n    [label]=\"'IMPACT provider settings' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"row\">\n  <div class=\"col-xs-12 col-md-8\">\n    <form class=\"card card--fullpage\" [formGroup]=\"formGroup\" novalidate>\n      <div class=\"card-header separator\">\n        <div class=\"card-title\" translate>Credentials</div>\n      </div>\n      <div class=\"inner-scroll\">\n        <div class=\"card-block\" *ngIf=\"isEdit\">\n          <c8y-form-group>\n            <label for=\"baseUrl\" translate>Base URL</label>\n            <input\n              id=\"baseUrl\"\n              name=\"baseUrl\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. https://impact.example.com' | translate }}\"\n              autocomplete=\"off\"\n              formControlName=\"baseUrl\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"user\" translate>User</label>\n            <input\n              id=\"user\"\n              name=\"user\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"user\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"password\" translate>Password</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. my_password' | translate }}\"\n              required\n              autocomplete=\"off\"\n              formControlName=\"password\"\n            />\n          </c8y-form-group>\n          <c8y-form-group>\n            <label for=\"groupName\" translate>IMPACT group name prefix</label>\n            <input\n              id=\"groupName\"\n              name=\"groupName\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g. Europe.Nokia`LOCALIZE`' | translate }}\"\n              formControlName=\"groupName\"\n            />\n          </c8y-form-group>\n        </div>\n        <div class=\"card-block bg-level-1\">\n          <div class=\"d-flex\">\n            <c8y-status-display\n              [status]=\"connectionStatus?.status\"\n              [baseUrl]=\"connectionStatus?.options?.baseUrl\"\n            ></c8y-status-display>\n\n            <div class=\"d-flex m-t-auto m-b-auto m-l-auto\">\n              <label class=\"c8y-switch\">\n                <input type=\"checkbox\" formControlName=\"initializeDevices\" />\n                <span></span>\n                {{ 'Refresh devices' | translate }}\n              </label>\n              <button\n                class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n                type=\"button\"\n                [attr.aria-label]=\"'Help' | translate\"\n                popover=\"{{ 'Refresh device resources as part of connecting' | translate }}\"\n                placement=\"right\"\n                triggers=\"focus\"\n                container=\"body\"\n              ></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-block\" *ngIf=\"credentialsExist && !isEdit\">\n          <p translate>\n            Credentials already provided.\n            <br />\n            Click \"Replace credentials\" below to overwrite them.\n          </p>\n        </div>\n      </div>\n      <div class=\"card-footer separator\">\n        <button\n          class=\"btn btn-default\"\n          type=\"submit\"\n          title=\"{{ 'Replace credentials' | translate }}\"\n          *ngIf=\"!isEdit\"\n          (click)=\"replaceCredentials()\"\n        >\n          {{ 'Replace credentials' | translate }}\n        </button>\n        <button\n          class=\"btn btn-danger\"\n          type=\"button\"\n          title=\"{{ 'Delete credentials' | translate }}\"\n          *ngIf=\"credentialsExist && isEdit\"\n          (click)=\"deleteCredentials()\"\n        >\n          {{ 'Delete credentials' | translate }}\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          title=\"{{ 'Save credentials & connect' | translate }}\"\n          *ngIf=\"isEdit\"\n          [disabled]=\"formGroup.invalid\"\n          (click)=\"saveCredentials()\"\n        >\n          {{ 'Save credentials & connect' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ImpactConnectivityService }, { type: i2.FormBuilder }, { type: i3.ModalService }, { type: i3.AlertService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LXByb3ZpZGVyLXNldHRpbmdzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9pbXBhY3QvaW1wYWN0LXByb3ZpZGVyLXNldHRpbmdzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9pbXBhY3QvaW1wYWN0LXByb3ZpZGVyLXNldHRpbmdzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLFdBQVcsRUFBYSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDMUUsT0FBTyxFQUVMLHNCQUFzQixFQUV2QixNQUFNLGdCQUFnQixDQUFDOzs7Ozs7OztBQU14QixNQUFNLE9BQU8sK0JBQStCO0lBTzFDLFlBQ1UsYUFBd0MsRUFDeEMsV0FBd0IsRUFDeEIsS0FBbUIsRUFDbkIsS0FBbUI7UUFIbkIsa0JBQWEsR0FBYixhQUFhLENBQTJCO1FBQ3hDLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLFVBQUssR0FBTCxLQUFLLENBQWM7UUFDbkIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQVA3QixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2YscUJBQWdCLEdBQUcsS0FBSyxDQUFDO0lBT3RCLENBQUM7SUFFSixLQUFLLENBQUMsUUFBUTtRQUNaLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixNQUFNLFFBQVEsR0FBbUIsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxnQkFB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QUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQzthQUNyRDtTQUNGO1FBQUMsT0FBTyxFQUFFLEVBQUU7WUFDWCxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQzs7NEhBbEhVLCtCQUErQjtnSEFBL0IsK0JBQStCLG9FQ2Y1Qyx3MEpBdUlBOzJGRHhIYSwrQkFBK0I7a0JBSjNDLFNBQVM7K0JBQ0UsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJRmV0Y2hSZXNwb25zZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSwgZ2V0dGV4dCwgTW9kYWxTZXJ2aWNlLCBTdGF0dXMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2UgfSBmcm9tICcuL2ltcGFjdC1jb25uZWN0aXZpdHkuc2VydmljZSc7XG5pbXBvcnQge1xuICBJbXBhY3RPcHRpb25zLFxuICBUZW5hbnRDb25uZWN0aW9uU3RhdHVzLFxuICBUZW5hbnRDb25uZWN0aW9uU3RhdHVzUmVzcG9uc2Vcbn0gZnJvbSAnLi9pbXBhY3QubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktaW1wYWN0LXByb3ZpZGVyLXNldHRpbmdzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ltcGFjdC1wcm92aWRlci1zZXR0aW5ncy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbm5lY3Rpb25TdGF0dXM6IFRlbmFudENvbm5lY3Rpb25TdGF0dXNSZXNwb25zZTtcbiAgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG5cbiAgaXNFZGl0ID0gZmFsc2U7XG4gIGNyZWRlbnRpYWxzRXhpc3QgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGltcGFjdFNlcnZpY2U6IEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXG4gICAgcHJpdmF0ZSBtb2RhbDogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pbml0Rm9ybSgpO1xuICAgIGNvbnN0IHJlc3BvbnNlOiBJRmV0Y2hSZXNwb25zZSA9IGF3YWl0IHRoaXMuaW1wYWN0U2VydmljZS5nZXRPcHRpb25zKCk7XG4gICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgaWYgKHRoaXMuY29ubmVjdGlvblN0YXR1cyAmJiB0aGlzLmNvbm5lY3Rpb25TdGF0dXMub3B0aW9ucykge1xuICAgICAgdGhpcy5mb3JtR3JvdXAucGF0Y2hWYWx1ZSh7IC4uLnRoaXMuY29ubmVjdGlvblN0YXR1cy5vcHRpb25zIH0pO1xuICAgICAgdGhpcy5jcmVkZW50aWFsc0V4aXN0ID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJlcGxhY2VDcmVkZW50aWFscygpOiB2b2lkIHtcbiAgICB0aGlzLmlzRWRpdCA9IHRydWU7XG4gIH1cblxuICBhc3luYyBzYXZlQ3JlZGVudGlhbHMoKSB7XG4gICAgaWYgKHRoaXMuZm9ybUdyb3VwLnZhbGlkKSB7XG4gICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXMuc3RhdHVzID0gVGVuYW50Q29ubmVjdGlvblN0YXR1cy5DT05ORUNUSU5HX0lOX1BST0dSRVNTO1xuICAgICAgY29uc3QgdXBkYXRlZDogYm9vbGVhbiA9IGF3YWl0IHRoaXMuc2FmZWx5VXBkYXRlQ3JlZGVudGlhbHModGhpcy5mb3JtR3JvdXAudmFsdWUpO1xuXG4gICAgICBpZiAodXBkYXRlZCkge1xuICAgICAgICBjb25zdCByZXNwb25zZTogSUZldGNoUmVzcG9uc2UgPSBhd2FpdCB0aGlzLmltcGFjdFNlcnZpY2UuZ2V0T3B0aW9ucygpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgaWYgKHRoaXMuY29ubmVjdGlvblN0YXR1cy5zdGF0dXMgPT09IFRlbmFudENvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVEVEX1NVQ0NFU1NGVUxMWSkge1xuICAgICAgICAgIHRoaXMuaXNFZGl0ID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnQ3JlZGVudGlhbHMgc2F2ZWQuJykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzLnN0YXR1cyA9IFRlbmFudENvbm5lY3Rpb25TdGF0dXMuVU5LTk9XTjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhc3luYyBkZWxldGVDcmVkZW50aWFscygpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5tb2RhbC5jb25maXJtKFxuICAgICAgICBnZXR0ZXh0KCdEZWxldGUgY3JlZGVudGlhbHMnKSxcbiAgICAgICAgZ2V0dGV4dChcbiAgICAgICAgICAnWW91IGFyZSBhYm91dCB0byBkZWxldGUgeW91ciBJTVBBQ1QgY3JlZGVudGlhbHMuIERlbGV0aW5nIGNyZWRlbnRpYWxzIHdpbGwgYnJlYWsgY29ubmVjdGlvbiB0byBJTVBBQ1QgaW5zdGFuY2UuIERvIHlvdSB3YW50IHRvIHByb2NlZWQ/J1xuICAgICAgICApLFxuICAgICAgICBTdGF0dXMuREFOR0VSLFxuICAgICAgICB7IG9rOiBnZXR0ZXh0KCdEZWxldGUnKSwgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKSB9XG4gICAgICApO1xuICAgICAgYXdhaXQgdGhpcy5zYWZlbHlEZWxldGVDcmVkZW50aWFscygpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAvLyBJbnRlbnRpb25hbGx5IGVtcHR5XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpbml0Rm9ybSgpOiB2b2lkIHtcbiAgICB0aGlzLmZvcm1Hcm91cCA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgICAgYmFzZVVybDogW10sXG4gICAgICB1c2VyOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuICAgICAgcGFzc3dvcmQ6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG4gICAgICBncm91cE5hbWU6IFtdLFxuICAgICAgaW5pdGlhbGl6ZURldmljZXM6IFtmYWxzZV1cbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcmVzZXRGb3JtKCk6IHZvaWQge1xuICAgIHRoaXMuZm9ybUdyb3VwLnJlc2V0KCk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHNhZmVseVVwZGF0ZUNyZWRlbnRpYWxzKG9wdGlvbnM6IEltcGFjdE9wdGlvbnMpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5pbXBhY3RTZXJ2aWNlLnVwZGF0ZU9wdGlvbnMob3B0aW9ucyk7XG4gICAgICBpZiAocmVzICYmIHJlcy5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgICBjb25zdCBkYXRhID0gcmVzLmpzb24gPyBhd2FpdCByZXMuanNvbigpIDogdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoeyBkYXRhLCByZXMgfSk7XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHNhZmVseURlbGV0ZUNyZWRlbnRpYWxzKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmltcGFjdFNlcnZpY2UuZGVsZXRlT3B0aW9ucygpO1xuICAgICAgaWYgKHJlcyAmJiByZXMuc3RhdHVzICE9PSAyMDApIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5qc29uID8gYXdhaXQgcmVzLmpzb24oKSA6IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKHsgZGF0YSwgcmVzIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jcmVkZW50aWFsc0V4aXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVzZXRGb3JtKCk7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0YXR1cyA9IG51bGw7XG4gICAgICAgIHRoaXMuYWxlcnQuc3VjY2VzcyhnZXR0ZXh0KCdDcmVkZW50aWFscyBkZWxldGVkLicpKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGV4KTtcbiAgICB9XG4gIH1cbn1cbiIsIjxjOHktdGl0bGU+e3sgJ0Nvbm5lY3Rpdml0eScgfCB0cmFuc2xhdGUgfX08L2M4eS10aXRsZT5cblxuPGM4eS1icmVhZGNydW1iPlxuICA8Yzh5LWJyZWFkY3J1bWItaXRlbSBbbGFiZWxdPVwiJ1NldHRpbmdzJyB8IHRyYW5zbGF0ZVwiIFtpY29uXT1cIidjb2cnXCI+PC9jOHktYnJlYWRjcnVtYi1pdGVtPlxuICA8Yzh5LWJyZWFkY3J1bWItaXRlbSBbaWNvbl09XCInY29nJ1wiIFtsYWJlbF09XCInQ29ubmVjdGl2aXR5JyB8IHRyYW5zbGF0ZVwiPjwvYzh5LWJyZWFkY3J1bWItaXRlbT5cbiAgPGM4eS1icmVhZGNydW1iLWl0ZW1cbiAgICBbaWNvbl09XCInY29nJ1wiXG4gICAgW2xhYmVsXT1cIidJTVBBQ1QgcHJvdmlkZXIgc2V0dGluZ3MnIHwgdHJhbnNsYXRlXCJcbiAgPjwvYzh5LWJyZWFkY3J1bWItaXRlbT5cbjwvYzh5LWJyZWFkY3J1bWI+XG5cbjxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgPGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtbWQtOFwiPlxuICAgIDxmb3JtIGNsYXNzPVwiY2FyZCBjYXJkLS1mdWxscGFnZVwiIFtmb3JtR3JvdXBdPVwiZm9ybUdyb3VwXCIgbm92YWxpZGF0ZT5cbiAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlciBzZXBhcmF0b3JcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtdGl0bGVcIiB0cmFuc2xhdGU+Q3JlZGVudGlhbHM8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImlubmVyLXNjcm9sbFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ibG9ja1wiICpuZ0lmPVwiaXNFZGl0XCI+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cImJhc2VVcmxcIiB0cmFuc2xhdGU+QmFzZSBVUkw8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGlkPVwiYmFzZVVybFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJiYXNlVXJsXCJcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwie3sgJ2UuZy4gaHR0cHM6Ly9pbXBhY3QuZXhhbXBsZS5jb20nIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgYXV0b2NvbXBsZXRlPVwib2ZmXCJcbiAgICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwiYmFzZVVybFwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cInVzZXJcIiB0cmFuc2xhdGU+VXNlcjwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgaWQ9XCJ1c2VyXCJcbiAgICAgICAgICAgICAgbmFtZT1cInVzZXJcIlxuICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnZS5nLiBqb2VgTE9DQUxJWkVgJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgIGF1dG9jb21wbGV0ZT1cIm9mZlwiXG4gICAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cInVzZXJcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2M4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgIDxjOHktZm9ybS1ncm91cD5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJwYXNzd29yZFwiIHRyYW5zbGF0ZT5QYXNzd29yZDwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgaWQ9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnZS5nLiBteV9wYXNzd29yZCcgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICBhdXRvY29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG4gICAgICAgICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cImdyb3VwTmFtZVwiIHRyYW5zbGF0ZT5JTVBBQ1QgZ3JvdXAgbmFtZSBwcmVmaXg8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIGlkPVwiZ3JvdXBOYW1lXCJcbiAgICAgICAgICAgICAgbmFtZT1cImdyb3VwTmFtZVwiXG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cInt7ICdlLmcuIEV1cm9wZS5Ob2tpYWBMT0NBTElaRWAnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwiZ3JvdXBOYW1lXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9jOHktZm9ybS1ncm91cD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJsb2NrIGJnLWxldmVsLTFcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4XCI+XG4gICAgICAgICAgICA8Yzh5LXN0YXR1cy1kaXNwbGF5XG4gICAgICAgICAgICAgIFtzdGF0dXNdPVwiY29ubmVjdGlvblN0YXR1cz8uc3RhdHVzXCJcbiAgICAgICAgICAgICAgW2Jhc2VVcmxdPVwiY29ubmVjdGlvblN0YXR1cz8ub3B0aW9ucz8uYmFzZVVybFwiXG4gICAgICAgICAgICA+PC9jOHktc3RhdHVzLWRpc3BsYXk+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggbS10LWF1dG8gbS1iLWF1dG8gbS1sLWF1dG9cIj5cbiAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiYzh5LXN3aXRjaFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBmb3JtQ29udHJvbE5hbWU9XCJpbml0aWFsaXplRGV2aWNlc1wiIC8+XG4gICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgICAgIHt7ICdSZWZyZXNoIGRldmljZXMnIHwgdHJhbnNsYXRlIH19XG4gICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzcz1cImJ0bi1oZWxwIGJ0bi1oZWxwLS1zbSBtLXQtYXV0byBtLWItYXV0b1wiXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCInSGVscCcgfCB0cmFuc2xhdGVcIlxuICAgICAgICAgICAgICAgIHBvcG92ZXI9XCJ7eyAnUmVmcmVzaCBkZXZpY2UgcmVzb3VyY2VzIGFzIHBhcnQgb2YgY29ubmVjdGluZycgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgICAgICAgIHBsYWNlbWVudD1cInJpZ2h0XCJcbiAgICAgICAgICAgICAgICB0cmlnZ2Vycz1cImZvY3VzXCJcbiAgICAgICAgICAgICAgICBjb250YWluZXI9XCJib2R5XCJcbiAgICAgICAgICAgICAgPjwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ibG9ja1wiICpuZ0lmPVwiY3JlZGVudGlhbHNFeGlzdCAmJiAhaXNFZGl0XCI+XG4gICAgICAgICAgPHAgdHJhbnNsYXRlPlxuICAgICAgICAgICAgQ3JlZGVudGlhbHMgYWxyZWFkeSBwcm92aWRlZC5cbiAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgQ2xpY2sgXCJSZXBsYWNlIGNyZWRlbnRpYWxzXCIgYmVsb3cgdG8gb3ZlcndyaXRlIHRoZW0uXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNhcmQtZm9vdGVyIHNlcGFyYXRvclwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIlxuICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgIHRpdGxlPVwie3sgJ1JlcGxhY2UgY3JlZGVudGlhbHMnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAqbmdJZj1cIiFpc0VkaXRcIlxuICAgICAgICAgIChjbGljayk9XCJyZXBsYWNlQ3JlZGVudGlhbHMoKVwiXG4gICAgICAgID5cbiAgICAgICAgICB7eyAnUmVwbGFjZSBjcmVkZW50aWFscycgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjbGFzcz1cImJ0biBidG4tZGFuZ2VyXCJcbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICB0aXRsZT1cInt7ICdEZWxldGUgY3JlZGVudGlhbHMnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAqbmdJZj1cImNyZWRlbnRpYWxzRXhpc3QgJiYgaXNFZGl0XCJcbiAgICAgICAgICAoY2xpY2spPVwiZGVsZXRlQ3JlZGVudGlhbHMoKVwiXG4gICAgICAgID5cbiAgICAgICAgICB7eyAnRGVsZXRlIGNyZWRlbnRpYWxzJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCJcbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICB0aXRsZT1cInt7ICdTYXZlIGNyZWRlbnRpYWxzICYgY29ubmVjdCcgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgICpuZ0lmPVwiaXNFZGl0XCJcbiAgICAgICAgICBbZGlzYWJsZWRdPVwiZm9ybUdyb3VwLmludmFsaWRcIlxuICAgICAgICAgIChjbGljayk9XCJzYXZlQ3JlZGVudGlhbHMoKVwiXG4gICAgICAgID5cbiAgICAgICAgICB7eyAnU2F2ZSBjcmVkZW50aWFscyAmIGNvbm5lY3QnIHwgdHJhbnNsYXRlIH19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9mb3JtPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19