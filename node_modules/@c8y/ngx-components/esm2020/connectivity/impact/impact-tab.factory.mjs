import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext, toObservable } from '@c8y/ngx-components';
import { map } from 'rxjs/operators';
import { ImpactGuard } from './impact.guard';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "./impact.guard";
export class ImpactTabFactory {
    constructor(router, guard) {
        this.router = router;
        this.guard = guard;
        this.config = {
            label: gettext('IMPACT provider settings'),
            path: '/connectivitySettings/impact_provider_settings',
            icon: 'plug'
        };
    }
    get() {
        return this.router.url.match(/connectivitySettings/g) ? this.tab() : [];
    }
    tab() {
        return toObservable(this.guard.canActivate()).pipe(map(canActivate => (canActivate ? this.config : null)));
    }
}
ImpactTabFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactTabFactory, deps: [{ token: i1.Router }, { token: i2.ImpactGuard }], target: i0.ɵɵFactoryTarget.Injectable });
ImpactTabFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactTabFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactTabFactory, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.ImpactGuard }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LXRhYi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29ubmVjdGl2aXR5L2ltcGFjdC9pbXBhY3QtdGFiLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLE9BQU8sRUFBbUIsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFN0UsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUc3QyxNQUFNLE9BQU8sZ0JBQWdCO0lBTzNCLFlBQW9CLE1BQWMsRUFBVSxLQUFrQjtRQUExQyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQU50RCxXQUFNLEdBQVE7WUFDcEIsS0FBSyxFQUFFLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztZQUMxQyxJQUFJLEVBQUUsZ0RBQWdEO1lBQ3RELElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQztJQUUrRCxDQUFDO0lBRWxFLEdBQUc7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMxRSxDQUFDO0lBRUQsR0FBRztRQUNELE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQ2hELEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUN2RCxDQUFDO0lBQ0osQ0FBQzs7NkdBakJVLGdCQUFnQjtpSEFBaEIsZ0JBQWdCLGNBREgsTUFBTTsyRkFDbkIsZ0JBQWdCO2tCQUQ1QixVQUFVO21CQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBnZXR0ZXh0LCBUYWIsIFRhYkZhY3RvcnksIHRvT2JzZXJ2YWJsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgSW1wYWN0R3VhcmQgfSBmcm9tICcuL2ltcGFjdC5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgSW1wYWN0VGFiRmFjdG9yeSBpbXBsZW1lbnRzIFRhYkZhY3Rvcnkge1xuICBwcml2YXRlIGNvbmZpZzogVGFiID0ge1xuICAgIGxhYmVsOiBnZXR0ZXh0KCdJTVBBQ1QgcHJvdmlkZXIgc2V0dGluZ3MnKSxcbiAgICBwYXRoOiAnL2Nvbm5lY3Rpdml0eVNldHRpbmdzL2ltcGFjdF9wcm92aWRlcl9zZXR0aW5ncycsXG4gICAgaWNvbjogJ3BsdWcnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgcHJpdmF0ZSBndWFyZDogSW1wYWN0R3VhcmQpIHt9XG5cbiAgZ2V0KCkge1xuICAgIHJldHVybiB0aGlzLnJvdXRlci51cmwubWF0Y2goL2Nvbm5lY3Rpdml0eVNldHRpbmdzL2cpID8gdGhpcy50YWIoKSA6IFtdO1xuICB9XG5cbiAgdGFiKCk6IFRhYiB8IE9ic2VydmFibGU8VGFiPiB7XG4gICAgcmV0dXJuIHRvT2JzZXJ2YWJsZSh0aGlzLmd1YXJkLmNhbkFjdGl2YXRlKCkpLnBpcGUoXG4gICAgICBtYXAoY2FuQWN0aXZhdGUgPT4gKGNhbkFjdGl2YXRlID8gdGhpcy5jb25maWcgOiBudWxsKSlcbiAgICApO1xuICB9XG59XG4iXX0=