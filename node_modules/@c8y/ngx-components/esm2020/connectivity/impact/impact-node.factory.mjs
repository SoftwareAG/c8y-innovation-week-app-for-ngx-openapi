import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, toObservable } from '@c8y/ngx-components';
import { map } from 'rxjs/operators';
import { ImpactTabFactory } from './impact-tab.factory';
import * as i0 from "@angular/core";
import * as i1 from "./impact-tab.factory";
export class ImpactNodeFactory {
    constructor(tabFactory) {
        this.tabFactory = tabFactory;
        this.connectivityNode = new NavigatorNode({
            parent: gettext('Settings'),
            label: gettext('Connectivity'),
            path: 'connectivitySettings',
            icon: 'plug',
            preventDuplicates: true
        });
    }
    get() {
        return toObservable(this.tabFactory.tab()).pipe(map(tab => {
            return !!tab ? [this.connectivityNode] : [];
        }));
    }
}
ImpactNodeFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactNodeFactory, deps: [{ token: i1.ImpactTabFactory }], target: i0.ɵɵFactoryTarget.Injectable });
ImpactNodeFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactNodeFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactNodeFactory, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.ImpactTabFactory }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LW5vZGUuZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9pbXBhY3QvaW1wYWN0LW5vZGUuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUF3QixZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQUd4RCxNQUFNLE9BQU8saUJBQWlCO0lBUzVCLFlBQW9CLFVBQTRCO1FBQTVCLGVBQVUsR0FBVixVQUFVLENBQWtCO1FBUi9CLHFCQUFnQixHQUFrQixJQUFJLGFBQWEsQ0FBQztZQUNuRSxNQUFNLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQztZQUMzQixLQUFLLEVBQUUsT0FBTyxDQUFDLGNBQWMsQ0FBQztZQUM5QixJQUFJLEVBQUUsc0JBQXNCO1lBQzVCLElBQUksRUFBRSxNQUFNO1lBQ1osaUJBQWlCLEVBQUUsSUFBSTtTQUN4QixDQUFDLENBQUM7SUFFZ0QsQ0FBQztJQUVwRCxHQUFHO1FBQ0QsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDN0MsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1IsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7OzhHQWpCVSxpQkFBaUI7a0hBQWpCLGlCQUFpQixjQURKLE1BQU07MkZBQ25CLGlCQUFpQjtrQkFEN0IsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBOYXZpZ2F0b3JOb2RlLCBOYXZpZ2F0b3JOb2RlRmFjdG9yeSwgdG9PYnNlcnZhYmxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJbXBhY3RUYWJGYWN0b3J5IH0gZnJvbSAnLi9pbXBhY3QtdGFiLmZhY3RvcnknO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIEltcGFjdE5vZGVGYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBwcml2YXRlIHJlYWRvbmx5IGNvbm5lY3Rpdml0eU5vZGU6IE5hdmlnYXRvck5vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgcGFyZW50OiBnZXR0ZXh0KCdTZXR0aW5ncycpLFxuICAgIGxhYmVsOiBnZXR0ZXh0KCdDb25uZWN0aXZpdHknKSxcbiAgICBwYXRoOiAnY29ubmVjdGl2aXR5U2V0dGluZ3MnLFxuICAgIGljb246ICdwbHVnJyxcbiAgICBwcmV2ZW50RHVwbGljYXRlczogdHJ1ZVxuICB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRhYkZhY3Rvcnk6IEltcGFjdFRhYkZhY3RvcnkpIHt9XG5cbiAgZ2V0KCkge1xuICAgIHJldHVybiB0b09ic2VydmFibGUodGhpcy50YWJGYWN0b3J5LnRhYigpKS5waXBlKFxuICAgICAgbWFwKHRhYiA9PiB7XG4gICAgICAgIHJldHVybiAhIXRhYiA/IFt0aGlzLmNvbm5lY3Rpdml0eU5vZGVdIDogW107XG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiJdfQ==