import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, FormsModule, hookNavigator, hookTab } from '@c8y/ngx-components';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { ImpactNodeFactory } from './impact-node.factory';
import { ImpactProviderSettingsComponent } from './impact-provider-settings.component';
import { ImpactTabFactory } from './impact-tab.factory';
import { ImpactGuard } from './impact.guard';
import { StatusDisplayComponent } from './status-display.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
const impactRoutes = [
    {
        path: 'connectivitySettings/impact_provider_settings',
        component: ImpactProviderSettingsComponent,
        canActivate: [ImpactGuard]
    }
];
export class ImpactModule {
}
ImpactModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ImpactModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ImpactModule, declarations: [ImpactProviderSettingsComponent, StatusDisplayComponent], imports: [CoreModule,
        CommonModule,
        FormsModule, i1.RouterModule, PopoverModule,
        ReactiveFormsModule], exports: [ImpactProviderSettingsComponent] });
ImpactModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactModule, providers: [
        ImpactConnectivityService,
        ImpactGuard,
        hookNavigator(ImpactNodeFactory),
        hookTab(ImpactTabFactory)
    ], imports: [CoreModule,
        CommonModule,
        FormsModule,
        RouterModule.forChild(impactRoutes),
        PopoverModule,
        ReactiveFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ImpactProviderSettingsComponent, StatusDisplayComponent],
                    exports: [ImpactProviderSettingsComponent],
                    imports: [
                        CoreModule,
                        CommonModule,
                        FormsModule,
                        RouterModule.forChild(impactRoutes),
                        PopoverModule,
                        ReactiveFormsModule
                    ],
                    entryComponents: [ImpactProviderSettingsComponent],
                    providers: [
                        ImpactConnectivityService,
                        ImpactGuard,
                        hookNavigator(ImpactNodeFactory),
                        hookTab(ImpactTabFactory)
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9pbXBhY3QvaW1wYWN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsWUFBWSxFQUNaLFVBQVUsRUFDVixXQUFXLEVBQ1gsYUFBYSxFQUNiLE9BQU8sRUFFUixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7OztBQUVwRSxNQUFNLFlBQVksR0FBWTtJQUM1QjtRQUNFLElBQUksRUFBRSwrQ0FBK0M7UUFDckQsU0FBUyxFQUFFLCtCQUErQjtRQUMxQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDM0I7Q0FDRixDQUFDO0FBcUJGLE1BQU0sT0FBTyxZQUFZOzt5R0FBWixZQUFZOzBHQUFaLFlBQVksaUJBbEJSLCtCQUErQixFQUFFLHNCQUFzQixhQUdwRSxVQUFVO1FBQ1YsWUFBWTtRQUNaLFdBQVcsbUJBRVgsYUFBYTtRQUNiLG1CQUFtQixhQVBYLCtCQUErQjswR0FpQjlCLFlBQVksYUFQWjtRQUNULHlCQUF5QjtRQUN6QixXQUFXO1FBQ1gsYUFBYSxDQUFDLGlCQUFpQixDQUFDO1FBQ2hDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztLQUMxQixZQWJDLFVBQVU7UUFDVixZQUFZO1FBQ1osV0FBVztRQUNYLFlBQVksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDO1FBQ25DLGFBQWE7UUFDYixtQkFBbUI7MkZBVVYsWUFBWTtrQkFuQnhCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsK0JBQStCLEVBQUUsc0JBQXNCLENBQUM7b0JBQ3ZFLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO29CQUMxQyxPQUFPLEVBQUU7d0JBQ1AsVUFBVTt3QkFDVixZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsWUFBWSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUM7d0JBQ25DLGFBQWE7d0JBQ2IsbUJBQW1CO3FCQUNwQjtvQkFDRCxlQUFlLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQztvQkFDbEQsU0FBUyxFQUFFO3dCQUNULHlCQUF5Qjt3QkFDekIsV0FBVzt3QkFDWCxhQUFhLENBQUMsaUJBQWlCLENBQUM7d0JBQ2hDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztxQkFDMUI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBDb21tb25Nb2R1bGUsXG4gIENvcmVNb2R1bGUsXG4gIEZvcm1zTW9kdWxlLFxuICBob29rTmF2aWdhdG9yLFxuICBob29rVGFiLFxuICBSb3V0ZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgSW1wYWN0Q29ubmVjdGl2aXR5U2VydmljZSB9IGZyb20gJy4vaW1wYWN0LWNvbm5lY3Rpdml0eS5zZXJ2aWNlJztcbmltcG9ydCB7IEltcGFjdE5vZGVGYWN0b3J5IH0gZnJvbSAnLi9pbXBhY3Qtbm9kZS5mYWN0b3J5JztcbmltcG9ydCB7IEltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tICcuL2ltcGFjdC1wcm92aWRlci1zZXR0aW5ncy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW1wYWN0VGFiRmFjdG9yeSB9IGZyb20gJy4vaW1wYWN0LXRhYi5mYWN0b3J5JztcbmltcG9ydCB7IEltcGFjdEd1YXJkIH0gZnJvbSAnLi9pbXBhY3QuZ3VhcmQnO1xuaW1wb3J0IHsgU3RhdHVzRGlzcGxheUNvbXBvbmVudCB9IGZyb20gJy4vc3RhdHVzLWRpc3BsYXkuY29tcG9uZW50JztcblxuY29uc3QgaW1wYWN0Um91dGVzOiBSb3V0ZVtdID0gW1xuICB7XG4gICAgcGF0aDogJ2Nvbm5lY3Rpdml0eVNldHRpbmdzL2ltcGFjdF9wcm92aWRlcl9zZXR0aW5ncycsXG4gICAgY29tcG9uZW50OiBJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50LFxuICAgIGNhbkFjdGl2YXRlOiBbSW1wYWN0R3VhcmRdXG4gIH1cbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0ltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnQsIFN0YXR1c0Rpc3BsYXlDb21wb25lbnRdLFxuICBleHBvcnRzOiBbSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoaW1wYWN0Um91dGVzKSxcbiAgICBQb3BvdmVyTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2UsXG4gICAgSW1wYWN0R3VhcmQsXG4gICAgaG9va05hdmlnYXRvcihJbXBhY3ROb2RlRmFjdG9yeSksXG4gICAgaG9va1RhYihJbXBhY3RUYWJGYWN0b3J5KVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEltcGFjdE1vZHVsZSB7fVxuIl19