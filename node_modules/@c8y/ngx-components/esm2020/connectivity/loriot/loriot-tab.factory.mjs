import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { AbstractConnectivityTabFactory } from '../abstract-connectivity-tab.factory';
import { LoriotGuard } from './loriot.guard';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "./loriot.guard";
export class LoriotTabFactory extends AbstractConnectivityTabFactory {
    constructor(router, guard) {
        super(router, guard);
        this.router = router;
        this.guard = guard;
        this.tabConfig = {
            label: 'LORIOT',
            path: '/connectivitySettings/multiple_lns_connectors_loriot',
            icon: 'wall-socket'
        };
    }
    config() {
        return this.tabConfig;
    }
}
LoriotTabFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LoriotTabFactory, deps: [{ token: i1.Router }, { token: i2.LoriotGuard }], target: i0.ɵɵFactoryTarget.Injectable });
LoriotTabFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LoriotTabFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LoriotTabFactory, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.LoriotGuard }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9yaW90LXRhYi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29ubmVjdGl2aXR5L2xvcmlvdC9sb3Jpb3QtdGFiLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekMsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRzdDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSw4QkFBOEI7SUFPbEUsWUFBc0IsTUFBYyxFQUFZLEtBQWtCO1FBQ2hFLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFERCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVksVUFBSyxHQUFMLEtBQUssQ0FBYTtRQU4xRCxjQUFTLEdBQVE7WUFDdkIsS0FBSyxFQUFFLFFBQVE7WUFDZixJQUFJLEVBQUUsc0RBQXNEO1lBQzVELElBQUksRUFBRSxhQUFhO1NBQ3BCLENBQUM7SUFJRixDQUFDO0lBRVMsTUFBTTtRQUNkLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDOzs2R0FiVSxnQkFBZ0I7aUhBQWhCLGdCQUFnQixjQURILE1BQU07MkZBQ25CLGdCQUFnQjtrQkFENUIsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVGFiIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbm5lY3Rpdml0eVRhYkZhY3RvcnkgfSBmcm9tICcuLi9hYnN0cmFjdC1jb25uZWN0aXZpdHktdGFiLmZhY3RvcnknO1xuaW1wb3J0IHsgTG9yaW90R3VhcmQgfSBmcm9tICcuL2xvcmlvdC5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgTG9yaW90VGFiRmFjdG9yeSBleHRlbmRzIEFic3RyYWN0Q29ubmVjdGl2aXR5VGFiRmFjdG9yeSB7XG4gIHByaXZhdGUgdGFiQ29uZmlnOiBUYWIgPSB7XG4gICAgbGFiZWw6ICdMT1JJT1QnLFxuICAgIHBhdGg6ICcvY29ubmVjdGl2aXR5U2V0dGluZ3MvbXVsdGlwbGVfbG5zX2Nvbm5lY3RvcnNfbG9yaW90JyxcbiAgICBpY29uOiAnd2FsbC1zb2NrZXQnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlcjogUm91dGVyLCBwcm90ZWN0ZWQgZ3VhcmQ6IExvcmlvdEd1YXJkKSB7XG4gICAgc3VwZXIocm91dGVyLCBndWFyZCk7XG4gIH1cblxuICBwcm90ZWN0ZWQgY29uZmlnKCk6IFRhYiB7XG4gICAgcmV0dXJuIHRoaXMudGFiQ29uZmlnO1xuICB9XG59XG4iXX0=