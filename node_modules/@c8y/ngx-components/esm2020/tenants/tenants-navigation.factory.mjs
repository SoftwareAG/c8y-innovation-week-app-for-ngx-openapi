import { Inject, Injectable, Optional } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { TenantListGuard } from './tenant-list/tenant-list.guard';
import { TENANTS_MODULE_CONFIG } from './tenants.model';
import * as i0 from "@angular/core";
import * as i1 from "./tenant-list/tenant-list.guard";
export class TenantsNavigationFactory {
    constructor(tenantListGuard, config) {
        this.tenantListGuard = tenantListGuard;
        this.config = config;
        this.navs = [];
    }
    async get() {
        const canActivateTenantList = await this.tenantListGuard.canActivate();
        if (!this.navs.length) {
            const subtenantsNavigatorNode = this.config?.subtenantsNavigatorNode ?? true;
            if (subtenantsNavigatorNode !== false) {
                this.navs.push(new NavigatorNode({
                    parent: {
                        label: gettext('Tenants'),
                        icon: 'c8y-layers'
                    },
                    label: gettext('Subtenants'),
                    icon: 'c8y-sub-tenants',
                    path: 'tenants',
                    routerLinkExact: false,
                    priority: 4000,
                    hidden: !canActivateTenantList,
                    ...(subtenantsNavigatorNode === true ? {} : subtenantsNavigatorNode)
                }));
            }
        }
        return this.navs;
    }
}
TenantsNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantsNavigationFactory, deps: [{ token: i1.TenantListGuard }, { token: TENANTS_MODULE_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TenantsNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantsNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantsNavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TenantListGuard }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TENANTS_MODULE_CONFIG]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuYW50cy1uYXZpZ2F0aW9uLmZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90ZW5hbnRzL3RlbmFudHMtbmF2aWdhdGlvbi5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUF1QixxQkFBcUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFHN0UsTUFBTSxPQUFPLHdCQUF3QjtJQUduQyxZQUNVLGVBQWdDLEVBQ1csTUFBMkI7UUFEdEUsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBQ1csV0FBTSxHQUFOLE1BQU0sQ0FBcUI7UUFKeEUsU0FBSSxHQUFvQixFQUFFLENBQUM7SUFLaEMsQ0FBQztJQUVKLEtBQUssQ0FBQyxHQUFHO1FBQ1AsTUFBTSxxQkFBcUIsR0FBRyxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3JCLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSx1QkFBdUIsSUFBSSxJQUFJLENBQUM7WUFDN0UsSUFBSSx1QkFBdUIsS0FBSyxLQUFLLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUNaLElBQUksYUFBYSxDQUFDO29CQUNoQixNQUFNLEVBQUU7d0JBQ04sS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7d0JBQ3pCLElBQUksRUFBRSxZQUFZO3FCQUNuQjtvQkFDRCxLQUFLLEVBQUUsT0FBTyxDQUFDLFlBQVksQ0FBQztvQkFDNUIsSUFBSSxFQUFFLGlCQUFpQjtvQkFDdkIsSUFBSSxFQUFFLFNBQVM7b0JBQ2YsZUFBZSxFQUFFLEtBQUs7b0JBQ3RCLFFBQVEsRUFBRSxJQUFJO29CQUNkLE1BQU0sRUFBRSxDQUFDLHFCQUFxQjtvQkFDOUIsR0FBRyxDQUFDLHVCQUF1QixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztpQkFDckUsQ0FBQyxDQUNILENBQUM7YUFDSDtTQUNGO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7O3FIQS9CVSx3QkFBd0IsaURBS2IscUJBQXFCO3lIQUxoQyx3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFEcEMsVUFBVTs7MEJBTU4sUUFBUTs7MEJBQUksTUFBTTsyQkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBOYXZpZ2F0b3JOb2RlLCBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgVGVuYW50TGlzdEd1YXJkIH0gZnJvbSAnLi90ZW5hbnQtbGlzdC90ZW5hbnQtbGlzdC5ndWFyZCc7XG5pbXBvcnQgeyBUZW5hbnRzTW9kdWxlQ29uZmlnLCBURU5BTlRTX01PRFVMRV9DT05GSUcgfSBmcm9tICcuL3RlbmFudHMubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGVuYW50c05hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBwcml2YXRlIG5hdnM6IE5hdmlnYXRvck5vZGVbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGVuYW50TGlzdEd1YXJkOiBUZW5hbnRMaXN0R3VhcmQsXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChURU5BTlRTX01PRFVMRV9DT05GSUcpIHByaXZhdGUgY29uZmlnOiBUZW5hbnRzTW9kdWxlQ29uZmlnXG4gICkge31cblxuICBhc3luYyBnZXQoKTogUHJvbWlzZTxOYXZpZ2F0b3JOb2RlW10+IHtcbiAgICBjb25zdCBjYW5BY3RpdmF0ZVRlbmFudExpc3QgPSBhd2FpdCB0aGlzLnRlbmFudExpc3RHdWFyZC5jYW5BY3RpdmF0ZSgpO1xuICAgIGlmICghdGhpcy5uYXZzLmxlbmd0aCkge1xuICAgICAgY29uc3Qgc3VidGVuYW50c05hdmlnYXRvck5vZGUgPSB0aGlzLmNvbmZpZz8uc3VidGVuYW50c05hdmlnYXRvck5vZGUgPz8gdHJ1ZTtcbiAgICAgIGlmIChzdWJ0ZW5hbnRzTmF2aWdhdG9yTm9kZSAhPT0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5uYXZzLnB1c2goXG4gICAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgICAgcGFyZW50OiB7XG4gICAgICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdUZW5hbnRzJyksXG4gICAgICAgICAgICAgIGljb246ICdjOHktbGF5ZXJzJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdTdWJ0ZW5hbnRzJyksXG4gICAgICAgICAgICBpY29uOiAnYzh5LXN1Yi10ZW5hbnRzJyxcbiAgICAgICAgICAgIHBhdGg6ICd0ZW5hbnRzJyxcbiAgICAgICAgICAgIHJvdXRlckxpbmtFeGFjdDogZmFsc2UsXG4gICAgICAgICAgICBwcmlvcml0eTogNDAwMCxcbiAgICAgICAgICAgIGhpZGRlbjogIWNhbkFjdGl2YXRlVGVuYW50TGlzdCxcbiAgICAgICAgICAgIC4uLihzdWJ0ZW5hbnRzTmF2aWdhdG9yTm9kZSA9PT0gdHJ1ZSA/IHt9IDogc3VidGVuYW50c05hdmlnYXRvck5vZGUpXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19