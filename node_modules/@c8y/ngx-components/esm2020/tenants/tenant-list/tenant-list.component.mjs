import { Component } from '@angular/core';
import { Location } from '@angular/common';
import { TranslateService } from '@ngx-translate/core';
import { BehaviorSubject, from } from 'rxjs';
import { expand, reduce, shareReplay, takeWhile } from 'rxjs/operators';
import { saveAs } from 'file-saver';
import { TenantService, TenantStatus, UserService } from '@c8y/client';
import { AlertService, AppStateService, gettext, ModalService, Status, TenantUiService, PasswordService } from '@c8y/ngx-components';
import { StatusFilteringFormRendererComponent } from './status.filtering-form-renderer.component';
import { CreationTimeFilteringFormRendererComponent } from './creation-time.filtering-form-renderer.component';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@ngx-translate/core";
import * as i3 from "@c8y/client";
import * as i4 from "@angular/common";
import * as i5 from "@angular/router";
export class TenantListComponent {
    constructor(appState, alertService, modalService, translateService, tenantService, tenantUiService, location, passwordService, userService) {
        this.appState = appState;
        this.alertService = alertService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.tenantService = tenantService;
        this.tenantUiService = tenantUiService;
        this.location = location;
        this.passwordService = passwordService;
        this.userService = userService;
        this.tenants$ = new BehaviorSubject(undefined);
        this.TOP_TENANT_NAME = 'management';
        this.title = null;
        this.loadMoreItemsLabel = gettext('Load more tenants');
        this.loadingItemsLabel = gettext('Loading tenants…');
        this.displayOptions = {
            bordered: false,
            striped: true,
            filter: true,
            gridHeader: true
        };
        this.columns = this.getColumns();
        this.pagination = this.getPagination();
        this.showSearch = true;
        this.actionControls = this.getActionControls();
        this.TenantStatus = TenantStatus;
    }
    async ngOnInit() {
        this.currentTenant = this.appState.currentTenant.value;
        this.isManagementTenant = await this.tenantUiService.isManagementTenant();
        this.loadTenants();
    }
    loadTenants() {
        this.tenants$.next(undefined);
        from(this.tenantService.list({ pageSize: 2000, withTotalPages: true, withApps: false }))
            .pipe(expand(resultList => resultList.paging.nextPage !== null && resultList.paging.next()), takeWhile(resultList => resultList.paging.nextPage !== null, true), reduce((tenants, resultList) => [
            ...tenants,
            ...resultList.data
        ], []), shareReplay(1))
            .subscribe(tenants => this.tenants$.next(tenants));
    }
    getColumns() {
        return [
            {
                name: 'company',
                header: gettext('Tenant'),
                path: 'company',
                filterable: true,
                sortable: true,
                sortOrder: 'asc'
            },
            {
                name: 'id',
                header: gettext('ID'),
                path: 'id',
                filterable: true,
                sortable: true
            },
            {
                name: 'domain',
                header: gettext('Domain'),
                path: 'domain',
                filterable: true,
                sortable: true
            },
            {
                name: 'parent',
                header: gettext('Parent tenant'),
                path: 'parent',
                filterable: true,
                sortable: true
            },
            {
                name: 'contactName',
                header: gettext('Contact name'),
                path: 'contactName',
                filterable: true,
                sortable: true
            },
            {
                name: 'creationTime',
                header: gettext('Created'),
                path: 'creationTime',
                filterable: true,
                filteringFormRendererComponent: CreationTimeFilteringFormRendererComponent,
                sortable: true
            },
            {
                name: 'externalReference',
                header: gettext('External reference'),
                path: 'customProperties.externalReference',
                filterable: true,
                sortable: true
            },
            {
                name: 'status',
                header: gettext('Status'),
                path: 'status',
                filterable: true,
                filteringFormRendererComponent: StatusFilteringFormRendererComponent,
                sortable: true,
                resizable: false
            }
        ];
    }
    getPagination() {
        return {
            pageSize: 10,
            currentPage: 1
        };
    }
    getActionControls() {
        return [
            {
                type: "EDIT" /* BuiltInActionType.Edit */,
                text: gettext('Edit`tenant`'),
                callback: tenant => this.goToDetails(tenant)
            },
            {
                type: 'activateTenantAction',
                icon: 'power-off',
                text: gettext('Activate`tenant`'),
                callback: (tenant) => this.activateTenant(tenant),
                showIf: (tenant) => this.isSuspended(tenant)
            },
            {
                type: 'suspendTenantAction',
                icon: 'power-off',
                text: gettext('Suspend`tenant`'),
                callback: (tenant) => this.suspendTenant(tenant),
                showIf: (tenant) => this.isActive(tenant)
            },
            {
                type: "DELETE" /* BuiltInActionType.Delete */,
                text: gettext('Delete`tenant`'),
                callback: tenant => this.delete(tenant),
                showIf: () => this.isManagementTenant
            }
        ];
    }
    createTenant() {
        this.location.go('/tenants/new');
    }
    goToDetails(tenant) {
        this.location.go(`/tenants/${tenant.id}`);
    }
    async activateTenant(tenant) {
        try {
            const { data: savedTenant } = await this.tenantService.update({
                id: tenant.id,
                status: TenantStatus.ACTIVE
            });
            Object.assign(tenant, savedTenant);
            this.alertService.success(gettext('Tenant activated.'));
        }
        catch (ex) {
            if (ex) {
                this.alertService.addServerFailure(ex);
            }
        }
    }
    async suspendTenant(tenant) {
        const title = gettext('Suspend tenant');
        const confirmationText = gettext('You are about to suspend tenant "{{ company }}" (ID "{{ id }}").');
        const proceed = gettext('Do you want to proceed?');
        const body = [
            this.translateService.instant(confirmationText, {
                company: tenant.company,
                id: tenant.id
            }),
            this.translateService.instant(proceed)
        ].join(' ');
        const labels = {
            ok: gettext('Suspend`tenant`')
        };
        try {
            await this.modalService.confirm(title, body, Status.DANGER, labels);
            const confirmed = await this.passwordService.confirmPassword().toPromise();
            if (confirmed === true) {
                const { data: savedTenant } = await this.tenantService.update({
                    id: tenant.id,
                    status: TenantStatus.SUSPENDED
                });
                Object.assign(tenant, savedTenant);
                this.alertService.success(gettext('Tenant suspended.'));
            }
        }
        catch (ex) {
            if (ex) {
                this.alertService.addServerFailure(ex);
            }
        }
    }
    async delete(tenant) {
        const title = gettext('Delete tenant');
        const confirmationText = gettext('You are about to delete tenant "{{ company }}" (ID "{{ id }}").');
        const hint = gettext('This operation is irreversible.');
        const proceed = gettext('Do you want to proceed?');
        const body = [
            this.translateService.instant(confirmationText, {
                company: tenant.company,
                id: tenant.id
            }),
            this.translateService.instant(hint),
            this.translateService.instant(proceed)
        ].join(' ');
        const labels = {
            ok: gettext('Delete`tenant`')
        };
        try {
            await this.modalService.confirm(title, body, Status.DANGER, labels);
            const confirmed = await this.passwordService.confirmPassword().toPromise();
            if (confirmed === true) {
                await this.tenantService.delete(tenant);
                const tenantsWithoutRemovedOne = this.tenants$.value.filter(t => t !== tenant);
                this.tenants$.next(tenantsWithoutRemovedOne);
                this.alertService.success(gettext('Tenant is being deleted in the background. This might take a while…'));
            }
        }
        catch (ex) {
            if (ex) {
                this.alertService.addServerFailure(ex);
            }
        }
    }
    isActive(tenant) {
        return tenant.status === TenantStatus.ACTIVE;
    }
    isSuspended(tenant) {
        return tenant.status === TenantStatus.SUSPENDED;
    }
    async downloadNewsletterEmails() {
        const { res, data } = await this.userService.getNewsletterEmails();
        const contentType = res.headers.get('content-type');
        const contentDisposition = res.headers.get('content-disposition');
        const filename = /filename="(.*)"/.exec(contentDisposition)[1];
        const blob = new Blob([data], { type: contentType });
        saveAs(blob, filename);
    }
}
TenantListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantListComponent, deps: [{ token: i1.AppStateService }, { token: i1.AlertService }, { token: i1.ModalService }, { token: i2.TranslateService }, { token: i3.TenantService }, { token: i1.TenantUiService }, { token: i4.Location }, { token: i1.PasswordService }, { token: i3.UserService }], target: i0.ɵɵFactoryTarget.Component });
TenantListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: TenantListComponent, selector: "c8y-tenant-list", ngImport: i0, template: "<c8y-title>\n  {{ 'Subtenants' | translate }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item label=\"{{ 'Tenants' | translate }}\" icon=\"c8y-layers\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [label]=\"'Subtenants' | translate\"\n    [icon]=\"'c8y-layers'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item *ngIf=\"!!(appState.state$ | async).newsletter\" [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{\n      'Downloads the list of emails of users subscribed for newsletter on the current tenant and its subtenants.'\n        | translate\n    }}\"\n    (click)=\"downloadNewsletterEmails()\"\n  >\n    <i c8yIcon=\"download\"></i>\n    {{ 'Email addresses' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Create tenant' | translate }}\"\n    (click)=\"createTenant()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Create tenant' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/enterprise-tenant/#managing-tenants\"></c8y-help>\n\n<div class=\"content-fullpage border-top border-bottom\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [rows]=\"tenants$ | async\"\n    [pagination]=\"pagination\"\n    [showSearch]=\"showSearch\"\n    [actionControls]=\"actionControls\"\n    (onReload)=\"loadTenants()\"\n  >\n    <div class=\"c8y-empty-state j-c-center\">\n      <ng-container *ngIf=\"!(tenants$ | async)\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length === 0\">\n        <div class=\"text-center\">\n          <h1 c8yIcon=\"c8y-layers\"></h1>\n          <h3 translate>There are no tenants defined.</h3>\n          <p translate>Create the first tenant.</p>\n          <div>\n            <button\n              class=\"btn btn-primary\"\n              title=\"{{ 'Create tenant' | translate }}\"\n              (click)=\"createTenant()\"\n            >\n              {{ 'Create tenant' | translate }}\n            </button>\n          </div>\n          <p c8y-guide-docs>\n            <small translate ngNonBindable>\n              Find out more in the\n              <a c8y-guide-href=\"users-guide/enterprise-tenant/#managing-tenants\">\n                User guide`KEEP_ORIGINAL`\n              </a>\n              .\n            </small>\n          </p>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length > 0\">\n        <div class=\"text-center\">\n          <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"search\"></h1>\n          <h3 translate>No tenants to display.</h3>\n          <p translate>Refine your search terms or check your spelling.</p>\n        </div>\n      </ng-container>\n    </div>\n\n    <c8y-column name=\"company\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }}\">\n          <a [routerLink]=\"['/tenants', context.item.id]\">{{ context.value }}</a>\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"parent\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value || currentTenant.name }}\">\n          {{ context.value || currentTenant.name }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"creationTime\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value | c8yDate }}\">\n          {{ context.value | c8yDate }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"status\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span\n          *ngIf=\"context.item.status === TenantStatus.ACTIVE\"\n          title=\"{{ 'Active`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"check-circle\" class=\"text-success\"></i>\n        </span>\n        <span\n          *ngIf=\"context.item.status === TenantStatus.SUSPENDED\"\n          title=\"{{ 'Suspended`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"ban\" class=\"text-danger\"></i>\n        </span>\n      </ng-container>\n    </c8y-column>\n  </c8y-data-grid>\n</div>\n", dependencies: [{ kind: "directive", type: i5.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i1.ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: ["placement", "priority", "itemClass", "injector", "groupId"] }, { kind: "component", type: i1.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i1.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i1.LoadingComponent, selector: "c8y-loading" }, { kind: "directive", type: i1.CellRendererDefDirective, selector: "[c8yCellRendererDef]" }, { kind: "directive", type: i1.ColumnDirective, selector: "c8y-column", inputs: ["name"] }, { kind: "component", type: i1.DataGridComponent, selector: "c8y-data-grid", inputs: ["title", "loadMoreItemsLabel", "loadingItemsLabel", "showSearch", "refresh", "columns", "rows", "pagination", "infiniteScroll", "serverSideDataCallback", "selectable", "singleSelection", "selectionPrimaryKey", "displayOptions", "actionControls", "bulkActionControls", "headerActionControls", "searchText", "configureColumnsEnabled", "showCounterWarning", "activeClassName"], outputs: ["rowMouseOver", "rowMouseLeave", "rowClick", "onConfigChange", "onBeforeFilter", "onBeforeSearch", "onFilter", "itemsSelect", "onReload", "onAddCustomColumn", "onRemoveCustomColumn", "onColumnFilterReset", "onSort", "onPageSizeChange", "onColumnReordered", "onColumnVisibilityChange"] }, { kind: "component", type: i1.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "directive", type: i1.GuideHrefDirective, selector: "[c8y-guide-href]", inputs: ["c8y-guide-href"] }, { kind: "component", type: i1.GuideDocsComponent, selector: "[c8y-guide-docs]" }, { kind: "component", type: i1.HelpComponent, selector: "c8y-help", inputs: ["src", "isCollapsed", "priority", "icon"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.DatePipe, name: "c8yDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-tenant-list', template: "<c8y-title>\n  {{ 'Subtenants' | translate }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item label=\"{{ 'Tenants' | translate }}\" icon=\"c8y-layers\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [label]=\"'Subtenants' | translate\"\n    [icon]=\"'c8y-layers'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item *ngIf=\"!!(appState.state$ | async).newsletter\" [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{\n      'Downloads the list of emails of users subscribed for newsletter on the current tenant and its subtenants.'\n        | translate\n    }}\"\n    (click)=\"downloadNewsletterEmails()\"\n  >\n    <i c8yIcon=\"download\"></i>\n    {{ 'Email addresses' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Create tenant' | translate }}\"\n    (click)=\"createTenant()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Create tenant' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/enterprise-tenant/#managing-tenants\"></c8y-help>\n\n<div class=\"content-fullpage border-top border-bottom\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [rows]=\"tenants$ | async\"\n    [pagination]=\"pagination\"\n    [showSearch]=\"showSearch\"\n    [actionControls]=\"actionControls\"\n    (onReload)=\"loadTenants()\"\n  >\n    <div class=\"c8y-empty-state j-c-center\">\n      <ng-container *ngIf=\"!(tenants$ | async)\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length === 0\">\n        <div class=\"text-center\">\n          <h1 c8yIcon=\"c8y-layers\"></h1>\n          <h3 translate>There are no tenants defined.</h3>\n          <p translate>Create the first tenant.</p>\n          <div>\n            <button\n              class=\"btn btn-primary\"\n              title=\"{{ 'Create tenant' | translate }}\"\n              (click)=\"createTenant()\"\n            >\n              {{ 'Create tenant' | translate }}\n            </button>\n          </div>\n          <p c8y-guide-docs>\n            <small translate ngNonBindable>\n              Find out more in the\n              <a c8y-guide-href=\"users-guide/enterprise-tenant/#managing-tenants\">\n                User guide`KEEP_ORIGINAL`\n              </a>\n              .\n            </small>\n          </p>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length > 0\">\n        <div class=\"text-center\">\n          <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"search\"></h1>\n          <h3 translate>No tenants to display.</h3>\n          <p translate>Refine your search terms or check your spelling.</p>\n        </div>\n      </ng-container>\n    </div>\n\n    <c8y-column name=\"company\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }}\">\n          <a [routerLink]=\"['/tenants', context.item.id]\">{{ context.value }}</a>\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"parent\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value || currentTenant.name }}\">\n          {{ context.value || currentTenant.name }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"creationTime\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value | c8yDate }}\">\n          {{ context.value | c8yDate }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"status\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span\n          *ngIf=\"context.item.status === TenantStatus.ACTIVE\"\n          title=\"{{ 'Active`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"check-circle\" class=\"text-success\"></i>\n        </span>\n        <span\n          *ngIf=\"context.item.status === TenantStatus.SUSPENDED\"\n          title=\"{{ 'Suspended`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"ban\" class=\"text-danger\"></i>\n        </span>\n      </ng-container>\n    </c8y-column>\n  </c8y-data-grid>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AppStateService }, { type: i1.AlertService }, { type: i1.ModalService }, { type: i2.TranslateService }, { type: i3.TenantService }, { type: i1.TenantUiService }, { type: i4.Location }, { type: i1.PasswordService }, { type: i3.UserService }]; } });
//# sourceMappingURL=data:application/json;base64,