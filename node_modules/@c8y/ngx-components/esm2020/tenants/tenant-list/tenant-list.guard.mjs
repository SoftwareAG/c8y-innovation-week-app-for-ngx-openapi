import { Injectable } from '@angular/core';
import { TenantUiService } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
export class TenantListGuard {
    constructor(tenantUiService) {
        this.tenantUiService = tenantUiService;
    }
    /**
     * Checks if tenant list should be active,
     * i.e. whether the current tenant can read other tenants.
     * **Note: the check is executed only once in the runtime.**
     *
     * @returns True, if the feature should be active.
     */
    canActivate() {
        if (this.active === undefined) {
            this.active = this.tenantUiService.canReadTenants();
        }
        return this.active;
    }
}
TenantListGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantListGuard, deps: [{ token: i1.TenantUiService }], target: i0.ɵɵFactoryTarget.Injectable });
TenantListGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantListGuard });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: TenantListGuard, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TenantUiService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuYW50LWxpc3QuZ3VhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZW5hbnRzL3RlbmFudC1saXN0L3RlbmFudC1saXN0Lmd1YXJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7QUFHdEQsTUFBTSxPQUFPLGVBQWU7SUFHMUIsWUFBb0IsZUFBZ0M7UUFBaEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO0lBQUcsQ0FBQztJQUV4RDs7Ozs7O09BTUc7SUFDSCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLFNBQVMsRUFBRTtZQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDckQ7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQzs7NEdBakJVLGVBQWU7Z0hBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUQzQixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuQWN0aXZhdGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVGVuYW50VWlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUZW5hbnRMaXN0R3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gIHByaXZhdGUgYWN0aXZlOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdGVuYW50VWlTZXJ2aWNlOiBUZW5hbnRVaVNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0ZW5hbnQgbGlzdCBzaG91bGQgYmUgYWN0aXZlLFxuICAgKiBpLmUuIHdoZXRoZXIgdGhlIGN1cnJlbnQgdGVuYW50IGNhbiByZWFkIG90aGVyIHRlbmFudHMuXG4gICAqICoqTm90ZTogdGhlIGNoZWNrIGlzIGV4ZWN1dGVkIG9ubHkgb25jZSBpbiB0aGUgcnVudGltZS4qKlxuICAgKlxuICAgKiBAcmV0dXJucyBUcnVlLCBpZiB0aGUgZmVhdHVyZSBzaG91bGQgYmUgYWN0aXZlLlxuICAgKi9cbiAgY2FuQWN0aXZhdGUoKTogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuYWN0aXZlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuYWN0aXZlID0gdGhpcy50ZW5hbnRVaVNlcnZpY2UuY2FuUmVhZFRlbmFudHMoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlO1xuICB9XG59XG4iXX0=