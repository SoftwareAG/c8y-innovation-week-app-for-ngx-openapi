import { NgModule } from '@angular/core';
import { CoreModule, hookActionBar } from '@c8y/ngx-components';
import { ImpactActionFactory } from './impact-action.factory';
import { ImpactSubscriptionService } from './impact-subscription.service';
import { RefreshActionComponent } from './refresh-action.component';
import * as i0 from "@angular/core";
export class ImpactProtocolModule {
}
ImpactProtocolModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactProtocolModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ImpactProtocolModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ImpactProtocolModule, declarations: [RefreshActionComponent], imports: [CoreModule] });
ImpactProtocolModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactProtocolModule, providers: [ImpactSubscriptionService, hookActionBar(ImpactActionFactory)], imports: [CoreModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ImpactProtocolModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [RefreshActionComponent],
                    imports: [CoreModule],
                    providers: [ImpactSubscriptionService, hookActionBar(ImpactActionFactory)],
                    entryComponents: [RefreshActionComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LXByb3RvY29sLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb3RvY29sLWltcGFjdC9pbXBhY3QtcHJvdG9jb2wubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7QUFRcEUsTUFBTSxPQUFPLG9CQUFvQjs7aUhBQXBCLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQUxoQixzQkFBc0IsYUFDM0IsVUFBVTtrSEFJVCxvQkFBb0IsYUFIcEIsQ0FBQyx5QkFBeUIsRUFBRSxhQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxZQURoRSxVQUFVOzJGQUlULG9CQUFvQjtrQkFOaEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztvQkFDdEMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO29CQUNyQixTQUFTLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxhQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQztvQkFDMUUsZUFBZSxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQzFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIGhvb2tBY3Rpb25CYXIgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEltcGFjdEFjdGlvbkZhY3RvcnkgfSBmcm9tICcuL2ltcGFjdC1hY3Rpb24uZmFjdG9yeSc7XG5pbXBvcnQgeyBJbXBhY3RTdWJzY3JpcHRpb25TZXJ2aWNlIH0gZnJvbSAnLi9pbXBhY3Qtc3Vic2NyaXB0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmVmcmVzaEFjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vcmVmcmVzaC1hY3Rpb24uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbUmVmcmVzaEFjdGlvbkNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbSW1wYWN0U3Vic2NyaXB0aW9uU2VydmljZSwgaG9va0FjdGlvbkJhcihJbXBhY3RBY3Rpb25GYWN0b3J5KV0sXG4gIGVudHJ5Q29tcG9uZW50czogW1JlZnJlc2hBY3Rpb25Db21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEltcGFjdFByb3RvY29sTW9kdWxlIHt9XG4iXX0=