import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, Permissions } from '@c8y/ngx-components';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
export class RegisterDeviceNavigationFactory {
    constructor(permissions) {
        this.permissions = permissions;
    }
    get() {
        const userHasPermission = this.permissions.hasAnyRole([
            'ROLE_DEVICE_CONTROL_ADMIN',
            'ROLE_DEVICE_CONTROL_READ'
        ]);
        const nav = [];
        if (userHasPermission) {
            nav.push(new NavigatorNode({
                label: gettext('Registration'),
                icon: 'c8y-device-connect',
                path: '/deviceregistration',
                parent: gettext('Devices'),
                preventDuplicates: true,
                priority: 3000
            }));
        }
        return nav;
    }
}
RegisterDeviceNavigationFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: RegisterDeviceNavigationFactory, deps: [{ token: i1.Permissions }], target: i0.ɵɵFactoryTarget.Injectable });
RegisterDeviceNavigationFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: RegisterDeviceNavigationFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: RegisterDeviceNavigationFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Permissions }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXItZGV2aWNlLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3JlZ2lzdGVyLWRldmljZS9yZWdpc3Rlci1kZXZpY2UtbmF2aWdhdGlvbi5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQXdCLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7QUFHaEcsTUFBTSxPQUFPLCtCQUErQjtJQUMxQyxZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUFHLENBQUM7SUFDaEQsR0FBRztRQUNELE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7WUFDcEQsMkJBQTJCO1lBQzNCLDBCQUEwQjtTQUMzQixDQUFDLENBQUM7UUFDSCxNQUFNLEdBQUcsR0FBb0IsRUFBRSxDQUFDO1FBQ2hDLElBQUksaUJBQWlCLEVBQUU7WUFDckIsR0FBRyxDQUFDLElBQUksQ0FDTixJQUFJLGFBQWEsQ0FBQztnQkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUM7Z0JBQzlCLElBQUksRUFBRSxvQkFBb0I7Z0JBQzFCLElBQUksRUFBRSxxQkFBcUI7Z0JBQzNCLE1BQU0sRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDO2dCQUMxQixpQkFBaUIsRUFBRSxJQUFJO2dCQUN2QixRQUFRLEVBQUUsSUFBSTthQUNmLENBQUMsQ0FDSCxDQUFDO1NBQ0g7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7OzRIQXJCVSwrQkFBK0I7Z0lBQS9CLCtCQUErQjsyRkFBL0IsK0JBQStCO2tCQUQzQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnksIFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSZWdpc3RlckRldmljZU5hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBlcm1pc3Npb25zOiBQZXJtaXNzaW9ucykge31cbiAgZ2V0KCkge1xuICAgIGNvbnN0IHVzZXJIYXNQZXJtaXNzaW9uID0gdGhpcy5wZXJtaXNzaW9ucy5oYXNBbnlSb2xlKFtcbiAgICAgICdST0xFX0RFVklDRV9DT05UUk9MX0FETUlOJyxcbiAgICAgICdST0xFX0RFVklDRV9DT05UUk9MX1JFQUQnXG4gICAgXSk7XG4gICAgY29uc3QgbmF2OiBOYXZpZ2F0b3JOb2RlW10gPSBbXTtcbiAgICBpZiAodXNlckhhc1Blcm1pc3Npb24pIHtcbiAgICAgIG5hdi5wdXNoKFxuICAgICAgICBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1JlZ2lzdHJhdGlvbicpLFxuICAgICAgICAgIGljb246ICdjOHktZGV2aWNlLWNvbm5lY3QnLFxuICAgICAgICAgIHBhdGg6ICcvZGV2aWNlcmVnaXN0cmF0aW9uJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ0RldmljZXMnKSxcbiAgICAgICAgICBwcmV2ZW50RHVwbGljYXRlczogdHJ1ZSxcbiAgICAgICAgICBwcmlvcml0eTogMzAwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG5hdjtcbiAgfVxufVxuIl19