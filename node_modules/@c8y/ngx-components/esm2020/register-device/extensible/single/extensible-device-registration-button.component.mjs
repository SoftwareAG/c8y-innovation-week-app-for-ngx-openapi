import { Component } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ExtensibleDeviceRegistrationService } from './extensible-device-registration.service';
import { ExtensibleDeviceRegistrationModalComponent } from './extensible-device-registration-modal.component';
import * as i0 from "@angular/core";
import * as i1 from "./extensible-device-registration.service";
import * as i2 from "ngx-bootstrap/modal";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@angular/common";
export class ExtensibleDeviceRegistrationButtonComponent {
    constructor(deviceRegistrationService, modalService) {
        this.deviceRegistrationService = deviceRegistrationService;
        this.modalService = modalService;
    }
    ngOnInit() {
        this.providersMetaData = this.deviceRegistrationService.getDeviceRegistrationProviders();
    }
    click(providerMetaData) {
        const { name, contextPath } = providerMetaData;
        this.modalService.show(ExtensibleDeviceRegistrationModalComponent, {
            initialState: { name, contextPath },
            class: 'modal-sm',
            ariaDescribedby: 'modal-body',
            ariaLabelledBy: 'modal-title',
            ignoreBackdropClick: true
        });
    }
}
ExtensibleDeviceRegistrationButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ExtensibleDeviceRegistrationButtonComponent, deps: [{ token: i1.ExtensibleDeviceRegistrationService }, { token: i2.BsModalService }], target: i0.ɵɵFactoryTarget.Component });
ExtensibleDeviceRegistrationButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ExtensibleDeviceRegistrationButtonComponent, selector: "extensible-device-registration-provider", ngImport: i0, template: "<div *ngFor=\"let provider of providersMetaData | async\">\n  <button title=\"{{ provider.name | translate }}\" type=\"button\" (click)=\"click(provider)\">\n    <i c8yIcon=\"c8y-device-connect\"></i>\n    {{ provider.name | translate }}\n  </button>\n</div>\n", dependencies: [{ kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ExtensibleDeviceRegistrationButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'extensible-device-registration-provider', template: "<div *ngFor=\"let provider of providersMetaData | async\">\n  <button title=\"{{ provider.name | translate }}\" type=\"button\" (click)=\"click(provider)\">\n    <i c8yIcon=\"c8y-device-connect\"></i>\n    {{ provider.name | translate }}\n  </button>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ExtensibleDeviceRegistrationService }, { type: i2.BsModalService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9yZWdpc3Rlci1kZXZpY2UvZXh0ZW5zaWJsZS9zaW5nbGUvZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLWJ1dHRvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9yZWdpc3Rlci1kZXZpY2UvZXh0ZW5zaWJsZS9zaW5nbGUvZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLWJ1dHRvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUMvRixPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7Ozs7O0FBTzlHLE1BQU0sT0FBTywyQ0FBMkM7SUFHdEQsWUFDVSx5QkFBOEQsRUFDOUQsWUFBNEI7UUFENUIsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUFxQztRQUM5RCxpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7SUFDbkMsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLDhCQUE4QixFQUFFLENBQUM7SUFDM0YsQ0FBQztJQUVELEtBQUssQ0FBQyxnQkFBc0Q7UUFDMUQsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQztRQUMvQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQywwQ0FBMEMsRUFBRTtZQUNqRSxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUF5RDtZQUMxRixLQUFLLEVBQUUsVUFBVTtZQUNqQixlQUFlLEVBQUUsWUFBWTtZQUM3QixjQUFjLEVBQUUsYUFBYTtZQUM3QixtQkFBbUIsRUFBRSxJQUFJO1NBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7O3dJQXJCVSwyQ0FBMkM7NEhBQTNDLDJDQUEyQywrRUNWeEQsc1FBTUE7MkZESWEsMkNBQTJDO2tCQUp2RCxTQUFTOytCQUNFLHlDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXIgfSBmcm9tICcuLi9iYXNlLWRldmljZS1yZWdpc3RyYXRpb24ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdleHRlbnNpYmxlLWRldmljZS1yZWdpc3RyYXRpb24tcHJvdmlkZXInLFxuICB0ZW1wbGF0ZVVybDogJ2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi1idXR0b24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwcm92aWRlcnNNZXRhRGF0YTogUHJvbWlzZTxFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXJbXT47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlOiBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucHJvdmlkZXJzTWV0YURhdGEgPSB0aGlzLmRldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UuZ2V0RGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXJzKCk7XG4gIH1cblxuICBjbGljayhwcm92aWRlck1ldGFEYXRhOiBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXIpIHtcbiAgICBjb25zdCB7IG5hbWUsIGNvbnRleHRQYXRoIH0gPSBwcm92aWRlck1ldGFEYXRhO1xuICAgIHRoaXMubW9kYWxTZXJ2aWNlLnNob3coRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvbk1vZGFsQ29tcG9uZW50LCB7XG4gICAgICBpbml0aWFsU3RhdGU6IHsgbmFtZSwgY29udGV4dFBhdGggfSBhcyBQYXJ0aWFsPEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudD4sXG4gICAgICBjbGFzczogJ21vZGFsLXNtJyxcbiAgICAgIGFyaWFEZXNjcmliZWRieTogJ21vZGFsLWJvZHknLFxuICAgICAgYXJpYUxhYmVsbGVkQnk6ICdtb2RhbC10aXRsZScsXG4gICAgICBpZ25vcmVCYWNrZHJvcENsaWNrOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxkaXYgKm5nRm9yPVwibGV0IHByb3ZpZGVyIG9mIHByb3ZpZGVyc01ldGFEYXRhIHwgYXN5bmNcIj5cbiAgPGJ1dHRvbiB0aXRsZT1cInt7IHByb3ZpZGVyLm5hbWUgfCB0cmFuc2xhdGUgfX1cIiB0eXBlPVwiYnV0dG9uXCIgKGNsaWNrKT1cImNsaWNrKHByb3ZpZGVyKVwiPlxuICAgIDxpIGM4eUljb249XCJjOHktZGV2aWNlLWNvbm5lY3RcIj48L2k+XG4gICAge3sgcHJvdmlkZXIubmFtZSB8IHRyYW5zbGF0ZSB9fVxuICA8L2J1dHRvbj5cbjwvZGl2PlxuIl19