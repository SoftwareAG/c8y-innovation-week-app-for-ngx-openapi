import { BaseColumn, getBasicInputArrayFormFieldConfig, gettext } from '@c8y/ngx-components';
export class ServiceTypeGridColumn extends BaseColumn {
    constructor(initialColumnConfig) {
        super(initialColumnConfig);
        this.name = 'serviceType';
        this.path = 'serviceType';
        this.header = gettext('Type');
        this.filterable = true;
        this.filteringConfig = {
            fields: getBasicInputArrayFormFieldConfig({
                key: 'serviceTypes',
                label: gettext('Filter services by type'),
                addText: gettext('Add next`type`'),
                tooltip: gettext('Use * as a wildcard character'),
                placeholder: 'systemd'
            }),
            getFilter(model) {
                const filter = {};
                if (model.serviceTypes.length) {
                    filter.serviceType = { __in: model.serviceTypes };
                }
                return filter;
            }
        };
        this.sortable = true;
        this.sortingConfig = {
            pathSortingConfigs: [{ path: this.path }]
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS10eXBlLmdyaWQtY29sdW1uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc2VydmljZXMvc2VydmljZXMtZGV2aWNlLXRhYi9jb2x1bW5zL3NlcnZpY2UtdHlwZS5ncmlkLWNvbHVtbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsVUFBVSxFQUVWLGlDQUFpQyxFQUNqQyxPQUFPLEVBQ1IsTUFBTSxxQkFBcUIsQ0FBQztBQUU3QixNQUFNLE9BQU8scUJBQXNCLFNBQVEsVUFBVTtJQUNuRCxZQUFZLG1CQUFrQztRQUM1QyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUMxQixJQUFJLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQztRQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUV2QixJQUFJLENBQUMsZUFBZSxHQUFHO1lBQ3JCLE1BQU0sRUFBRSxpQ0FBaUMsQ0FBQztnQkFDeEMsR0FBRyxFQUFFLGNBQWM7Z0JBQ25CLEtBQUssRUFBRSxPQUFPLENBQUMseUJBQXlCLENBQUM7Z0JBQ3pDLE9BQU8sRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7Z0JBQ2xDLE9BQU8sRUFBRSxPQUFPLENBQUMsK0JBQStCLENBQUM7Z0JBQ2pELFdBQVcsRUFBRSxTQUFTO2FBQ3ZCLENBQUM7WUFDRixTQUFTLENBQUMsS0FBVTtnQkFDbEIsTUFBTSxNQUFNLEdBQVEsRUFBRSxDQUFDO2dCQUN2QixJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFO29CQUM3QixNQUFNLENBQUMsV0FBVyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQztpQkFDbkQ7Z0JBQ0QsT0FBTyxNQUFNLENBQUM7WUFDaEIsQ0FBQztTQUNGLENBQUM7UUFFRixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLENBQUMsYUFBYSxHQUFHO1lBQ25CLGtCQUFrQixFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQzFDLENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCYXNlQ29sdW1uLFxuICBDb2x1bW5Db25maWcsXG4gIGdldEJhc2ljSW5wdXRBcnJheUZvcm1GaWVsZENvbmZpZyxcbiAgZ2V0dGV4dFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuZXhwb3J0IGNsYXNzIFNlcnZpY2VUeXBlR3JpZENvbHVtbiBleHRlbmRzIEJhc2VDb2x1bW4ge1xuICBjb25zdHJ1Y3Rvcihpbml0aWFsQ29sdW1uQ29uZmlnPzogQ29sdW1uQ29uZmlnKSB7XG4gICAgc3VwZXIoaW5pdGlhbENvbHVtbkNvbmZpZyk7XG4gICAgdGhpcy5uYW1lID0gJ3NlcnZpY2VUeXBlJztcbiAgICB0aGlzLnBhdGggPSAnc2VydmljZVR5cGUnO1xuICAgIHRoaXMuaGVhZGVyID0gZ2V0dGV4dCgnVHlwZScpO1xuXG4gICAgdGhpcy5maWx0ZXJhYmxlID0gdHJ1ZTtcblxuICAgIHRoaXMuZmlsdGVyaW5nQ29uZmlnID0ge1xuICAgICAgZmllbGRzOiBnZXRCYXNpY0lucHV0QXJyYXlGb3JtRmllbGRDb25maWcoe1xuICAgICAgICBrZXk6ICdzZXJ2aWNlVHlwZXMnLFxuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRmlsdGVyIHNlcnZpY2VzIGJ5IHR5cGUnKSxcbiAgICAgICAgYWRkVGV4dDogZ2V0dGV4dCgnQWRkIG5leHRgdHlwZWAnKSxcbiAgICAgICAgdG9vbHRpcDogZ2V0dGV4dCgnVXNlICogYXMgYSB3aWxkY2FyZCBjaGFyYWN0ZXInKSxcbiAgICAgICAgcGxhY2Vob2xkZXI6ICdzeXN0ZW1kJ1xuICAgICAgfSksXG4gICAgICBnZXRGaWx0ZXIobW9kZWw6IGFueSk6IGFueSB7XG4gICAgICAgIGNvbnN0IGZpbHRlcjogYW55ID0ge307XG4gICAgICAgIGlmIChtb2RlbC5zZXJ2aWNlVHlwZXMubGVuZ3RoKSB7XG4gICAgICAgICAgZmlsdGVyLnNlcnZpY2VUeXBlID0geyBfX2luOiBtb2RlbC5zZXJ2aWNlVHlwZXMgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsdGVyO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnNvcnRhYmxlID0gdHJ1ZTtcbiAgICB0aGlzLnNvcnRpbmdDb25maWcgPSB7XG4gICAgICBwYXRoU29ydGluZ0NvbmZpZ3M6IFt7IHBhdGg6IHRoaXMucGF0aCB9XVxuICAgIH07XG4gIH1cbn1cbiJdfQ==