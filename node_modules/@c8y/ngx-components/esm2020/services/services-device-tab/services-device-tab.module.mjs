import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule, gettext, hookBreadcrumb, hookRoute, ViewContext } from '@c8y/ngx-components';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { LastUpdatedDateCellRendererComponent, NameCellRendererComponent, StatusCellRendererComponent } from './columns';
import { ServicesDeviceTabComponent } from './services-device-tab.component';
import { ServicesDeviceTabGuard } from './services-device-tab.guard';
import { ServicesBreadcrumbFactory } from './services.breadcrumb-factory';
import * as i0 from "@angular/core";
export class ServicesDeviceTabModule {
}
ServicesDeviceTabModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ServicesDeviceTabModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ServicesDeviceTabModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ServicesDeviceTabModule, declarations: [ServicesDeviceTabComponent,
        LastUpdatedDateCellRendererComponent,
        NameCellRendererComponent,
        StatusCellRendererComponent], imports: [CoreModule, RouterModule, TooltipModule] });
ServicesDeviceTabModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ServicesDeviceTabModule, providers: [
        ServicesDeviceTabGuard,
        ServicesBreadcrumbFactory,
        hookRoute({
            context: ViewContext.Device,
            path: 'services',
            component: ServicesDeviceTabComponent,
            label: gettext('Services'),
            icon: 'statistics',
            priority: 500,
            canActivate: [ServicesDeviceTabGuard]
        }),
        hookBreadcrumb(ServicesBreadcrumbFactory)
    ], imports: [CoreModule, RouterModule, TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ServicesDeviceTabModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CoreModule, RouterModule, TooltipModule],
                    declarations: [
                        ServicesDeviceTabComponent,
                        LastUpdatedDateCellRendererComponent,
                        NameCellRendererComponent,
                        StatusCellRendererComponent
                    ],
                    providers: [
                        ServicesDeviceTabGuard,
                        ServicesBreadcrumbFactory,
                        hookRoute({
                            context: ViewContext.Device,
                            path: 'services',
                            component: ServicesDeviceTabComponent,
                            label: gettext('Services'),
                            icon: 'statistics',
                            priority: 500,
                            canActivate: [ServicesDeviceTabGuard]
                        }),
                        hookBreadcrumb(ServicesBreadcrumbFactory)
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZXMtZGV2aWNlLXRhYi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zZXJ2aWNlcy9zZXJ2aWNlcy1kZXZpY2UtdGFiL3NlcnZpY2VzLWRldmljZS10YWIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEcsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFDTCxvQ0FBb0MsRUFDcEMseUJBQXlCLEVBQ3pCLDJCQUEyQixFQUM1QixNQUFNLFdBQVcsQ0FBQztBQUNuQixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7QUF5QjFFLE1BQU0sT0FBTyx1QkFBdUI7O29IQUF2Qix1QkFBdUI7cUhBQXZCLHVCQUF1QixpQkFwQmhDLDBCQUEwQjtRQUMxQixvQ0FBb0M7UUFDcEMseUJBQXlCO1FBQ3pCLDJCQUEyQixhQUxuQixVQUFVLEVBQUUsWUFBWSxFQUFFLGFBQWE7cUhBc0J0Qyx1QkFBdUIsYUFmdkI7UUFDVCxzQkFBc0I7UUFDdEIseUJBQXlCO1FBQ3pCLFNBQVMsQ0FBQztZQUNSLE9BQU8sRUFBRSxXQUFXLENBQUMsTUFBTTtZQUMzQixJQUFJLEVBQUUsVUFBVTtZQUNoQixTQUFTLEVBQUUsMEJBQTBCO1lBQ3JDLEtBQUssRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDO1lBQzFCLElBQUksRUFBRSxZQUFZO1lBQ2xCLFFBQVEsRUFBRSxHQUFHO1lBQ2IsV0FBVyxFQUFFLENBQUMsc0JBQXNCLENBQUM7U0FDdEMsQ0FBQztRQUNGLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQztLQUMxQyxZQXBCUyxVQUFVLEVBQUUsWUFBWSxFQUFFLGFBQWE7MkZBc0J0Qyx1QkFBdUI7a0JBdkJuQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFZLEVBQUUsYUFBYSxDQUFDO29CQUNsRCxZQUFZLEVBQUU7d0JBQ1osMEJBQTBCO3dCQUMxQixvQ0FBb0M7d0JBQ3BDLHlCQUF5Qjt3QkFDekIsMkJBQTJCO3FCQUM1QjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Qsc0JBQXNCO3dCQUN0Qix5QkFBeUI7d0JBQ3pCLFNBQVMsQ0FBQzs0QkFDUixPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07NEJBQzNCLElBQUksRUFBRSxVQUFVOzRCQUNoQixTQUFTLEVBQUUsMEJBQTBCOzRCQUNyQyxLQUFLLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQzs0QkFDMUIsSUFBSSxFQUFFLFlBQVk7NEJBQ2xCLFFBQVEsRUFBRSxHQUFHOzRCQUNiLFdBQVcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3lCQUN0QyxDQUFDO3dCQUNGLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQztxQkFDMUM7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIGdldHRleHQsIGhvb2tCcmVhZGNydW1iLCBob29rUm91dGUsIFZpZXdDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7XG4gIExhc3RVcGRhdGVkRGF0ZUNlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgTmFtZUNlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50XG59IGZyb20gJy4vY29sdW1ucyc7XG5pbXBvcnQgeyBTZXJ2aWNlc0RldmljZVRhYkNvbXBvbmVudCB9IGZyb20gJy4vc2VydmljZXMtZGV2aWNlLXRhYi5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VydmljZXNEZXZpY2VUYWJHdWFyZCB9IGZyb20gJy4vc2VydmljZXMtZGV2aWNlLXRhYi5ndWFyZCc7XG5pbXBvcnQgeyBTZXJ2aWNlc0JyZWFkY3J1bWJGYWN0b3J5IH0gZnJvbSAnLi9zZXJ2aWNlcy5icmVhZGNydW1iLWZhY3RvcnknO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgUm91dGVyTW9kdWxlLCBUb29sdGlwTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU2VydmljZXNEZXZpY2VUYWJDb21wb25lbnQsXG4gICAgTGFzdFVwZGF0ZWREYXRlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIFNlcnZpY2VzRGV2aWNlVGFiR3VhcmQsXG4gICAgU2VydmljZXNCcmVhZGNydW1iRmFjdG9yeSxcbiAgICBob29rUm91dGUoe1xuICAgICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgICAgcGF0aDogJ3NlcnZpY2VzJyxcbiAgICAgIGNvbXBvbmVudDogU2VydmljZXNEZXZpY2VUYWJDb21wb25lbnQsXG4gICAgICBsYWJlbDogZ2V0dGV4dCgnU2VydmljZXMnKSxcbiAgICAgIGljb246ICdzdGF0aXN0aWNzJyxcbiAgICAgIHByaW9yaXR5OiA1MDAsXG4gICAgICBjYW5BY3RpdmF0ZTogW1NlcnZpY2VzRGV2aWNlVGFiR3VhcmRdXG4gICAgfSksXG4gICAgaG9va0JyZWFkY3J1bWIoU2VydmljZXNCcmVhZGNydW1iRmFjdG9yeSlcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTZXJ2aWNlc0RldmljZVRhYk1vZHVsZSB7fVxuIl19