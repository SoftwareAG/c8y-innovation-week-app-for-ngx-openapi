import { NgModule } from '@angular/core';
import { CoreModule, gettext, hookRoute, ViewContext } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { AddGroupModule } from './add-group/add-group.module';
import { AssetTypeCellRendererComponent } from './columns/asset-type.cell-renderer.component';
import { DeleteAssetsModalComponent } from './delete-assets-modal/delete-assets-modal.component';
import { GroupInfoComponent } from './group-info.component';
import { GroupsComponent } from './groups.component';
import { SubAssetsGridComponent } from './sub-assets-grid.component';
import { SubAssetsComponent } from './sub-assets.component';
import { SubAssetsService } from './sub-assets.service';
import { UnassignModalComponent } from './unassign-assets-modal/unassign-modal.component';
import { AssignDevicesComponent } from './assign-devices/assign-devices.component';
import { AssignChildDevicesComponent } from './assign-devices/assign-child-devices.component';
import { AssetPropertiesComponent } from './asset-properties.component';
import { AssetPropertiesItemComponent } from './asset-properties-item.component';
import { SUB_ASSETS_CONFIG, defaultModuleConfig } from './sub-assets.model';
import * as i0 from "@angular/core";
export class SubAssetsModule {
    static config(config = {}) {
        return {
            ngModule: SubAssetsModule,
            providers: [
                {
                    provide: SUB_ASSETS_CONFIG,
                    useValue: { ...defaultModuleConfig, ...config }
                }
            ]
        };
    }
}
SubAssetsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SubAssetsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubAssetsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: SubAssetsModule, declarations: [SubAssetsComponent,
        SubAssetsGridComponent,
        AssetTypeCellRendererComponent,
        GroupsComponent,
        GroupInfoComponent,
        DeleteAssetsModalComponent,
        UnassignModalComponent,
        AssignDevicesComponent,
        AssignChildDevicesComponent,
        AssetPropertiesComponent,
        AssetPropertiesItemComponent], imports: [CoreModule, DeviceGridModule, AddGroupModule, PopoverModule, TooltipModule], exports: [SubAssetsGridComponent] });
SubAssetsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SubAssetsModule, providers: [
        {
            provide: SUB_ASSETS_CONFIG,
            useValue: defaultModuleConfig
        },
        hookRoute([
            {
                context: ViewContext.Group,
                path: 'subassets',
                priority: 1000,
                icon: 'c8y-group-open',
                label: gettext('Subassets'),
                component: SubAssetsComponent,
                featureId: 'subassets'
            },
            {
                path: 'group',
                component: GroupsComponent
            }
        ]),
        SubAssetsService
    ], imports: [CoreModule, DeviceGridModule, AddGroupModule, PopoverModule, TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SubAssetsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        SubAssetsComponent,
                        SubAssetsGridComponent,
                        AssetTypeCellRendererComponent,
                        GroupsComponent,
                        GroupInfoComponent,
                        DeleteAssetsModalComponent,
                        UnassignModalComponent,
                        AssignDevicesComponent,
                        AssignChildDevicesComponent,
                        AssetPropertiesComponent,
                        AssetPropertiesItemComponent
                    ],
                    imports: [CoreModule, DeviceGridModule, AddGroupModule, PopoverModule, TooltipModule],
                    entryComponents: [
                        SubAssetsComponent,
                        AssetTypeCellRendererComponent,
                        GroupsComponent,
                        DeleteAssetsModalComponent,
                        UnassignModalComponent
                    ],
                    exports: [SubAssetsGridComponent],
                    providers: [
                        {
                            provide: SUB_ASSETS_CONFIG,
                            useValue: defaultModuleConfig
                        },
                        hookRoute([
                            {
                                context: ViewContext.Group,
                                path: 'subassets',
                                priority: 1000,
                                icon: 'c8y-group-open',
                                label: gettext('Subassets'),
                                component: SubAssetsComponent,
                                featureId: 'subassets'
                            },
                            {
                                path: 'group',
                                component: GroupsComponent
                            }
                        ]),
                        SubAssetsService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWFzc2V0cy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zdWItYXNzZXRzL3N1Yi1hc3NldHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM5RixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDMUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbkYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDOUYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLGlCQUFpQixFQUFtQixtQkFBbUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQWdEN0YsTUFBTSxPQUFPLGVBQWU7SUFDMUIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUEwQixFQUFFO1FBQ3hDLE9BQU87WUFDTCxRQUFRLEVBQUUsZUFBZTtZQUN6QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtvQkFDMUIsUUFBUSxFQUFFLEVBQUUsR0FBRyxtQkFBbUIsRUFBRSxHQUFHLE1BQU0sRUFBRTtpQkFDaEQ7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs0R0FYVSxlQUFlOzZHQUFmLGVBQWUsaUJBNUN4QixrQkFBa0I7UUFDbEIsc0JBQXNCO1FBQ3RCLDhCQUE4QjtRQUM5QixlQUFlO1FBQ2Ysa0JBQWtCO1FBQ2xCLDBCQUEwQjtRQUMxQixzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLDJCQUEyQjtRQUMzQix3QkFBd0I7UUFDeEIsNEJBQTRCLGFBRXBCLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGFBQWEsYUFRMUUsc0JBQXNCOzZHQXdCckIsZUFBZSxhQXZCZjtRQUNUO1lBQ0UsT0FBTyxFQUFFLGlCQUFpQjtZQUMxQixRQUFRLEVBQUUsbUJBQW1CO1NBQzlCO1FBQ0QsU0FBUyxDQUFDO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLFdBQVcsQ0FBQyxLQUFLO2dCQUMxQixJQUFJLEVBQUUsV0FBVztnQkFDakIsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsSUFBSSxFQUFFLGdCQUFnQjtnQkFDdEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUM7Z0JBQzNCLFNBQVMsRUFBRSxrQkFBa0I7Z0JBQzdCLFNBQVMsRUFBRSxXQUFXO2FBQ3ZCO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLE9BQU87Z0JBQ2IsU0FBUyxFQUFFLGVBQWU7YUFDM0I7U0FDRixDQUFDO1FBQ0YsZ0JBQWdCO0tBQ2pCLFlBOUJTLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGFBQWE7MkZBZ0N6RSxlQUFlO2tCQTlDM0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLDhCQUE4Qjt3QkFDOUIsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLDBCQUEwQjt3QkFDMUIsc0JBQXNCO3dCQUN0QixzQkFBc0I7d0JBQ3RCLDJCQUEyQjt3QkFDM0Isd0JBQXdCO3dCQUN4Qiw0QkFBNEI7cUJBQzdCO29CQUNELE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGFBQWEsQ0FBQztvQkFDckYsZUFBZSxFQUFFO3dCQUNmLGtCQUFrQjt3QkFDbEIsOEJBQThCO3dCQUM5QixlQUFlO3dCQUNmLDBCQUEwQjt3QkFDMUIsc0JBQXNCO3FCQUN2QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztvQkFDakMsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFFBQVEsRUFBRSxtQkFBbUI7eUJBQzlCO3dCQUNELFNBQVMsQ0FBQzs0QkFDUjtnQ0FDRSxPQUFPLEVBQUUsV0FBVyxDQUFDLEtBQUs7Z0NBQzFCLElBQUksRUFBRSxXQUFXO2dDQUNqQixRQUFRLEVBQUUsSUFBSTtnQ0FDZCxJQUFJLEVBQUUsZ0JBQWdCO2dDQUN0QixLQUFLLEVBQUUsT0FBTyxDQUFDLFdBQVcsQ0FBQztnQ0FDM0IsU0FBUyxFQUFFLGtCQUFrQjtnQ0FDN0IsU0FBUyxFQUFFLFdBQVc7NkJBQ3ZCOzRCQUNEO2dDQUNFLElBQUksRUFBRSxPQUFPO2dDQUNiLFNBQVMsRUFBRSxlQUFlOzZCQUMzQjt5QkFDRixDQUFDO3dCQUNGLGdCQUFnQjtxQkFDakI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgZ2V0dGV4dCwgaG9va1JvdXRlLCBWaWV3Q29udGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZE1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQnO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IEFkZEdyb3VwTW9kdWxlIH0gZnJvbSAnLi9hZGQtZ3JvdXAvYWRkLWdyb3VwLm1vZHVsZSc7XG5pbXBvcnQgeyBBc3NldFR5cGVDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvYXNzZXQtdHlwZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vZGVsZXRlLWFzc2V0cy1tb2RhbC9kZWxldGUtYXNzZXRzLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcm91cEluZm9Db21wb25lbnQgfSBmcm9tICcuL2dyb3VwLWluZm8uY29tcG9uZW50JztcbmltcG9ydCB7IEdyb3Vwc0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXBzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdWJBc3NldHNHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9zdWItYXNzZXRzLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFN1YkFzc2V0c0NvbXBvbmVudCB9IGZyb20gJy4vc3ViLWFzc2V0cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3ViQXNzZXRzU2VydmljZSB9IGZyb20gJy4vc3ViLWFzc2V0cy5zZXJ2aWNlJztcbmltcG9ydCB7IFVuYXNzaWduTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3VuYXNzaWduLWFzc2V0cy1tb2RhbC91bmFzc2lnbi1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzaWduRGV2aWNlc0NvbXBvbmVudCB9IGZyb20gJy4vYXNzaWduLWRldmljZXMvYXNzaWduLWRldmljZXMuY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2lnbkNoaWxkRGV2aWNlc0NvbXBvbmVudCB9IGZyb20gJy4vYXNzaWduLWRldmljZXMvYXNzaWduLWNoaWxkLWRldmljZXMuY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2V0UHJvcGVydGllc0NvbXBvbmVudCB9IGZyb20gJy4vYXNzZXQtcHJvcGVydGllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzZXRQcm9wZXJ0aWVzSXRlbUNvbXBvbmVudCB9IGZyb20gJy4vYXNzZXQtcHJvcGVydGllcy1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTVUJfQVNTRVRTX0NPTkZJRywgU3ViQXNzZXRzQ29uZmlnLCBkZWZhdWx0TW9kdWxlQ29uZmlnIH0gZnJvbSAnLi9zdWItYXNzZXRzLm1vZGVsJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU3ViQXNzZXRzQ29tcG9uZW50LFxuICAgIFN1YkFzc2V0c0dyaWRDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBHcm91cEluZm9Db21wb25lbnQsXG4gICAgRGVsZXRlQXNzZXRzTW9kYWxDb21wb25lbnQsXG4gICAgVW5hc3NpZ25Nb2RhbENvbXBvbmVudCxcbiAgICBBc3NpZ25EZXZpY2VzQ29tcG9uZW50LFxuICAgIEFzc2lnbkNoaWxkRGV2aWNlc0NvbXBvbmVudCxcbiAgICBBc3NldFByb3BlcnRpZXNDb21wb25lbnQsXG4gICAgQXNzZXRQcm9wZXJ0aWVzSXRlbUNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgRGV2aWNlR3JpZE1vZHVsZSwgQWRkR3JvdXBNb2R1bGUsIFBvcG92ZXJNb2R1bGUsIFRvb2x0aXBNb2R1bGVdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBTdWJBc3NldHNDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCxcbiAgICBVbmFzc2lnbk1vZGFsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtTdWJBc3NldHNHcmlkQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogU1VCX0FTU0VUU19DT05GSUcsXG4gICAgICB1c2VWYWx1ZTogZGVmYXVsdE1vZHVsZUNvbmZpZ1xuICAgIH0sXG4gICAgaG9va1JvdXRlKFtcbiAgICAgIHtcbiAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuR3JvdXAsXG4gICAgICAgIHBhdGg6ICdzdWJhc3NldHMnLFxuICAgICAgICBwcmlvcml0eTogMTAwMCxcbiAgICAgICAgaWNvbjogJ2M4eS1ncm91cC1vcGVuJyxcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ1N1YmFzc2V0cycpLFxuICAgICAgICBjb21wb25lbnQ6IFN1YkFzc2V0c0NvbXBvbmVudCxcbiAgICAgICAgZmVhdHVyZUlkOiAnc3ViYXNzZXRzJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0aDogJ2dyb3VwJyxcbiAgICAgICAgY29tcG9uZW50OiBHcm91cHNDb21wb25lbnRcbiAgICAgIH1cbiAgICBdKSxcbiAgICBTdWJBc3NldHNTZXJ2aWNlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU3ViQXNzZXRzTW9kdWxlIHtcbiAgc3RhdGljIGNvbmZpZyhjb25maWc6IFN1YkFzc2V0c0NvbmZpZyA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVyczxTdWJBc3NldHNNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFN1YkFzc2V0c01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogU1VCX0FTU0VUU19DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IHsgLi4uZGVmYXVsdE1vZHVsZUNvbmZpZywgLi4uY29uZmlnIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==