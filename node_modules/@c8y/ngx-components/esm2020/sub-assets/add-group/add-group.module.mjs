import { NgModule } from '@angular/core';
import { CoreModule, hookRoute } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { AddGroupComponent } from './add-group.component';
import { AddGroupService } from './add-group.service';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import * as i0 from "@angular/core";
export class AddGroupModule {
}
AddGroupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddGroupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddGroupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: AddGroupModule, declarations: [AddGroupComponent], imports: [CoreModule, DeviceGridModule, FormsModule, ReactiveFormsModule], exports: [AddGroupComponent] });
AddGroupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddGroupModule, providers: [
        hookRoute({
            path: 'add-group',
            component: AddGroupComponent
        }),
        AddGroupService
    ], imports: [CoreModule, DeviceGridModule, FormsModule, ReactiveFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AddGroupModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddGroupComponent],
                    imports: [CoreModule, DeviceGridModule, FormsModule, ReactiveFormsModule],
                    entryComponents: [AddGroupComponent],
                    exports: [AddGroupComponent],
                    providers: [
                        hookRoute({
                            path: 'add-group',
                            component: AddGroupComponent
                        }),
                        AddGroupService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWdyb3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N1Yi1hc3NldHMvYWRkLWdyb3VwL2FkZC1ncm91cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBZWxFLE1BQU0sT0FBTyxjQUFjOzsyR0FBZCxjQUFjOzRHQUFkLGNBQWMsaUJBWlYsaUJBQWlCLGFBQ3RCLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLGFBRTlELGlCQUFpQjs0R0FTaEIsY0FBYyxhQVJkO1FBQ1QsU0FBUyxDQUFDO1lBQ1IsSUFBSSxFQUFFLFdBQVc7WUFDakIsU0FBUyxFQUFFLGlCQUFpQjtTQUM3QixDQUFDO1FBQ0YsZUFBZTtLQUNoQixZQVRTLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsbUJBQW1COzJGQVc3RCxjQUFjO2tCQWIxQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGlCQUFpQixDQUFDO29CQUNqQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDO29CQUN6RSxlQUFlLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDcEMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7b0JBQzVCLFNBQVMsRUFBRTt3QkFDVCxTQUFTLENBQUM7NEJBQ1IsSUFBSSxFQUFFLFdBQVc7NEJBQ2pCLFNBQVMsRUFBRSxpQkFBaUI7eUJBQzdCLENBQUM7d0JBQ0YsZUFBZTtxQkFDaEI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgaG9va1JvdXRlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZCc7XG5pbXBvcnQgeyBBZGRHcm91cENvbXBvbmVudCB9IGZyb20gJy4vYWRkLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBZGRHcm91cFNlcnZpY2UgfSBmcm9tICcuL2FkZC1ncm91cC5zZXJ2aWNlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtBZGRHcm91cENvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBEZXZpY2VHcmlkTW9kdWxlLCBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZV0sXG4gIGVudHJ5Q29tcG9uZW50czogW0FkZEdyb3VwQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW0FkZEdyb3VwQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgaG9va1JvdXRlKHtcbiAgICAgIHBhdGg6ICdhZGQtZ3JvdXAnLFxuICAgICAgY29tcG9uZW50OiBBZGRHcm91cENvbXBvbmVudFxuICAgIH0pLFxuICAgIEFkZEdyb3VwU2VydmljZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEFkZEdyb3VwTW9kdWxlIHt9XG4iXX0=