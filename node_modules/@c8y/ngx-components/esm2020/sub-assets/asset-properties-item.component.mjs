import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { AlertService, C8yJSONSchema, gettext, FilesService } from '@c8y/ngx-components';
import { clone } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-formly/core";
export class AssetPropertiesItemComponent {
    constructor(alert, c8yJsonSchemaService, filesService) {
        this.alert = alert;
        this.c8yJsonSchemaService = c8yJsonSchemaService;
        this.filesService = filesService;
    }
    async ngOnChanges(changes) {
        if (changes.isEdit) {
            this.resolveJsonSchema();
            await this.resolveFile();
        }
    }
    async resolveFile() {
        if (this.file) {
            try {
                const imageFile = await this.filesService.getFile(this.file);
                this.previewImage = await this.getPreviewIfImage(imageFile);
            }
            catch (ex) {
                this.alert.danger(gettext('File could not be loaded.'));
            }
        }
    }
    formComplexPropsValue() {
        const complexProps = {};
        this.complex.forEach(complexObj => {
            if (complexObj.file) {
                complexProps[complexObj.key] = complexObj.value;
            }
            else if (this.value[complexObj.key] != null) {
                complexProps[complexObj.key] = this.value[complexObj.key];
            }
        });
        return complexProps;
    }
    getModel() {
        if (this.complex && this.complex.length > 0) {
            return {
                [this.key]: this.formComplexPropsValue()
            };
        }
        return {
            [this.key]: clone(this.value)
        };
    }
    resolveJsonSchema() {
        if (this.jsonSchema) {
            const fieldConfig = this.c8yJsonSchemaService.toFieldConfig(this.jsonSchema, this.jsonSchema);
            this.form = new FormGroup({});
            this.fields = [fieldConfig];
            this.model = this.getModel();
        }
    }
    async getPreviewIfImage(imageFile) {
        if (this.filesService.haveValidExtensions(imageFile, 'image')) {
            return this.filesService.toBase64(imageFile);
        }
    }
}
AssetPropertiesItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AssetPropertiesItemComponent, deps: [{ token: i1.AlertService }, { token: i1.C8yJSONSchema }, { token: i1.FilesService }], target: i0.ɵɵFactoryTarget.Component });
AssetPropertiesItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AssetPropertiesItemComponent, selector: "c8y-asset-properties-item", inputs: { key: "key", value: "value", label: "label", type: "type", file: "file", complex: "complex", isEdit: "isEdit", jsonSchema: "jsonSchema" }, usesOnChanges: true, ngImport: i0, template: "<ng-container [ngSwitch]=\"type\" *ngIf=\"!isEdit\">\n  <ng-container *ngSwitchCase=\"'date'\">\n    {{ (value | c8yDate: 'fullDate') || ('Undefined' | translate) }}\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'file'\">\n    <ng-container *ngIf=\"file\">\n      <img *ngIf=\"previewImage\" [src]=\"previewImage\" class=\"img-responsive\" />\n      <button\n        *ngIf=\"!previewImage\"\n        (click)=\"filesService.download(file)\"\n        type=\"button\"\n        title=\"{{ 'Download' | translate }} {{ file.name }}\"\n        class=\"btn btn-clean text-truncate p-0\"\n      >\n        {{ file.name }}\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"!file\">\n      {{ 'No file attached.' | translate }}\n    </ng-container>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'object'\">\n    <ul class=\"list-unstyled c8y-custom-properties\">\n      <li\n        *ngFor=\"let prop of complex; let i = index\"\n        [ngClass]=\"{ 'separator-top-bottom': i === 0, 'separator-bottom': i > 0 }\"\n        class=\"p-t-4 p-b-4 d-flex text-nowrap\"\n      >\n        <label\n          class=\"small m-b-0 m-r-8 text-truncate\"\n          title=\"{{ prop.label | translate }}\"\n          [ngClass]=\"{ 'a-s-start': prop.file }\"\n        >\n          {{ prop.label | translate }}\n        </label>\n        <span class=\"m-l-auto\" style=\"max-width: {{ prop.file ? '50%' : '100%' }}; min-width:0;\">\n          <c8y-asset-properties-item\n            [file]=\"prop.file\"\n            [key]=\"prop.key\"\n            [type]=\"prop.type\"\n            [value]=\"prop.value\"\n          ></c8y-asset-properties-item>\n        </span>\n      </li>\n    </ul>\n  </ng-container>\n  <!--\n  <ng-container *ngSwitchCase=\"'boolean'\">\n      <input type=\"checkbox\" [checked]=\"value\" [disabled]=\"true\" />\n    </ng-container>\n  -->\n  <ng-container *ngSwitchCase=\"type === 'number' || type === 'boolean' ? type : ''\">\n    <p class=\"text-truncate\" title=\"{{ value != null ? value : ('Undefined' | translate) }}\">\n      {{ value != null ? value : ('Undefined' | translate) }}\n    </p>\n  </ng-container>\n  <ng-container *ngSwitchDefault>\n    <p class=\"text-truncate\" title=\"{{ (value | translate) || ('Undefined' | translate) }}\">\n      {{ (value | translate) || ('Undefined' | translate) }}\n    </p>\n  </ng-container>\n</ng-container>\n<formly-form *ngIf=\"isEdit\" [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "component", type: i3.FormlyForm, selector: "formly-form", inputs: ["form", "model", "fields", "options"], outputs: ["modelChange"] }, { kind: "component", type: AssetPropertiesItemComponent, selector: "c8y-asset-properties-item", inputs: ["key", "value", "label", "type", "file", "complex", "isEdit", "jsonSchema"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i1.DatePipe, name: "c8yDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AssetPropertiesItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-asset-properties-item', template: "<ng-container [ngSwitch]=\"type\" *ngIf=\"!isEdit\">\n  <ng-container *ngSwitchCase=\"'date'\">\n    {{ (value | c8yDate: 'fullDate') || ('Undefined' | translate) }}\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'file'\">\n    <ng-container *ngIf=\"file\">\n      <img *ngIf=\"previewImage\" [src]=\"previewImage\" class=\"img-responsive\" />\n      <button\n        *ngIf=\"!previewImage\"\n        (click)=\"filesService.download(file)\"\n        type=\"button\"\n        title=\"{{ 'Download' | translate }} {{ file.name }}\"\n        class=\"btn btn-clean text-truncate p-0\"\n      >\n        {{ file.name }}\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"!file\">\n      {{ 'No file attached.' | translate }}\n    </ng-container>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'object'\">\n    <ul class=\"list-unstyled c8y-custom-properties\">\n      <li\n        *ngFor=\"let prop of complex; let i = index\"\n        [ngClass]=\"{ 'separator-top-bottom': i === 0, 'separator-bottom': i > 0 }\"\n        class=\"p-t-4 p-b-4 d-flex text-nowrap\"\n      >\n        <label\n          class=\"small m-b-0 m-r-8 text-truncate\"\n          title=\"{{ prop.label | translate }}\"\n          [ngClass]=\"{ 'a-s-start': prop.file }\"\n        >\n          {{ prop.label | translate }}\n        </label>\n        <span class=\"m-l-auto\" style=\"max-width: {{ prop.file ? '50%' : '100%' }}; min-width:0;\">\n          <c8y-asset-properties-item\n            [file]=\"prop.file\"\n            [key]=\"prop.key\"\n            [type]=\"prop.type\"\n            [value]=\"prop.value\"\n          ></c8y-asset-properties-item>\n        </span>\n      </li>\n    </ul>\n  </ng-container>\n  <!--\n  <ng-container *ngSwitchCase=\"'boolean'\">\n      <input type=\"checkbox\" [checked]=\"value\" [disabled]=\"true\" />\n    </ng-container>\n  -->\n  <ng-container *ngSwitchCase=\"type === 'number' || type === 'boolean' ? type : ''\">\n    <p class=\"text-truncate\" title=\"{{ value != null ? value : ('Undefined' | translate) }}\">\n      {{ value != null ? value : ('Undefined' | translate) }}\n    </p>\n  </ng-container>\n  <ng-container *ngSwitchDefault>\n    <p class=\"text-truncate\" title=\"{{ (value | translate) || ('Undefined' | translate) }}\">\n      {{ (value | translate) || ('Undefined' | translate) }}\n    </p>\n  </ng-container>\n</ng-container>\n<formly-form *ngIf=\"isEdit\" [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AlertService }, { type: i1.C8yJSONSchema }, { type: i1.FilesService }]; }, propDecorators: { key: [{
                type: Input
            }], value: [{
                type: Input
            }], label: [{
                type: Input
            }], type: [{
                type: Input
            }], file: [{
                type: Input
            }], complex: [{
                type: Input
            }], isEdit: [{
                type: Input
            }], jsonSchema: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,