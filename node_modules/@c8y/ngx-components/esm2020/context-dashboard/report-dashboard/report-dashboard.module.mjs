import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule, hookNavigator, hookRoute, ViewContext } from '@c8y/ngx-components';
import { ContextDashboardModule } from '../context-dashboard.module';
import { ContextDashboardComponent } from '../context-dashboard.component';
import { ReportDashboardGuard } from './report-dashboard.guard';
import { ReportDashboardNavigationFactory } from './report-dashboard-navigation.factory';
import { ReportDashboardListComponent } from './report-dashboard-list.component';
import { ReportDashboardService } from './report-dashboard.service';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/tooltip";
import * as i2 from "@angular/router";
export class ReportDashboardModule {
}
ReportDashboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ReportDashboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ReportDashboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ReportDashboardModule, declarations: [ReportDashboardListComponent], imports: [CoreModule,
        ContextDashboardModule, i1.TooltipModule, i2.RouterModule, PopoverModule] });
ReportDashboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ReportDashboardModule, providers: [
        ReportDashboardGuard,
        ReportDashboardService,
        hookRoute({
            path: 'dashboard/:dashboardId',
            component: ContextDashboardComponent,
            canActivate: [ReportDashboardGuard],
            context: ViewContext.Report
        }),
        hookNavigator(ReportDashboardNavigationFactory)
    ], imports: [CoreModule,
        ContextDashboardModule,
        TooltipModule.forRoot(),
        RouterModule.forChild([
            {
                path: 'reports',
                component: ReportDashboardListComponent
            }
        ]),
        PopoverModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ReportDashboardModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ReportDashboardListComponent],
                    entryComponents: [],
                    imports: [
                        CoreModule,
                        ContextDashboardModule,
                        TooltipModule.forRoot(),
                        RouterModule.forChild([
                            {
                                path: 'reports',
                                component: ReportDashboardListComponent
                            }
                        ]),
                        PopoverModule
                    ],
                    providers: [
                        ReportDashboardGuard,
                        ReportDashboardService,
                        hookRoute({
                            path: 'dashboard/:dashboardId',
                            component: ContextDashboardComponent,
                            canActivate: [ReportDashboardGuard],
                            context: ViewContext.Report
                        }),
                        hookNavigator(ReportDashboardNavigationFactory)
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0LWRhc2hib2FyZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9yZXBvcnQtZGFzaGJvYXJkL3JlcG9ydC1kYXNoYm9hcmQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVyRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN6RixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNqRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0FBNkJ0RCxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBMUJqQiw0QkFBNEIsYUFHekMsVUFBVTtRQUNWLHNCQUFzQixxQ0FRdEIsYUFBYTttSEFjSixxQkFBcUIsYUFackI7UUFDVCxvQkFBb0I7UUFDcEIsc0JBQXNCO1FBQ3RCLFNBQVMsQ0FBQztZQUNSLElBQUksRUFBRSx3QkFBd0I7WUFDOUIsU0FBUyxFQUFFLHlCQUF5QjtZQUNwQyxXQUFXLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztZQUNuQyxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07U0FDNUIsQ0FBQztRQUNGLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQztLQUNoRCxZQXJCQyxVQUFVO1FBQ1Ysc0JBQXNCO1FBQ3RCLGFBQWEsQ0FBQyxPQUFPLEVBQUU7UUFDdkIsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUNwQjtnQkFDRSxJQUFJLEVBQUUsU0FBUztnQkFDZixTQUFTLEVBQUUsNEJBQTRCO2FBQ3hDO1NBQ0YsQ0FBQztRQUNGLGFBQWE7MkZBY0oscUJBQXFCO2tCQTNCakMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztvQkFDNUMsZUFBZSxFQUFFLEVBQUU7b0JBQ25CLE9BQU8sRUFBRTt3QkFDUCxVQUFVO3dCQUNWLHNCQUFzQjt3QkFDdEIsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsWUFBWSxDQUFDLFFBQVEsQ0FBQzs0QkFDcEI7Z0NBQ0UsSUFBSSxFQUFFLFNBQVM7Z0NBQ2YsU0FBUyxFQUFFLDRCQUE0Qjs2QkFDeEM7eUJBQ0YsQ0FBQzt3QkFDRixhQUFhO3FCQUNkO29CQUNELFNBQVMsRUFBRTt3QkFDVCxvQkFBb0I7d0JBQ3BCLHNCQUFzQjt3QkFDdEIsU0FBUyxDQUFDOzRCQUNSLElBQUksRUFBRSx3QkFBd0I7NEJBQzlCLFNBQVMsRUFBRSx5QkFBeUI7NEJBQ3BDLFdBQVcsRUFBRSxDQUFDLG9CQUFvQixDQUFDOzRCQUNuQyxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07eUJBQzVCLENBQUM7d0JBQ0YsYUFBYSxDQUFDLGdDQUFnQyxDQUFDO3FCQUNoRDtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgaG9va05hdmlnYXRvciwgaG9va1JvdXRlLCBWaWV3Q29udGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29udGV4dERhc2hib2FyZE1vZHVsZSB9IGZyb20gJy4uL2NvbnRleHQtZGFzaGJvYXJkLm1vZHVsZSc7XG5cbmltcG9ydCB7IENvbnRleHREYXNoYm9hcmRDb21wb25lbnQgfSBmcm9tICcuLi9jb250ZXh0LWRhc2hib2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmVwb3J0RGFzaGJvYXJkR3VhcmQgfSBmcm9tICcuL3JlcG9ydC1kYXNoYm9hcmQuZ3VhcmQnO1xuaW1wb3J0IHsgUmVwb3J0RGFzaGJvYXJkTmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL3JlcG9ydC1kYXNoYm9hcmQtbmF2aWdhdGlvbi5mYWN0b3J5JztcbmltcG9ydCB7IFJlcG9ydERhc2hib2FyZExpc3RDb21wb25lbnQgfSBmcm9tICcuL3JlcG9ydC1kYXNoYm9hcmQtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmVwb3J0RGFzaGJvYXJkU2VydmljZSB9IGZyb20gJy4vcmVwb3J0LWRhc2hib2FyZC5zZXJ2aWNlJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1JlcG9ydERhc2hib2FyZExpc3RDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBDb250ZXh0RGFzaGJvYXJkTW9kdWxlLFxuICAgIFRvb2x0aXBNb2R1bGUuZm9yUm9vdCgpLFxuICAgIFJvdXRlck1vZHVsZS5mb3JDaGlsZChbXG4gICAgICB7XG4gICAgICAgIHBhdGg6ICdyZXBvcnRzJyxcbiAgICAgICAgY29tcG9uZW50OiBSZXBvcnREYXNoYm9hcmRMaXN0Q29tcG9uZW50XG4gICAgICB9XG4gICAgXSksXG4gICAgUG9wb3Zlck1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBSZXBvcnREYXNoYm9hcmRHdWFyZCxcbiAgICBSZXBvcnREYXNoYm9hcmRTZXJ2aWNlLFxuICAgIGhvb2tSb3V0ZSh7XG4gICAgICBwYXRoOiAnZGFzaGJvYXJkLzpkYXNoYm9hcmRJZCcsXG4gICAgICBjb21wb25lbnQ6IENvbnRleHREYXNoYm9hcmRDb21wb25lbnQsXG4gICAgICBjYW5BY3RpdmF0ZTogW1JlcG9ydERhc2hib2FyZEd1YXJkXSxcbiAgICAgIGNvbnRleHQ6IFZpZXdDb250ZXh0LlJlcG9ydFxuICAgIH0pLFxuICAgIGhvb2tOYXZpZ2F0b3IoUmVwb3J0RGFzaGJvYXJkTmF2aWdhdGlvbkZhY3RvcnkpXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUmVwb3J0RGFzaGJvYXJkTW9kdWxlIHt9XG4iXX0=