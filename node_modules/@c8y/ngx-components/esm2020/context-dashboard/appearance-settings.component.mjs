import { Component, Input, Output, EventEmitter } from '@angular/core';
import { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES } from './context-dashboard.model';
import { ControlContainer, NgForm } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "ngx-bootstrap/popover";
export class AppearanceSettingsComponent {
    constructor() {
        this.themeClass = 'dashboard-theme-light';
        this.headerClass = 'panel-title-regular';
        this.themeClassChange = new EventEmitter();
        this.headerClassChange = new EventEmitter();
        this.possibleStylingTheme = DASHBOARD_THEME_CLASSES;
        this.possibleStylingHeader = WIDGET_HEADER_CLASSES;
    }
    themeClassClick(value) {
        value = this.resetToDefault(value, this.themeClass, this.defaultThemeClass);
        this.themeClass = value;
        this.themeClassChange.emit(value);
    }
    headerClassClick(value) {
        value = this.resetToDefault(value, this.headerClass, this.defaultHeaderClass);
        this.headerClass = value;
        this.headerClassChange.emit(value);
    }
    resetToDefault(value, compareTo, defaultValue) {
        if (defaultValue && value === compareTo) {
            value = defaultValue;
        }
        return value;
    }
}
AppearanceSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AppearanceSettingsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AppearanceSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AppearanceSettingsComponent, selector: "c8y-appearance-settings", inputs: { themeClass: "themeClass", headerClass: "headerClass", defaultThemeClass: "defaultThemeClass", defaultHeaderClass: "defaultHeaderClass", possibleStylingTheme: "possibleStylingTheme", possibleStylingHeader: "possibleStylingHeader" }, outputs: { themeClassChange: "themeClassChange", headerClassChange: "headerClassChange" }, ngImport: i0, template: "<div class=\"legend form-block\">\n  <span translate>Layout</span>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-6 m-b-32\">\n    <label translate>Theme</label>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item d-flex a-i-center p-l-0 p-r-0 fit-w\"\n        *ngFor=\"let themeClassItem of possibleStylingTheme; let i = index\"\n      >\n        <div class=\"list-item-checkbox\" style=\"max-width: calc(100% - 24px)\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradiocontentclass' + i\"\n              name=\"content\"\n              [value]=\"themeClassItem.class\"\n              [ngModel]=\"themeClass\"\n              (click)=\"themeClassClick(themeClassItem.class)\"\n            />\n            <span></span>\n            <span\n              class=\"text-truncate\"\n              title=\"{{ themeClassItem.label | translate }}{{\n                themeClassItem.class === defaultThemeClass\n                  ? ' | ' + ('Dashboard default' | translate)\n                  : ''\n              }}\"\n            >\n              <span>{{ themeClassItem.label | translate }}</span>\n              <br />\n              <small\n                *ngIf=\"themeClassItem.class === defaultThemeClass\"\n                class=\"text-muted\"\n                translate\n              >\n                Dashboard default\n              </small>\n            </span>\n          </label>\n        </div>\n\n        <button\n          class=\"btn-help btn-help--sm m-l-auto\"\n          type=\"button\"\n          [attr.aria-label]=\"'Help' | translate\"\n          popover=\"{{ themeClassItem.description | translate }}\"\n          placement=\"top\"\n          triggers=\"focus\"\n          container=\"body\"\n        ></button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-sm-6\">\n    <label translate>Widget header style</label>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item d-flex a-i-center p-l-0 p-r-0\"\n        *ngFor=\"let headerClassItem of possibleStylingHeader; let i = index\"\n      >\n        <div class=\"list-item-checkbox\" style=\"max-width: calc(100% - 24px)\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradioheaderclass' + i\"\n              name=\"header\"\n              [value]=\"headerClassItem.class\"\n              [ngModel]=\"headerClass\"\n              (click)=\"headerClassClick(headerClassItem.class)\"\n            />\n            <span></span>\n            <span\n              class=\"text-truncate\"\n              title=\"{{ headerClassItem.label | translate }}{{\n                headerClassItem.class === defaultHeaderClass\n                  ? ' | ' + ('Dashboard default' | translate)\n                  : ''\n              }}\"\n            >\n              <span>{{ headerClassItem.label | translate }}</span>\n              <br />\n              <small\n                *ngIf=\"headerClassItem.class === defaultHeaderClass\"\n                class=\"text-muted\"\n                translate\n              >\n                Dashboard default\n              </small>\n            </span>\n          </label>\n        </div>\n        <button\n          class=\"btn-help btn-help--sm m-l-auto\"\n          type=\"button\"\n          [attr.aria-label]=\"'Help' | translate\"\n          popover=\"{{ headerClassItem.description | translate }}\"\n          placement=\"top\"\n          triggers=\"focus\"\n          container=\"body\"\n        ></button>\n      </li>\n    </ul>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AppearanceSettingsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-appearance-settings', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"legend form-block\">\n  <span translate>Layout</span>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-6 m-b-32\">\n    <label translate>Theme</label>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item d-flex a-i-center p-l-0 p-r-0 fit-w\"\n        *ngFor=\"let themeClassItem of possibleStylingTheme; let i = index\"\n      >\n        <div class=\"list-item-checkbox\" style=\"max-width: calc(100% - 24px)\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradiocontentclass' + i\"\n              name=\"content\"\n              [value]=\"themeClassItem.class\"\n              [ngModel]=\"themeClass\"\n              (click)=\"themeClassClick(themeClassItem.class)\"\n            />\n            <span></span>\n            <span\n              class=\"text-truncate\"\n              title=\"{{ themeClassItem.label | translate }}{{\n                themeClassItem.class === defaultThemeClass\n                  ? ' | ' + ('Dashboard default' | translate)\n                  : ''\n              }}\"\n            >\n              <span>{{ themeClassItem.label | translate }}</span>\n              <br />\n              <small\n                *ngIf=\"themeClassItem.class === defaultThemeClass\"\n                class=\"text-muted\"\n                translate\n              >\n                Dashboard default\n              </small>\n            </span>\n          </label>\n        </div>\n\n        <button\n          class=\"btn-help btn-help--sm m-l-auto\"\n          type=\"button\"\n          [attr.aria-label]=\"'Help' | translate\"\n          popover=\"{{ themeClassItem.description | translate }}\"\n          placement=\"top\"\n          triggers=\"focus\"\n          container=\"body\"\n        ></button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-sm-6\">\n    <label translate>Widget header style</label>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item d-flex a-i-center p-l-0 p-r-0\"\n        *ngFor=\"let headerClassItem of possibleStylingHeader; let i = index\"\n      >\n        <div class=\"list-item-checkbox\" style=\"max-width: calc(100% - 24px)\">\n          <label class=\"c8y-radio\">\n            <input\n              type=\"radio\"\n              [id]=\"'groupradioheaderclass' + i\"\n              name=\"header\"\n              [value]=\"headerClassItem.class\"\n              [ngModel]=\"headerClass\"\n              (click)=\"headerClassClick(headerClassItem.class)\"\n            />\n            <span></span>\n            <span\n              class=\"text-truncate\"\n              title=\"{{ headerClassItem.label | translate }}{{\n                headerClassItem.class === defaultHeaderClass\n                  ? ' | ' + ('Dashboard default' | translate)\n                  : ''\n              }}\"\n            >\n              <span>{{ headerClassItem.label | translate }}</span>\n              <br />\n              <small\n                *ngIf=\"headerClassItem.class === defaultHeaderClass\"\n                class=\"text-muted\"\n                translate\n              >\n                Dashboard default\n              </small>\n            </span>\n          </label>\n        </div>\n        <button\n          class=\"btn-help btn-help--sm m-l-auto\"\n          type=\"button\"\n          [attr.aria-label]=\"'Help' | translate\"\n          popover=\"{{ headerClassItem.description | translate }}\"\n          placement=\"top\"\n          triggers=\"focus\"\n          container=\"body\"\n        ></button>\n      </li>\n    </ul>\n  </div>\n</div>\n" }]
        }], propDecorators: { themeClass: [{
                type: Input
            }], headerClass: [{
                type: Input
            }], defaultThemeClass: [{
                type: Input
            }], defaultHeaderClass: [{
                type: Input
            }], themeClassChange: [{
                type: Output
            }], headerClassChange: [{
                type: Output
            }], possibleStylingTheme: [{
                type: Input
            }], possibleStylingHeader: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZWFyYW5jZS1zZXR0aW5ncy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9hcHBlYXJhbmNlLXNldHRpbmdzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL2NvbnRleHQtZGFzaGJvYXJkL2FwcGVhcmFuY2Utc2V0dGluZ3MuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQU8xRCxNQUFNLE9BQU8sMkJBQTJCO0lBTHhDO1FBT0UsZUFBVSxHQUFHLHVCQUF1QixDQUFDO1FBRXJDLGdCQUFXLEdBQUcscUJBQXFCLENBQUM7UUFNcEMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUU5QyxzQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRy9DLHlCQUFvQixHQUFHLHVCQUF1QixDQUFDO1FBRy9DLDBCQUFxQixHQUFHLHFCQUFxQixDQUFDO0tBb0IvQztJQWxCQyxlQUFlLENBQUMsS0FBSztRQUNuQixLQUFLLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFLO1FBQ3BCLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVPLGNBQWMsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsRUFBRSxZQUFvQjtRQUMzRSxJQUFJLFlBQVksSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3ZDLEtBQUssR0FBRyxZQUFZLENBQUM7U0FDdEI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O3dIQXJDVSwyQkFBMkI7NEdBQTNCLDJCQUEyQiw0WUNUeEMscWtIQTBHQSxxZ0REbkdpQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzsyRkFFeEQsMkJBQTJCO2tCQUx2QyxTQUFTOytCQUNFLHlCQUF5QixpQkFFcEIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUM7OEJBSW5FLFVBQVU7c0JBRFQsS0FBSztnQkFHTixXQUFXO3NCQURWLEtBQUs7Z0JBR04saUJBQWlCO3NCQURoQixLQUFLO2dCQUdOLGtCQUFrQjtzQkFEakIsS0FBSztnQkFHTixnQkFBZ0I7c0JBRGYsTUFBTTtnQkFHUCxpQkFBaUI7c0JBRGhCLE1BQU07Z0JBSVAsb0JBQW9CO3NCQURuQixLQUFLO2dCQUlOLHFCQUFxQjtzQkFEcEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEQVNIQk9BUkRfVEhFTUVfQ0xBU1NFUywgV0lER0VUX0hFQURFUl9DTEFTU0VTIH0gZnJvbSAnLi9jb250ZXh0LWRhc2hib2FyZC5tb2RlbCc7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1hcHBlYXJhbmNlLXNldHRpbmdzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FwcGVhcmFuY2Utc2V0dGluZ3MuY29tcG9uZW50Lmh0bWwnLFxuICB2aWV3UHJvdmlkZXJzOiBbeyBwcm92aWRlOiBDb250cm9sQ29udGFpbmVyLCB1c2VFeGlzdGluZzogTmdGb3JtIH1dXG59KVxuZXhwb3J0IGNsYXNzIEFwcGVhcmFuY2VTZXR0aW5nc0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIHRoZW1lQ2xhc3MgPSAnZGFzaGJvYXJkLXRoZW1lLWxpZ2h0JztcbiAgQElucHV0KClcbiAgaGVhZGVyQ2xhc3MgPSAncGFuZWwtdGl0bGUtcmVndWxhcic7XG4gIEBJbnB1dCgpXG4gIGRlZmF1bHRUaGVtZUNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGRlZmF1bHRIZWFkZXJDbGFzczogc3RyaW5nO1xuICBAT3V0cHV0KClcbiAgdGhlbWVDbGFzc0NoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAT3V0cHV0KClcbiAgaGVhZGVyQ2xhc3NDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICBASW5wdXQoKVxuICBwb3NzaWJsZVN0eWxpbmdUaGVtZSA9IERBU0hCT0FSRF9USEVNRV9DTEFTU0VTO1xuXG4gIEBJbnB1dCgpXG4gIHBvc3NpYmxlU3R5bGluZ0hlYWRlciA9IFdJREdFVF9IRUFERVJfQ0xBU1NFUztcblxuICB0aGVtZUNsYXNzQ2xpY2sodmFsdWUpIHtcbiAgICB2YWx1ZSA9IHRoaXMucmVzZXRUb0RlZmF1bHQodmFsdWUsIHRoaXMudGhlbWVDbGFzcywgdGhpcy5kZWZhdWx0VGhlbWVDbGFzcyk7XG4gICAgdGhpcy50aGVtZUNsYXNzID0gdmFsdWU7XG4gICAgdGhpcy50aGVtZUNsYXNzQ2hhbmdlLmVtaXQodmFsdWUpO1xuICB9XG5cbiAgaGVhZGVyQ2xhc3NDbGljayh2YWx1ZSkge1xuICAgIHZhbHVlID0gdGhpcy5yZXNldFRvRGVmYXVsdCh2YWx1ZSwgdGhpcy5oZWFkZXJDbGFzcywgdGhpcy5kZWZhdWx0SGVhZGVyQ2xhc3MpO1xuICAgIHRoaXMuaGVhZGVyQ2xhc3MgPSB2YWx1ZTtcbiAgICB0aGlzLmhlYWRlckNsYXNzQ2hhbmdlLmVtaXQodmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSByZXNldFRvRGVmYXVsdCh2YWx1ZTogc3RyaW5nLCBjb21wYXJlVG86IHN0cmluZywgZGVmYXVsdFZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAoZGVmYXVsdFZhbHVlICYmIHZhbHVlID09PSBjb21wYXJlVG8pIHtcbiAgICAgIHZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJsZWdlbmQgZm9ybS1ibG9ja1wiPlxuICA8c3BhbiB0cmFuc2xhdGU+TGF5b3V0PC9zcGFuPlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwicm93XCI+XG4gIDxkaXYgY2xhc3M9XCJjb2wtc20tNiBtLWItMzJcIj5cbiAgICA8bGFiZWwgdHJhbnNsYXRlPlRoZW1lPC9sYWJlbD5cbiAgICA8dWwgY2xhc3M9XCJsaXN0LWdyb3VwXCI+XG4gICAgICA8bGlcbiAgICAgICAgY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW0gZC1mbGV4IGEtaS1jZW50ZXIgcC1sLTAgcC1yLTAgZml0LXdcIlxuICAgICAgICAqbmdGb3I9XCJsZXQgdGhlbWVDbGFzc0l0ZW0gb2YgcG9zc2libGVTdHlsaW5nVGhlbWU7IGxldCBpID0gaW5kZXhcIlxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibGlzdC1pdGVtLWNoZWNrYm94XCIgc3R5bGU9XCJtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIDI0cHgpXCI+XG4gICAgICAgICAgPGxhYmVsIGNsYXNzPVwiYzh5LXJhZGlvXCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgW2lkXT1cIidncm91cHJhZGlvY29udGVudGNsYXNzJyArIGlcIlxuICAgICAgICAgICAgICBuYW1lPVwiY29udGVudFwiXG4gICAgICAgICAgICAgIFt2YWx1ZV09XCJ0aGVtZUNsYXNzSXRlbS5jbGFzc1wiXG4gICAgICAgICAgICAgIFtuZ01vZGVsXT1cInRoZW1lQ2xhc3NcIlxuICAgICAgICAgICAgICAoY2xpY2spPVwidGhlbWVDbGFzc0NsaWNrKHRoZW1lQ2xhc3NJdGVtLmNsYXNzKVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LXRydW5jYXRlXCJcbiAgICAgICAgICAgICAgdGl0bGU9XCJ7eyB0aGVtZUNsYXNzSXRlbS5sYWJlbCB8IHRyYW5zbGF0ZSB9fXt7XG4gICAgICAgICAgICAgICAgdGhlbWVDbGFzc0l0ZW0uY2xhc3MgPT09IGRlZmF1bHRUaGVtZUNsYXNzXG4gICAgICAgICAgICAgICAgICA/ICcgfCAnICsgKCdEYXNoYm9hcmQgZGVmYXVsdCcgfCB0cmFuc2xhdGUpXG4gICAgICAgICAgICAgICAgICA6ICcnXG4gICAgICAgICAgICAgIH19XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4+e3sgdGhlbWVDbGFzc0l0ZW0ubGFiZWwgfCB0cmFuc2xhdGUgfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICA8c21hbGxcbiAgICAgICAgICAgICAgICAqbmdJZj1cInRoZW1lQ2xhc3NJdGVtLmNsYXNzID09PSBkZWZhdWx0VGhlbWVDbGFzc1wiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LW11dGVkXCJcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIERhc2hib2FyZCBkZWZhdWx0XG4gICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzPVwiYnRuLWhlbHAgYnRuLWhlbHAtLXNtIG0tbC1hdXRvXCJcbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidIZWxwJyB8IHRyYW5zbGF0ZVwiXG4gICAgICAgICAgcG9wb3Zlcj1cInt7IHRoZW1lQ2xhc3NJdGVtLmRlc2NyaXB0aW9uIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICBwbGFjZW1lbnQ9XCJ0b3BcIlxuICAgICAgICAgIHRyaWdnZXJzPVwiZm9jdXNcIlxuICAgICAgICAgIGNvbnRhaW5lcj1cImJvZHlcIlxuICAgICAgICA+PC9idXR0b24+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY29sLXNtLTZcIj5cbiAgICA8bGFiZWwgdHJhbnNsYXRlPldpZGdldCBoZWFkZXIgc3R5bGU8L2xhYmVsPlxuICAgIDx1bCBjbGFzcz1cImxpc3QtZ3JvdXBcIj5cbiAgICAgIDxsaVxuICAgICAgICBjbGFzcz1cImxpc3QtZ3JvdXAtaXRlbSBkLWZsZXggYS1pLWNlbnRlciBwLWwtMCBwLXItMFwiXG4gICAgICAgICpuZ0Zvcj1cImxldCBoZWFkZXJDbGFzc0l0ZW0gb2YgcG9zc2libGVTdHlsaW5nSGVhZGVyOyBsZXQgaSA9IGluZGV4XCJcbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzcz1cImxpc3QtaXRlbS1jaGVja2JveFwiIHN0eWxlPVwibWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAyNHB4KVwiPlxuICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImM4eS1yYWRpb1wiPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgIFtpZF09XCInZ3JvdXByYWRpb2hlYWRlcmNsYXNzJyArIGlcIlxuICAgICAgICAgICAgICBuYW1lPVwiaGVhZGVyXCJcbiAgICAgICAgICAgICAgW3ZhbHVlXT1cImhlYWRlckNsYXNzSXRlbS5jbGFzc1wiXG4gICAgICAgICAgICAgIFtuZ01vZGVsXT1cImhlYWRlckNsYXNzXCJcbiAgICAgICAgICAgICAgKGNsaWNrKT1cImhlYWRlckNsYXNzQ2xpY2soaGVhZGVyQ2xhc3NJdGVtLmNsYXNzKVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LXRydW5jYXRlXCJcbiAgICAgICAgICAgICAgdGl0bGU9XCJ7eyBoZWFkZXJDbGFzc0l0ZW0ubGFiZWwgfCB0cmFuc2xhdGUgfX17e1xuICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzSXRlbS5jbGFzcyA9PT0gZGVmYXVsdEhlYWRlckNsYXNzXG4gICAgICAgICAgICAgICAgICA/ICcgfCAnICsgKCdEYXNoYm9hcmQgZGVmYXVsdCcgfCB0cmFuc2xhdGUpXG4gICAgICAgICAgICAgICAgICA6ICcnXG4gICAgICAgICAgICAgIH19XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4+e3sgaGVhZGVyQ2xhc3NJdGVtLmxhYmVsIHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgPHNtYWxsXG4gICAgICAgICAgICAgICAgKm5nSWY9XCJoZWFkZXJDbGFzc0l0ZW0uY2xhc3MgPT09IGRlZmF1bHRIZWFkZXJDbGFzc1wiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LW11dGVkXCJcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIERhc2hib2FyZCBkZWZhdWx0XG4gICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjbGFzcz1cImJ0bi1oZWxwIGJ0bi1oZWxwLS1zbSBtLWwtYXV0b1wiXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCInSGVscCcgfCB0cmFuc2xhdGVcIlxuICAgICAgICAgIHBvcG92ZXI9XCJ7eyBoZWFkZXJDbGFzc0l0ZW0uZGVzY3JpcHRpb24gfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgIHBsYWNlbWVudD1cInRvcFwiXG4gICAgICAgICAgdHJpZ2dlcnM9XCJmb2N1c1wiXG4gICAgICAgICAgY29udGFpbmVyPVwiYm9keVwiXG4gICAgICAgID48L2J1dHRvbj5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==