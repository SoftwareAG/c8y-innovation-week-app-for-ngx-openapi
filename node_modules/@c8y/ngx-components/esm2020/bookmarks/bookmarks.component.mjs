import { DOCUMENT as Document } from '@angular/common';
import { Component, Inject } from '@angular/core';
import { Router } from '@angular/router';
import { AlertService, gettext, HeaderService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { cloneDeep } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BookmarkService } from './bookmarks.service';
import { EditBookmarksComponent } from './edit-bookmarks/edit-bookmarks.component';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "./bookmarks.service";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "ngx-bootstrap/modal";
import * as i5 from "@angular/router";
import * as i6 from "@angular/common";
import * as i7 from "ngx-bootstrap/tooltip";
export class BookmarksComponent {
    constructor(document, translateService, bookmarksService, alertService, bookmarkService, bsModalService, router, headerService) {
        this.document = document;
        this.translateService = translateService;
        this.bookmarksService = bookmarksService;
        this.alertService = alertService;
        this.bookmarkService = bookmarkService;
        this.bsModalService = bsModalService;
        this.router = router;
        this.headerService = headerService;
        this.emptyMessageHeader = this.translateService.instant(gettext('No bookmarks yet'));
        this.emptyMessageBody = this.translateService.instant(gettext('Navigate to the desired page and click the "Add current page" button. Editing, deleting and reordering are possible by clicking on the cog wheel.'));
        this.addButtonText = this.translateService.instant(gettext('Add current page'));
        this.drawerOpen$ = this.headerService.rightDrawerOpen$;
    }
    async ngOnInit() {
        this.bookmarks = await this.bookmarkService.getBookmarks();
    }
    async addBookmark() {
        const currentHref = this.document.location.href;
        if (this.bookmarks.some(bookmark => bookmark.url === currentHref)) {
            this.alertService.warning(gettext('Bookmark with the same URL is already added.'));
            return;
        }
        const linkObject = this.convertBookmarkLinkToObject(currentHref, this.bookmarksService.getCurrentActiveNodeIcon(this.document));
        this.bookmarks.push(linkObject);
        await this.bookmarkService.updateBookmarksInStorage(this.bookmarks);
        this.alertService.success(gettext('Bookmark added.'));
    }
    async editBookmarks() {
        try {
            const initialState = {
                bookmarks: cloneDeep(this.bookmarks)
            };
            const modalRef = this.bsModalService.show(EditBookmarksComponent, {
                class: 'modal-md',
                ariaDescribedby: 'modal-body',
                ariaLabelledBy: 'modal-title',
                initialState: initialState,
                ignoreBackdropClick: true
            }).content;
            this.bookmarks = await modalRef.result;
        }
        catch (err) {
            return;
        }
    }
    openUrl(url) {
        const parsedUrl = new URL(url);
        if (parsedUrl.hostname === location.hostname &&
            parsedUrl.pathname.includes(location.pathname)) {
            this.router.navigateByUrl(parsedUrl.hash.substring(1));
            return;
        }
        // only possible if the external bookmark URL has been saved using the API
        if (parsedUrl.hostname !== location.hostname) {
            return;
        }
        window.open(url, '_self');
    }
    convertBookmarkLinkToObject(url, icon) {
        const title = this.document.title;
        return {
            id: this.bookmarkService.generateRandomID(),
            label: title.includes('Cumulocity') ? title.replace('Cumulocity - ', '') : 'Bookmark',
            url,
            icon
        };
    }
}
BookmarksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BookmarksComponent, deps: [{ token: Document }, { token: i1.TranslateService }, { token: i2.BookmarkService }, { token: i3.AlertService }, { token: i2.BookmarkService }, { token: i4.BsModalService }, { token: i5.Router }, { token: i3.HeaderService }], target: i0.ɵɵFactoryTarget.Component });
BookmarksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: BookmarksComponent, selector: "c8y-bookmarks", ngImport: i0, template: "<div class=\"separator-top p-t-8 m-t-auto c8y-right-drawer__item sticky-top\">\n  <i c8yIcon=\"bookmark\"></i>\n  <span class=\"text-bold\">{{ 'Bookmarks' | translate }}</span>\n  <button\n    class=\"btn-dot m-l-auto\"\n    tooltip=\"{{ 'Edit bookmarks' | translate }}\"\n    [attr.aria-label]=\"'Edit bookmarks' | translate\"\n    container=\"body\"\n    placement=\"left\"\n    [adaptivePosition]=\"false\"\n    [delay]=\"500\"\n    (click)=\"editBookmarks()\"\n    type=\"button\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i c8yIcon=\"cog\" class=\"text-14 m-0\"></i>\n  </button>\n</div>\n<div class=\"c8y-right-drawer__item p-t-0 p-b-8\" *ngIf=\"bookmarks?.length\">\n  <button\n    class=\"btn btn-default btn-sm\"\n    (click)=\"addBookmark()\"\n    type=\"button\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i c8yIcon=\"plus-circle-o\" class=\"m-t-0 m-b-0 text-14\"></i>\n    <span>{{ addButtonText }}</span>\n  </button>\n</div>\n<ng-container *ngFor=\"let bookmark of bookmarks\">\n  <button\n    title=\"{{ bookmark.label }}\"\n    type=\"button\"\n    class=\"c8y-right-drawer__link\"\n    (click)=\"openUrl(bookmark.url)\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i [c8yIcon]=\"bookmark.icon\" *ngIf=\"bookmark.icon\"></i>\n    <span class=\"text-truncate\">{{ bookmark.label }}</span>\n  </button>\n</ng-container>\n<div class=\"p-t-8 p-b-8\">\n  <ng-container *ngIf=\"!bookmarks?.length\">\n    <span class=\"c8y-right-drawer__item text-muted text-bold text-14 p-b-0\">\n      {{ emptyMessageHeader }}\n    </span>\n    <span class=\"c8y-right-drawer__item text-12 p-t-0\">\n      <span class=\"text-muted\">{{ emptyMessageBody }}</span>\n    </span>\n    <div class=\"c8y-right-drawer__item\">\n      <button\n        class=\"btn btn-default btn-sm\"\n        (click)=\"addBookmark()\"\n        type=\"button\"\n        [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n      >\n        <i c8yIcon=\"plus-circle-o\" class=\"m-t-0 m-b-0 text-14\"></i>\n        <span>{{ addButtonText }}</span>\n      </button>\n    </div>\n  </ng-container>\n</div>\n", dependencies: [{ kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i7.TooltipDirective, selector: "[tooltip], [tooltipHtml]", inputs: ["adaptivePosition", "tooltip", "placement", "triggers", "container", "containerClass", "boundariesElement", "isOpen", "isDisabled", "delay", "tooltipHtml", "tooltipPlacement", "tooltipIsOpen", "tooltipEnable", "tooltipAppendToBody", "tooltipAnimation", "tooltipClass", "tooltipContext", "tooltipPopupDelay", "tooltipFadeDuration", "tooltipTrigger"], outputs: ["tooltipChange", "onShown", "onHidden", "tooltipStateChanged"], exportAs: ["bs-tooltip"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BookmarksComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-bookmarks', template: "<div class=\"separator-top p-t-8 m-t-auto c8y-right-drawer__item sticky-top\">\n  <i c8yIcon=\"bookmark\"></i>\n  <span class=\"text-bold\">{{ 'Bookmarks' | translate }}</span>\n  <button\n    class=\"btn-dot m-l-auto\"\n    tooltip=\"{{ 'Edit bookmarks' | translate }}\"\n    [attr.aria-label]=\"'Edit bookmarks' | translate\"\n    container=\"body\"\n    placement=\"left\"\n    [adaptivePosition]=\"false\"\n    [delay]=\"500\"\n    (click)=\"editBookmarks()\"\n    type=\"button\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i c8yIcon=\"cog\" class=\"text-14 m-0\"></i>\n  </button>\n</div>\n<div class=\"c8y-right-drawer__item p-t-0 p-b-8\" *ngIf=\"bookmarks?.length\">\n  <button\n    class=\"btn btn-default btn-sm\"\n    (click)=\"addBookmark()\"\n    type=\"button\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i c8yIcon=\"plus-circle-o\" class=\"m-t-0 m-b-0 text-14\"></i>\n    <span>{{ addButtonText }}</span>\n  </button>\n</div>\n<ng-container *ngFor=\"let bookmark of bookmarks\">\n  <button\n    title=\"{{ bookmark.label }}\"\n    type=\"button\"\n    class=\"c8y-right-drawer__link\"\n    (click)=\"openUrl(bookmark.url)\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  >\n    <i [c8yIcon]=\"bookmark.icon\" *ngIf=\"bookmark.icon\"></i>\n    <span class=\"text-truncate\">{{ bookmark.label }}</span>\n  </button>\n</ng-container>\n<div class=\"p-t-8 p-b-8\">\n  <ng-container *ngIf=\"!bookmarks?.length\">\n    <span class=\"c8y-right-drawer__item text-muted text-bold text-14 p-b-0\">\n      {{ emptyMessageHeader }}\n    </span>\n    <span class=\"c8y-right-drawer__item text-12 p-t-0\">\n      <span class=\"text-muted\">{{ emptyMessageBody }}</span>\n    </span>\n    <div class=\"c8y-right-drawer__item\">\n      <button\n        class=\"btn btn-default btn-sm\"\n        (click)=\"addBookmark()\"\n        type=\"button\"\n        [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n      >\n        <i c8yIcon=\"plus-circle-o\" class=\"m-t-0 m-b-0 text-14\"></i>\n        <span>{{ addButtonText }}</span>\n      </button>\n    </div>\n  </ng-container>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: Document, decorators: [{
                    type: Inject,
                    args: [Document]
                }] }, { type: i1.TranslateService }, { type: i2.BookmarkService }, { type: i3.AlertService }, { type: i2.BookmarkService }, { type: i4.BsModalService }, { type: i5.Router }, { type: i3.HeaderService }]; } });
//# sourceMappingURL=data:application/json;base64,