import { Component, Input } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { MultipleLnsConnectorService } from './multiple-lns-connector.service';
import { saveAs } from 'file-saver';
import { AlertService, gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as i2 from "./multiple-lns-connector.service";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "@ngx-translate/core";
export class ConnectionInfoWithDownloadCsvComponent {
    constructor(modal, connectorService, alertService, translateService) {
        this.modal = modal;
        this.connectorService = connectorService;
        this.alertService = alertService;
        this.translateService = translateService;
    }
    dismiss() {
        this.modal.hide();
    }
    async download() {
        const url = `/service/${this.appData.contextPath}${this.messageData.attrs.URL}`;
        const res = await this.connectorService.download(url);
        if (res && res.status === 200) {
            const streamData = await res.blob();
            saveAs(streamData, this.translateService.instant(gettext('{{ connectionName }} - devices.csv'), {
                connectionName: this.connectionName
            }));
        }
        else {
            this.alertService.danger(gettext('A server error occurred.'));
        }
    }
}
ConnectionInfoWithDownloadCsvComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConnectionInfoWithDownloadCsvComponent, deps: [{ token: i1.BsModalRef }, { token: i2.MultipleLnsConnectorService }, { token: i3.AlertService }, { token: i4.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
ConnectionInfoWithDownloadCsvComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ConnectionInfoWithDownloadCsvComponent, selector: "connection-info-with-download-csv", inputs: { messageData: "messageData", appData: "appData", modalTitle: "modalTitle", connectionName: "connectionName" }, ngImport: i0, template: "<div class=\"modal-dialog\">\n  <div class=\"modal-content\">\n    <div class=\"c8y-prompt alert alert-danger\">\n      <h3 class=\"m-b-16\">\n        <i class=\"dlt-c8y-icon-exclamation-circle\"></i>\n        <span>{{ modalTitle | translate }}</span>\n      </h3>\n      <p class=\"text-break-word\">\n        {{ messageData.message | translate }}\n      </p>\n      <br>\n      <span class=\"btn-default\" (click)=\"download()\">{{\n        'Click the link to download the file with the affected devices.' | translate\n      }}</span>\n      <div class=\"alert-footer\">\n        <button\n          title=\"{{ 'Cancel' | translate }}\"\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"dismiss()\"\n        >\n          {{ 'Cancel' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>", dependencies: [{ kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConnectionInfoWithDownloadCsvComponent, decorators: [{
            type: Component,
            args: [{ selector: 'connection-info-with-download-csv', template: "<div class=\"modal-dialog\">\n  <div class=\"modal-content\">\n    <div class=\"c8y-prompt alert alert-danger\">\n      <h3 class=\"m-b-16\">\n        <i class=\"dlt-c8y-icon-exclamation-circle\"></i>\n        <span>{{ modalTitle | translate }}</span>\n      </h3>\n      <p class=\"text-break-word\">\n        {{ messageData.message | translate }}\n      </p>\n      <br>\n      <span class=\"btn-default\" (click)=\"download()\">{{\n        'Click the link to download the file with the affected devices.' | translate\n      }}</span>\n      <div class=\"alert-footer\">\n        <button\n          title=\"{{ 'Cancel' | translate }}\"\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"dismiss()\"\n        >\n          {{ 'Cancel' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalRef }, { type: i2.MultipleLnsConnectorService }, { type: i3.AlertService }, { type: i4.TranslateService }]; }, propDecorators: { messageData: [{
                type: Input
            }], appData: [{
                type: Input
            }], modalTitle: [{
                type: Input
            }], connectionName: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdGlvbi1pbmZvLXdpdGgtZG93bmxvYWQtY3N2LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb3RvY29sLWxwd2FuL211bHRpcGxlLWxucy1jb25uZWN0b3JzL2Nvbm5lY3Rpb24taW5mby13aXRoLWRvd25sb2FkLWNzdi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm90b2NvbC1scHdhbi9tdWx0aXBsZS1sbnMtY29ubmVjdG9ycy9jb25uZWN0aW9uLWluZm8td2l0aC1kb3dubG9hZC1jc3YuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFcEMsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7O0FBTXZELE1BQU0sT0FBTyxzQ0FBc0M7SUFNakQsWUFDVSxLQUFpQixFQUNqQixnQkFBNkMsRUFDN0MsWUFBMEIsRUFDMUIsZ0JBQWtDO1FBSGxDLFVBQUssR0FBTCxLQUFLLENBQVk7UUFDakIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUE2QjtRQUM3QyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQ3pDLENBQUM7SUFFSixPQUFPO1FBQ0wsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVE7UUFDWixNQUFNLEdBQUcsR0FBRyxZQUFZLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hGLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0RCxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtZQUM3QixNQUFNLFVBQVUsR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNwQyxNQUFNLENBQ0osVUFBVSxFQUNWLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLEVBQUU7Z0JBQzNFLGNBQWMsRUFBRSxJQUFJLENBQUMsY0FBYzthQUNwQyxDQUFDLENBQ0gsQ0FBQztTQUNIO2FBQU07WUFDTCxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxDQUFDO1NBQy9EO0lBQ0gsQ0FBQzs7bUlBL0JVLHNDQUFzQzt1SEFBdEMsc0NBQXNDLGlNQ1puRCxnMUJBMEJNOzJGRGRPLHNDQUFzQztrQkFKbEQsU0FBUzsrQkFDRSxtQ0FBbUM7cU1BSXBDLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csT0FBTztzQkFBZixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IE11bHRpcGxlTG5zQ29ubmVjdG9yU2VydmljZSB9IGZyb20gJy4vbXVsdGlwbGUtbG5zLWNvbm5lY3Rvci5zZXJ2aWNlJztcbmltcG9ydCB7IHNhdmVBcyB9IGZyb20gJ2ZpbGUtc2F2ZXInO1xuaW1wb3J0IHsgSUFwcGxpY2F0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nvbm5lY3Rpb24taW5mby13aXRoLWRvd25sb2FkLWNzdicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25uZWN0aW9uLWluZm8td2l0aC1kb3dubG9hZC1jc3YuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbm5lY3Rpb25JbmZvV2l0aERvd25sb2FkQ3N2Q29tcG9uZW50IHtcbiAgQElucHV0KCkgbWVzc2FnZURhdGE6IGFueTtcbiAgQElucHV0KCkgYXBwRGF0YTogSUFwcGxpY2F0aW9uO1xuICBASW5wdXQoKSBtb2RhbFRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbm5lY3Rpb25OYW1lOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBtb2RhbDogQnNNb2RhbFJlZixcbiAgICBwcml2YXRlIGNvbm5lY3RvclNlcnZpY2U6IE11bHRpcGxlTG5zQ29ubmVjdG9yU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZVxuICApIHt9XG5cbiAgZGlzbWlzcygpIHtcbiAgICB0aGlzLm1vZGFsLmhpZGUoKTtcbiAgfVxuXG4gIGFzeW5jIGRvd25sb2FkKCkge1xuICAgIGNvbnN0IHVybCA9IGAvc2VydmljZS8ke3RoaXMuYXBwRGF0YS5jb250ZXh0UGF0aH0ke3RoaXMubWVzc2FnZURhdGEuYXR0cnMuVVJMfWA7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5jb25uZWN0b3JTZXJ2aWNlLmRvd25sb2FkKHVybCk7XG4gICAgaWYgKHJlcyAmJiByZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgIGNvbnN0IHN0cmVhbURhdGEgPSBhd2FpdCByZXMuYmxvYigpO1xuICAgICAgc2F2ZUFzKFxuICAgICAgICBzdHJlYW1EYXRhLFxuICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCd7eyBjb25uZWN0aW9uTmFtZSB9fSAtIGRldmljZXMuY3N2JyksIHtcbiAgICAgICAgICBjb25uZWN0aW9uTmFtZTogdGhpcy5jb25uZWN0aW9uTmFtZVxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuZGFuZ2VyKGdldHRleHQoJ0Egc2VydmVyIGVycm9yIG9jY3VycmVkLicpKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIj5cbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnRcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYzh5LXByb21wdCBhbGVydCBhbGVydC1kYW5nZXJcIj5cbiAgICAgIDxoMyBjbGFzcz1cIm0tYi0xNlwiPlxuICAgICAgICA8aSBjbGFzcz1cImRsdC1jOHktaWNvbi1leGNsYW1hdGlvbi1jaXJjbGVcIj48L2k+XG4gICAgICAgIDxzcGFuPnt7IG1vZGFsVGl0bGUgfCB0cmFuc2xhdGUgfX08L3NwYW4+XG4gICAgICA8L2gzPlxuICAgICAgPHAgY2xhc3M9XCJ0ZXh0LWJyZWFrLXdvcmRcIj5cbiAgICAgICAge3sgbWVzc2FnZURhdGEubWVzc2FnZSB8IHRyYW5zbGF0ZSB9fVxuICAgICAgPC9wPlxuICAgICAgPGJyPlxuICAgICAgPHNwYW4gY2xhc3M9XCJidG4tZGVmYXVsdFwiIChjbGljayk9XCJkb3dubG9hZCgpXCI+e3tcbiAgICAgICAgJ0NsaWNrIHRoZSBsaW5rIHRvIGRvd25sb2FkIHRoZSBmaWxlIHdpdGggdGhlIGFmZmVjdGVkIGRldmljZXMuJyB8IHRyYW5zbGF0ZVxuICAgICAgfX08L3NwYW4+XG4gICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZm9vdGVyXCI+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICB0aXRsZT1cInt7ICdDYW5jZWwnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgKGNsaWNrKT1cImRpc21pc3MoKVwiXG4gICAgICAgID5cbiAgICAgICAgICB7eyAnQ2FuY2VsJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PiJdfQ==