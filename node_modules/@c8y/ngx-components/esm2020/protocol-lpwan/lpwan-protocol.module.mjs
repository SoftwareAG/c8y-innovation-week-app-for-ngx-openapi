import { NgModule } from '@angular/core';
import { CoreModule, FormsModule, gettext, hookRoute, ViewContext } from '@c8y/ngx-components';
import { LpwanAssignDeviceProtocolComponent } from './lpwan-set-device-protocol.component';
import { LpwanAgentGuard } from './lpwan-agent.guard';
import { LpwanSetDeviceProtocolService } from './lpwan-set-device-protocol.service';
import { LpwanAssignLnsConnectionsComponent } from './lpwan-set-connections.component';
import * as i0 from "@angular/core";
const routes = [
    {
        context: ViewContext.Device,
        path: 'assign-protocol',
        component: LpwanAssignDeviceProtocolComponent,
        label: gettext('LPWAN'),
        icon: 'c8y-device-protocols',
        canActivate: [LpwanAgentGuard]
    }
];
export class LpwanProtocolModule {
}
LpwanProtocolModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LpwanProtocolModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LpwanProtocolModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: LpwanProtocolModule, declarations: [LpwanAssignDeviceProtocolComponent, LpwanAssignLnsConnectionsComponent], imports: [CoreModule, FormsModule] });
LpwanProtocolModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LpwanProtocolModule, providers: [LpwanAgentGuard, LpwanSetDeviceProtocolService, hookRoute(routes)], imports: [CoreModule, FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: LpwanProtocolModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LpwanAssignDeviceProtocolComponent, LpwanAssignLnsConnectionsComponent],
                    imports: [CoreModule, FormsModule],
                    entryComponents: [LpwanAssignDeviceProtocolComponent, LpwanAssignLnsConnectionsComponent],
                    providers: [LpwanAgentGuard, LpwanSetDeviceProtocolService, hookRoute(routes)]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHB3YW4tcHJvdG9jb2wubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtbHB3YW4vbHB3YW4tcHJvdG9jb2wubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNMLFVBQVUsRUFDVixXQUFXLEVBQ1gsT0FBTyxFQUNQLFNBQVMsRUFFVCxXQUFXLEVBQ1osTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7O0FBRXZGLE1BQU0sTUFBTSxHQUFZO0lBQ3RCO1FBQ0UsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNO1FBQzNCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsU0FBUyxFQUFFLGtDQUFrQztRQUM3QyxLQUFLLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUN2QixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLFdBQVcsRUFBRSxDQUFDLGVBQWUsQ0FBQztLQUMvQjtDQUNGLENBQUM7QUFRRixNQUFNLE9BQU8sbUJBQW1COztnSEFBbkIsbUJBQW1CO2lIQUFuQixtQkFBbUIsaUJBTGYsa0NBQWtDLEVBQUUsa0NBQWtDLGFBQzNFLFVBQVUsRUFBRSxXQUFXO2lIQUl0QixtQkFBbUIsYUFGbkIsQ0FBQyxlQUFlLEVBQUUsNkJBQTZCLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFlBRnBFLFVBQVUsRUFBRSxXQUFXOzJGQUl0QixtQkFBbUI7a0JBTi9CLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0NBQWtDLEVBQUUsa0NBQWtDLENBQUM7b0JBQ3RGLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUM7b0JBQ2xDLGVBQWUsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLGtDQUFrQyxDQUFDO29CQUN6RixTQUFTLEVBQUUsQ0FBQyxlQUFlLEVBQUUsNkJBQTZCLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUMvRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3JlTW9kdWxlLFxuICBGb3Jtc01vZHVsZSxcbiAgZ2V0dGV4dCxcbiAgaG9va1JvdXRlLFxuICBSb3V0ZSxcbiAgVmlld0NvbnRleHRcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBMcHdhbkFzc2lnbkRldmljZVByb3RvY29sQ29tcG9uZW50IH0gZnJvbSAnLi9scHdhbi1zZXQtZGV2aWNlLXByb3RvY29sLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMcHdhbkFnZW50R3VhcmQgfSBmcm9tICcuL2xwd2FuLWFnZW50Lmd1YXJkJztcbmltcG9ydCB7IExwd2FuU2V0RGV2aWNlUHJvdG9jb2xTZXJ2aWNlIH0gZnJvbSAnLi9scHdhbi1zZXQtZGV2aWNlLXByb3RvY29sLnNlcnZpY2UnO1xuaW1wb3J0IHsgTHB3YW5Bc3NpZ25MbnNDb25uZWN0aW9uc0NvbXBvbmVudCB9IGZyb20gJy4vbHB3YW4tc2V0LWNvbm5lY3Rpb25zLmNvbXBvbmVudCc7XG5cbmNvbnN0IHJvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIGNvbnRleHQ6IFZpZXdDb250ZXh0LkRldmljZSxcbiAgICBwYXRoOiAnYXNzaWduLXByb3RvY29sJyxcbiAgICBjb21wb25lbnQ6IExwd2FuQXNzaWduRGV2aWNlUHJvdG9jb2xDb21wb25lbnQsXG4gICAgbGFiZWw6IGdldHRleHQoJ0xQV0FOJyksXG4gICAgaWNvbjogJ2M4eS1kZXZpY2UtcHJvdG9jb2xzJyxcbiAgICBjYW5BY3RpdmF0ZTogW0xwd2FuQWdlbnRHdWFyZF1cbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTHB3YW5Bc3NpZ25EZXZpY2VQcm90b2NvbENvbXBvbmVudCwgTHB3YW5Bc3NpZ25MbnNDb25uZWN0aW9uc0NvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBGb3Jtc01vZHVsZV0sXG4gIGVudHJ5Q29tcG9uZW50czogW0xwd2FuQXNzaWduRGV2aWNlUHJvdG9jb2xDb21wb25lbnQsIExwd2FuQXNzaWduTG5zQ29ubmVjdGlvbnNDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtMcHdhbkFnZW50R3VhcmQsIExwd2FuU2V0RGV2aWNlUHJvdG9jb2xTZXJ2aWNlLCBob29rUm91dGUocm91dGVzKV1cbn0pXG5leHBvcnQgY2xhc3MgTHB3YW5Qcm90b2NvbE1vZHVsZSB7fVxuIl19