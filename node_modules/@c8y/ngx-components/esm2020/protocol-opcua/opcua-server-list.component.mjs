import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/ngx-components";
import * as i2 from "@angular/common";
import * as i3 from "ngx-bootstrap/tooltip";
export class OpcuaServerListComponent {
    constructor() {
        this.serverList = [];
        this.present = new EventEmitter();
    }
    presentConfig(server) {
        server.active = true;
        this.present.emit(server);
    }
}
OpcuaServerListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OpcuaServerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
OpcuaServerListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: OpcuaServerListComponent, selector: "opcua-server-list", inputs: { serverList: "serverList" }, outputs: { present: "present" }, ngImport: i0, template: "<!-- add active class to c8y-stacked-item when clicked -->\n<div\n  class=\"c8y-stacked-item\"\n  [class.active]=\"server.active\"\n  *ngFor=\"let server of serverList\"\n  (click)=\"presentConfig(server)\"\n>\n  <i [c8yIcon]=\"'server'\" class=\"icon-20\"></i>\n  <div class=\"p-l-16 text-truncate\">\n    <p id=\"serverName\" class=\"text-truncate\">{{ server.name }}</p>\n    <small id=\"serverUrl\" class=\"text-truncate text-muted\">{{ server.config.serverUrl }}</small>\n  </div>\n  <div class=\"m-l-auto p-l-8 d-flex p-r-16\">\n    <device-status class=\"p-r-8\" [mo]=\"server\"></device-status>\n    <button\n      class=\"btn btn-dot text-gray-darker\"\n      type=\"button\"\n      [attr.aria-label]=\"server.quickInfo.padlockMsg | translate\"\n      tooltip=\"{{ server.quickInfo.padlockMsg | translate }}\"\n      placement=\"left\"\n      container=\"body\"\n    >\n      <i [c8yIcon]=\"server.quickInfo.padlock\"></i>\n    </button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i1.DeviceStatusComponent, selector: "device-status", inputs: ["mo"] }, { kind: "directive", type: i3.TooltipDirective, selector: "[tooltip], [tooltipHtml]", inputs: ["adaptivePosition", "tooltip", "placement", "triggers", "container", "containerClass", "boundariesElement", "isOpen", "isDisabled", "delay", "tooltipHtml", "tooltipPlacement", "tooltipIsOpen", "tooltipEnable", "tooltipAppendToBody", "tooltipAnimation", "tooltipClass", "tooltipContext", "tooltipPopupDelay", "tooltipFadeDuration", "tooltipTrigger"], outputs: ["tooltipChange", "onShown", "onHidden", "tooltipStateChanged"], exportAs: ["bs-tooltip"] }, { kind: "pipe", type: i1.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OpcuaServerListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'opcua-server-list', template: "<!-- add active class to c8y-stacked-item when clicked -->\n<div\n  class=\"c8y-stacked-item\"\n  [class.active]=\"server.active\"\n  *ngFor=\"let server of serverList\"\n  (click)=\"presentConfig(server)\"\n>\n  <i [c8yIcon]=\"'server'\" class=\"icon-20\"></i>\n  <div class=\"p-l-16 text-truncate\">\n    <p id=\"serverName\" class=\"text-truncate\">{{ server.name }}</p>\n    <small id=\"serverUrl\" class=\"text-truncate text-muted\">{{ server.config.serverUrl }}</small>\n  </div>\n  <div class=\"m-l-auto p-l-8 d-flex p-r-16\">\n    <device-status class=\"p-r-8\" [mo]=\"server\"></device-status>\n    <button\n      class=\"btn btn-dot text-gray-darker\"\n      type=\"button\"\n      [attr.aria-label]=\"server.quickInfo.padlockMsg | translate\"\n      tooltip=\"{{ server.quickInfo.padlockMsg | translate }}\"\n      placement=\"left\"\n      container=\"body\"\n    >\n      <i [c8yIcon]=\"server.quickInfo.padlock\"></i>\n    </button>\n  </div>\n</div>\n" }]
        }], propDecorators: { serverList: [{
                type: Input
            }], present: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtc2VydmVyLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtc2VydmVyLWxpc3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtc2VydmVyLWxpc3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFPdkUsTUFBTSxPQUFPLHdCQUF3QjtJQUpyQztRQUtXLGVBQVUsR0FBa0IsRUFBRSxDQUFDO1FBQzlCLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBZSxDQUFDO0tBTXJEO0lBSkMsYUFBYSxDQUFDLE1BQW1CO1FBQy9CLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVCLENBQUM7O3FIQVBVLHdCQUF3Qjt5R0FBeEIsd0JBQXdCLGdJQ1ByQyx3OEJBMEJBOzJGRG5CYSx3QkFBd0I7a0JBSnBDLFNBQVM7K0JBQ0UsbUJBQW1COzhCQUlwQixVQUFVO3NCQUFsQixLQUFLO2dCQUNJLE9BQU87c0JBQWhCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT3BjdWFTZXJ2ZXIgfSBmcm9tICcuL29wY3VhLXNlcnZlci5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdvcGN1YS1zZXJ2ZXItbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9vcGN1YS1zZXJ2ZXItbGlzdC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgT3BjdWFTZXJ2ZXJMaXN0Q29tcG9uZW50IHtcbiAgQElucHV0KCkgc2VydmVyTGlzdDogT3BjdWFTZXJ2ZXJbXSA9IFtdO1xuICBAT3V0cHV0KCkgcHJlc2VudCA9IG5ldyBFdmVudEVtaXR0ZXI8T3BjdWFTZXJ2ZXI+KCk7XG5cbiAgcHJlc2VudENvbmZpZyhzZXJ2ZXI6IE9wY3VhU2VydmVyKSB7XG4gICAgc2VydmVyLmFjdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5wcmVzZW50LmVtaXQoc2VydmVyKTtcbiAgfVxufVxuIiwiPCEtLSBhZGQgYWN0aXZlIGNsYXNzIHRvIGM4eS1zdGFja2VkLWl0ZW0gd2hlbiBjbGlja2VkIC0tPlxuPGRpdlxuICBjbGFzcz1cImM4eS1zdGFja2VkLWl0ZW1cIlxuICBbY2xhc3MuYWN0aXZlXT1cInNlcnZlci5hY3RpdmVcIlxuICAqbmdGb3I9XCJsZXQgc2VydmVyIG9mIHNlcnZlckxpc3RcIlxuICAoY2xpY2spPVwicHJlc2VudENvbmZpZyhzZXJ2ZXIpXCJcbj5cbiAgPGkgW2M4eUljb25dPVwiJ3NlcnZlcidcIiBjbGFzcz1cImljb24tMjBcIj48L2k+XG4gIDxkaXYgY2xhc3M9XCJwLWwtMTYgdGV4dC10cnVuY2F0ZVwiPlxuICAgIDxwIGlkPVwic2VydmVyTmFtZVwiIGNsYXNzPVwidGV4dC10cnVuY2F0ZVwiPnt7IHNlcnZlci5uYW1lIH19PC9wPlxuICAgIDxzbWFsbCBpZD1cInNlcnZlclVybFwiIGNsYXNzPVwidGV4dC10cnVuY2F0ZSB0ZXh0LW11dGVkXCI+e3sgc2VydmVyLmNvbmZpZy5zZXJ2ZXJVcmwgfX08L3NtYWxsPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cIm0tbC1hdXRvIHAtbC04IGQtZmxleCBwLXItMTZcIj5cbiAgICA8ZGV2aWNlLXN0YXR1cyBjbGFzcz1cInAtci04XCIgW21vXT1cInNlcnZlclwiPjwvZGV2aWNlLXN0YXR1cz5cbiAgICA8YnV0dG9uXG4gICAgICBjbGFzcz1cImJ0biBidG4tZG90IHRleHQtZ3JheS1kYXJrZXJcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInNlcnZlci5xdWlja0luZm8ucGFkbG9ja01zZyB8IHRyYW5zbGF0ZVwiXG4gICAgICB0b29sdGlwPVwie3sgc2VydmVyLnF1aWNrSW5mby5wYWRsb2NrTXNnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgIHBsYWNlbWVudD1cImxlZnRcIlxuICAgICAgY29udGFpbmVyPVwiYm9keVwiXG4gICAgPlxuICAgICAgPGkgW2M4eUljb25dPVwic2VydmVyLnF1aWNrSW5mby5wYWRsb2NrXCI+PC9pPlxuICAgIDwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19