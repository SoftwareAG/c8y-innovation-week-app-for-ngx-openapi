import { Component, EventEmitter, ViewChild } from '@angular/core';
import { InventoryBinaryService } from '@c8y/client';
import { Subject } from 'rxjs';
import { take, takeUntil } from 'rxjs/operators';
import { gettext, Status, ModalService, AlertService, FilesService, DataGridComponent } from '@c8y/ngx-components';
import { BsModalService } from 'ngx-bootstrap/modal';
import { FilesRepositoryUploadComponent } from './files-repository-upload.component';
import { FilesRepositoryService } from './files-repository.service';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "./files-repository.service";
import * as i2 from "@c8y/client";
import * as i3 from "@c8y/ngx-components";
import * as i4 from "ngx-bootstrap/modal";
import * as i5 from "@ngx-translate/core";
import * as i6 from "@angular/common";
import * as i7 from "@c8y/ngx-components/file-preview";
export class FilesRepositoryComponent {
    constructor(filesRepositoryService, inventoryBinaryService, modalService, alertService, bsModalService, fileService, translateService) {
        this.filesRepositoryService = filesRepositoryService;
        this.inventoryBinaryService = inventoryBinaryService;
        this.modalService = modalService;
        this.alertService = alertService;
        this.bsModalService = bsModalService;
        this.fileService = fileService;
        this.translateService = translateService;
        this.destroy$ = new Subject();
        this.title = gettext('Files repository');
        this.managementTitle = gettext('Management');
        this.loadMoreItemsLabel = gettext('Load more files');
        this.loadingItemsLabel = gettext('Loading files…');
        this.isLoading = true;
        this.displayOptions = {
            bordered: false,
            striped: true,
            filter: true,
            gridHeader: true
        };
        this.columns = this.filesRepositoryService.getColumns();
        this.pagination = this.filesRepositoryService.getPagination();
        this.infiniteScroll = 'auto';
        this.selectable = true;
        this.actionControls = [
            {
                text: gettext('Delete'),
                icon: 'trash',
                type: "DELETE" /* BuiltInActionType.Delete */,
                showIf: selectedItem => !this.filesRepositoryService.hasApplicationStorageFragment(selectedItem),
                callback: selectedItem => this.onDeleteItem(selectedItem)
            },
            {
                text: gettext('Download'),
                icon: 'download',
                type: "EXPORT" /* BuiltInActionType.Export */,
                callback: selectedItem => this.onDownloadItem(selectedItem)
            }
        ];
        this.bulkActionControls = [
            {
                type: "DELETE" /* BuiltInActionType.Delete */,
                callback: selectedItemIds => this.onDeleteItems(selectedItemIds)
            }
        ];
        this.refresh = new EventEmitter();
        // we're setting up `serverSideDataCallback` to execute a method from this component with bound `this`
        this.serverSideDataCallback = this.onDataSourceModifier.bind(this);
    }
    async onDataSourceModifier(dataSourceModifier) {
        const { res, data, paging } = await this.filesRepositoryService.getData(dataSourceModifier.columns, dataSourceModifier.pagination, dataSourceModifier.searchText);
        const filteredSize = await this.filesRepositoryService.getCount(dataSourceModifier.columns, dataSourceModifier.pagination);
        const size = await this.filesRepositoryService.getTotal();
        const serverSideDataResult = { res, data, paging, filteredSize, size };
        this.isLoading = false;
        this.returnedDataSize = serverSideDataResult.size;
        return serverSideDataResult;
    }
    async onDeleteItem(selectedItem) {
        return this.deleteItemsWithConfirmation([selectedItem.id], {
            title: gettext('Delete file'),
            body: this.translateService.instant(gettext('You are about to delete file "{{ name }}". Do you want to proceed?'), selectedItem),
            successText: gettext('File deleted.')
        });
    }
    async onDeleteItems(selectedItemsIds) {
        const dataGridDataSourceData = await this.dataGrid.dataSource.data$.pipe(take(1)).toPromise();
        const deletableItemsIds = this.filesRepositoryService.getDeletableItemsIds(selectedItemsIds, dataGridDataSourceData);
        let body;
        if (deletableItemsIds.length < selectedItemsIds.length) {
            body = gettext(`
        You are about to delete the selected files.
        Note: the selected files of type "c8y_applications_storage_*" won't be deleted though
        - such files can be deleted only from the "Activity log" of the associated application.
        Do you want to proceed?
      `);
        }
        else {
            body = gettext('You are about to delete the selected files. Do you want to proceed?');
        }
        return this.deleteItemsWithConfirmation(deletableItemsIds, {
            title: gettext('Delete files'),
            body,
            successText: gettext('Files deleted.')
        });
    }
    async onDownloadItem(selectedItem) {
        return this.fileService.download(selectedItem);
    }
    openFileUploadComponent() {
        const modalOptions = {
            class: 'modal-sm',
            ariaDescribedby: 'modal-body',
            ariaLabelledBy: 'modal-title',
            ignoreBackdropClick: true
        };
        const modalRef = this.bsModalService.show(FilesRepositoryUploadComponent, modalOptions);
        modalRef.content.onClose.pipe(takeUntil(this.destroy$)).subscribe(({ uploaded }) => {
            if (uploaded) {
                this.refresh.emit();
            }
            modalRef.hide();
        });
    }
    async deleteItemsWithConfirmation(selectedItemsIds, options) {
        try {
            await this.confirmItemsDeletion(options);
            this.isLoading = true;
            const promises = selectedItemsIds.map(selectedItemId => this.inventoryBinaryService.delete(selectedItemId));
            await Promise.all(promises);
            this.alertService.success(options.successText);
            this.refresh.next();
        }
        catch (ex) {
            if (ex) {
                this.alertService.addServerFailure(ex);
            }
        }
        finally {
            this.isLoading = false;
        }
    }
    async confirmItemsDeletion({ title, body }) {
        const status = Status.DANGER;
        const labels = { ok: gettext('Delete'), cancel: gettext('Cancel') };
        await this.modalService.confirm(title, body, status, labels);
    }
}
FilesRepositoryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryComponent, deps: [{ token: i1.FilesRepositoryService }, { token: i2.InventoryBinaryService }, { token: i3.ModalService }, { token: i3.AlertService }, { token: i4.BsModalService }, { token: i3.FilesService }, { token: i5.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
FilesRepositoryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: FilesRepositoryComponent, selector: "c8y-files-repository", viewQueries: [{ propertyName: "dataGrid", first: true, predicate: DataGridComponent, descendants: true, static: true }], ngImport: i0, template: "<c8y-title>\n  {{ title | translate }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    icon=\"c8y-management\"\n    [label]=\"managementTitle | translate\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"title | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE']; allowAny: true\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Upload files' | translate }}\"\n    (click)=\"openFileUploadComponent()\"\n    data-cy=\"c8y-files-repository--open-file-upload-component\"\n  >\n    <i c8yIcon=\"upload\"></i>\n    {{ 'Upload files' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/administration/#files\"></c8y-help>\n\n<div class=\"content-fullpage border-top border-bottom\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [pagination]=\"pagination\"\n    [infiniteScroll]=\"infiniteScroll\"\n    [serverSideDataCallback]=\"serverSideDataCallback\"\n    [actionControls]=\"actionControls\"\n    [selectable]=\"selectable\"\n    [showSearch]=\"true\"\n    [refresh]=\"refresh\"\n    [bulkActionControls]=\"bulkActionControls\"\n  >\n    <div class=\"c8y-empty-state\">\n      <ng-container *ngIf=\"isLoading\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n      <ng-container>\n        <div class=\"text-center list-group\">\n          <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"c8y-archive\"></h1>\n          <h3 translate>No files to display.</h3>\n          <div\n            class=\"text-center\"\n            *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE']\"\n          >\n            <p translate>Add a new file by clicking below.</p>\n            <p>\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Upload file' | translate }}\"\n                type=\"button\"\n                (click)=\"openFileUploadComponent()\"\n              >\n                <i c8yIcon=\"plus-circle\"></i>\n                {{ 'Upload file' | translate }}\n              </button>\n            </p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <c8y-column name=\"name\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }}\">\n          <div class=\"d-flex j-c-between a-i-center\">\n            {{ context.value }}\n            <c8y-file-preview [mo]=\"context.item\" class=\"m-l-auto\">\n              <button\n                class=\"btn btn-emphasis btn-icon\"\n                type=\"button\"\n                [title]=\"'Preview file' | translate\"\n                customButton\n              >\n                <i c8yIcon=\"search\"></i>\n              </button>\n            </c8y-file-preview>\n          </div>\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"length\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }} B\">\n          {{ context.value | bytes }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"lastUpdated\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value | c8yDate }}\">\n          {{ context.value | c8yDate }}\n        </span>\n      </ng-container>\n    </c8y-column>\n  </c8y-data-grid>\n</div>\n", dependencies: [{ kind: "component", type: i3.ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: ["placement", "priority", "itemClass", "injector", "groupId"] }, { kind: "component", type: i3.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i3.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i3.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.IfAllowedDirective, selector: "[c8yIfAllowed]", inputs: ["c8yIfAllowed", "c8yIfAllowedAllowAny"] }, { kind: "component", type: i3.LoadingComponent, selector: "c8y-loading" }, { kind: "directive", type: i3.CellRendererDefDirective, selector: "[c8yCellRendererDef]" }, { kind: "directive", type: i3.ColumnDirective, selector: "c8y-column", inputs: ["name"] }, { kind: "component", type: i3.DataGridComponent, selector: "c8y-data-grid", inputs: ["title", "loadMoreItemsLabel", "loadingItemsLabel", "showSearch", "refresh", "columns", "rows", "pagination", "infiniteScroll", "serverSideDataCallback", "selectable", "singleSelection", "selectionPrimaryKey", "displayOptions", "actionControls", "bulkActionControls", "headerActionControls", "searchText", "configureColumnsEnabled", "showCounterWarning", "activeClassName"], outputs: ["rowMouseOver", "rowMouseLeave", "rowClick", "onConfigChange", "onBeforeFilter", "onBeforeSearch", "onFilter", "itemsSelect", "onReload", "onAddCustomColumn", "onRemoveCustomColumn", "onColumnFilterReset", "onSort", "onPageSizeChange", "onColumnReordered", "onColumnVisibilityChange"] }, { kind: "component", type: i3.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "component", type: i3.HelpComponent, selector: "c8y-help", inputs: ["src", "isCollapsed", "priority", "icon"] }, { kind: "component", type: i7.FilePreviewComponent, selector: "c8y-file-preview", inputs: ["mo"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i3.DatePipe, name: "c8yDate" }, { kind: "pipe", type: i3.BytesPipe, name: "bytes" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-files-repository', template: "<c8y-title>\n  {{ title | translate }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    icon=\"c8y-management\"\n    [label]=\"managementTitle | translate\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"title | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE']; allowAny: true\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Upload files' | translate }}\"\n    (click)=\"openFileUploadComponent()\"\n    data-cy=\"c8y-files-repository--open-file-upload-component\"\n  >\n    <i c8yIcon=\"upload\"></i>\n    {{ 'Upload files' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/administration/#files\"></c8y-help>\n\n<div class=\"content-fullpage border-top border-bottom\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [pagination]=\"pagination\"\n    [infiniteScroll]=\"infiniteScroll\"\n    [serverSideDataCallback]=\"serverSideDataCallback\"\n    [actionControls]=\"actionControls\"\n    [selectable]=\"selectable\"\n    [showSearch]=\"true\"\n    [refresh]=\"refresh\"\n    [bulkActionControls]=\"bulkActionControls\"\n  >\n    <div class=\"c8y-empty-state\">\n      <ng-container *ngIf=\"isLoading\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n      <ng-container>\n        <div class=\"text-center list-group\">\n          <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"c8y-archive\"></h1>\n          <h3 translate>No files to display.</h3>\n          <div\n            class=\"text-center\"\n            *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_CREATE']\"\n          >\n            <p translate>Add a new file by clicking below.</p>\n            <p>\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Upload file' | translate }}\"\n                type=\"button\"\n                (click)=\"openFileUploadComponent()\"\n              >\n                <i c8yIcon=\"plus-circle\"></i>\n                {{ 'Upload file' | translate }}\n              </button>\n            </p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <c8y-column name=\"name\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }}\">\n          <div class=\"d-flex j-c-between a-i-center\">\n            {{ context.value }}\n            <c8y-file-preview [mo]=\"context.item\" class=\"m-l-auto\">\n              <button\n                class=\"btn btn-emphasis btn-icon\"\n                type=\"button\"\n                [title]=\"'Preview file' | translate\"\n                customButton\n              >\n                <i c8yIcon=\"search\"></i>\n              </button>\n            </c8y-file-preview>\n          </div>\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"length\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }} B\">\n          {{ context.value | bytes }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"lastUpdated\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value | c8yDate }}\">\n          {{ context.value | c8yDate }}\n        </span>\n      </ng-container>\n    </c8y-column>\n  </c8y-data-grid>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.FilesRepositoryService }, { type: i2.InventoryBinaryService }, { type: i3.ModalService }, { type: i3.AlertService }, { type: i4.BsModalService }, { type: i3.FilesService }, { type: i5.TranslateService }]; }, propDecorators: { dataGrid: [{
                type: ViewChild,
                args: [DataGridComponent, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,