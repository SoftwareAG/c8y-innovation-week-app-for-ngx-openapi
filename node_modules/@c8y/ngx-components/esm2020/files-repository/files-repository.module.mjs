import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule, hookNavigator, hookRoute, DropAreaModule } from '@c8y/ngx-components';
import { FilesRepositoryNavigationFactory } from './files-repository-navigation.factory';
import { FilesRepositoryComponent } from './files-repository.component';
import { FilesRepositoryUploadComponent } from './files-repository-upload.component';
import { FilesRepositoryService } from './files-repository.service';
import { FilesRepositoryGuard } from './files-repository.guard';
import { FilePreviewModule } from '@c8y/ngx-components/file-preview';
import * as i0 from "@angular/core";
export class FilesRepositoryModule {
}
FilesRepositoryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FilesRepositoryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryModule, declarations: [FilesRepositoryComponent, FilesRepositoryUploadComponent], imports: [RouterModule, CoreModule, DropAreaModule, FilePreviewModule] });
FilesRepositoryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryModule, providers: [
        FilesRepositoryGuard,
        hookNavigator(FilesRepositoryNavigationFactory),
        hookRoute({
            path: 'files',
            component: FilesRepositoryComponent,
            canActivate: [FilesRepositoryGuard]
        }, { multi: true }),
        FilesRepositoryService
    ], imports: [RouterModule, CoreModule, DropAreaModule, FilePreviewModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilesRepositoryModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [RouterModule, CoreModule, DropAreaModule, FilePreviewModule],
                    exports: [],
                    declarations: [FilesRepositoryComponent, FilesRepositoryUploadComponent],
                    providers: [
                        FilesRepositoryGuard,
                        hookNavigator(FilesRepositoryNavigationFactory),
                        hookRoute({
                            path: 'files',
                            component: FilesRepositoryComponent,
                            canActivate: [FilesRepositoryGuard]
                        }, { multi: true }),
                        FilesRepositoryService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXMtcmVwb3NpdG9yeS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9maWxlcy1yZXBvc2l0b3J5L2ZpbGVzLXJlcG9zaXRvcnkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN6RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7QUFvQnJFLE1BQU0sT0FBTyxxQkFBcUI7O2tIQUFyQixxQkFBcUI7bUhBQXJCLHFCQUFxQixpQkFmakIsd0JBQXdCLEVBQUUsOEJBQThCLGFBRjdELFlBQVksRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLGlCQUFpQjttSEFpQjFELHFCQUFxQixhQWRyQjtRQUNULG9CQUFvQjtRQUNwQixhQUFhLENBQUMsZ0NBQWdDLENBQUM7UUFDL0MsU0FBUyxDQUNQO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixTQUFTLEVBQUUsd0JBQXdCO1lBQ25DLFdBQVcsRUFBRSxDQUFDLG9CQUFvQixDQUFDO1NBQ3BDLEVBQ0QsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQ2hCO1FBQ0Qsc0JBQXNCO0tBQ3ZCLFlBZlMsWUFBWSxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsaUJBQWlCOzJGQWlCMUQscUJBQXFCO2tCQWxCakMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQztvQkFDdEUsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsWUFBWSxFQUFFLENBQUMsd0JBQXdCLEVBQUUsOEJBQThCLENBQUM7b0JBQ3hFLFNBQVMsRUFBRTt3QkFDVCxvQkFBb0I7d0JBQ3BCLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQzt3QkFDL0MsU0FBUyxDQUNQOzRCQUNFLElBQUksRUFBRSxPQUFPOzRCQUNiLFNBQVMsRUFBRSx3QkFBd0I7NEJBQ25DLFdBQVcsRUFBRSxDQUFDLG9CQUFvQixDQUFDO3lCQUNwQyxFQUNELEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUNoQjt3QkFDRCxzQkFBc0I7cUJBQ3ZCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBob29rTmF2aWdhdG9yLCBob29rUm91dGUsIERyb3BBcmVhTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBGaWxlc1JlcG9zaXRvcnlOYXZpZ2F0aW9uRmFjdG9yeSB9IGZyb20gJy4vZmlsZXMtcmVwb3NpdG9yeS1uYXZpZ2F0aW9uLmZhY3RvcnknO1xuaW1wb3J0IHsgRmlsZXNSZXBvc2l0b3J5Q29tcG9uZW50IH0gZnJvbSAnLi9maWxlcy1yZXBvc2l0b3J5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWxlc1JlcG9zaXRvcnlVcGxvYWRDb21wb25lbnQgfSBmcm9tICcuL2ZpbGVzLXJlcG9zaXRvcnktdXBsb2FkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWxlc1JlcG9zaXRvcnlTZXJ2aWNlIH0gZnJvbSAnLi9maWxlcy1yZXBvc2l0b3J5LnNlcnZpY2UnO1xuaW1wb3J0IHsgRmlsZXNSZXBvc2l0b3J5R3VhcmQgfSBmcm9tICcuL2ZpbGVzLXJlcG9zaXRvcnkuZ3VhcmQnO1xuaW1wb3J0IHsgRmlsZVByZXZpZXdNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2ZpbGUtcHJldmlldyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtSb3V0ZXJNb2R1bGUsIENvcmVNb2R1bGUsIERyb3BBcmVhTW9kdWxlLCBGaWxlUHJldmlld01vZHVsZV0sXG4gIGV4cG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtGaWxlc1JlcG9zaXRvcnlDb21wb25lbnQsIEZpbGVzUmVwb3NpdG9yeVVwbG9hZENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEZpbGVzUmVwb3NpdG9yeUd1YXJkLFxuICAgIGhvb2tOYXZpZ2F0b3IoRmlsZXNSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkpLFxuICAgIGhvb2tSb3V0ZShcbiAgICAgIHtcbiAgICAgICAgcGF0aDogJ2ZpbGVzJyxcbiAgICAgICAgY29tcG9uZW50OiBGaWxlc1JlcG9zaXRvcnlDb21wb25lbnQsXG4gICAgICAgIGNhbkFjdGl2YXRlOiBbRmlsZXNSZXBvc2l0b3J5R3VhcmRdXG4gICAgICB9LFxuICAgICAgeyBtdWx0aTogdHJ1ZSB9XG4gICAgKSxcbiAgICBGaWxlc1JlcG9zaXRvcnlTZXJ2aWNlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRmlsZXNSZXBvc2l0b3J5TW9kdWxlIHt9XG4iXX0=