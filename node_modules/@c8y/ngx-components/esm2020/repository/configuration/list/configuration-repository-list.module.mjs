import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ConfigurationListComponent } from './configuration-list.component';
import { ConfigurationDetailComponent } from './configuration-detail.component';
import { CoreModule, hookNavigator, hookRoute } from '@c8y/ngx-components';
import { ConfigurationRepositoryNavigationFactory } from './configuration-repository-navigation-factory';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import * as i0 from "@angular/core";
export class ConfigurationRepositoryListModule {
    static forRoot() {
        return {
            ngModule: ConfigurationRepositoryListModule,
            providers: [
                hookNavigator(ConfigurationRepositoryNavigationFactory),
                hookRoute({
                    path: 'configuration',
                    component: ConfigurationListComponent
                })
            ]
        };
    }
}
ConfigurationRepositoryListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfigurationRepositoryListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ConfigurationRepositoryListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ConfigurationRepositoryListModule, declarations: [ConfigurationListComponent, ConfigurationDetailComponent], imports: [CommonModule, CoreModule, SharedRepositoryModule, TooltipModule] });
ConfigurationRepositoryListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfigurationRepositoryListModule, imports: [CommonModule, CoreModule, SharedRepositoryModule, TooltipModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfigurationRepositoryListModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, CoreModule, SharedRepositoryModule, TooltipModule],
                    declarations: [ConfigurationListComponent, ConfigurationDetailComponent],
                    entryComponents: [ConfigurationListComponent, ConfigurationDetailComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1yZXBvc2l0b3J5LWxpc3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcmVwb3NpdG9yeS9jb25maWd1cmF0aW9uL2xpc3QvY29uZmlndXJhdGlvbi1yZXBvc2l0b3J5LWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsd0NBQXdDLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN6RyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7O0FBT3RELE1BQU0sT0FBTyxpQ0FBaUM7SUFDNUMsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLGlDQUFpQztZQUMzQyxTQUFTLEVBQUU7Z0JBQ1QsYUFBYSxDQUFDLHdDQUF3QyxDQUFDO2dCQUN2RCxTQUFTLENBQUM7b0JBQ1IsSUFBSSxFQUFFLGVBQWU7b0JBQ3JCLFNBQVMsRUFBRSwwQkFBMEI7aUJBQ3RDLENBQUM7YUFDSDtTQUNGLENBQUM7SUFDSixDQUFDOzs4SEFaVSxpQ0FBaUM7K0hBQWpDLGlDQUFpQyxpQkFIN0IsMEJBQTBCLEVBQUUsNEJBQTRCLGFBRDdELFlBQVksRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUUsYUFBYTsrSEFJOUQsaUNBQWlDLFlBSmxDLFlBQVksRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUUsYUFBYTsyRkFJOUQsaUNBQWlDO2tCQUw3QyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUUsYUFBYSxDQUFDO29CQUMxRSxZQUFZLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQztvQkFDeEUsZUFBZSxFQUFFLENBQUMsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUM7aUJBQzVFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uRGV0YWlsQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maWd1cmF0aW9uLWRldGFpbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgaG9va05hdmlnYXRvciwgaG9va1JvdXRlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uUmVwb3NpdG9yeU5hdmlnYXRpb25GYWN0b3J5IH0gZnJvbSAnLi9jb25maWd1cmF0aW9uLXJlcG9zaXRvcnktbmF2aWdhdGlvbi1mYWN0b3J5JztcbmltcG9ydCB7IFNoYXJlZFJlcG9zaXRvcnlNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvc2hhcmVkJztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3Rvb2x0aXAnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBDb3JlTW9kdWxlLCBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlLCBUb29sdGlwTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbQ29uZmlndXJhdGlvbkxpc3RDb21wb25lbnQsIENvbmZpZ3VyYXRpb25EZXRhaWxDb21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCwgQ29uZmlndXJhdGlvbkRldGFpbENvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvblJlcG9zaXRvcnlMaXN0TW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb25maWd1cmF0aW9uUmVwb3NpdG9yeUxpc3RNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IENvbmZpZ3VyYXRpb25SZXBvc2l0b3J5TGlzdE1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICBob29rTmF2aWdhdG9yKENvbmZpZ3VyYXRpb25SZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkpLFxuICAgICAgICBob29rUm91dGUoe1xuICAgICAgICAgIHBhdGg6ICdjb25maWd1cmF0aW9uJyxcbiAgICAgICAgICBjb21wb25lbnQ6IENvbmZpZ3VyYXRpb25MaXN0Q29tcG9uZW50XG4gICAgICAgIH0pXG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19