import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NameCellRendererComponent } from './columns/name.cell-renderer.component';
import { SoftwareTypeCellRendererComponent } from './columns/software-type.cell-renderer.component';
import { SoftwareTypeFilteringFormRendererComponent } from './columns/software-type.filtering-form-renderer.component';
import { DeviceTypeCellRendererComponent } from './columns/device-type.cell-renderer.component';
import { VersionsCellRendererComponent } from './columns/versions.cell-renderer.component';
import { SoftwareListComponent } from './software-list.component';
import { SoftwareDetailsComponent } from './software-details.component';
import { AddSoftwareModalComponent } from './add-software-modal.component';
import { CoreModule, FormsModule, hookNavigator, hookRoute } from '@c8y/ngx-components';
import { SoftwareRepositoryNavigationFactory } from './software-repository-navigation-factory';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { RouterModule } from '@angular/router';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import * as i0 from "@angular/core";
export class SoftwareRepositoryListModule {
    static forRoot() {
        return {
            ngModule: SoftwareRepositoryListModule,
            providers: [
                hookNavigator(SoftwareRepositoryNavigationFactory),
                hookRoute([
                    {
                        path: 'software',
                        component: SoftwareListComponent
                    },
                    {
                        path: 'software/:id',
                        component: SoftwareDetailsComponent
                    }
                ])
            ]
        };
    }
}
SoftwareRepositoryListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SoftwareRepositoryListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SoftwareRepositoryListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: SoftwareRepositoryListModule, declarations: [SoftwareListComponent,
        SoftwareDetailsComponent,
        AddSoftwareModalComponent,
        NameCellRendererComponent,
        SoftwareTypeCellRendererComponent,
        SoftwareTypeFilteringFormRendererComponent,
        DeviceTypeCellRendererComponent,
        VersionsCellRendererComponent], imports: [CommonModule,
        CoreModule,
        FormsModule,
        DeviceGridModule,
        PopoverModule,
        TooltipModule,
        RouterModule,
        SharedRepositoryModule] });
SoftwareRepositoryListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SoftwareRepositoryListModule, imports: [CommonModule,
        CoreModule,
        FormsModule,
        DeviceGridModule,
        PopoverModule,
        TooltipModule,
        RouterModule,
        SharedRepositoryModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SoftwareRepositoryListModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        CoreModule,
                        FormsModule,
                        DeviceGridModule,
                        PopoverModule,
                        TooltipModule,
                        RouterModule,
                        SharedRepositoryModule
                    ],
                    declarations: [
                        SoftwareListComponent,
                        SoftwareDetailsComponent,
                        AddSoftwareModalComponent,
                        NameCellRendererComponent,
                        SoftwareTypeCellRendererComponent,
                        SoftwareTypeFilteringFormRendererComponent,
                        DeviceTypeCellRendererComponent,
                        VersionsCellRendererComponent
                    ],
                    entryComponents: [SoftwareListComponent, SoftwareDetailsComponent, AddSoftwareModalComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29mdHdhcmUtcmVwb3NpdG9yeS1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlcG9zaXRvcnkvc29mdHdhcmUvbGlzdC9zb2Z0d2FyZS1yZXBvc2l0b3J5LWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNwRyxPQUFPLEVBQUUsMENBQTBDLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUN2SCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNoRyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMzRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEYsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDL0YsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7O0FBeUJuRSxNQUFNLE9BQU8sNEJBQTRCO0lBQ3ZDLE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSw0QkFBNEI7WUFDdEMsU0FBUyxFQUFFO2dCQUNULGFBQWEsQ0FBQyxtQ0FBbUMsQ0FBQztnQkFDbEQsU0FBUyxDQUFDO29CQUNSO3dCQUNFLElBQUksRUFBRSxVQUFVO3dCQUNoQixTQUFTLEVBQUUscUJBQXFCO3FCQUNqQztvQkFDRDt3QkFDRSxJQUFJLEVBQUUsY0FBYzt3QkFDcEIsU0FBUyxFQUFFLHdCQUF3QjtxQkFDcEM7aUJBQ0YsQ0FBQzthQUNIO1NBQ0YsQ0FBQztJQUNKLENBQUM7O3lIQWxCVSw0QkFBNEI7MEhBQTVCLDRCQUE0QixpQkFYckMscUJBQXFCO1FBQ3JCLHdCQUF3QjtRQUN4Qix5QkFBeUI7UUFDekIseUJBQXlCO1FBQ3pCLGlDQUFpQztRQUNqQywwQ0FBMEM7UUFDMUMsK0JBQStCO1FBQy9CLDZCQUE2QixhQWpCN0IsWUFBWTtRQUNaLFVBQVU7UUFDVixXQUFXO1FBQ1gsZ0JBQWdCO1FBQ2hCLGFBQWE7UUFDYixhQUFhO1FBQ2IsWUFBWTtRQUNaLHNCQUFzQjswSEFjYiw0QkFBNEIsWUFyQnJDLFlBQVk7UUFDWixVQUFVO1FBQ1YsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixhQUFhO1FBQ2IsYUFBYTtRQUNiLFlBQVk7UUFDWixzQkFBc0I7MkZBY2IsNEJBQTRCO2tCQXZCeEMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixVQUFVO3dCQUNWLFdBQVc7d0JBQ1gsZ0JBQWdCO3dCQUNoQixhQUFhO3dCQUNiLGFBQWE7d0JBQ2IsWUFBWTt3QkFDWixzQkFBc0I7cUJBQ3ZCO29CQUNELFlBQVksRUFBRTt3QkFDWixxQkFBcUI7d0JBQ3JCLHdCQUF3Qjt3QkFDeEIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBQ3pCLGlDQUFpQzt3QkFDakMsMENBQTBDO3dCQUMxQywrQkFBK0I7d0JBQy9CLDZCQUE2QjtxQkFDOUI7b0JBQ0QsZUFBZSxFQUFFLENBQUMscUJBQXFCLEVBQUUsd0JBQXdCLEVBQUUseUJBQXlCLENBQUM7aUJBQzlGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOYW1lQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL25hbWUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU29mdHdhcmVUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL3NvZnR3YXJlLXR5cGUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU29mdHdhcmVUeXBlRmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL3NvZnR3YXJlLXR5cGUuZmlsdGVyaW5nLWZvcm0tcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVR5cGVDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvZGV2aWNlLXR5cGUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVmVyc2lvbnNDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvdmVyc2lvbnMuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU29mdHdhcmVMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9zb2Z0d2FyZS1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTb2Z0d2FyZURldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL3NvZnR3YXJlLWRldGFpbHMuY29tcG9uZW50JztcbmltcG9ydCB7IEFkZFNvZnR3YXJlTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2FkZC1zb2Z0d2FyZS1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgRm9ybXNNb2R1bGUsIGhvb2tOYXZpZ2F0b3IsIGhvb2tSb3V0ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgU29mdHdhcmVSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL3NvZnR3YXJlLXJlcG9zaXRvcnktbmF2aWdhdGlvbi1mYWN0b3J5JztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgU2hhcmVkUmVwb3NpdG9yeU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvcmVwb3NpdG9yeS9zaGFyZWQnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZE1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIENvcmVNb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgRGV2aWNlR3JpZE1vZHVsZSxcbiAgICBQb3BvdmVyTW9kdWxlLFxuICAgIFRvb2x0aXBNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIFNoYXJlZFJlcG9zaXRvcnlNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU29mdHdhcmVMaXN0Q29tcG9uZW50LFxuICAgIFNvZnR3YXJlRGV0YWlsc0NvbXBvbmVudCxcbiAgICBBZGRTb2Z0d2FyZU1vZGFsQ29tcG9uZW50LFxuICAgIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgU29mdHdhcmVUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIFNvZnR3YXJlVHlwZUZpbHRlcmluZ0Zvcm1SZW5kZXJlckNvbXBvbmVudCxcbiAgICBEZXZpY2VUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIFZlcnNpb25zQ2VsbFJlbmRlcmVyQ29tcG9uZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1NvZnR3YXJlTGlzdENvbXBvbmVudCwgU29mdHdhcmVEZXRhaWxzQ29tcG9uZW50LCBBZGRTb2Z0d2FyZU1vZGFsQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBTb2Z0d2FyZVJlcG9zaXRvcnlMaXN0TW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTb2Z0d2FyZVJlcG9zaXRvcnlMaXN0TW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBTb2Z0d2FyZVJlcG9zaXRvcnlMaXN0TW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIGhvb2tOYXZpZ2F0b3IoU29mdHdhcmVSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkpLFxuICAgICAgICBob29rUm91dGUoW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHBhdGg6ICdzb2Z0d2FyZScsXG4gICAgICAgICAgICBjb21wb25lbnQ6IFNvZnR3YXJlTGlzdENvbXBvbmVudFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgcGF0aDogJ3NvZnR3YXJlLzppZCcsXG4gICAgICAgICAgICBjb21wb25lbnQ6IFNvZnR3YXJlRGV0YWlsc0NvbXBvbmVudFxuICAgICAgICAgIH1cbiAgICAgICAgXSlcbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=