import { Component, Input } from '@angular/core';
import { DEFAULT_HOME_DASHBOARD_NAME, HomeDashboardType, USER_HOME_DASHBOARD_NAME } from './cockpit-config.model';
import { CockpitConfigService } from './cockpit-config.service';
import * as i0 from "@angular/core";
import * as i1 from "./cockpit-config.service";
import * as i2 from "@c8y/ngx-components";
export class HomeDashboardConfigComponent {
    /**
     * @ignore
     */
    constructor(cockpitConfigService) {
        this.cockpitConfigService = cockpitConfigService;
        /**
         * The types of dashboard that can be configured.
         */
        this.homeDashboardTypes = HomeDashboardType;
    }
    /**
     * @ignore
     */
    dashboardChange(selected, type) {
        if (!selected) {
            return;
        }
        switch (type) {
            case this.homeDashboardTypes.DEFAULT: {
                this.config.homeDashboardName = DEFAULT_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.APP: {
                this.config.homeDashboardName = this.cockpitConfigService.getAppDashboardName();
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.USER: {
                this.config.homeDashboardName = USER_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = true;
                break;
            }
        }
    }
    /**
     * @ignore
     */
    verifySelected(type) {
        if (type === this.homeDashboardTypes.USER) {
            return this.config.userSpecificHomeDashboard;
        }
        if (type === this.homeDashboardTypes.DEFAULT) {
            return this.config.homeDashboardName === DEFAULT_HOME_DASHBOARD_NAME;
        }
        return this.config.homeDashboardName === this.cockpitConfigService.getAppDashboardName();
    }
}
HomeDashboardConfigComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: HomeDashboardConfigComponent, deps: [{ token: i1.CockpitConfigService }], target: i0.ɵɵFactoryTarget.Component });
HomeDashboardConfigComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: HomeDashboardConfigComponent, selector: "c8y-home-dashboard-config", inputs: { config: "config" }, ngImport: i0, template: "<c8y-list-group class=\"separator-top\">\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.DEFAULT)\"\n      [selected]=\"verifySelected(homeDashboardTypes.DEFAULT)\"\n    ></c8y-li-radio>\n    <p translate>Default home dashboard</p>\n    <small translate>Changes done in the home dashboard are reflected across the platform.</small>\n  </c8y-li>\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.APP)\"\n      [selected]=\"verifySelected(homeDashboardTypes.APP)\"\n    ></c8y-li-radio>\n    <p translate>Custom home dashboard</p>\n    <small translate>\n      Changes done to the home dashboard are reflected only in the current application.\n    </small>\n  </c8y-li>\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.USER)\"\n      [selected]=\"verifySelected(homeDashboardTypes.USER)\"\n    ></c8y-li-radio>\n    <p translate>User home dashboard</p>\n    <small translate>\n      Changes done to the home dashboard are reflected only for the current user. NOTE: This user\n      needs to have inventory write permission.\n    </small>\n  </c8y-li>\n</c8y-list-group>\n", dependencies: [{ kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "component", type: i2.ListGroupComponent, selector: "c8y-list-group" }, { kind: "component", type: i2.ListItemComponent, selector: "c8y-list-item, c8y-li", inputs: ["active", "emptyActions", "collapsed", "selectable"], outputs: ["collapsedChange"] }, { kind: "component", type: i2.ListItemRadioComponent, selector: "c8y-list-item-radio, c8y-li-radio", inputs: ["selected", "name", "disabled", "value"], outputs: ["onSelect"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: HomeDashboardConfigComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-home-dashboard-config', template: "<c8y-list-group class=\"separator-top\">\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.DEFAULT)\"\n      [selected]=\"verifySelected(homeDashboardTypes.DEFAULT)\"\n    ></c8y-li-radio>\n    <p translate>Default home dashboard</p>\n    <small translate>Changes done in the home dashboard are reflected across the platform.</small>\n  </c8y-li>\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.APP)\"\n      [selected]=\"verifySelected(homeDashboardTypes.APP)\"\n    ></c8y-li-radio>\n    <p translate>Custom home dashboard</p>\n    <small translate>\n      Changes done to the home dashboard are reflected only in the current application.\n    </small>\n  </c8y-li>\n  <c8y-li data-cy=\"home-dashboard-config--dashboard-list\">\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.USER)\"\n      [selected]=\"verifySelected(homeDashboardTypes.USER)\"\n    ></c8y-li-radio>\n    <p translate>User home dashboard</p>\n    <small translate>\n      Changes done to the home dashboard are reflected only for the current user. NOTE: This user\n      needs to have inventory write permission.\n    </small>\n  </c8y-li>\n</c8y-list-group>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CockpitConfigService }]; }, propDecorators: { config: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9tZS1kYXNoYm9hcmQtY29uZmlnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvY2twaXQtY29uZmlnL2hvbWUtZGFzaGJvYXJkLWNvbmZpZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9jb2NrcGl0LWNvbmZpZy9ob21lLWRhc2hib2FyZC1jb25maWcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUVMLDJCQUEyQixFQUMzQixpQkFBaUIsRUFDakIsd0JBQXdCLEVBQ3pCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7QUFNaEUsTUFBTSxPQUFPLDRCQUE0QjtJQVN2Qzs7T0FFRztJQUNILFlBQW9CLG9CQUEwQztRQUExQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBUjlEOztXQUVHO1FBQ00sdUJBQWtCLEdBQUcsaUJBQWlCLENBQUM7SUFLaUIsQ0FBQztJQUVsRTs7T0FFRztJQUNILGVBQWUsQ0FBQyxRQUFpQixFQUFFLElBQXVCO1FBQ3hELElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixPQUFPO1NBQ1I7UUFFRCxRQUFRLElBQUksRUFBRTtZQUNaLEtBQUssSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixHQUFHLDJCQUEyQixDQUFDO2dCQUM1RCxJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixHQUFHLEtBQUssQ0FBQztnQkFDOUMsTUFBTTthQUNQO1lBQ0QsS0FBSyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixFQUFFLENBQUM7Z0JBQ2hGLElBQUksQ0FBQyxNQUFNLENBQUMseUJBQXlCLEdBQUcsS0FBSyxDQUFDO2dCQUM5QyxNQUFNO2FBQ1A7WUFDRCxLQUFLLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsR0FBRyx3QkFBd0IsQ0FBQztnQkFDekQsSUFBSSxDQUFDLE1BQU0sQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUM7Z0JBQzdDLE1BQU07YUFDUDtTQUNGO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsY0FBYyxDQUFDLElBQXVCO1FBQ3BDLElBQUksSUFBSSxLQUFLLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUU7WUFDekMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixDQUFDO1NBQzlDO1FBQ0QsSUFBSSxJQUFJLEtBQUssSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtZQUM1QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEtBQUssMkJBQTJCLENBQUM7U0FDdEU7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEtBQUssSUFBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDM0YsQ0FBQzs7eUhBcERVLDRCQUE0Qjs2R0FBNUIsNEJBQTRCLCtGQ2J6Qyw0MENBK0JBOzJGRGxCYSw0QkFBNEI7a0JBSnhDLFNBQVM7K0JBQ0UsMkJBQTJCOzJHQUtyQyxNQUFNO3NCQURMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb2NrcGl0Q29uZmlnLFxuICBERUZBVUxUX0hPTUVfREFTSEJPQVJEX05BTUUsXG4gIEhvbWVEYXNoYm9hcmRUeXBlLFxuICBVU0VSX0hPTUVfREFTSEJPQVJEX05BTUVcbn0gZnJvbSAnLi9jb2NrcGl0LWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBDb2NrcGl0Q29uZmlnU2VydmljZSB9IGZyb20gJy4vY29ja3BpdC1jb25maWcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1ob21lLWRhc2hib2FyZC1jb25maWcnLFxuICB0ZW1wbGF0ZVVybDogJy4vaG9tZS1kYXNoYm9hcmQtY29uZmlnLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBIb21lRGFzaGJvYXJkQ29uZmlnQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgY29uZmlnOiBDb2NrcGl0Q29uZmlnO1xuXG4gIC8qKlxuICAgKiBUaGUgdHlwZXMgb2YgZGFzaGJvYXJkIHRoYXQgY2FuIGJlIGNvbmZpZ3VyZWQuXG4gICAqL1xuICByZWFkb25seSBob21lRGFzaGJvYXJkVHlwZXMgPSBIb21lRGFzaGJvYXJkVHlwZTtcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb2NrcGl0Q29uZmlnU2VydmljZTogQ29ja3BpdENvbmZpZ1NlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGRhc2hib2FyZENoYW5nZShzZWxlY3RlZDogYm9vbGVhbiwgdHlwZTogSG9tZURhc2hib2FyZFR5cGUpIHtcbiAgICBpZiAoIXNlbGVjdGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICBjYXNlIHRoaXMuaG9tZURhc2hib2FyZFR5cGVzLkRFRkFVTFQ6IHtcbiAgICAgICAgdGhpcy5jb25maWcuaG9tZURhc2hib2FyZE5hbWUgPSBERUZBVUxUX0hPTUVfREFTSEJPQVJEX05BTUU7XG4gICAgICAgIHRoaXMuY29uZmlnLnVzZXJTcGVjaWZpY0hvbWVEYXNoYm9hcmQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIHRoaXMuaG9tZURhc2hib2FyZFR5cGVzLkFQUDoge1xuICAgICAgICB0aGlzLmNvbmZpZy5ob21lRGFzaGJvYXJkTmFtZSA9IHRoaXMuY29ja3BpdENvbmZpZ1NlcnZpY2UuZ2V0QXBwRGFzaGJvYXJkTmFtZSgpO1xuICAgICAgICB0aGlzLmNvbmZpZy51c2VyU3BlY2lmaWNIb21lRGFzaGJvYXJkID0gZmFsc2U7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSB0aGlzLmhvbWVEYXNoYm9hcmRUeXBlcy5VU0VSOiB7XG4gICAgICAgIHRoaXMuY29uZmlnLmhvbWVEYXNoYm9hcmROYW1lID0gVVNFUl9IT01FX0RBU0hCT0FSRF9OQU1FO1xuICAgICAgICB0aGlzLmNvbmZpZy51c2VyU3BlY2lmaWNIb21lRGFzaGJvYXJkID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIHZlcmlmeVNlbGVjdGVkKHR5cGU6IEhvbWVEYXNoYm9hcmRUeXBlKSB7XG4gICAgaWYgKHR5cGUgPT09IHRoaXMuaG9tZURhc2hib2FyZFR5cGVzLlVTRVIpIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbmZpZy51c2VyU3BlY2lmaWNIb21lRGFzaGJvYXJkO1xuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gdGhpcy5ob21lRGFzaGJvYXJkVHlwZXMuREVGQVVMVCkge1xuICAgICAgcmV0dXJuIHRoaXMuY29uZmlnLmhvbWVEYXNoYm9hcmROYW1lID09PSBERUZBVUxUX0hPTUVfREFTSEJPQVJEX05BTUU7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5ob21lRGFzaGJvYXJkTmFtZSA9PT0gdGhpcy5jb2NrcGl0Q29uZmlnU2VydmljZS5nZXRBcHBEYXNoYm9hcmROYW1lKCk7XG4gIH1cbn1cbiIsIjxjOHktbGlzdC1ncm91cCBjbGFzcz1cInNlcGFyYXRvci10b3BcIj5cbiAgPGM4eS1saSBkYXRhLWN5PVwiaG9tZS1kYXNoYm9hcmQtY29uZmlnLS1kYXNoYm9hcmQtbGlzdFwiPlxuICAgIDxjOHktbGktcmFkaW9cbiAgICAgIChvblNlbGVjdCk9XCJkYXNoYm9hcmRDaGFuZ2UoJGV2ZW50LCBob21lRGFzaGJvYXJkVHlwZXMuREVGQVVMVClcIlxuICAgICAgW3NlbGVjdGVkXT1cInZlcmlmeVNlbGVjdGVkKGhvbWVEYXNoYm9hcmRUeXBlcy5ERUZBVUxUKVwiXG4gICAgPjwvYzh5LWxpLXJhZGlvPlxuICAgIDxwIHRyYW5zbGF0ZT5EZWZhdWx0IGhvbWUgZGFzaGJvYXJkPC9wPlxuICAgIDxzbWFsbCB0cmFuc2xhdGU+Q2hhbmdlcyBkb25lIGluIHRoZSBob21lIGRhc2hib2FyZCBhcmUgcmVmbGVjdGVkIGFjcm9zcyB0aGUgcGxhdGZvcm0uPC9zbWFsbD5cbiAgPC9jOHktbGk+XG4gIDxjOHktbGkgZGF0YS1jeT1cImhvbWUtZGFzaGJvYXJkLWNvbmZpZy0tZGFzaGJvYXJkLWxpc3RcIj5cbiAgICA8Yzh5LWxpLXJhZGlvXG4gICAgICAob25TZWxlY3QpPVwiZGFzaGJvYXJkQ2hhbmdlKCRldmVudCwgaG9tZURhc2hib2FyZFR5cGVzLkFQUClcIlxuICAgICAgW3NlbGVjdGVkXT1cInZlcmlmeVNlbGVjdGVkKGhvbWVEYXNoYm9hcmRUeXBlcy5BUFApXCJcbiAgICA+PC9jOHktbGktcmFkaW8+XG4gICAgPHAgdHJhbnNsYXRlPkN1c3RvbSBob21lIGRhc2hib2FyZDwvcD5cbiAgICA8c21hbGwgdHJhbnNsYXRlPlxuICAgICAgQ2hhbmdlcyBkb25lIHRvIHRoZSBob21lIGRhc2hib2FyZCBhcmUgcmVmbGVjdGVkIG9ubHkgaW4gdGhlIGN1cnJlbnQgYXBwbGljYXRpb24uXG4gICAgPC9zbWFsbD5cbiAgPC9jOHktbGk+XG4gIDxjOHktbGkgZGF0YS1jeT1cImhvbWUtZGFzaGJvYXJkLWNvbmZpZy0tZGFzaGJvYXJkLWxpc3RcIj5cbiAgICA8Yzh5LWxpLXJhZGlvXG4gICAgICAob25TZWxlY3QpPVwiZGFzaGJvYXJkQ2hhbmdlKCRldmVudCwgaG9tZURhc2hib2FyZFR5cGVzLlVTRVIpXCJcbiAgICAgIFtzZWxlY3RlZF09XCJ2ZXJpZnlTZWxlY3RlZChob21lRGFzaGJvYXJkVHlwZXMuVVNFUilcIlxuICAgID48L2M4eS1saS1yYWRpbz5cbiAgICA8cCB0cmFuc2xhdGU+VXNlciBob21lIGRhc2hib2FyZDwvcD5cbiAgICA8c21hbGwgdHJhbnNsYXRlPlxuICAgICAgQ2hhbmdlcyBkb25lIHRvIHRoZSBob21lIGRhc2hib2FyZCBhcmUgcmVmbGVjdGVkIG9ubHkgZm9yIHRoZSBjdXJyZW50IHVzZXIuIE5PVEU6IFRoaXMgdXNlclxuICAgICAgbmVlZHMgdG8gaGF2ZSBpbnZlbnRvcnkgd3JpdGUgcGVybWlzc2lvbi5cbiAgICA8L3NtYWxsPlxuICA8L2M4eS1saT5cbjwvYzh5LWxpc3QtZ3JvdXA+XG4iXX0=