import { Component, Input } from '@angular/core';
import { AuditService } from '@c8y/client';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "../common/forOf.directive";
import * as i3 from "../i18n/c8y-translate.pipe";
import * as i4 from "../common/date.pipe";
/**
 * Audit log component allows to show audits list. Component fetches audit records for the source object given as input.
 *
 * **Example**
 *
 * ```html
 *  <c8y-audit-log [source]="sourceId"></c8y-audit-log>
 * ```
 */
export class AuditLogComponent {
    /**
     * @ignore
     */
    constructor(audit) {
        this.audit = audit;
    }
    /**
     * After page view is initialized, component gets audit records from auditRecords endpoint.
     */
    async ngOnInit() {
        if (this.source) {
            this.records = await this.audit.list({
                withTotalPages: true,
                source: this.source
            });
        }
    }
}
AuditLogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AuditLogComponent, deps: [{ token: i1.AuditService }], target: i0.ɵɵFactoryTarget.Component });
AuditLogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: AuditLogComponent, selector: "c8y-audit-log", inputs: { source: "source" }, ngImport: i0, template: "<div class=\"inner-scroll\">\n  <ul class=\"c8y-list__group c8y-list--timeline m-t-16\">\n    <li class=\"c8y-list--timeline__item\" *c8yFor=\"let record of records\">\n      <small class=\"c8y-list--timeline__item__date\">\n        {{ record.time | c8yDate }}\n      </small>\n      <div class=\"c8y-list__item\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__body text-truncate-wrap\">\n            <div class=\"row\">\n              <div class=\"col-md-5 d-flex a-i-baseline\">\n                <span title=\"{{ record.activity | translate }}\" class=\"text-truncate\">{{ record.activity | translate }}</span>\n                <small class=\"m-l-4 text-muted flex-no-shrink\">{{ record.user }}</small>\n              </div>\n              <div class=\"col-md-7\">\n                <div class=\"small text-truncate-wrap\">{{ record.text | translate }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n", dependencies: [{ kind: "directive", type: i2.ForOfDirective, selector: "[c8yFor]", inputs: ["c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForMaxIterations", "c8yForLoadingTemplate", "c8yForLoadNextLabel", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForComparator", "c8yForEnableVirtualScroll", "c8yForVirtualScrollElementSize", "c8yForVirtualScrollStrategy", "c8yForVirtualScrollContainerHeight"], outputs: ["c8yForCount"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i4.DatePipe, name: "c8yDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: AuditLogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-audit-log', template: "<div class=\"inner-scroll\">\n  <ul class=\"c8y-list__group c8y-list--timeline m-t-16\">\n    <li class=\"c8y-list--timeline__item\" *c8yFor=\"let record of records\">\n      <small class=\"c8y-list--timeline__item__date\">\n        {{ record.time | c8yDate }}\n      </small>\n      <div class=\"c8y-list__item\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__body text-truncate-wrap\">\n            <div class=\"row\">\n              <div class=\"col-md-5 d-flex a-i-baseline\">\n                <span title=\"{{ record.activity | translate }}\" class=\"text-truncate\">{{ record.activity | translate }}</span>\n                <small class=\"m-l-4 text-muted flex-no-shrink\">{{ record.user }}</small>\n              </div>\n              <div class=\"col-md-7\">\n                <div class=\"small text-truncate-wrap\">{{ record.text | translate }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AuditService }]; }, propDecorators: { source: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaXQtbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXVkaXQtbG9nL2F1ZGl0LWxvZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9jb3JlL2F1ZGl0LWxvZy9hdWRpdC1sb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBNkIsTUFBTSxhQUFhLENBQUM7Ozs7OztBQUV0RTs7Ozs7Ozs7R0FRRztBQUtILE1BQU0sT0FBTyxpQkFBaUI7SUFZNUI7O09BRUc7SUFDSCxZQUFvQixLQUFtQjtRQUFuQixVQUFLLEdBQUwsS0FBSyxDQUFjO0lBQUcsQ0FBQztJQUUzQzs7T0FFRztJQUNILEtBQUssQ0FBQyxRQUFRO1FBQ1osSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO2dCQUNuQyxjQUFjLEVBQUUsSUFBSTtnQkFDcEIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2FBQ3BCLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7OEdBM0JVLGlCQUFpQjtrR0FBakIsaUJBQWlCLG1GQ2hCOUIsOC9CQXdCQTsyRkRSYSxpQkFBaUI7a0JBSjdCLFNBQVM7K0JBQ0UsZUFBZTttR0FRekIsTUFBTTtzQkFETCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBdWRpdFNlcnZpY2UsIElBdWRpdFJlY29yZCwgSVJlc3VsdExpc3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbi8qKlxuICogQXVkaXQgbG9nIGNvbXBvbmVudCBhbGxvd3MgdG8gc2hvdyBhdWRpdHMgbGlzdC4gQ29tcG9uZW50IGZldGNoZXMgYXVkaXQgcmVjb3JkcyBmb3IgdGhlIHNvdXJjZSBvYmplY3QgZ2l2ZW4gYXMgaW5wdXQuXG4gKlxuICogKipFeGFtcGxlKipcbiAqXG4gKiBgYGBodG1sXG4gKiAgPGM4eS1hdWRpdC1sb2cgW3NvdXJjZV09XCJzb3VyY2VJZFwiPjwvYzh5LWF1ZGl0LWxvZz5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYXVkaXQtbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2F1ZGl0LWxvZy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQXVkaXRMb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogVGhlIHNvdXJjZSBJRCBmb3Igd2hpY2ggYXVkaXRzIHdpbGwgYmUgc2hvd24gaW4gdGhlIGxpc3QuXG4gICAqL1xuICBASW5wdXQoKVxuICBzb3VyY2U6IHN0cmluZyB8IG51bWJlcjtcblxuICAvKipcbiAgICogQXVkaXQgcmVjb3JkcyByZXRyaWV2ZWQgZnJvbSBhdWRpdFJlY29yZHMgZW5kcG9pbnQuXG4gICAqL1xuICByZWNvcmRzOiBJUmVzdWx0TGlzdDxJQXVkaXRSZWNvcmQ+O1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGF1ZGl0OiBBdWRpdFNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIEFmdGVyIHBhZ2UgdmlldyBpcyBpbml0aWFsaXplZCwgY29tcG9uZW50IGdldHMgYXVkaXQgcmVjb3JkcyBmcm9tIGF1ZGl0UmVjb3JkcyBlbmRwb2ludC5cbiAgICovXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnNvdXJjZSkge1xuICAgICAgdGhpcy5yZWNvcmRzID0gYXdhaXQgdGhpcy5hdWRpdC5saXN0KHtcbiAgICAgICAgd2l0aFRvdGFsUGFnZXM6IHRydWUsXG4gICAgICAgIHNvdXJjZTogdGhpcy5zb3VyY2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImlubmVyLXNjcm9sbFwiPlxuICA8dWwgY2xhc3M9XCJjOHktbGlzdF9fZ3JvdXAgYzh5LWxpc3QtLXRpbWVsaW5lIG0tdC0xNlwiPlxuICAgIDxsaSBjbGFzcz1cImM4eS1saXN0LS10aW1lbGluZV9faXRlbVwiICpjOHlGb3I9XCJsZXQgcmVjb3JkIG9mIHJlY29yZHNcIj5cbiAgICAgIDxzbWFsbCBjbGFzcz1cImM4eS1saXN0LS10aW1lbGluZV9faXRlbV9fZGF0ZVwiPlxuICAgICAgICB7eyByZWNvcmQudGltZSB8IGM4eURhdGUgfX1cbiAgICAgIDwvc21hbGw+XG4gICAgICA8ZGl2IGNsYXNzPVwiYzh5LWxpc3RfX2l0ZW1cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImM4eS1saXN0X19pdGVtX19ibG9ja1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9faXRlbV9fYm9keSB0ZXh0LXRydW5jYXRlLXdyYXBcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC01IGQtZmxleCBhLWktYmFzZWxpbmVcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cInt7IHJlY29yZC5hY3Rpdml0eSB8IHRyYW5zbGF0ZSB9fVwiIGNsYXNzPVwidGV4dC10cnVuY2F0ZVwiPnt7IHJlY29yZC5hY3Rpdml0eSB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJtLWwtNCB0ZXh0LW11dGVkIGZsZXgtbm8tc2hyaW5rXCI+e3sgcmVjb3JkLnVzZXIgfX08L3NtYWxsPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC03XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNtYWxsIHRleHQtdHJ1bmNhdGUtd3JhcFwiPnt7IHJlY29yZC50ZXh0IHwgdHJhbnNsYXRlIH19PC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9saT5cbiAgPC91bD5cbjwvZGl2PlxuIl19