import { Component } from '@angular/core';
import { FieldArrayType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../common/icon.directive";
import * as i3 from "../../i18n/c8y-translate.directive";
import * as i4 from "ngx-bootstrap/popover";
import * as i5 from "ngx-bootstrap/tooltip";
import * as i6 from "@ngx-formly/core";
import * as i7 from "../../i18n/c8y-translate.pipe";
import * as i8 from "../../common/humanize.pipe";
import * as i9 from "./array-type-inject-template.pipe";
export class ArrayTypeComponent extends FieldArrayType {
    add() {
        this.formControl.markAsTouched();
        super.add();
    }
    remove(i) {
        this.formControl.markAsTouched();
        super.remove(i);
    }
    ngOnInit() {
        this.fieldArrayProps =
            typeof this.field?.fieldArray === 'function'
                ? this.field.fieldArray(this.field)
                    ?.props
                : this.field?.fieldArray?.props;
        if (this.props.required && !this.field.fieldGroup.length) {
            this.add();
        }
    }
}
ArrayTypeComponent.CONFIG = {
    types: [{ name: 'array', component: ArrayTypeComponent }]
};
ArrayTypeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ArrayTypeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ArrayTypeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ArrayTypeComponent, selector: "c8y-array-type", usesInheritance: true, ngImport: i0, template: "<div role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <div id=\"{{ id + '-fieldset' }}\" class=\"legend form-block\" *ngIf=\"to.label || to.description\">\n    {{ to.label | humanize }}\n    <button\n      class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n      type=\"button\"\n      [attr.aria-label]=\"'Help' | translate\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      triggers=\"focus\"\n      *ngIf=\"to.description\"\n    ></button>\n  </div>\n\n  <div\n    class=\"form-control-feedback-message has-error\"\n    role=\"alert\"\n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n\n  <div *ngFor=\"let ifield of field.fieldGroup; let i = index\" class=\"input-group-array\">\n    <formly-field [field]=\"ifield | c8yArrayTypeInjectTemplate: customTemplate\"></formly-field>\n    <ng-container\n      *ngIf=\"ifield.type === 'formly-group' || ifield.type === 'array'\"\n      [ngTemplateOutlet]=\"customTemplate\"\n    ></ng-container>\n    <ng-template #customTemplate>\n      <div class=\"input-group-btn delete-row\">\n        <button\n          class=\"btn btn-dot btn-dot--danger flex-item-right\"\n          type=\"button\"\n          [attr.aria-label]=\"'Delete' | translate\"\n          tooltip=\"{{ 'Delete' | translate }}\"\n          [delay]=\"500\"\n          placement=\"right\"\n          [disabled]=\"to.disabled || (field.fieldGroup.length === 1 && to.required)\"\n          (click)=\"remove(i)\"\n        >\n          <i c8yIcon=\"minus-circle\"></i>\n        </button>\n      </div>\n    </ng-template>\n  </div>\n\n  <div class=\"p-t-8\">\n    <button\n      class=\"btn btn-sm btn-default\"\n      type=\"button\"\n      title=\"{{\n        (field.templateOptions?.addText | translate) || 'Add \\{\\{ label \\}\\}'\n          | translate: fieldArrayProps\n      }}\"\n      [disabled]=\"to.disabled\"\n      (click)=\"add()\"\n      [attr.data-cy]=\"field.templateOptions?.addTextDataCy || 'add-array-item'\"\n    >\n      <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n      <span\n        *ngIf=\"!field.templateOptions?.addText\"\n        ngNonBindable\n        translate\n        [translateParams]=\"fieldArrayProps\"\n      >\n        Add {{ label }}\n      </span>\n      <span *ngIf=\"field.templateOptions?.addText\">\n        {{ field.templateOptions?.addText | translate }}\n      </span>\n    </button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i3.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i4.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "directive", type: i5.TooltipDirective, selector: "[tooltip], [tooltipHtml]", inputs: ["adaptivePosition", "tooltip", "placement", "triggers", "container", "containerClass", "boundariesElement", "isOpen", "isDisabled", "delay", "tooltipHtml", "tooltipPlacement", "tooltipIsOpen", "tooltipEnable", "tooltipAppendToBody", "tooltipAnimation", "tooltipClass", "tooltipContext", "tooltipPopupDelay", "tooltipFadeDuration", "tooltipTrigger"], outputs: ["tooltipChange", "onShown", "onHidden", "tooltipStateChanged"], exportAs: ["bs-tooltip"] }, { kind: "component", type: i6.FormlyField, selector: "formly-field", inputs: ["field"] }, { kind: "component", type: i6.ɵFormlyValidationMessage, selector: "formly-validation-message", inputs: ["field"] }, { kind: "pipe", type: i7.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i8.HumanizePipe, name: "humanize" }, { kind: "pipe", type: i9.C8yArrayTypeInjectTemplatePipe, name: "c8yArrayTypeInjectTemplate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ArrayTypeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-array-type', template: "<div role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <div id=\"{{ id + '-fieldset' }}\" class=\"legend form-block\" *ngIf=\"to.label || to.description\">\n    {{ to.label | humanize }}\n    <button\n      class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n      type=\"button\"\n      [attr.aria-label]=\"'Help' | translate\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      triggers=\"focus\"\n      *ngIf=\"to.description\"\n    ></button>\n  </div>\n\n  <div\n    class=\"form-control-feedback-message has-error\"\n    role=\"alert\"\n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n\n  <div *ngFor=\"let ifield of field.fieldGroup; let i = index\" class=\"input-group-array\">\n    <formly-field [field]=\"ifield | c8yArrayTypeInjectTemplate: customTemplate\"></formly-field>\n    <ng-container\n      *ngIf=\"ifield.type === 'formly-group' || ifield.type === 'array'\"\n      [ngTemplateOutlet]=\"customTemplate\"\n    ></ng-container>\n    <ng-template #customTemplate>\n      <div class=\"input-group-btn delete-row\">\n        <button\n          class=\"btn btn-dot btn-dot--danger flex-item-right\"\n          type=\"button\"\n          [attr.aria-label]=\"'Delete' | translate\"\n          tooltip=\"{{ 'Delete' | translate }}\"\n          [delay]=\"500\"\n          placement=\"right\"\n          [disabled]=\"to.disabled || (field.fieldGroup.length === 1 && to.required)\"\n          (click)=\"remove(i)\"\n        >\n          <i c8yIcon=\"minus-circle\"></i>\n        </button>\n      </div>\n    </ng-template>\n  </div>\n\n  <div class=\"p-t-8\">\n    <button\n      class=\"btn btn-sm btn-default\"\n      type=\"button\"\n      title=\"{{\n        (field.templateOptions?.addText | translate) || 'Add \\{\\{ label \\}\\}'\n          | translate: fieldArrayProps\n      }}\"\n      [disabled]=\"to.disabled\"\n      (click)=\"add()\"\n      [attr.data-cy]=\"field.templateOptions?.addTextDataCy || 'add-array-item'\"\n    >\n      <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i>\n      <span\n        *ngIf=\"!field.templateOptions?.addText\"\n        ngNonBindable\n        translate\n        [translateParams]=\"fieldArrayProps\"\n      >\n        Add {{ label }}\n      </span>\n      <span *ngIf=\"field.templateOptions?.addText\">\n        {{ field.templateOptions?.addText | translate }}\n      </span>\n    </button>\n  </div>\n</div>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvYXJyYXkvYXJyYXkudHlwZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvYXJyYXkvYXJyYXkudHlwZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFFTCxjQUFjLEVBR2YsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7Ozs7QUFNMUIsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7SUFPcEQsR0FBRztRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDakMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUVELE1BQU0sQ0FBQyxDQUFTO1FBQ2QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNqQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGVBQWU7WUFDbEIsT0FBTyxJQUFJLENBQUMsS0FBSyxFQUFFLFVBQVUsS0FBSyxVQUFVO2dCQUMxQyxDQUFDLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUE4RCxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7b0JBQ3BGLEVBQUUsS0FBSztnQkFDWCxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsS0FBSyxDQUFDO1FBQ3BDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUU7WUFDeEQsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ1o7SUFDSCxDQUFDOztBQXpCZSx5QkFBTSxHQUFpQjtJQUNyQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLENBQUM7Q0FDMUQsQ0FBQzsrR0FIUyxrQkFBa0I7bUdBQWxCLGtCQUFrQiw2RUNaL0IsMjdFQXlFQTsyRkQ3RGEsa0JBQWtCO2tCQUo5QixTQUFTOytCQUNFLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb25maWdPcHRpb24sXG4gIEZpZWxkQXJyYXlUeXBlLFxuICBGb3JtbHlGaWVsZENvbmZpZyxcbiAgRm9ybWx5RmllbGRQcm9wc1xufSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFycmF5LXR5cGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vYXJyYXkudHlwZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQXJyYXlUeXBlQ29tcG9uZW50IGV4dGVuZHMgRmllbGRBcnJheVR5cGUgaW1wbGVtZW50cyBPbkluaXQge1xuICBzdGF0aWMgcmVhZG9ubHkgQ09ORklHOiBDb25maWdPcHRpb24gPSB7XG4gICAgdHlwZXM6IFt7IG5hbWU6ICdhcnJheScsIGNvbXBvbmVudDogQXJyYXlUeXBlQ29tcG9uZW50IH1dXG4gIH07XG5cbiAgZmllbGRBcnJheVByb3BzOiBGb3JtbHlGaWVsZFByb3BzO1xuXG4gIGFkZCgpIHtcbiAgICB0aGlzLmZvcm1Db250cm9sLm1hcmtBc1RvdWNoZWQoKTtcbiAgICBzdXBlci5hZGQoKTtcbiAgfVxuXG4gIHJlbW92ZShpOiBudW1iZXIpIHtcbiAgICB0aGlzLmZvcm1Db250cm9sLm1hcmtBc1RvdWNoZWQoKTtcbiAgICBzdXBlci5yZW1vdmUoaSk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmZpZWxkQXJyYXlQcm9wcyA9XG4gICAgICB0eXBlb2YgdGhpcy5maWVsZD8uZmllbGRBcnJheSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/ICh0aGlzLmZpZWxkLmZpZWxkQXJyYXkgYXMgKGZpZWxkOiBGb3JtbHlGaWVsZENvbmZpZykgPT4gRm9ybWx5RmllbGRDb25maWcpKHRoaXMuZmllbGQpXG4gICAgICAgICAgICA/LnByb3BzXG4gICAgICAgIDogdGhpcy5maWVsZD8uZmllbGRBcnJheT8ucHJvcHM7XG4gICAgaWYgKHRoaXMucHJvcHMucmVxdWlyZWQgJiYgIXRoaXMuZmllbGQuZmllbGRHcm91cC5sZW5ndGgpIHtcbiAgICAgIHRoaXMuYWRkKCk7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IHJvbGU9XCJncm91cFwiIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJpZCArICctZmllbGRzZXQnXCI+XG4gIDxkaXYgaWQ9XCJ7eyBpZCArICctZmllbGRzZXQnIH19XCIgY2xhc3M9XCJsZWdlbmQgZm9ybS1ibG9ja1wiICpuZ0lmPVwidG8ubGFiZWwgfHwgdG8uZGVzY3JpcHRpb25cIj5cbiAgICB7eyB0by5sYWJlbCB8IGh1bWFuaXplIH19XG4gICAgPGJ1dHRvblxuICAgICAgY2xhc3M9XCJidG4taGVscCBidG4taGVscC0tc20gbS10LWF1dG8gbS1iLWF1dG9cIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidIZWxwJyB8IHRyYW5zbGF0ZVwiXG4gICAgICBbcG9wb3Zlcl09XCJ0by5kZXNjcmlwdGlvblwiXG4gICAgICBwbGFjZW1lbnQ9XCJyaWdodFwiXG4gICAgICB0cmlnZ2Vycz1cImZvY3VzXCJcbiAgICAgICpuZ0lmPVwidG8uZGVzY3JpcHRpb25cIlxuICAgID48L2J1dHRvbj5cbiAgPC9kaXY+XG5cbiAgPGRpdlxuICAgIGNsYXNzPVwiZm9ybS1jb250cm9sLWZlZWRiYWNrLW1lc3NhZ2UgaGFzLWVycm9yXCJcbiAgICByb2xlPVwiYWxlcnRcIlxuICAgICpuZ0lmPVwic2hvd0Vycm9yICYmIGZvcm1Db250cm9sLmVycm9yc1wiXG4gID5cbiAgICA8Zm9ybWx5LXZhbGlkYXRpb24tbWVzc2FnZSBbZmllbGRdPVwiZmllbGRcIj48L2Zvcm1seS12YWxpZGF0aW9uLW1lc3NhZ2U+XG4gIDwvZGl2PlxuXG4gIDxkaXYgKm5nRm9yPVwibGV0IGlmaWVsZCBvZiBmaWVsZC5maWVsZEdyb3VwOyBsZXQgaSA9IGluZGV4XCIgY2xhc3M9XCJpbnB1dC1ncm91cC1hcnJheVwiPlxuICAgIDxmb3JtbHktZmllbGQgW2ZpZWxkXT1cImlmaWVsZCB8IGM4eUFycmF5VHlwZUluamVjdFRlbXBsYXRlOiBjdXN0b21UZW1wbGF0ZVwiPjwvZm9ybWx5LWZpZWxkPlxuICAgIDxuZy1jb250YWluZXJcbiAgICAgICpuZ0lmPVwiaWZpZWxkLnR5cGUgPT09ICdmb3JtbHktZ3JvdXAnIHx8IGlmaWVsZC50eXBlID09PSAnYXJyYXknXCJcbiAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cImN1c3RvbVRlbXBsYXRlXCJcbiAgICA+PC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNjdXN0b21UZW1wbGF0ZT5cbiAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1idG4gZGVsZXRlLXJvd1wiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgY2xhc3M9XCJidG4gYnRuLWRvdCBidG4tZG90LS1kYW5nZXIgZmxleC1pdGVtLXJpZ2h0XCJcbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidEZWxldGUnIHwgdHJhbnNsYXRlXCJcbiAgICAgICAgICB0b29sdGlwPVwie3sgJ0RlbGV0ZScgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgICAgIFtkZWxheV09XCI1MDBcIlxuICAgICAgICAgIHBsYWNlbWVudD1cInJpZ2h0XCJcbiAgICAgICAgICBbZGlzYWJsZWRdPVwidG8uZGlzYWJsZWQgfHwgKGZpZWxkLmZpZWxkR3JvdXAubGVuZ3RoID09PSAxICYmIHRvLnJlcXVpcmVkKVwiXG4gICAgICAgICAgKGNsaWNrKT1cInJlbW92ZShpKVwiXG4gICAgICAgID5cbiAgICAgICAgICA8aSBjOHlJY29uPVwibWludXMtY2lyY2xlXCI+PC9pPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJwLXQtOFwiPlxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tZGVmYXVsdFwiXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIHRpdGxlPVwie3tcbiAgICAgICAgKGZpZWxkLnRlbXBsYXRlT3B0aW9ucz8uYWRkVGV4dCB8IHRyYW5zbGF0ZSkgfHwgJ0FkZCBcXHtcXHsgbGFiZWwgXFx9XFx9J1xuICAgICAgICAgIHwgdHJhbnNsYXRlOiBmaWVsZEFycmF5UHJvcHNcbiAgICAgIH19XCJcbiAgICAgIFtkaXNhYmxlZF09XCJ0by5kaXNhYmxlZFwiXG4gICAgICAoY2xpY2spPVwiYWRkKClcIlxuICAgICAgW2F0dHIuZGF0YS1jeV09XCJmaWVsZC50ZW1wbGF0ZU9wdGlvbnM/LmFkZFRleHREYXRhQ3kgfHwgJ2FkZC1hcnJheS1pdGVtJ1wiXG4gICAgPlxuICAgICAgPGkgYzh5SWNvbj1cInBsdXMtY2lyY2xlXCIgY2xhc3M9XCJtLXItNFwiPjwvaT5cbiAgICAgIDxzcGFuXG4gICAgICAgICpuZ0lmPVwiIWZpZWxkLnRlbXBsYXRlT3B0aW9ucz8uYWRkVGV4dFwiXG4gICAgICAgIG5nTm9uQmluZGFibGVcbiAgICAgICAgdHJhbnNsYXRlXG4gICAgICAgIFt0cmFuc2xhdGVQYXJhbXNdPVwiZmllbGRBcnJheVByb3BzXCJcbiAgICAgID5cbiAgICAgICAgQWRkIHt7IGxhYmVsIH19XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhbiAqbmdJZj1cImZpZWxkLnRlbXBsYXRlT3B0aW9ucz8uYWRkVGV4dFwiPlxuICAgICAgICB7eyBmaWVsZC50ZW1wbGF0ZU9wdGlvbnM/LmFkZFRleHQgfCB0cmFuc2xhdGUgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==