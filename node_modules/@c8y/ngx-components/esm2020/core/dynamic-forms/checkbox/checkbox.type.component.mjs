import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../i18n/c8y-translate.directive";
import * as i3 from "ngx-bootstrap/popover";
import * as i4 from "@angular/forms";
import * as i5 from "@ngx-formly/core";
import * as i6 from "../../i18n/c8y-translate.pipe";
import * as i7 from "../../common/humanize.pipe";
export class FieldCheckbox extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                indeterminate: true,
                formCheck: 'custom' // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'
            }
        };
    }
}
FieldCheckbox.CONFIG = {
    types: [
        {
            name: 'checkbox',
            component: FieldCheckbox
        },
        {
            name: 'boolean',
            extends: 'checkbox'
        },
        {
            name: 'switch',
            extends: 'checkbox',
            defaultOptions: {
                templateOptions: {
                    switchMode: false,
                    indeterminate: false
                }
            }
        }
    ]
};
FieldCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FieldCheckbox, deps: null, target: i0.ɵɵFactoryTarget.Component });
FieldCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: FieldCheckbox, selector: "c8y-field-checkbox", usesInheritance: true, ngImport: i0, template: "<label\n  [class.c8y-checkbox]=\"!to.switchMode\"\n  [class.c8y-switch]=\"to.switchMode\"\n  [class.has-error]=\"showError\"\n>\n  <input\n    type=\"checkbox\"\n    [class.is-invalid]=\"showError\"\n    [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n    [class.position-static]=\"to.formCheck === 'nolabel'\"\n    [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n    [indeterminate]=\"to.indeterminate && formControl.value == null\"\n    [formControl]=\"formControl\"\n    [formlyAttributes]=\"field\"\n    [attr.data-cy]=\"'c8y-field-checkbox--' + (field.templateOptions?.optionDataCy || to.label)\"\n  />\n  <span></span>\n  <span class=\"text-truncate\" title=\"{{ to.label | humanize }}\">{{ to.label | humanize }}</span>\n  <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">\n    <em class=\"m-l-4\" translate>(required)</em>\n  </span>\n  <button\n    class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n    type=\"button\"\n    [attr.aria-label]=\"'Help' | translate\"\n    [popover]=\"to.description\"\n    triggers=\"focus\"\n    placement=\"right\"\n    *ngIf=\"!!to.description\"\n  ></button>\n</label>\n", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i3.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "directive", type: i4.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }, { kind: "pipe", type: i6.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i7.HumanizePipe, name: "humanize" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FieldCheckbox, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-field-checkbox', changeDetection: ChangeDetectionStrategy.OnPush, template: "<label\n  [class.c8y-checkbox]=\"!to.switchMode\"\n  [class.c8y-switch]=\"to.switchMode\"\n  [class.has-error]=\"showError\"\n>\n  <input\n    type=\"checkbox\"\n    [class.is-invalid]=\"showError\"\n    [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n    [class.position-static]=\"to.formCheck === 'nolabel'\"\n    [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n    [indeterminate]=\"to.indeterminate && formControl.value == null\"\n    [formControl]=\"formControl\"\n    [formlyAttributes]=\"field\"\n    [attr.data-cy]=\"'c8y-field-checkbox--' + (field.templateOptions?.optionDataCy || to.label)\"\n  />\n  <span></span>\n  <span class=\"text-truncate\" title=\"{{ to.label | humanize }}\">{{ to.label | humanize }}</span>\n  <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">\n    <em class=\"m-l-4\" translate>(required)</em>\n  </span>\n  <button\n    class=\"btn-help btn-help--sm m-t-auto m-b-auto\"\n    type=\"button\"\n    [attr.aria-label]=\"'Help' | translate\"\n    [popover]=\"to.description\"\n    triggers=\"focus\"\n    placement=\"right\"\n    *ngIf=\"!!to.description\"\n  ></button>\n</label>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvY2hlY2tib3gvY2hlY2tib3gudHlwZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvY2hlY2tib3gvY2hlY2tib3gudHlwZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBZ0IsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7OztBQU8zRCxNQUFNLE9BQU8sYUFBYyxTQUFRLFNBQVM7SUFMNUM7O1FBNkJFLG1CQUFjLEdBQUc7WUFDZixlQUFlLEVBQUU7Z0JBQ2YsYUFBYSxFQUFFLElBQUk7Z0JBQ25CLFNBQVMsRUFBRSxRQUFRLENBQUMsa0ZBQWtGO2FBQ3ZHO1NBQ0YsQ0FBQztLQUNIOztBQTdCaUIsb0JBQU0sR0FBaUI7SUFDckMsS0FBSyxFQUFFO1FBQ0w7WUFDRSxJQUFJLEVBQUUsVUFBVTtZQUNoQixTQUFTLEVBQUUsYUFBYTtTQUN6QjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFNBQVM7WUFDZixPQUFPLEVBQUUsVUFBVTtTQUNwQjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFFBQVE7WUFDZCxPQUFPLEVBQUUsVUFBVTtZQUNuQixjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLFVBQVUsRUFBRSxLQUFLO29CQUNqQixhQUFhLEVBQUUsS0FBSztpQkFDckI7YUFDRjtTQUNGO0tBQ0Y7Q0FDRixDQUFDOzBHQXRCUyxhQUFhOzhGQUFiLGFBQWEsaUZDUjFCLHFwQ0ErQkE7MkZEdkJhLGFBQWE7a0JBTHpCLFNBQVM7K0JBQ0Usb0JBQW9CLG1CQUViLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWdPcHRpb24sIEZpZWxkVHlwZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZmllbGQtY2hlY2tib3gnLFxuICB0ZW1wbGF0ZVVybDogJy4vY2hlY2tib3gudHlwZS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIEZpZWxkQ2hlY2tib3ggZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBzdGF0aWMgcmVhZG9ubHkgQ09ORklHOiBDb25maWdPcHRpb24gPSB7XG4gICAgdHlwZXM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ2NoZWNrYm94JyxcbiAgICAgICAgY29tcG9uZW50OiBGaWVsZENoZWNrYm94XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnYm9vbGVhbicsXG4gICAgICAgIGV4dGVuZHM6ICdjaGVja2JveCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdzd2l0Y2gnLFxuICAgICAgICBleHRlbmRzOiAnY2hlY2tib3gnLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgICAgc3dpdGNoTW9kZTogZmFsc2UsXG4gICAgICAgICAgICBpbmRldGVybWluYXRlOiBmYWxzZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWUsXG4gICAgICBmb3JtQ2hlY2s6ICdjdXN0b20nIC8vICdjdXN0b20nIHwgJ2N1c3RvbS1pbmxpbmUnIHwgJ2N1c3RvbS1zd2l0Y2gnIHwgJ3N0YWNrZWQnIHwgJ2lubGluZScgfCAnbm9sYWJlbCdcbiAgICB9XG4gIH07XG59XG4iLCI8bGFiZWxcbiAgW2NsYXNzLmM4eS1jaGVja2JveF09XCIhdG8uc3dpdGNoTW9kZVwiXG4gIFtjbGFzcy5jOHktc3dpdGNoXT1cInRvLnN3aXRjaE1vZGVcIlxuICBbY2xhc3MuaGFzLWVycm9yXT1cInNob3dFcnJvclwiXG4+XG4gIDxpbnB1dFxuICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgW2NsYXNzLmlzLWludmFsaWRdPVwic2hvd0Vycm9yXCJcbiAgICBbY2xhc3MuZm9ybS1jaGVjay1pbnB1dF09XCJ0by5mb3JtQ2hlY2suaW5kZXhPZignY3VzdG9tJykgPT09IC0xXCJcbiAgICBbY2xhc3MucG9zaXRpb24tc3RhdGljXT1cInRvLmZvcm1DaGVjayA9PT0gJ25vbGFiZWwnXCJcbiAgICBbY2xhc3MuY3VzdG9tLWNvbnRyb2wtaW5wdXRdPVwidG8uZm9ybUNoZWNrLmluZGV4T2YoJ2N1c3RvbScpID09PSAwXCJcbiAgICBbaW5kZXRlcm1pbmF0ZV09XCJ0by5pbmRldGVybWluYXRlICYmIGZvcm1Db250cm9sLnZhbHVlID09IG51bGxcIlxuICAgIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG4gICAgW2Zvcm1seUF0dHJpYnV0ZXNdPVwiZmllbGRcIlxuICAgIFthdHRyLmRhdGEtY3ldPVwiJ2M4eS1maWVsZC1jaGVja2JveC0tJyArIChmaWVsZC50ZW1wbGF0ZU9wdGlvbnM/Lm9wdGlvbkRhdGFDeSB8fCB0by5sYWJlbClcIlxuICAvPlxuICA8c3Bhbj48L3NwYW4+XG4gIDxzcGFuIGNsYXNzPVwidGV4dC10cnVuY2F0ZVwiIHRpdGxlPVwie3sgdG8ubGFiZWwgfCBodW1hbml6ZSB9fVwiPnt7IHRvLmxhYmVsIHwgaHVtYW5pemUgfX08L3NwYW4+XG4gIDxzcGFuICpuZ0lmPVwidG8ucmVxdWlyZWQgJiYgdG8uaGlkZVJlcXVpcmVkTWFya2VyICE9PSB0cnVlXCI+XG4gICAgPGVtIGNsYXNzPVwibS1sLTRcIiB0cmFuc2xhdGU+KHJlcXVpcmVkKTwvZW0+XG4gIDwvc3Bhbj5cbiAgPGJ1dHRvblxuICAgIGNsYXNzPVwiYnRuLWhlbHAgYnRuLWhlbHAtLXNtIG0tdC1hdXRvIG0tYi1hdXRvXCJcbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidIZWxwJyB8IHRyYW5zbGF0ZVwiXG4gICAgW3BvcG92ZXJdPVwidG8uZGVzY3JpcHRpb25cIlxuICAgIHRyaWdnZXJzPVwiZm9jdXNcIlxuICAgIHBsYWNlbWVudD1cInJpZ2h0XCJcbiAgICAqbmdJZj1cIiEhdG8uZGVzY3JpcHRpb25cIlxuICA+PC9idXR0b24+XG48L2xhYmVsPlxuIl19