import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule as C8YCommonModule } from '../common/common.module';
import { DropAreaModule } from '../drop-area/drop-area.module';
import { FormsModule } from '../forms/index';
import { ListGroupModule } from '../list-group/list-group.module';
import { SearchModule } from '../search/search.module';
import { SelectModule } from '../select/select.module';
import { C8yTranslateModule } from '../i18n/c8y-translate.module';
import { ArrayTypeComponent } from './array/array.type.component';
import { FieldCheckbox } from './checkbox/checkbox.type.component';
import { FieldDate } from './date/date.type.component';
import { FieldFile } from './file/file.type.component';
import { WrapperFormField } from './form-field/form-field.wrapper.component';
import { FieldInput } from './input/input.type.component';
import { ObjectTypeComponent } from './object/object.type.component';
import { FieldRadio } from './radio/radio.type.component';
import { FieldDateTime } from './date-time/date-time.type.component';
import { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';
import { TypeaheadTypeComponent } from './typeahead/typeahead.type.component';
import { SelectComponent } from './select/select.type.component';
import { C8yArrayTypeInjectTemplatePipe } from './array/array-type-inject-template.pipe';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/tooltip";
export const FIELD_TYPES = [
    FieldCheckbox,
    ArrayTypeComponent,
    WrapperFormField,
    FieldFile,
    FieldInput,
    FieldRadio,
    ObjectTypeComponent,
    FieldDate,
    FieldDateTime,
    TypeaheadTypeComponent,
    SelectComponent
];
export function fieldTypeFactory() {
    // tslint:disable-next-line:no-string-literal
    return FIELD_TYPES.map(type => type['CONFIG']).reduce((formlyConfig, typeConfig) => ({
        ...formlyConfig,
        types: [...formlyConfig.types, ...(typeConfig.types || [])],
        wrappers: [...formlyConfig.wrappers, ...(typeConfig.wrappers || [])]
    }), { types: [], wrappers: [] });
}
/**
 * This module declares field type components for dynamic forms that match C8Y styleguide.
 *
 * @dynamic
 */
export class DynamicFormsUIThemeModule {
}
DynamicFormsUIThemeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DynamicFormsUIThemeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DynamicFormsUIThemeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DynamicFormsUIThemeModule, declarations: [FieldCheckbox,
        ArrayTypeComponent,
        WrapperFormField,
        FieldFile,
        FieldInput,
        FieldRadio,
        ObjectTypeComponent,
        FieldDate,
        FieldDateTime,
        TypeaheadTypeComponent,
        SelectComponent, C8yArrayTypeInjectTemplatePipe], imports: [CommonModule,
        C8YCommonModule,
        PopoverModule, i1.TooltipModule, ReactiveFormsModule,
        C8yTranslateModule,
        DropAreaModule,
        FormsModule,
        FormlyModule,
        FormlySelectModule,
        DateTimePickerModule,
        SelectModule,
        ListGroupModule,
        SearchModule,
        BsDatepickerModule] });
DynamicFormsUIThemeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DynamicFormsUIThemeModule, providers: [
        {
            provide: FORMLY_CONFIG,
            useFactory: fieldTypeFactory,
            multi: true
        }
    ], imports: [CommonModule,
        C8YCommonModule,
        PopoverModule,
        TooltipModule.forRoot(),
        ReactiveFormsModule,
        C8yTranslateModule,
        DropAreaModule,
        FormsModule,
        FormlyModule,
        FormlySelectModule,
        DateTimePickerModule,
        SelectModule,
        ListGroupModule,
        SearchModule,
        BsDatepickerModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DynamicFormsUIThemeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...FIELD_TYPES, C8yArrayTypeInjectTemplatePipe],
                    entryComponents: [...FIELD_TYPES],
                    imports: [
                        CommonModule,
                        C8YCommonModule,
                        PopoverModule,
                        TooltipModule.forRoot(),
                        ReactiveFormsModule,
                        C8yTranslateModule,
                        DropAreaModule,
                        FormsModule,
                        FormlyModule,
                        FormlySelectModule,
                        DateTimePickerModule,
                        SelectModule,
                        ListGroupModule,
                        SearchModule,
                        BsDatepickerModule
                    ],
                    providers: [
                        {
                            provide: FORMLY_CONFIG,
                            useFactory: fieldTypeFactory,
                            multi: true
                        }
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,