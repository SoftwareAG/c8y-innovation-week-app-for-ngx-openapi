import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import { get } from 'lodash';
import { DropAreaComponent } from '../../drop-area';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "ngx-bootstrap/popover";
import * as i3 from "@angular/forms";
import * as i4 from "../../drop-area/drop-area.component";
import * as i5 from "../../i18n/c8y-translate.pipe";
import * as i6 from "../../common/humanize.pipe";
export class FieldFile extends FieldType {
    constructor() {
        super(...arguments);
        this.dropAreaInputs = [
            'title',
            'message',
            'icon',
            'loadingMessage',
            'alwaysShow',
            'clickToOpen',
            'loading',
            'progress',
            'maxAllowedFiles',
            'files',
            'accept',
            'maxFileSizeInMegaBytes'
        ];
    }
    ngOnInit() {
        const keys = Array.isArray(this.key) ? this.key : [this.key];
        const path = keys.join('.');
        this.dropArea.files = get(this.model, path);
        this.dropAreaInputs
            .filter(input => this.to[input] !== undefined)
            .forEach(input => (this.dropArea[input] = this.to[input]));
    }
}
FieldFile.CONFIG = {
    types: [
        {
            name: 'file',
            component: FieldFile
        }
    ]
};
FieldFile.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FieldFile, deps: null, target: i0.ɵɵFactoryTarget.Component });
FieldFile.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: FieldFile, selector: "c8y-field-file", viewQueries: [{ propertyName: "dropArea", first: true, predicate: ["dropArea"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"form-group\" role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <label id=\"{{ id + '-fieldset' }}\" *ngIf=\"to.label || to.description\">\n    {{ to.label | humanize }}\n    <button\n      class=\"btn-help btn-help--sm\"\n      type=\"button\"\n      [attr.aria-label]=\"'Help' | translate\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      triggers=\"focus\"\n      *ngIf=\"to.description\"\n    ></button>\n  </label>\n\n  <c8y-drop-area #dropArea class=\"drop-area-sm\" [formControl]=\"formControl\"></c8y-drop-area>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i4.DropAreaComponent, selector: "c8y-drop-area", inputs: ["formControl", "title", "message", "icon", "loadingMessage", "forceHideList", "alwaysShow", "clickToOpen", "loading", "progress", "maxAllowedFiles", "files", "maxFileSizeInMegaBytes", "accept"], outputs: ["dropped"] }, { kind: "pipe", type: i5.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i6.HumanizePipe, name: "humanize" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FieldFile, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-field-file', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"form-group\" role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <label id=\"{{ id + '-fieldset' }}\" *ngIf=\"to.label || to.description\">\n    {{ to.label | humanize }}\n    <button\n      class=\"btn-help btn-help--sm\"\n      type=\"button\"\n      [attr.aria-label]=\"'Help' | translate\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      triggers=\"focus\"\n      *ngIf=\"to.description\"\n    ></button>\n  </label>\n\n  <c8y-drop-area #dropArea class=\"drop-area-sm\" [formControl]=\"formControl\"></c8y-drop-area>\n</div>\n" }]
        }], propDecorators: { dropArea: [{
                type: ViewChild,
                args: ['dropArea', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS50eXBlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9maWxlL2ZpbGUudHlwZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvZmlsZS9maWxlLnR5cGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFnQixTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7OztBQU9wRCxNQUFNLE9BQU8sU0FBVSxTQUFRLFNBQVM7SUFMeEM7O1FBZVcsbUJBQWMsR0FBYTtZQUNsQyxPQUFPO1lBQ1AsU0FBUztZQUNULE1BQU07WUFDTixnQkFBZ0I7WUFDaEIsWUFBWTtZQUNaLGFBQWE7WUFDYixTQUFTO1lBQ1QsVUFBVTtZQUNWLGlCQUFpQjtZQUNqQixPQUFPO1lBQ1AsUUFBUTtZQUNSLHdCQUF3QjtTQUN6QixDQUFDO0tBYUg7SUFUQyxRQUFRO1FBQ04sTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFNUMsSUFBSSxDQUFDLGNBQWM7YUFDaEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxTQUFTLENBQUM7YUFDN0MsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9ELENBQUM7O0FBbENlLGdCQUFNLEdBQWlCO0lBQ3JDLEtBQUssRUFBRTtRQUNMO1lBQ0UsSUFBSSxFQUFFLE1BQU07WUFDWixTQUFTLEVBQUUsU0FBUztTQUNyQjtLQUNGO0NBQ0YsQ0FBQztzR0FSUyxTQUFTOzBGQUFULFNBQVMsaU1DVnRCLGtrQkFnQkE7MkZETmEsU0FBUztrQkFMckIsU0FBUzsrQkFDRSxnQkFBZ0IsbUJBRVQsdUJBQXVCLENBQUMsTUFBTTs4QkEyQk4sUUFBUTtzQkFBaEQsU0FBUzt1QkFBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ09wdGlvbiwgRmllbGRUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgRHJvcEFyZWFDb21wb25lbnQgfSBmcm9tICcuLi8uLi9kcm9wLWFyZWEnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZmllbGQtZmlsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9maWxlLnR5cGUuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBGaWVsZEZpbGUgZXh0ZW5kcyBGaWVsZFR5cGUgaW1wbGVtZW50cyBPbkluaXQge1xuICBzdGF0aWMgcmVhZG9ubHkgQ09ORklHOiBDb25maWdPcHRpb24gPSB7XG4gICAgdHlwZXM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ2ZpbGUnLFxuICAgICAgICBjb21wb25lbnQ6IEZpZWxkRmlsZVxuICAgICAgfVxuICAgIF1cbiAgfTtcblxuICByZWFkb25seSBkcm9wQXJlYUlucHV0czogc3RyaW5nW10gPSBbXG4gICAgJ3RpdGxlJyxcbiAgICAnbWVzc2FnZScsXG4gICAgJ2ljb24nLFxuICAgICdsb2FkaW5nTWVzc2FnZScsXG4gICAgJ2Fsd2F5c1Nob3cnLFxuICAgICdjbGlja1RvT3BlbicsXG4gICAgJ2xvYWRpbmcnLFxuICAgICdwcm9ncmVzcycsXG4gICAgJ21heEFsbG93ZWRGaWxlcycsXG4gICAgJ2ZpbGVzJyxcbiAgICAnYWNjZXB0JyxcbiAgICAnbWF4RmlsZVNpemVJbk1lZ2FCeXRlcydcbiAgXTtcblxuICBAVmlld0NoaWxkKCdkcm9wQXJlYScsIHsgc3RhdGljOiB0cnVlIH0pIGRyb3BBcmVhOiBEcm9wQXJlYUNvbXBvbmVudDtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBrZXlzID0gQXJyYXkuaXNBcnJheSh0aGlzLmtleSkgPyB0aGlzLmtleSA6IFt0aGlzLmtleV07XG4gICAgY29uc3QgcGF0aCA9IGtleXMuam9pbignLicpO1xuICAgIHRoaXMuZHJvcEFyZWEuZmlsZXMgPSBnZXQodGhpcy5tb2RlbCwgcGF0aCk7XG5cbiAgICB0aGlzLmRyb3BBcmVhSW5wdXRzXG4gICAgICAuZmlsdGVyKGlucHV0ID0+IHRoaXMudG9baW5wdXRdICE9PSB1bmRlZmluZWQpXG4gICAgICAuZm9yRWFjaChpbnB1dCA9PiAodGhpcy5kcm9wQXJlYVtpbnB1dF0gPSB0aGlzLnRvW2lucHV0XSkpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiIHJvbGU9XCJncm91cFwiIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJpZCArICctZmllbGRzZXQnXCI+XG4gIDxsYWJlbCBpZD1cInt7IGlkICsgJy1maWVsZHNldCcgfX1cIiAqbmdJZj1cInRvLmxhYmVsIHx8IHRvLmRlc2NyaXB0aW9uXCI+XG4gICAge3sgdG8ubGFiZWwgfCBodW1hbml6ZSB9fVxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzPVwiYnRuLWhlbHAgYnRuLWhlbHAtLXNtXCJcbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCInSGVscCcgfCB0cmFuc2xhdGVcIlxuICAgICAgW3BvcG92ZXJdPVwidG8uZGVzY3JpcHRpb25cIlxuICAgICAgcGxhY2VtZW50PVwicmlnaHRcIlxuICAgICAgdHJpZ2dlcnM9XCJmb2N1c1wiXG4gICAgICAqbmdJZj1cInRvLmRlc2NyaXB0aW9uXCJcbiAgICA+PC9idXR0b24+XG4gIDwvbGFiZWw+XG5cbiAgPGM4eS1kcm9wLWFyZWEgI2Ryb3BBcmVhIGNsYXNzPVwiZHJvcC1hcmVhLXNtXCIgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCI+PC9jOHktZHJvcC1hcmVhPlxuPC9kaXY+XG4iXX0=