import { Injectable } from '@angular/core';
import { NavigatorOutletComponent } from './navigator-outlet.component';
import { map } from 'rxjs/operators';
import { NavigatorService } from './navigator.service';
import * as i0 from "@angular/core";
import * as i1 from "./navigator.service";
export class NavigatorDrawerFactory {
    constructor(navigatorService) {
        this.navigatorService = navigatorService;
        this.drawerItem = {
            component: NavigatorOutletComponent,
            position: 'left',
            priority: 50,
            id: 'navigatorOutlet'
        };
    }
    get() {
        return this.navigatorService.hasItemsInNavigator$.pipe(map(tmp => (tmp ? this.drawerItem : [])));
    }
}
NavigatorDrawerFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorDrawerFactory, deps: [{ token: i1.NavigatorService }], target: i0.ɵɵFactoryTarget.Injectable });
NavigatorDrawerFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorDrawerFactory });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorDrawerFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.NavigatorService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdG9yLWRyYXdlci5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9uYXZpZ2F0b3IvbmF2aWdhdG9yLWRyYXdlci5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFeEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7QUFHdkQsTUFBTSxPQUFPLHNCQUFzQjtJQVFqQyxZQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQVA1QyxlQUFVLEdBQWU7WUFDakMsU0FBUyxFQUFFLHdCQUF3QjtZQUNuQyxRQUFRLEVBQUUsTUFBTTtZQUNoQixRQUFRLEVBQUUsRUFBRTtZQUNaLEVBQUUsRUFBRSxpQkFBaUI7U0FDdEIsQ0FBQztJQUV1RCxDQUFDO0lBRTFELEdBQUc7UUFDRCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQ3BELEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUN6QyxDQUFDO0lBQ0osQ0FBQzs7bUhBZFUsc0JBQXNCO3VIQUF0QixzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFEbEMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4dGVuc2lvbkZhY3RvcnkgfSBmcm9tICcuLi9jb21tb24nO1xuaW1wb3J0IHsgRHJhd2VySXRlbSB9IGZyb20gJy4uL2RyYXdlcic7XG5pbXBvcnQgeyBOYXZpZ2F0b3JPdXRsZXRDb21wb25lbnQgfSBmcm9tICcuL25hdmlnYXRvci1vdXRsZXQuY29tcG9uZW50JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IE5hdmlnYXRvclNlcnZpY2UgfSBmcm9tICcuL25hdmlnYXRvci5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRvckRyYXdlckZhY3RvcnkgaW1wbGVtZW50cyBFeHRlbnNpb25GYWN0b3J5PERyYXdlckl0ZW0+IHtcbiAgcHJvdGVjdGVkIGRyYXdlckl0ZW06IERyYXdlckl0ZW0gPSB7XG4gICAgY29tcG9uZW50OiBOYXZpZ2F0b3JPdXRsZXRDb21wb25lbnQsXG4gICAgcG9zaXRpb246ICdsZWZ0JyxcbiAgICBwcmlvcml0eTogNTAsXG4gICAgaWQ6ICduYXZpZ2F0b3JPdXRsZXQnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBuYXZpZ2F0b3JTZXJ2aWNlOiBOYXZpZ2F0b3JTZXJ2aWNlKSB7fVxuXG4gIGdldCgpOiBPYnNlcnZhYmxlPERyYXdlckl0ZW0gfCBEcmF3ZXJJdGVtW10+IHtcbiAgICByZXR1cm4gdGhpcy5uYXZpZ2F0b3JTZXJ2aWNlLmhhc0l0ZW1zSW5OYXZpZ2F0b3IkLnBpcGUoXG4gICAgICBtYXAodG1wID0+ICh0bXAgPyB0aGlzLmRyYXdlckl0ZW0gOiBbXSkpXG4gICAgKTtcbiAgfVxufVxuIl19