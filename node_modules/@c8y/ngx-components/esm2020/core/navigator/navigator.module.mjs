import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { CommonModule } from '../common/common.module';
import { NavigatorIconComponent } from './navigator-icon.component';
import { NavigatorNodeComponent } from './navigator-node.component';
import { NavigatorOutletComponent } from './navigator-outlet.component';
import { ModalModule } from '../modal/modal.module';
import { hookDrawer } from '../drawer/drawer.service';
import { NavigatorDrawerFactory } from './navigator-drawer.factory';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/collapse";
/**
 * The angular module definition for the navigator.
 * @exports NavigatorOutletComponent
 * @exports NavigatorNodeComponent
 */
export class NavigatorModule {
}
NavigatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NavigatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: NavigatorModule, declarations: [NavigatorOutletComponent, NavigatorNodeComponent, NavigatorIconComponent], imports: [RouterModule, i1.CollapseModule, CommonModule, ModalModule], exports: [NavigatorOutletComponent, NavigatorNodeComponent] });
NavigatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorModule, providers: [hookDrawer(NavigatorDrawerFactory)], imports: [RouterModule, CollapseModule.forRoot(), CommonModule, ModalModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NavigatorModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NavigatorOutletComponent, NavigatorNodeComponent, NavigatorIconComponent],
                    imports: [RouterModule, CollapseModule.forRoot(), CommonModule, ModalModule],
                    exports: [NavigatorOutletComponent, NavigatorNodeComponent],
                    entryComponents: [NavigatorIconComponent],
                    providers: [hookDrawer(NavigatorDrawerFactory)]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdG9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbmF2aWdhdG9yL25hdmlnYXRvci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFFcEU7Ozs7R0FJRztBQVFILE1BQU0sT0FBTyxlQUFlOzs0R0FBZixlQUFlOzZHQUFmLGVBQWUsaUJBTlgsd0JBQXdCLEVBQUUsc0JBQXNCLEVBQUUsc0JBQXNCLGFBQzdFLFlBQVkscUJBQTRCLFlBQVksRUFBRSxXQUFXLGFBQ2pFLHdCQUF3QixFQUFFLHNCQUFzQjs2R0FJL0MsZUFBZSxhQUZmLENBQUMsVUFBVSxDQUFDLHNCQUFzQixDQUFDLENBQUMsWUFIckMsWUFBWSxFQUFFLGNBQWMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxZQUFZLEVBQUUsV0FBVzsyRkFLaEUsZUFBZTtrQkFQM0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxzQkFBc0IsRUFBRSxzQkFBc0IsQ0FBQztvQkFDeEYsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLGNBQWMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxZQUFZLEVBQUUsV0FBVyxDQUFDO29CQUM1RSxPQUFPLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxzQkFBc0IsQ0FBQztvQkFDM0QsZUFBZSxFQUFFLENBQUMsc0JBQXNCLENBQUM7b0JBQ3pDLFNBQVMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO2lCQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29sbGFwc2VNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2NvbGxhcHNlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IE5hdmlnYXRvckljb25Db21wb25lbnQgfSBmcm9tICcuL25hdmlnYXRvci1pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JOb2RlQ29tcG9uZW50IH0gZnJvbSAnLi9uYXZpZ2F0b3Itbm9kZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmF2aWdhdG9yT3V0bGV0Q29tcG9uZW50IH0gZnJvbSAnLi9uYXZpZ2F0b3Itb3V0bGV0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBob29rRHJhd2VyIH0gZnJvbSAnLi4vZHJhd2VyL2RyYXdlci5zZXJ2aWNlJztcbmltcG9ydCB7IE5hdmlnYXRvckRyYXdlckZhY3RvcnkgfSBmcm9tICcuL25hdmlnYXRvci1kcmF3ZXIuZmFjdG9yeSc7XG5cbi8qKlxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIHRoZSBuYXZpZ2F0b3IuXG4gKiBAZXhwb3J0cyBOYXZpZ2F0b3JPdXRsZXRDb21wb25lbnRcbiAqIEBleHBvcnRzIE5hdmlnYXRvck5vZGVDb21wb25lbnRcbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmF2aWdhdG9yT3V0bGV0Q29tcG9uZW50LCBOYXZpZ2F0b3JOb2RlQ29tcG9uZW50LCBOYXZpZ2F0b3JJY29uQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1JvdXRlck1vZHVsZSwgQ29sbGFwc2VNb2R1bGUuZm9yUm9vdCgpLCBDb21tb25Nb2R1bGUsIE1vZGFsTW9kdWxlXSxcbiAgZXhwb3J0czogW05hdmlnYXRvck91dGxldENvbXBvbmVudCwgTmF2aWdhdG9yTm9kZUNvbXBvbmVudF0sXG4gIGVudHJ5Q29tcG9uZW50czogW05hdmlnYXRvckljb25Db21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtob29rRHJhd2VyKE5hdmlnYXRvckRyYXdlckZhY3RvcnkpXVxufSlcbmV4cG9ydCBjbGFzcyBOYXZpZ2F0b3JNb2R1bGUge31cbiJdfQ==