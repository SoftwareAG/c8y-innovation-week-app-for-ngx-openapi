import { Component, Output, Input, EventEmitter } from '@angular/core';
import { LoginService } from './login.service';
import { AlertService } from '../alert/alert.service';
import { AppStateService } from '../common/ui-state.service';
import { gettext } from '../i18n/gettext';
import { LoginViews } from './login.model';
import { CredentialsFromQueryParamsService } from './credentials-from-query-params.service';
import * as i0 from "@angular/core";
import * as i1 from "./login.service";
import * as i2 from "../alert/alert.service";
import * as i3 from "../common/ui-state.service";
import * as i4 from "./credentials-from-query-params.service";
import * as i5 from "@angular/forms";
import * as i6 from "../common/icon.directive";
import * as i7 from "../i18n/c8y-translate.directive";
import * as i8 from "@angular/common";
import * as i9 from "../authentication/password-input.component";
import * as i10 from "../forms/form-group.component";
import * as i11 from "../forms/required-input-placeholder.directive";
import * as i12 from "../i18n/c8y-translate.pipe";
export class CredentialsComponent {
    constructor(loginService, alert, ui, credentialsFromQueryParamsService) {
        this.loginService = loginService;
        this.alert = alert;
        this.ui = ui;
        this.credentialsFromQueryParamsService = credentialsFromQueryParamsService;
        this.onChangeView = new EventEmitter();
        this.loginViewParams = {
            disableTenant: false,
            showTenant: false
        };
        this.LOGIN_VIEWS = LoginViews;
        this.model = {};
        this.isLoading = false;
        this.showLoginForm = false;
        this.showBasicAuth = false;
        this.oauthOptions = {};
        this.showTenant = false;
        this.PASSWORD_RESET_HEADER_NAME = 'passwordresettoken';
        this.NO_PHONE_HEADER_NAME = 'NoPhoneHeader';
    }
    ngOnInit() {
        const { oauthOptions, loginMode } = this.loginService;
        this.model.tenant = this.loginService.getTenant();
        this.showLoginForm =
            typeof loginMode.visibleOnLoginPage === 'undefined' || loginMode.visibleOnLoginPage;
        this.showBasicAuth = loginMode.type === 'BASIC';
        this.oauthOptions = oauthOptions;
        const credentialsFromQueryParams = this.credentialsFromQueryParamsService.getCredentialsFromQueryParams();
        Object.assign(this.model, credentialsFromQueryParams);
        this.showTenant = this.loginViewParams.showTenant || this.loginService.showTenant();
    }
    redirectToOauth() {
        this.loginService.redirectToOauth();
    }
    /**
     * Allows to login into the application using basic auth.
     * If successful logged in the client is set in shared/cumulocity.service.ts
     */
    async login() {
        try {
            this.isLoading = true;
            const basicAuth = this.loginService.useBasicAuth(this.model);
            await this.loginService.login(basicAuth, this.model);
        }
        catch (e) {
            if (e.res && e.res.headers && e.res.headers.get(this.PASSWORD_RESET_HEADER_NAME)) {
                this.handlePasswordReset(e.res);
            }
            else if (e.res && e.res.status === 401 && /pin/i.test(e.data.message)) {
                this.handleSmsChallenge(e.data.message);
            }
            else if (e.res && e.res.status === 401 && /TOTP/i.test(e.data.message)) {
                this.handleTotpChallenge(e.data.message);
            }
            else if (e.res &&
                e.res.headers &&
                e.res.headers.get(this.NO_PHONE_HEADER_NAME) &&
                !this.loginService.isSupportUser(this.model)) {
                this.handleNoPhoneNumberProvided();
            }
            else {
                this.loginService.generateOauthToken(this.model);
                this.loginService.reset();
                this.alert.addServerFailure(e);
            }
        }
        finally {
            this.isLoading = false;
        }
    }
    handlePasswordReset(e) {
        this.alert.removeLastDanger();
        this.model.token = e.headers.get(this.PASSWORD_RESET_HEADER_NAME);
        this.onChangeView.emit({ view: LoginViews.ChangePassword, credentials: this.model });
    }
    handleTotpChallenge(message) {
        if (/TOTP setup required/i.test(message)) {
            this.onChangeView.emit({ view: LoginViews.TotpSetup, credentials: this.model });
        }
        else {
            this.onChangeView.emit({ view: LoginViews.TotpChallenge, credentials: this.model });
        }
    }
    handleSmsChallenge(message) {
        if (/pin has already been generated/i.test(message)) {
            this.alert.warning(gettext('The verification code was already sent. For a new verification code, please click on the link above.'));
        }
        this.alert.removeLastDanger();
        this.onChangeView.emit({ view: LoginViews.SmsChallenge, credentials: this.model });
    }
    handleNoPhoneNumberProvided() {
        this.onChangeView.emit({ view: LoginViews.ProvidePhoneNumber, credentials: this.model });
        this.alert.warning(gettext('Two-factor authentication has been turned on for this account. Provide your phone number above to save it in your user profile and start receiving verification codes via SMS.'));
    }
}
CredentialsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: CredentialsComponent, deps: [{ token: i1.LoginService }, { token: i2.AlertService }, { token: i3.AppStateService }, { token: i4.CredentialsFromQueryParamsService }], target: i0.ɵɵFactoryTarget.Component });
CredentialsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: CredentialsComponent, selector: "c8y-credentials", inputs: { loginViewParams: "loginViewParams" }, outputs: { onChangeView: "onChangeView" }, ngImport: i0, template: "<div\n  id=\"oauth\"\n  *ngIf=\"oauthOptions.initRequest && oauthOptions.visibleOnLoginPage\"\n>\n  <button\n    class=\"btn btn-block btn-lg form-group\"\n    title=\"{{ oauthOptions.buttonName | translate }}\"\n    type=\"button\"\n    (click)=\"redirectToOauth()\"\n  >\n    <i\n      class=\"pull-left\"\n      [c8yIcon]=\"'sign-in'\"\n    ></i>\n    {{ oauthOptions.buttonName | translate }}\n  </button>\n</div>\n\n<form\n  class=\"loginForm\"\n  (ngSubmit)=\"login()\"\n  #loginForm=\"ngForm\"\n  *ngIf=\"showLoginForm\"\n  novalidate\n>\n  <span\n    class=\"legend form-block center\"\n    *ngIf=\"!(oauthOptions.initRequest && oauthOptions.visibleOnLoginPage); else orLegend\"\n    translate\n  >\n    Login\n  </span>\n\n  <ng-template #orLegend>\n    <div\n      class=\"legend form-block center\"\n      translate\n    >\n      or\n    </div>\n  </ng-template>\n\n  <c8y-form-group\n    class=\"tenantField\"\n    id=\"tenantField\"\n    *ngIf=\"showTenant\"\n  >\n    <label\n      for=\"tenant\"\n      translate\n    >\n      Tenant ID\n    </label>\n    <input\n      class=\"form-control\"\n      id=\"tenant\"\n      placeholder=\"{{ 'e.g.' | translate }} t12345\"\n      name=\"tenant\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.tenant\"\n      #tenant=\"ngModel\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      placeholder-no-required-hint\n      [readonly]=\"loginViewParams.disableTenant\"\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label\n      for=\"user\"\n      translate\n    >\n      Username\n    </label>\n    <input\n      class=\"form-control\"\n      id=\"user\"\n      placeholder=\"{{ 'e.g. joe or joe.doe@example.com`LOCALIZE`' | translate }}\"\n      name=\"user\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.user\"\n      #user=\"ngModel\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      placeholder-no-required-hint\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"password\" translate>Password</label>\n    <c8y-password-input\n      [id]=\"'password'\"\n      name=\"password\"\n      required\n      [(ngModel)]=\"model.password\"\n      [autocomplete]=\"'off'\"\n    ></c8y-password-input>\n  </c8y-form-group>\n  <div\n    class=\"form-group\"\n    *ngIf=\"showBasicAuth\"\n  >\n    <label\n      class=\"c8y-checkbox\"\n      title=\"{{ 'Remember me' | translate }}\"\n    >\n      <input\n        name=\"remember\"\n        type=\"checkbox\"\n        [(ngModel)]=\"loginService.rememberMe\"\n      />\n      <span></span>\n      <span>{{ 'Remember me' | translate }}</span>\n    </label>\n  </div>\n  <button\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    title=\"{{ 'Log in' | translate }}\"\n    type=\"submit\"\n    [disabled]=\"!loginForm.form.valid || isLoading\"\n  >\n    {{ 'Log in' | translate }}\n  </button>\n  <div class=\"text-center m-t-8\">\n    <button\n      class=\"btn btn-link btn-sm\"\n      title=\"{{ 'Forgot password?' | translate }}\"\n      type=\"button\"\n      (click)=\"onChangeView.emit({ view: LOGIN_VIEWS.RecoverPassword })\"\n    >\n      {{ 'Forgot password?' | translate }}\n    </button>\n  </div>\n  <div\n    class=\"text-center m-t-8\"\n    *ngIf=\"!!(ui.state$ | async).loginExtraLink\"\n  >\n    <a\n      class=\"small\"\n      title=\"{{ (ui.state$ | async).loginExtraLink.label }}\"\n      role=\"button\"\n      [href]=\"(ui.state$ | async).loginExtraLink.url\"\n    >\n      {{ (ui.state$ | async).loginExtraLink.label }}\n    </a>\n  </div>\n</form>\n", dependencies: [{ kind: "directive", type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i6.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i7.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i9.PasswordInputComponent, selector: "c8y-password-input", inputs: ["id", "autocomplete"] }, { kind: "component", type: i10.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i11.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "pipe", type: i12.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i8.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: CredentialsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-credentials', template: "<div\n  id=\"oauth\"\n  *ngIf=\"oauthOptions.initRequest && oauthOptions.visibleOnLoginPage\"\n>\n  <button\n    class=\"btn btn-block btn-lg form-group\"\n    title=\"{{ oauthOptions.buttonName | translate }}\"\n    type=\"button\"\n    (click)=\"redirectToOauth()\"\n  >\n    <i\n      class=\"pull-left\"\n      [c8yIcon]=\"'sign-in'\"\n    ></i>\n    {{ oauthOptions.buttonName | translate }}\n  </button>\n</div>\n\n<form\n  class=\"loginForm\"\n  (ngSubmit)=\"login()\"\n  #loginForm=\"ngForm\"\n  *ngIf=\"showLoginForm\"\n  novalidate\n>\n  <span\n    class=\"legend form-block center\"\n    *ngIf=\"!(oauthOptions.initRequest && oauthOptions.visibleOnLoginPage); else orLegend\"\n    translate\n  >\n    Login\n  </span>\n\n  <ng-template #orLegend>\n    <div\n      class=\"legend form-block center\"\n      translate\n    >\n      or\n    </div>\n  </ng-template>\n\n  <c8y-form-group\n    class=\"tenantField\"\n    id=\"tenantField\"\n    *ngIf=\"showTenant\"\n  >\n    <label\n      for=\"tenant\"\n      translate\n    >\n      Tenant ID\n    </label>\n    <input\n      class=\"form-control\"\n      id=\"tenant\"\n      placeholder=\"{{ 'e.g.' | translate }} t12345\"\n      name=\"tenant\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.tenant\"\n      #tenant=\"ngModel\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      placeholder-no-required-hint\n      [readonly]=\"loginViewParams.disableTenant\"\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label\n      for=\"user\"\n      translate\n    >\n      Username\n    </label>\n    <input\n      class=\"form-control\"\n      id=\"user\"\n      placeholder=\"{{ 'e.g. joe or joe.doe@example.com`LOCALIZE`' | translate }}\"\n      name=\"user\"\n      type=\"text\"\n      required\n      [(ngModel)]=\"model.user\"\n      #user=\"ngModel\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      placeholder-no-required-hint\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"password\" translate>Password</label>\n    <c8y-password-input\n      [id]=\"'password'\"\n      name=\"password\"\n      required\n      [(ngModel)]=\"model.password\"\n      [autocomplete]=\"'off'\"\n    ></c8y-password-input>\n  </c8y-form-group>\n  <div\n    class=\"form-group\"\n    *ngIf=\"showBasicAuth\"\n  >\n    <label\n      class=\"c8y-checkbox\"\n      title=\"{{ 'Remember me' | translate }}\"\n    >\n      <input\n        name=\"remember\"\n        type=\"checkbox\"\n        [(ngModel)]=\"loginService.rememberMe\"\n      />\n      <span></span>\n      <span>{{ 'Remember me' | translate }}</span>\n    </label>\n  </div>\n  <button\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    title=\"{{ 'Log in' | translate }}\"\n    type=\"submit\"\n    [disabled]=\"!loginForm.form.valid || isLoading\"\n  >\n    {{ 'Log in' | translate }}\n  </button>\n  <div class=\"text-center m-t-8\">\n    <button\n      class=\"btn btn-link btn-sm\"\n      title=\"{{ 'Forgot password?' | translate }}\"\n      type=\"button\"\n      (click)=\"onChangeView.emit({ view: LOGIN_VIEWS.RecoverPassword })\"\n    >\n      {{ 'Forgot password?' | translate }}\n    </button>\n  </div>\n  <div\n    class=\"text-center m-t-8\"\n    *ngIf=\"!!(ui.state$ | async).loginExtraLink\"\n  >\n    <a\n      class=\"small\"\n      title=\"{{ (ui.state$ | async).loginExtraLink.label }}\"\n      role=\"button\"\n      [href]=\"(ui.state$ | async).loginExtraLink.url\"\n    >\n      {{ (ui.state$ | async).loginExtraLink.label }}\n    </a>\n  </div>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LoginService }, { type: i2.AlertService }, { type: i3.AppStateService }, { type: i4.CredentialsFromQueryParamsService }]; }, propDecorators: { onChangeView: [{
                type: Output
            }], loginViewParams: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,