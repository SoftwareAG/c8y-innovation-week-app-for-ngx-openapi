import { Component } from '@angular/core';
import { AppStateService, OptionsService, Status } from '../../common';
import { PRODUCT_EXPERIENCE } from '../../shared/core.model';
import { gettext } from '../../i18n';
import { TranslateService } from '@ngx-translate/core';
import { ModalService } from '../../modal';
import { TenantService, UserService } from '@c8y/client';
import { AlertService } from '../../alert';
import { HeaderService } from '../../header/header.service';
import * as i0 from "@angular/core";
import * as i1 from "../../common";
import * as i2 from "../../modal";
import * as i3 from "@ngx-translate/core";
import * as i4 from "@c8y/client";
import * as i5 from "../../alert";
import * as i6 from "../../header/header.service";
import * as i7 from "../../common/icon.directive";
import * as i8 from "@angular/common";
import * as i9 from "ngx-bootstrap/collapse";
import * as i10 from "../../product-experience/product-experience.directive";
import * as i11 from "../../i18n/c8y-translate.pipe";
export class SupportOutletComponent {
    constructor(ui, optionsService, modalService, translateService, tenantService, alertService, userService, headerService) {
        this.ui = ui;
        this.optionsService = optionsService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.tenantService = tenantService;
        this.alertService = alertService;
        this.userService = userService;
        this.headerService = headerService;
        this.isSupportOpen = false;
        this.PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;
        this.drawerOpen$ = this.headerService.rightDrawerOpen$;
    }
    async activateSupportAccess() {
        const title = gettext('Activate support user access');
        const companyName = this.optionsService.get('companyName', 'Cumulocity');
        const textWithCompany = gettext('You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.');
        const textWithoutCompany = gettext('You are about to allow a support user to access your tenant to help you with your issue.');
        const finalQuestion = gettext('Do you want to proceed?');
        const body = [
            this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                companyName
            }),
            this.translateService.instant(finalQuestion)
        ].join(' ');
        const labels = {
            ok: gettext('Activate access'),
            cancel: gettext('Cancel')
        };
        const successMsg = gettext('Support user access activated.');
        try {
            await this.modalService.confirm(title, body, Status.DANGER, labels);
            await this.tenantService.enableSupportUser();
            await this.refreshCurrentUser();
            this.alertService.success(successMsg);
        }
        catch (ex) {
            // intended empty
        }
    }
    async deactivateSupportAccess() {
        const title = gettext('Deactivate support user access');
        const companyName = this.optionsService.get('companyName', 'Cumulocity');
        const textWithCompany = gettext('You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.');
        const textWithoutCompany = gettext('You are about to block a support user from accessing your tenant to help you with your issue.');
        const { data: currentUser } = await this.userService.current();
        const isTenantAdmin = this.userService.hasRole(currentUser, 'ROLE_TENANT_ADMIN');
        const tenantAdminNote = gettext('Deactivating support access as tenant admin will disable all other support requests on your tenant.');
        const finalQuestion = gettext('Do you want to proceed?');
        const body = [
            this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                companyName
            }),
            isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',
            this.translateService.instant(finalQuestion)
        ]
            .filter(Boolean)
            .join(' ');
        const labels = {
            ok: gettext('Deactivate access'),
            cancel: gettext('Cancel')
        };
        const successMsg = gettext('Support user access deactivated.');
        try {
            await this.modalService.confirm(title, body, Status.DANGER, labels);
            await this.tenantService.disableSupportUser();
            await this.refreshCurrentUser();
            this.alertService.success(successMsg);
        }
        catch (ex) {
            // intended empty
        }
    }
    async refreshCurrentUser() {
        const currentUserResult = await this.userService.current();
        this.ui.currentUser.next(currentUserResult.data);
    }
}
SupportOutletComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SupportOutletComponent, deps: [{ token: i1.AppStateService }, { token: i1.OptionsService }, { token: i2.ModalService }, { token: i3.TranslateService }, { token: i4.TenantService }, { token: i5.AlertService }, { token: i4.UserService }, { token: i6.HeaderService }], target: i0.ɵɵFactoryTarget.Component });
SupportOutletComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: SupportOutletComponent, selector: "c8y-support-outlet", ngImport: i0, template: "<button\n  class=\"c8y-right-drawer__link sticky-top\"\n  [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  type=\"button\"\n  (click)=\"isSupportOpen = !isSupportOpen\"\n>\n  <i c8yIcon=\"c8y-c8y-support\"></i>\n  <span class=\"text-bold\">{{ 'Support' | translate }}</span>\n  <i\n    class=\"m-l-auto\"\n    c8yIcon=\"angle-down\"\n    [ngClass]=\"{ 'icon-rotate-180': isSupportOpen }\"\n  ></i>\n</button>\n<div\n  class=\"collapse\"\n  id=\"collapseSupport\"\n  [collapse]=\"!isSupportOpen\"\n  [isAnimated]=\"true\"\n>\n  <a\n    class=\"c8y-right-drawer__link\"\n    style=\"cursor: pointer\"\n    title=\"{{ 'Activate support access' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"\n      !(ui.currentUser | async)?.supportUserEnabled &&\n      (ui.state$ | async).activateSupportUserAvailable\n    \"\n    (click)=\"activateSupportAccess()\"\n    rel=\"noopener noreferrer\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Activate support access' | translate }}\"\n    >\n      {{ 'Activate support access' | translate }}\n    </span>\n  </a>\n  <a\n    class=\"c8y-right-drawer__link\"\n    style=\"cursor: pointer\"\n    title=\"{{ 'Deactivate support access' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"\n      (ui.currentUser | async)?.supportUserEnabled &&\n      (ui.state$ | async).activateSupportUserAvailable\n    \"\n    (click)=\"deactivateSupportAccess()\"\n    rel=\"noopener noreferrer\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Deactivate support access' | translate }}\"\n    >\n      {{ 'Deactivate support access' | translate }}\n    </span>\n  </a>\n  <a\n    class=\"c8y-right-drawer__link\"\n    title=\"{{ 'Request support' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"(ui.state$ | async).supportUrl\"\n    rel=\"noopener noreferrer\"\n    [href]=\"(ui.state$ | async).supportUrl\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Request support' | translate }}\"\n    >\n      {{ 'Request support' | translate }}\n    </span>\n  </a>\n</div>\n", dependencies: [{ kind: "directive", type: i7.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i9.CollapseDirective, selector: "[collapse]", inputs: ["display", "isAnimated", "collapse"], outputs: ["collapsed", "collapses", "expanded", "expands"], exportAs: ["bs-collapse"] }, { kind: "directive", type: i10.ProductExperienceDirective, selector: "[c8yProductExperience]", inputs: ["actionName", "actionData", "inherit", "suppressDataOverriding"] }, { kind: "pipe", type: i11.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i8.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SupportOutletComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-support-outlet', template: "<button\n  class=\"c8y-right-drawer__link sticky-top\"\n  [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n  type=\"button\"\n  (click)=\"isSupportOpen = !isSupportOpen\"\n>\n  <i c8yIcon=\"c8y-c8y-support\"></i>\n  <span class=\"text-bold\">{{ 'Support' | translate }}</span>\n  <i\n    class=\"m-l-auto\"\n    c8yIcon=\"angle-down\"\n    [ngClass]=\"{ 'icon-rotate-180': isSupportOpen }\"\n  ></i>\n</button>\n<div\n  class=\"collapse\"\n  id=\"collapseSupport\"\n  [collapse]=\"!isSupportOpen\"\n  [isAnimated]=\"true\"\n>\n  <a\n    class=\"c8y-right-drawer__link\"\n    style=\"cursor: pointer\"\n    title=\"{{ 'Activate support access' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"\n      !(ui.currentUser | async)?.supportUserEnabled &&\n      (ui.state$ | async).activateSupportUserAvailable\n    \"\n    (click)=\"activateSupportAccess()\"\n    rel=\"noopener noreferrer\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Activate support access' | translate }}\"\n    >\n      {{ 'Activate support access' | translate }}\n    </span>\n  </a>\n  <a\n    class=\"c8y-right-drawer__link\"\n    style=\"cursor: pointer\"\n    title=\"{{ 'Deactivate support access' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"\n      (ui.currentUser | async)?.supportUserEnabled &&\n      (ui.state$ | async).activateSupportUserAvailable\n    \"\n    (click)=\"deactivateSupportAccess()\"\n    rel=\"noopener noreferrer\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Deactivate support access' | translate }}\"\n    >\n      {{ 'Deactivate support access' | translate }}\n    </span>\n  </a>\n  <a\n    class=\"c8y-right-drawer__link\"\n    title=\"{{ 'Request support' | translate }}\"\n    [tabindex]=\"(drawerOpen$ | async) ? '0' : '-1'\"\n    type=\"button\"\n    target=\"_blank\"\n    *ngIf=\"(ui.state$ | async).supportUrl\"\n    rel=\"noopener noreferrer\"\n    [href]=\"(ui.state$ | async).supportUrl\"\n    c8yProductExperience\n    [actionName]=\"PRODUCT_EXPERIENCE.QUICK_LINKS.EVENTS.QUICK_LINK_RIGHT_DRAWER\"\n  >\n    <span\n      class=\"text-truncate text-12\"\n      title=\"{{ 'Request support' | translate }}\"\n    >\n      {{ 'Request support' | translate }}\n    </span>\n  </a>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AppStateService }, { type: i1.OptionsService }, { type: i2.ModalService }, { type: i3.TranslateService }, { type: i4.TenantService }, { type: i5.AlertService }, { type: i4.UserService }, { type: i6.HeaderService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydC1vdXRsZXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29yZS9kb2NzL3N1cHBvcnQtb3V0bGV0L3N1cHBvcnQtb3V0bGV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL2NvcmUvZG9jcy9zdXBwb3J0LW91dGxldC9zdXBwb3J0LW91dGxldC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7Ozs7Ozs7Ozs7QUFNNUQsTUFBTSxPQUFPLHNCQUFzQjtJQUtqQyxZQUNTLEVBQW1CLEVBQ2xCLGNBQThCLEVBQzlCLFlBQTBCLEVBQzFCLGdCQUFrQyxFQUNsQyxhQUE0QixFQUM1QixZQUEwQixFQUMxQixXQUF3QixFQUN4QixhQUE0QjtRQVA3QixPQUFFLEdBQUYsRUFBRSxDQUFpQjtRQUNsQixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFr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QUpsQyxTQUFTOytCQUNFLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQXBwU3RhdGVTZXJ2aWNlLCBPcHRpb25zU2VydmljZSwgU3RhdHVzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IFBST0RVQ1RfRVhQRVJJRU5DRSB9IGZyb20gJy4uLy4uL3NoYXJlZC9jb3JlLm1vZGVsJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi8uLi9pMThuJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IE1vZGFsU2VydmljZSB9IGZyb20gJy4uLy4uL21vZGFsJztcbmltcG9ydCB7IFRlbmFudFNlcnZpY2UsIFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vYWxlcnQnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL2hlYWRlci9oZWFkZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zdXBwb3J0LW91dGxldCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zdXBwb3J0LW91dGxldC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3VwcG9ydE91dGxldENvbXBvbmVudCB7XG4gIGRyYXdlck9wZW4kOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICBpc1N1cHBvcnRPcGVuID0gZmFsc2U7XG4gIFBST0RVQ1RfRVhQRVJJRU5DRSA9IFBST0RVQ1RfRVhQRVJJRU5DRTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgdWk6IEFwcFN0YXRlU2VydmljZSxcbiAgICBwcml2YXRlIG9wdGlvbnNTZXJ2aWNlOiBPcHRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBwcml2YXRlIHRlbmFudFNlcnZpY2U6IFRlbmFudFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHVzZXJTZXJ2aWNlOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIGhlYWRlclNlcnZpY2U6IEhlYWRlclNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5kcmF3ZXJPcGVuJCA9IHRoaXMuaGVhZGVyU2VydmljZS5yaWdodERyYXdlck9wZW4kO1xuICB9XG5cbiAgYXN5bmMgYWN0aXZhdGVTdXBwb3J0QWNjZXNzKCkge1xuICAgIGNvbnN0IHRpdGxlID0gZ2V0dGV4dCgnQWN0aXZhdGUgc3VwcG9ydCB1c2VyIGFjY2VzcycpO1xuXG4gICAgY29uc3QgY29tcGFueU5hbWUgPSB0aGlzLm9wdGlvbnNTZXJ2aWNlLmdldCgnY29tcGFueU5hbWUnLCAnQ3VtdWxvY2l0eScpO1xuICAgIGNvbnN0IHRleHRXaXRoQ29tcGFueSA9IGdldHRleHQoXG4gICAgICAnWW91IGFyZSBhYm91dCB0byBhbGxvdyBhIHN1cHBvcnQgdXNlciBmcm9tIHt7Y29tcGFueU5hbWV9fSB0byBhY2Nlc3MgeW91ciB0ZW5hbnQgdG8gaGVscCB5b3Ugd2l0aCB5b3VyIGlzc3VlLidcbiAgICApO1xuICAgIGNvbnN0IHRleHRXaXRob3V0Q29tcGFueSA9IGdldHRleHQoXG4gICAgICAnWW91IGFyZSBhYm91dCB0byBhbGxvdyBhIHN1cHBvcnQgdXNlciB0byBhY2Nlc3MgeW91ciB0ZW5hbnQgdG8gaGVscCB5b3Ugd2l0aCB5b3VyIGlzc3VlLidcbiAgICApO1xuICAgIGNvbnN0IGZpbmFsUXVlc3Rpb24gPSBnZXR0ZXh0KCdEbyB5b3Ugd2FudCB0byBwcm9jZWVkPycpO1xuICAgIGNvbnN0IGJvZHkgPSBbXG4gICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChjb21wYW55TmFtZSA/IHRleHRXaXRoQ29tcGFueSA6IHRleHRXaXRob3V0Q29tcGFueSwge1xuICAgICAgICBjb21wYW55TmFtZVxuICAgICAgfSksXG4gICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChmaW5hbFF1ZXN0aW9uKVxuICAgIF0uam9pbignICcpO1xuXG4gICAgY29uc3QgbGFiZWxzID0ge1xuICAgICAgb2s6IGdldHRleHQoJ0FjdGl2YXRlIGFjY2VzcycpLFxuICAgICAgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKVxuICAgIH07XG5cbiAgICBjb25zdCBzdWNjZXNzTXNnID0gZ2V0dGV4dCgnU3VwcG9ydCB1c2VyIGFjY2VzcyBhY3RpdmF0ZWQuJyk7XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5tb2RhbFNlcnZpY2UuY29uZmlybSh0aXRsZSwgYm9keSwgU3RhdHVzLkRBTkdFUiwgbGFiZWxzKTtcbiAgICAgIGF3YWl0IHRoaXMudGVuYW50U2VydmljZS5lbmFibGVTdXBwb3J0VXNlcigpO1xuICAgICAgYXdhaXQgdGhpcy5yZWZyZXNoQ3VycmVudFVzZXIoKTtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3Moc3VjY2Vzc01zZyk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIC8vIGludGVuZGVkIGVtcHR5XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZGVhY3RpdmF0ZVN1cHBvcnRBY2Nlc3MoKSB7XG4gICAgY29uc3QgdGl0bGUgPSBnZXR0ZXh0KCdEZWFjdGl2YXRlIHN1cHBvcnQgdXNlciBhY2Nlc3MnKTtcblxuICAgIGNvbnN0IGNvbXBhbnlOYW1lID0gdGhpcy5vcHRpb25zU2VydmljZS5nZXQoJ2NvbXBhbnlOYW1lJywgJ0N1bXVsb2NpdHknKTtcbiAgICBjb25zdCB0ZXh0V2l0aENvbXBhbnkgPSBnZXR0ZXh0KFxuICAgICAgJ1lvdSBhcmUgYWJvdXQgdG8gYmxvY2sgYSBzdXBwb3J0IHVzZXIgZnJvbSB7e2NvbXBhbnlOYW1lfX0gZnJvbSBhY2Nlc3NpbmcgeW91ciB0ZW5hbnQgdG8gaGVscCB5b3Ugd2l0aCB5b3VyIGlzc3VlLidcbiAgICApO1xuICAgIGNvbnN0IHRleHRXaXRob3V0Q29tcGFueSA9IGdldHRleHQoXG4gICAgICAnWW91IGFyZSBhYm91dCB0byBibG9jayBhIHN1cHBvcnQgdXNlciBmcm9tIGFjY2Vzc2luZyB5b3VyIHRlbmFudCB0byBoZWxwIHlvdSB3aXRoIHlvdXIgaXNzdWUuJ1xuICAgICk7XG4gICAgY29uc3QgeyBkYXRhOiBjdXJyZW50VXNlciB9ID0gYXdhaXQgdGhpcy51c2VyU2VydmljZS5jdXJyZW50KCk7XG4gICAgY29uc3QgaXNUZW5hbnRBZG1pbiA9IHRoaXMudXNlclNlcnZpY2UuaGFzUm9sZShjdXJyZW50VXNlciwgJ1JPTEVfVEVOQU5UX0FETUlOJyk7XG4gICAgY29uc3QgdGVuYW50QWRtaW5Ob3RlID0gZ2V0dGV4dChcbiAgICAgICdEZWFjdGl2YXRpbmcgc3VwcG9ydCBhY2Nlc3MgYXMgdGVuYW50IGFkbWluIHdpbGwgZGlzYWJsZSBhbGwgb3RoZXIgc3VwcG9ydCByZXF1ZXN0cyBvbiB5b3VyIHRlbmFudC4nXG4gICAgKTtcbiAgICBjb25zdCBmaW5hbFF1ZXN0aW9uID0gZ2V0dGV4dCgnRG8geW91IHdhbnQgdG8gcHJvY2VlZD8nKTtcbiAgICBjb25zdCBib2R5ID0gW1xuICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoY29tcGFueU5hbWUgPyB0ZXh0V2l0aENvbXBhbnkgOiB0ZXh0V2l0aG91dENvbXBhbnksIHtcbiAgICAgICAgY29tcGFueU5hbWVcbiAgICAgIH0pLFxuICAgICAgaXNUZW5hbnRBZG1pbiA/IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KHRlbmFudEFkbWluTm90ZSkgOiAnJyxcbiAgICAgIHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGZpbmFsUXVlc3Rpb24pXG4gICAgXVxuICAgICAgLmZpbHRlcihCb29sZWFuKVxuICAgICAgLmpvaW4oJyAnKTtcblxuICAgIGNvbnN0IGxhYmVscyA9IHtcbiAgICAgIG9rOiBnZXR0ZXh0KCdEZWFjdGl2YXRlIGFjY2VzcycpLFxuICAgICAgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKVxuICAgIH07XG5cbiAgICBjb25zdCBzdWNjZXNzTXNnID0gZ2V0dGV4dCgnU3VwcG9ydCB1c2VyIGFjY2VzcyBkZWFjdGl2YXRlZC4nKTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLm1vZGFsU2VydmljZS5jb25maXJtKHRpdGxlLCBib2R5LCBTdGF0dXMuREFOR0VSLCBsYWJlbHMpO1xuICAgICAgYXdhaXQgdGhpcy50ZW5hbnRTZXJ2aWNlLmRpc2FibGVTdXBwb3J0VXNlcigpO1xuICAgICAgYXdhaXQgdGhpcy5yZWZyZXNoQ3VycmVudFVzZXIoKTtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3Moc3VjY2Vzc01zZyk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIC8vIGludGVuZGVkIGVtcHR5XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZWZyZXNoQ3VycmVudFVzZXIoKSB7XG4gICAgY29uc3QgY3VycmVudFVzZXJSZXN1bHQgPSBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLmN1cnJlbnQoKTtcbiAgICB0aGlzLnVpLmN1cnJlbnRVc2VyLm5leHQoY3VycmVudFVzZXJSZXN1bHQuZGF0YSk7XG4gIH1cbn1cbiIsIjxidXR0b25cbiAgY2xhc3M9XCJjOHktcmlnaHQtZHJhd2VyX19saW5rIHN0aWNreS10b3BcIlxuICBbdGFiaW5kZXhdPVwiKGRyYXdlck9wZW4kIHwgYXN5bmMpID8gJzAnIDogJy0xJ1wiXG4gIHR5cGU9XCJidXR0b25cIlxuICAoY2xpY2spPVwiaXNTdXBwb3J0T3BlbiA9ICFpc1N1cHBvcnRPcGVuXCJcbj5cbiAgPGkgYzh5SWNvbj1cImM4eS1jOHktc3VwcG9ydFwiPjwvaT5cbiAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWJvbGRcIj57eyAnU3VwcG9ydCcgfCB0cmFuc2xhdGUgfX08L3NwYW4+XG4gIDxpXG4gICAgY2xhc3M9XCJtLWwtYXV0b1wiXG4gICAgYzh5SWNvbj1cImFuZ2xlLWRvd25cIlxuICAgIFtuZ0NsYXNzXT1cInsgJ2ljb24tcm90YXRlLTE4MCc6IGlzU3VwcG9ydE9wZW4gfVwiXG4gID48L2k+XG48L2J1dHRvbj5cbjxkaXZcbiAgY2xhc3M9XCJjb2xsYXBzZVwiXG4gIGlkPVwiY29sbGFwc2VTdXBwb3J0XCJcbiAgW2NvbGxhcHNlXT1cIiFpc1N1cHBvcnRPcGVuXCJcbiAgW2lzQW5pbWF0ZWRdPVwidHJ1ZVwiXG4+XG4gIDxhXG4gICAgY2xhc3M9XCJjOHktcmlnaHQtZHJhd2VyX19saW5rXCJcbiAgICBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiXG4gICAgdGl0bGU9XCJ7eyAnQWN0aXZhdGUgc3VwcG9ydCBhY2Nlc3MnIHwgdHJhbnNsYXRlIH19XCJcbiAgICBbdGFiaW5kZXhdPVwiKGRyYXdlck9wZW4kIHwgYXN5bmMpID8gJzAnIDogJy0xJ1wiXG4gICAgdHlwZT1cImJ1dHRvblwiXG4gICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAqbmdJZj1cIlxuICAgICAgISh1aS5jdXJyZW50VXNlciB8IGFzeW5jKT8uc3VwcG9ydFVzZXJFbmFibGVkICYmXG4gICAgICAodWkuc3RhdGUkIHwgYXN5bmMpLmFjdGl2YXRlU3VwcG9ydFVzZXJBdmFpbGFibGVcbiAgICBcIlxuICAgIChjbGljayk9XCJhY3RpdmF0ZVN1cHBvcnRBY2Nlc3MoKVwiXG4gICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgYzh5UHJvZHVjdEV4cGVyaWVuY2VcbiAgICBbYWN0aW9uTmFtZV09XCJQUk9EVUNUX0VYUEVSSUVOQ0UuUVVJQ0tfTElOS1MuRVZFTlRTLlFVSUNLX0xJTktfUklHSFRfRFJBV0VSXCJcbiAgPlxuICAgIDxzcGFuXG4gICAgICBjbGFzcz1cInRleHQtdHJ1bmNhdGUgdGV4dC0xMlwiXG4gICAgICB0aXRsZT1cInt7ICdBY3RpdmF0ZSBzdXBwb3J0IGFjY2VzcycgfCB0cmFuc2xhdGUgfX1cIlxuICAgID5cbiAgICAgIHt7ICdBY3RpdmF0ZSBzdXBwb3J0IGFjY2VzcycgfCB0cmFuc2xhdGUgfX1cbiAgICA8L3NwYW4+XG4gIDwvYT5cbiAgPGFcbiAgICBjbGFzcz1cImM4eS1yaWdodC1kcmF3ZXJfX2xpbmtcIlxuICAgIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCJcbiAgICB0aXRsZT1cInt7ICdEZWFjdGl2YXRlIHN1cHBvcnQgYWNjZXNzJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgW3RhYmluZGV4XT1cIihkcmF3ZXJPcGVuJCB8IGFzeW5jKSA/ICcwJyA6ICctMSdcIlxuICAgIHR5cGU9XCJidXR0b25cIlxuICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgKm5nSWY9XCJcbiAgICAgICh1aS5jdXJyZW50VXNlciB8IGFzeW5jKT8uc3VwcG9ydFVzZXJFbmFibGVkICYmXG4gICAgICAodWkuc3RhdGUkIHwgYXN5bmMpLmFjdGl2YXRlU3VwcG9ydFVzZXJBdmFpbGFibGVcbiAgICBcIlxuICAgIChjbGljayk9XCJkZWFjdGl2YXRlU3VwcG9ydEFjY2VzcygpXCJcbiAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICBjOHlQcm9kdWN0RXhwZXJpZW5jZVxuICAgIFthY3Rpb25OYW1lXT1cIlBST0RVQ1RfRVhQRVJJRU5DRS5RVUlDS19MSU5LUy5FVkVOVFMuUVVJQ0tfTElOS19SSUdIVF9EUkFXRVJcIlxuICA+XG4gICAgPHNwYW5cbiAgICAgIGNsYXNzPVwidGV4dC10cnVuY2F0ZSB0ZXh0LTEyXCJcbiAgICAgIHRpdGxlPVwie3sgJ0RlYWN0aXZhdGUgc3VwcG9ydCBhY2Nlc3MnIHwgdHJhbnNsYXRlIH19XCJcbiAgICA+XG4gICAgICB7eyAnRGVhY3RpdmF0ZSBzdXBwb3J0IGFjY2VzcycgfCB0cmFuc2xhdGUgfX1cbiAgICA8L3NwYW4+XG4gIDwvYT5cbiAgPGFcbiAgICBjbGFzcz1cImM4eS1yaWdodC1kcmF3ZXJfX2xpbmtcIlxuICAgIHRpdGxlPVwie3sgJ1JlcXVlc3Qgc3VwcG9ydCcgfCB0cmFuc2xhdGUgfX1cIlxuICAgIFt0YWJpbmRleF09XCIoZHJhd2VyT3BlbiQgfCBhc3luYykgPyAnMCcgOiAnLTEnXCJcbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICpuZ0lmPVwiKHVpLnN0YXRlJCB8IGFzeW5jKS5zdXBwb3J0VXJsXCJcbiAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICBbaHJlZl09XCIodWkuc3RhdGUkIHwgYXN5bmMpLnN1cHBvcnRVcmxcIlxuICAgIGM4eVByb2R1Y3RFeHBlcmllbmNlXG4gICAgW2FjdGlvbk5hbWVdPVwiUFJPRFVDVF9FWFBFUklFTkNFLlFVSUNLX0xJTktTLkVWRU5UUy5RVUlDS19MSU5LX1JJR0hUX0RSQVdFUlwiXG4gID5cbiAgICA8c3BhblxuICAgICAgY2xhc3M9XCJ0ZXh0LXRydW5jYXRlIHRleHQtMTJcIlxuICAgICAgdGl0bGU9XCJ7eyAnUmVxdWVzdCBzdXBwb3J0JyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgPlxuICAgICAge3sgJ1JlcXVlc3Qgc3VwcG9ydCcgfCB0cmFuc2xhdGUgfX1cbiAgICA8L3NwYW4+XG4gIDwvYT5cbjwvZGl2PlxuIl19