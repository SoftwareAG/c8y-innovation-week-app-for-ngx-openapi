import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DynamicComponentService } from '../dynamic-component/dynamic-component.service';
import { BehaviorSubject, combineLatest, merge } from 'rxjs';
import { map, shareReplay, switchMap } from 'rxjs/operators';
import { set } from 'lodash-es';
import { WidgetsDashboardEventService } from './widgets-dashboard-event.service';
import * as i0 from "@angular/core";
import * as i1 from "../dynamic-component/dynamic-component.service";
import * as i2 from "../common/empty-state/empty-state.component";
import * as i3 from "../common/icon.directive";
import * as i4 from "../i18n/c8y-translate.directive";
import * as i5 from "@angular/common";
import * as i6 from "../common/loading.component";
import * as i7 from "../action-bar/action-bar-item.component";
import * as i8 from "../dynamic-component/dynamic-component.component";
import * as i9 from "../header/title/title.component";
import * as i10 from "../docs/guide-href.directive";
import * as i11 from "../docs/guide-docs.component";
import * as i12 from "../breadcrumb/breadcrumb.component";
import * as i13 from "../breadcrumb/breadcrumb-item.component";
import * as i14 from "./dashboard-child.component";
import * as i15 from "./dashboard.component";
import * as i16 from "./dashboard-child-title.component";
import * as i17 from "./dashboard-child-action.component";
import * as i18 from "./wiget-time-context/widget-time-context.component";
import * as i19 from "../i18n/c8y-translate.pipe";
export class WidgetsDashboardComponent {
    set widgets(value) {
        this._widgets.next(value);
    }
    get widgets() {
        return this._widgets.value;
    }
    set _settings(settings) {
        this.settings = { ...this.settings, ...settings };
        this.isLoading$.next(!!this.settings.isLoading);
    }
    constructor(dynamic) {
        this.dynamic = dynamic;
        this.contextDashboard = { updateTarget: true };
        this.settings = {
            isFrozen: false,
            isDisabled: false,
            widgetMargin: 12,
            translateWidgetTitle: false,
            defaultHeight: 4,
            defaultWidth: 4,
            allowFullscreen: false,
            canCopy: true,
            canDelete: true,
            isLoading: false
        };
        this.onAddWidget = new EventEmitter();
        this.onEditWidget = new EventEmitter();
        this.onDeleteWidget = new EventEmitter();
        this.onChangeDashboard = new EventEmitter();
        this.onEditDashboard = new EventEmitter();
        this.onCopyDashboard = new EventEmitter();
        this.onDeleteDashboard = new EventEmitter();
        this.onFreeze = new EventEmitter();
        this.onChangeStart = new EventEmitter();
        this.onChangeEnd = new EventEmitter();
        this._widgets = new BehaviorSubject([]);
        this.isLoading$ = new BehaviorSubject(!!this._settings?.isLoading);
        this.resolvedWidgets$ = this._widgets.pipe(switchMap(widgets => this.executeResolversOfWidgets(widgets)), shareReplay(1));
        this.isExecutingResolvers$ = merge(this._widgets.pipe(map(() => true)), this.resolvedWidgets$.pipe(map(() => false)));
        this.isLoadingWidgets$ = combineLatest([this.isLoading$, this.isExecutingResolvers$]).pipe(map(loadings => loadings.some(loading => loading)), shareReplay(1));
    }
    toggleFullscreen() {
        const elem = document.body;
        const doc = document;
        if (!this.fullScreen()) {
            if (elem.requestFullscreen) {
                elem.requestFullscreen();
            }
            else if (elem.msRequestFullscreen) {
                elem.msRequestFullscreen();
            }
            else if (elem.mozRequestFullScreen) {
                elem.mozRequestFullScreen();
            }
            else if (elem.webkitRequestFullscreen) {
                elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        }
        else if (doc.exitFullscreen) {
            doc.exitFullscreen();
        }
        else if (doc.msExitFullscreen) {
            doc.msExitFullscreen();
        }
        else if (doc.mozCancelFullScreen) {
            doc.mozCancelFullScreen();
        }
        else if (doc.webkitExitFullscreen) {
            doc.webkitExitFullscreen();
        }
    }
    fullScreen() {
        const doc = document;
        return !!(doc.fullscreenElement ||
            doc.mozFullScreenElement ||
            doc.webkitFullscreenElement ||
            doc.msFullscreenElement);
    }
    updateWidgetClasses(widget, classes) {
        widget.classes = { ...widget.classes, ...classes };
    }
    updateWidgetConfig(data, widget) {
        widget.config = { ...widget.config, ...data };
    }
    async executeResolversOfWidgets(widgets) {
        if (!widgets) {
            return widgets;
        }
        const tuple = widgets.map(widget => ({
            componentId: widget.componentId || widget.name,
            config: widget.config
        }));
        const resolvedResults = await this.dynamic.executeResolvers(tuple);
        widgets.forEach((widget, index) => {
            if (resolvedResults[index]) {
                if (!widget.config) {
                    widget.config = {};
                }
                Object.entries(resolvedResults[index]).forEach(([key, value]) => set(widget.config, key, value));
            }
        });
        return widgets;
    }
}
WidgetsDashboardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WidgetsDashboardComponent, deps: [{ token: i1.DynamicComponentService }], target: i0.ɵɵFactoryTarget.Component });
WidgetsDashboardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: WidgetsDashboardComponent, selector: "c8y-widgets-dashboard", inputs: { widgets: "widgets", context: "context", contextDashboard: "contextDashboard", _settings: ["settings", "_settings"], breadcrumb: "breadcrumb" }, outputs: { onAddWidget: "onAddWidget", onEditWidget: "onEditWidget", onDeleteWidget: "onDeleteWidget", onChangeDashboard: "onChangeDashboard", onEditDashboard: "onEditDashboard", onCopyDashboard: "onCopyDashboard", onDeleteDashboard: "onDeleteDashboard", onFreeze: "onFreeze", onChangeStart: "onChangeStart", onChangeEnd: "onChangeEnd" }, host: { styleAttribute: "\n      display: block;\n    ", classAttribute: "dashboard c8y-grid-dashboard" }, providers: [WidgetsDashboardEventService], ngImport: i0, template: "<c8y-title *ngIf=\"!!settings.title\">\n  {{ settings.title | translate }}\n</c8y-title>\n\n<c8y-breadcrumb *ngIf=\"!!breadcrumb\">\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumb.icon\"\n    [label]=\"breadcrumb.label\"\n    [path]=\"breadcrumb.path\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"onAddWidget.observers.length\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Add widget' | translate }}\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onAddWidget.emit()\"\n    data-cy=\"widget-dashboard--Add-widget\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add widget' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"onEditDashboard.observers.length\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Edit' | translate }}\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onEditDashboard.emit()\"\n    data-cy=\"widgets-dashboard--edit-widget\"\n  >\n    <i c8yIcon=\"pencil\"></i>\n    {{ 'Edit' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"settings.allowFullscreen\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Full screen' | translate }}\"\n    (click)=\"toggleFullscreen()\"\n    data-cy=\"widgets-dashboard--Full-screen\"\n  >\n    <i [c8yIcon]=\"fullScreen() ? 'compress' : 'expand'\"></i>\n    {{ 'Full screen' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"navbar-form\"\n  *ngIf=\"onFreeze.observers.length\"\n>\n  <button\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Lock/unlock this dashboard' | translate }}\"\n    [ngClass]=\"{ active: settings.isFrozen }\"\n    (click)=\"onFreeze.emit(settings)\"\n    [disabled]=\"settings.isDisabled\"\n    uib-btn-checkbox\n    data-cy=\"widgets-dashboard--button-lock-toggle\"\n  >\n    <i [c8yIcon]=\"settings.isFrozen ? 'lock' : 'unlock'\"></i>\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]=\"'more'\"\n  [priority]=\"-2000\"\n  *ngIf=\"settings.canCopy\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    data-cy=\"widgets-dashboard--copy-dashboard\"\n    title=\"{{ 'Copy dashboard' | translate }}\"\n    (click)=\"onCopyDashboard.emit()\"\n  >\n    <i c8yIcon=\"clone\"></i>\n    <span\n      class=\"m-l-4\"\n      translate\n    >\n      Copy dashboard\n    </span>\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'more'\"\n  [priority]=\"-3000\"\n  *ngIf=\"settings.canDelete && onDeleteDashboard.observers.length\"\n>\n  <button\n    type=\"button\"\n    title=\"{{ 'Delete dashboard' | translate }}\"\n    (click)=\"onDeleteDashboard.emit()\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n  >\n    <i c8yIcon=\"delete\"></i>\n    <span\n      class=\"m-l-4\"\n      translate\n    >\n      Delete dashboard\n    </span>\n  </button>\n</c8y-action-bar-item>\n\n<ng-template #loadingIndicator>\n  <c8y-loading\n    class=\"col-xs-12 text-center\"\n    *ngIf=\"isLoadingWidgets$ | async\"\n  ></c8y-loading>\n</ng-template>\n\n<ng-container *ngIf=\"!(isLoadingWidgets$ | async); else loadingIndicator\">\n  <ng-container *ngIf=\"resolvedWidgets$ | async as widgetsToDisplay\">\n    <!-- empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"widgetsToDisplay?.length === 0\"\n      [icon]=\"'c8y-device'\"\n      [title]=\"'No widgets to display.' | translate\"\n    >\n      <div *ngIf=\"!settings.isFrozen && onAddWidget.observers.length\">\n        <p translate>Add widgets to this dashboard.</p>\n        <div>\n          <button\n            class=\"btn btn-primary m-t-16\"\n            type=\"button\"\n            title=\"{{ 'Add widget' | translate }}\"\n            [disabled]=\"settings.isFrozen || settings.isDisabled\"\n            (click)=\"onAddWidget.emit()\"\n            data-cy=\"widgets-dashboard--Add-widget\"\n            translate\n          >\n            Add widget\n          </button>\n        </div>\n        <p c8y-guide-docs>\n          <small\n            translate\n            ngNonBindable\n          >\n            Find out more in the\n            <a c8y-guide-href=\"users-guide/cockpit/#dashboards\">\n              User guide`KEEP_ORIGINAL`\n            </a>\n            .\n          </small>\n        </p>\n      </div>\n    </c8y-ui-empty-state>\n\n    <c8y-dashboard\n      (dashboardChange)=\"onChangeDashboard.emit($event)\"\n      #dashboard\n    >\n      <c8y-dashboard-child\n        *ngFor=\"let widget of widgetsToDisplay\"\n        [x]=\"widget._x\"\n        [y]=\"widget._y\"\n        [width]=\"widget._width || settings.defaultWidth\"\n        [height]=\"widget._height || settings.defaultHeight\"\n        [margin]=\"settings.widgetMargin\"\n        [isFrozen]=\"settings.isFrozen || settings.isDisabled\"\n        [class]=\"widget.classes\"\n        [data]=\"widget\"\n        [useIntersection]=\"true\"\n        (changeStart)=\"onChangeStart.emit({ widget: widget, source: child, dashboard: dashboard })\"\n        (changeEnd)=\"onChangeEnd.emit({ widget: widget, source: child, dashboard: dashboard })\"\n        #child\n      >\n        <c8y-dashboard-child-title>\n          <span\n            data-cy=\"c8y-dashboard-list--device-widget\"\n            *ngIf=\"settings.translateWidgetTitle\"\n          >\n            {{ widget.title | translate }}\n          </span>\n          <span *ngIf=\"!settings.translateWidgetTitle\">\n            {{ widget.title }}\n          </span>\n        </c8y-dashboard-child-title>\n        <c8y-dashboard-child-action *ngIf=\"onEditWidget.observers.length\">\n          <button\n            type=\"button\"\n            title=\"{{ 'Edit widget' | translate }}\"\n            data-cy=\"widgets-dashboard--edit-dashboard\"\n            (click)=\"onEditWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n          >\n            <i c8yIcon=\"pencil\"></i>\n            <span\n              class=\"m-l-4\"\n              translate\n            >\n              Edit\n            </span>\n          </button>\n        </c8y-dashboard-child-action>\n        <c8y-dashboard-child-action *ngIf=\"onDeleteWidget.observers.length\">\n          <button\n            type=\"button\"\n            data-cy=\"widgets-dashboard--remove-widget\"\n            title=\"{{ 'Remove widget' | translate }}\"\n            (click)=\"onDeleteWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n          >\n            <i c8yIcon=\"delete\"></i>\n            <span\n              class=\"m-l-4\"\n              translate\n            >\n              Remove\n            </span>\n          </button>\n        </c8y-dashboard-child-action>\n\n        <c8y-widget-time-context\n          *ngIf=\"\n            widget.config?.displaySettings?.globalTimeContext &&\n            widget.config.widgetInstanceGlobalTimeContext\n          \"\n          (dateContextChange)=\"updateWidgetConfig($event, widget)\"\n          [canDecouple]=\"widget.config.canDecoupleGlobalTimeContext\"\n        ></c8y-widget-time-context>\n\n        <c8y-dynamic-component\n          [componentId]=\"widget.componentId || widget.name\"\n          [config]=\"\n            widget.templateUrl || widget.widgetComponent\n              ? { child: widget, dashboard: contextDashboard, context: context }\n              : widget.config\n          \"\n          *ngIf=\"child.intersected\"\n          (updateWidgetClasses)=\"updateWidgetClasses(widget, $event)\"\n        ></c8y-dynamic-component>\n      </c8y-dashboard-child>\n    </c8y-dashboard>\n  </ng-container>\n</ng-container>\n", dependencies: [{ kind: "component", type: i2.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.LoadingComponent, selector: "c8y-loading" }, { kind: "component", type: i7.ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: ["placement", "priority", "itemClass", "injector", "groupId"] }, { kind: "component", type: i8.DynamicComponentComponent, selector: "c8y-dynamic-component", inputs: ["componentId", "config", "mode", "notFoundError", "executeResolvers"], outputs: ["updateWidgetClasses"] }, { kind: "component", type: i9.TitleComponent, selector: "c8y-title", inputs: ["pageTitleUpdate"] }, { kind: "directive", type: i10.GuideHrefDirective, selector: "[c8y-guide-href]", inputs: ["c8y-guide-href"] }, { kind: "component", type: i11.GuideDocsComponent, selector: "[c8y-guide-docs]" }, { kind: "component", type: i12.BreadcrumbComponent, selector: "c8y-breadcrumb" }, { kind: "component", type: i13.BreadcrumbItemComponent, selector: "c8y-breadcrumb-item", inputs: ["icon", "translate", "label", "path", "injector"] }, { kind: "component", type: i14.DashboardChildComponent, selector: "c8y-dashboard-child", inputs: ["x", "y", "width", "height", "data", "margin", "isFrozen", "useIntersection", "class"], outputs: ["changeStart", "changeEnd"] }, { kind: "component", type: i15.DashboardComponent, selector: "c8y-dashboard", inputs: ["columns", "gap", "rows"], outputs: ["dashboardChange"] }, { kind: "component", type: i16.DashboardChildTitleComponent, selector: "c8y-dashboard-child-title" }, { kind: "component", type: i17.DashboardChildActionComponent, selector: "c8y-dashboard-child-action" }, { kind: "component", type: i18.WidgetTimeContextComponent, selector: "c8y-widget-time-context", inputs: ["canDecouple"], outputs: ["dateContextChange"] }, { kind: "pipe", type: i19.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WidgetsDashboardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-widgets-dashboard', host: {
                        style: `
      display: block;
    `,
                        class: 'dashboard c8y-grid-dashboard'
                    }, providers: [WidgetsDashboardEventService], template: "<c8y-title *ngIf=\"!!settings.title\">\n  {{ settings.title | translate }}\n</c8y-title>\n\n<c8y-breadcrumb *ngIf=\"!!breadcrumb\">\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumb.icon\"\n    [label]=\"breadcrumb.label\"\n    [path]=\"breadcrumb.path\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"onAddWidget.observers.length\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Add widget' | translate }}\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onAddWidget.emit()\"\n    data-cy=\"widget-dashboard--Add-widget\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add widget' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"onEditDashboard.observers.length\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Edit' | translate }}\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onEditDashboard.emit()\"\n    data-cy=\"widgets-dashboard--edit-widget\"\n  >\n    <i c8yIcon=\"pencil\"></i>\n    {{ 'Edit' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  *ngIf=\"settings.allowFullscreen\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Full screen' | translate }}\"\n    (click)=\"toggleFullscreen()\"\n    data-cy=\"widgets-dashboard--Full-screen\"\n  >\n    <i [c8yIcon]=\"fullScreen() ? 'compress' : 'expand'\"></i>\n    {{ 'Full screen' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"navbar-form\"\n  *ngIf=\"onFreeze.observers.length\"\n>\n  <button\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Lock/unlock this dashboard' | translate }}\"\n    [ngClass]=\"{ active: settings.isFrozen }\"\n    (click)=\"onFreeze.emit(settings)\"\n    [disabled]=\"settings.isDisabled\"\n    uib-btn-checkbox\n    data-cy=\"widgets-dashboard--button-lock-toggle\"\n  >\n    <i [c8yIcon]=\"settings.isFrozen ? 'lock' : 'unlock'\"></i>\n  </button>\n</c8y-action-bar-item>\n<c8y-action-bar-item\n  [placement]=\"'more'\"\n  [priority]=\"-2000\"\n  *ngIf=\"settings.canCopy\"\n>\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    data-cy=\"widgets-dashboard--copy-dashboard\"\n    title=\"{{ 'Copy dashboard' | translate }}\"\n    (click)=\"onCopyDashboard.emit()\"\n  >\n    <i c8yIcon=\"clone\"></i>\n    <span\n      class=\"m-l-4\"\n      translate\n    >\n      Copy dashboard\n    </span>\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'more'\"\n  [priority]=\"-3000\"\n  *ngIf=\"settings.canDelete && onDeleteDashboard.observers.length\"\n>\n  <button\n    type=\"button\"\n    title=\"{{ 'Delete dashboard' | translate }}\"\n    (click)=\"onDeleteDashboard.emit()\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n  >\n    <i c8yIcon=\"delete\"></i>\n    <span\n      class=\"m-l-4\"\n      translate\n    >\n      Delete dashboard\n    </span>\n  </button>\n</c8y-action-bar-item>\n\n<ng-template #loadingIndicator>\n  <c8y-loading\n    class=\"col-xs-12 text-center\"\n    *ngIf=\"isLoadingWidgets$ | async\"\n  ></c8y-loading>\n</ng-template>\n\n<ng-container *ngIf=\"!(isLoadingWidgets$ | async); else loadingIndicator\">\n  <ng-container *ngIf=\"resolvedWidgets$ | async as widgetsToDisplay\">\n    <!-- empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"widgetsToDisplay?.length === 0\"\n      [icon]=\"'c8y-device'\"\n      [title]=\"'No widgets to display.' | translate\"\n    >\n      <div *ngIf=\"!settings.isFrozen && onAddWidget.observers.length\">\n        <p translate>Add widgets to this dashboard.</p>\n        <div>\n          <button\n            class=\"btn btn-primary m-t-16\"\n            type=\"button\"\n            title=\"{{ 'Add widget' | translate }}\"\n            [disabled]=\"settings.isFrozen || settings.isDisabled\"\n            (click)=\"onAddWidget.emit()\"\n            data-cy=\"widgets-dashboard--Add-widget\"\n            translate\n          >\n            Add widget\n          </button>\n        </div>\n        <p c8y-guide-docs>\n          <small\n            translate\n            ngNonBindable\n          >\n            Find out more in the\n            <a c8y-guide-href=\"users-guide/cockpit/#dashboards\">\n              User guide`KEEP_ORIGINAL`\n            </a>\n            .\n          </small>\n        </p>\n      </div>\n    </c8y-ui-empty-state>\n\n    <c8y-dashboard\n      (dashboardChange)=\"onChangeDashboard.emit($event)\"\n      #dashboard\n    >\n      <c8y-dashboard-child\n        *ngFor=\"let widget of widgetsToDisplay\"\n        [x]=\"widget._x\"\n        [y]=\"widget._y\"\n        [width]=\"widget._width || settings.defaultWidth\"\n        [height]=\"widget._height || settings.defaultHeight\"\n        [margin]=\"settings.widgetMargin\"\n        [isFrozen]=\"settings.isFrozen || settings.isDisabled\"\n        [class]=\"widget.classes\"\n        [data]=\"widget\"\n        [useIntersection]=\"true\"\n        (changeStart)=\"onChangeStart.emit({ widget: widget, source: child, dashboard: dashboard })\"\n        (changeEnd)=\"onChangeEnd.emit({ widget: widget, source: child, dashboard: dashboard })\"\n        #child\n      >\n        <c8y-dashboard-child-title>\n          <span\n            data-cy=\"c8y-dashboard-list--device-widget\"\n            *ngIf=\"settings.translateWidgetTitle\"\n          >\n            {{ widget.title | translate }}\n          </span>\n          <span *ngIf=\"!settings.translateWidgetTitle\">\n            {{ widget.title }}\n          </span>\n        </c8y-dashboard-child-title>\n        <c8y-dashboard-child-action *ngIf=\"onEditWidget.observers.length\">\n          <button\n            type=\"button\"\n            title=\"{{ 'Edit widget' | translate }}\"\n            data-cy=\"widgets-dashboard--edit-dashboard\"\n            (click)=\"onEditWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n          >\n            <i c8yIcon=\"pencil\"></i>\n            <span\n              class=\"m-l-4\"\n              translate\n            >\n              Edit\n            </span>\n          </button>\n        </c8y-dashboard-child-action>\n        <c8y-dashboard-child-action *ngIf=\"onDeleteWidget.observers.length\">\n          <button\n            type=\"button\"\n            data-cy=\"widgets-dashboard--remove-widget\"\n            title=\"{{ 'Remove widget' | translate }}\"\n            (click)=\"onDeleteWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n          >\n            <i c8yIcon=\"delete\"></i>\n            <span\n              class=\"m-l-4\"\n              translate\n            >\n              Remove\n            </span>\n          </button>\n        </c8y-dashboard-child-action>\n\n        <c8y-widget-time-context\n          *ngIf=\"\n            widget.config?.displaySettings?.globalTimeContext &&\n            widget.config.widgetInstanceGlobalTimeContext\n          \"\n          (dateContextChange)=\"updateWidgetConfig($event, widget)\"\n          [canDecouple]=\"widget.config.canDecoupleGlobalTimeContext\"\n        ></c8y-widget-time-context>\n\n        <c8y-dynamic-component\n          [componentId]=\"widget.componentId || widget.name\"\n          [config]=\"\n            widget.templateUrl || widget.widgetComponent\n              ? { child: widget, dashboard: contextDashboard, context: context }\n              : widget.config\n          \"\n          *ngIf=\"child.intersected\"\n          (updateWidgetClasses)=\"updateWidgetClasses(widget, $event)\"\n        ></c8y-dynamic-component>\n      </c8y-dashboard-child>\n    </c8y-dashboard>\n  </ng-container>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.DynamicComponentService }]; }, propDecorators: { widgets: [{
                type: Input
            }], context: [{
                type: Input
            }], contextDashboard: [{
                type: Input
            }], _settings: [{
                type: Input,
                args: ['settings']
            }], breadcrumb: [{
                type: Input
            }], onAddWidget: [{
                type: Output
            }], onEditWidget: [{
                type: Output
            }], onDeleteWidget: [{
                type: Output
            }], onChangeDashboard: [{
                type: Output
            }], onEditDashboard: [{
                type: Output
            }], onCopyDashboard: [{
                type: Output
            }], onDeleteDashboard: [{
                type: Output
            }], onFreeze: [{
                type: Output
            }], onChangeStart: [{
                type: Output
            }], onChangeEnd: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,