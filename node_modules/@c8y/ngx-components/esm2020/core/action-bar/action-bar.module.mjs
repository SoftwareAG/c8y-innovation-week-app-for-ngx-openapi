import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { CommonModule } from '../common/common.module';
import { ActionBarItemComponent } from './action-bar-item.component';
import { ActionBarComponent } from './action-bar.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
/**
 * An action bar can be added with content projection or multi provider
 * extension. It allows to show them in three positions (left, right
 * or more). The actions placed here are always local actions to the
 * current route like "add device" or "lock dashboard".
 *
 * @example
 * ```html
 * <c8y-action-bar-item [placement]="'right'">
 *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
 * </c8y-action-bar-item>
 * ```
 * @exports ActionBarComponent The outlet component
 * @exports ActionBarItemComponent The items to add with cp.
 */
export class ActionBarModule {
}
ActionBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ActionBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ActionBarModule, declarations: [ActionBarComponent, ActionBarItemComponent], imports: [BsDropdownModule, CommonModule, CollapseModule, i1.RouterModule], exports: [ActionBarComponent, ActionBarItemComponent] });
ActionBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarModule, imports: [BsDropdownModule, CommonModule, CollapseModule, RouterModule.forChild([])] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ActionBarComponent, ActionBarItemComponent],
                    imports: [BsDropdownModule, CommonModule, CollapseModule, RouterModule.forChild([])],
                    exports: [ActionBarComponent, ActionBarItemComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2FjdGlvbi1iYXIvYWN0aW9uLWJhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBRTVEOzs7Ozs7Ozs7Ozs7OztHQWNHO0FBTUgsTUFBTSxPQUFPLGVBQWU7OzRHQUFmLGVBQWU7NkdBQWYsZUFBZSxpQkFKWCxrQkFBa0IsRUFBRSxzQkFBc0IsYUFDL0MsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGNBQWMsOEJBQzlDLGtCQUFrQixFQUFFLHNCQUFzQjs2R0FFekMsZUFBZSxZQUhoQixnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDOzJGQUd4RSxlQUFlO2tCQUwzQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGtCQUFrQixFQUFFLHNCQUFzQixDQUFDO29CQUMxRCxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ3BGLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixFQUFFLHNCQUFzQixDQUFDO2lCQUN0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29sbGFwc2VNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2NvbGxhcHNlJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IEFjdGlvbkJhckl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2FjdGlvbi1iYXItaXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQWN0aW9uQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9hY3Rpb24tYmFyLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQW4gYWN0aW9uIGJhciBjYW4gYmUgYWRkZWQgd2l0aCBjb250ZW50IHByb2plY3Rpb24gb3IgbXVsdGkgcHJvdmlkZXJcbiAqIGV4dGVuc2lvbi4gSXQgYWxsb3dzIHRvIHNob3cgdGhlbSBpbiB0aHJlZSBwb3NpdGlvbnMgKGxlZnQsIHJpZ2h0XG4gKiBvciBtb3JlKS4gVGhlIGFjdGlvbnMgcGxhY2VkIGhlcmUgYXJlIGFsd2F5cyBsb2NhbCBhY3Rpb25zIHRvIHRoZVxuICogY3VycmVudCByb3V0ZSBsaWtlIFwiYWRkIGRldmljZVwiIG9yIFwibG9jayBkYXNoYm9hcmRcIi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbFxuICogPGM4eS1hY3Rpb24tYmFyLWl0ZW0gW3BsYWNlbWVudF09XCIncmlnaHQnXCI+XG4gKiAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLWxpbmtcIiAoY2xpY2spPVwiYWRkUmFuZG9tKClcIj48aSBjOHlJY29uPVwicGx1cy1jaXJjbGVcIj48L2k+IEFkZCByYW5kb208L2J1dHRvbj5cbiAqIDwvYzh5LWFjdGlvbi1iYXItaXRlbT5cbiAqIGBgYFxuICogQGV4cG9ydHMgQWN0aW9uQmFyQ29tcG9uZW50IFRoZSBvdXRsZXQgY29tcG9uZW50XG4gKiBAZXhwb3J0cyBBY3Rpb25CYXJJdGVtQ29tcG9uZW50IFRoZSBpdGVtcyB0byBhZGQgd2l0aCBjcC5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbQWN0aW9uQmFyQ29tcG9uZW50LCBBY3Rpb25CYXJJdGVtQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0JzRHJvcGRvd25Nb2R1bGUsIENvbW1vbk1vZHVsZSwgQ29sbGFwc2VNb2R1bGUsIFJvdXRlck1vZHVsZS5mb3JDaGlsZChbXSldLFxuICBleHBvcnRzOiBbQWN0aW9uQmFyQ29tcG9uZW50LCBBY3Rpb25CYXJJdGVtQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25CYXJNb2R1bGUge31cbiJdfQ==