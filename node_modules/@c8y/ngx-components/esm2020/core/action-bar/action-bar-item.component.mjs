import { Component, EnvironmentInjector, Input, ViewChild, Injector } from '@angular/core';
import { ActionBarService } from './action-bar.service';
import * as i0 from "@angular/core";
import * as i1 from "./action-bar.service";
/**
 * A <c8y-action-bar-item> can be added with content projection.
 * It allows to show items in three positions (left, right
 * or more).
 *
 * @example
 * ```html
 * <c8y-action-bar-item [placement]="'right'">
 *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
 * </c8y-action-bar-item>
 * ```
 */
export class ActionBarItemComponent {
    /**
     * @ignore
     */
    constructor(actionBarService, _injector) {
        this.actionBarService = actionBarService;
        /**
         * Where the item should be shown. Use "more" to place
         * it in a dropdown on the right.
         */
        this.placement = 'left';
        /**
         * Priority for sorting the list. Higher priority means
         * an earlier position in the list.
         */
        this.priority = 0;
        /**
         * Adds additional classes to the item.
         */
        this.itemClass = '';
        this.injector = _injector;
    }
    /**
     * @ignore
     */
    ngAfterViewInit() {
        this.viewInitTimeout = setTimeout(() => this.actionBarService.add(this));
    }
    /**
     * @ignore
     */
    ngOnDestroy() {
        clearTimeout(this.viewInitTimeout);
        this.actionBarService.remove(this);
    }
}
ActionBarItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarItemComponent, deps: [{ token: i1.ActionBarService }, { token: i0.EnvironmentInjector }], target: i0.ɵɵFactoryTarget.Component });
ActionBarItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ActionBarItemComponent, selector: "c8y-action-bar-item", inputs: { placement: "placement", priority: "priority", itemClass: "itemClass", injector: "injector", groupId: "groupId" }, viewQueries: [{ propertyName: "component", first: true, predicate: ["template"], descendants: true }], ngImport: i0, template: "<ng-template #template>\n  <li class=\"{{ itemClass }}\">\n    <ng-content></ng-content>\n  </li>\n</ng-template>\n" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-action-bar-item', template: "<ng-template #template>\n  <li class=\"{{ itemClass }}\">\n    <ng-content></ng-content>\n  </li>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ActionBarService }, { type: i0.EnvironmentInjector }]; }, propDecorators: { placement: [{
                type: Input
            }], priority: [{
                type: Input
            }], itemClass: [{
                type: Input
            }], injector: [{
                type: Input
            }], groupId: [{
                type: Input
            }], component: [{
                type: ViewChild,
                args: ['template', { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYWN0aW9uLWJhci9hY3Rpb24tYmFyLWl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vY29yZS9hY3Rpb24tYmFyL2FjdGlvbi1iYXItaXRlbS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixLQUFLLEVBR0wsU0FBUyxFQUNULFFBQVEsRUFDVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBRXhEOzs7Ozs7Ozs7OztHQVdHO0FBS0gsTUFBTSxPQUFPLHNCQUFzQjtJQW1DakM7O09BRUc7SUFDSCxZQUFvQixnQkFBa0MsRUFBRSxTQUE4QjtRQUFsRSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBckN0RDs7O1dBR0c7UUFDTSxjQUFTLEdBQThCLE1BQU0sQ0FBQztRQUV2RDs7O1dBR0c7UUFDTSxhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBRXRCOztXQUVHO1FBQ00sY0FBUyxHQUFHLEVBQUUsQ0FBQztRQXVCdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7SUFDNUIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsZUFBZTtRQUNiLElBQUksQ0FBQyxlQUFlLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBcUIsQ0FBQyxDQUFDLENBQUM7SUFDNUYsQ0FBQztJQUVEOztPQUVHO0lBQ0gsV0FBVztRQUNULFlBQVksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxJQUFxQixDQUFDLENBQUM7SUFDdEQsQ0FBQzs7bUhBdkRVLHNCQUFzQjt1R0FBdEIsc0JBQXNCLDhSQzVCbkMscUhBS0E7MkZEdUJhLHNCQUFzQjtrQkFKbEMsU0FBUzsrQkFDRSxxQkFBcUI7eUlBUXRCLFNBQVM7c0JBQWpCLEtBQUs7Z0JBTUcsUUFBUTtzQkFBaEIsS0FBSztnQkFLRyxTQUFTO3NCQUFqQixLQUFLO2dCQUtHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBS0csT0FBTztzQkFBZixLQUFLO2dCQUtvQyxTQUFTO3NCQUFsRCxTQUFTO3VCQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVudmlyb25tZW50SW5qZWN0b3IsXG4gIElucHV0LFxuICBUZW1wbGF0ZVJlZixcbiAgVHlwZSxcbiAgVmlld0NoaWxkLFxuICBJbmplY3RvclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGlvbkJhckl0ZW0sIEFjdGlvbkJhckl0ZW1XaXRoQ29tcG9uZW50IH0gZnJvbSAnLi9hY3Rpb24tYmFyLm1vZGVsJztcbmltcG9ydCB7IEFjdGlvbkJhclNlcnZpY2UgfSBmcm9tICcuL2FjdGlvbi1iYXIuc2VydmljZSc7XG5cbi8qKlxuICogQSA8Yzh5LWFjdGlvbi1iYXItaXRlbT4gY2FuIGJlIGFkZGVkIHdpdGggY29udGVudCBwcm9qZWN0aW9uLlxuICogSXQgYWxsb3dzIHRvIHNob3cgaXRlbXMgaW4gdGhyZWUgcG9zaXRpb25zIChsZWZ0LCByaWdodFxuICogb3IgbW9yZSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxjOHktYWN0aW9uLWJhci1pdGVtIFtwbGFjZW1lbnRdPVwiJ3JpZ2h0J1wiPlxuICogICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1saW5rXCIgKGNsaWNrKT1cImFkZFJhbmRvbSgpXCI+PGkgYzh5SWNvbj1cInBsdXMtY2lyY2xlXCI+PC9pPiBBZGQgcmFuZG9tPC9idXR0b24+XG4gKiA8L2M4eS1hY3Rpb24tYmFyLWl0ZW0+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFjdGlvbi1iYXItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpb24tYmFyLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEFjdGlvbkJhckl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBBY3Rpb25CYXJJdGVtV2l0aENvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBXaGVyZSB0aGUgaXRlbSBzaG91bGQgYmUgc2hvd24uIFVzZSBcIm1vcmVcIiB0byBwbGFjZVxuICAgKiBpdCBpbiBhIGRyb3Bkb3duIG9uIHRoZSByaWdodC5cbiAgICovXG4gIEBJbnB1dCgpIHBsYWNlbWVudDogJ2xlZnQnIHwgJ3JpZ2h0JyB8ICdtb3JlJyA9ICdsZWZ0JztcblxuICAvKipcbiAgICogUHJpb3JpdHkgZm9yIHNvcnRpbmcgdGhlIGxpc3QuIEhpZ2hlciBwcmlvcml0eSBtZWFuc1xuICAgKiBhbiBlYXJsaWVyIHBvc2l0aW9uIGluIHRoZSBsaXN0LlxuICAgKi9cbiAgQElucHV0KCkgcHJpb3JpdHkgPSAwO1xuXG4gIC8qKlxuICAgKiBBZGRzIGFkZGl0aW9uYWwgY2xhc3NlcyB0byB0aGUgaXRlbS5cbiAgICovXG4gIEBJbnB1dCgpIGl0ZW1DbGFzcyA9ICcnO1xuXG4gIC8qKlxuICAgKiBBbGxvd3MgdG8gZGVmaW5lIGEgZGlmZmVyZW50IGluamVjdG9yLlxuICAgKi9cbiAgQElucHV0KCkgaW5qZWN0b3I6IEluamVjdG9yO1xuXG4gIC8qKlxuICAgKiBJZiBhIGdyb3VwIGlkIGlzIHNldCwgdGhlIGFjdGlvbiBiYXIgd2l0aCB0aGUgc2FtZSBncm91cCBpZCBpcyBvbmx5IHJlbmRlcmVkIG9uY2UuXG4gICAqL1xuICBASW5wdXQoKSBncm91cElkO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBAVmlld0NoaWxkKCd0ZW1wbGF0ZScsIHsgc3RhdGljOiBmYWxzZSB9KSBjb21wb25lbnQ6IFR5cGU8YW55PiB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgcHJpdmF0ZSB2aWV3SW5pdFRpbWVvdXQ7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9uQmFyU2VydmljZTogQWN0aW9uQmFyU2VydmljZSwgX2luamVjdG9yOiBFbnZpcm9ubWVudEluamVjdG9yKSB7XG4gICAgdGhpcy5pbmplY3RvciA9IF9pbmplY3RvcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy52aWV3SW5pdFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMuYWN0aW9uQmFyU2VydmljZS5hZGQodGhpcyBhcyBBY3Rpb25CYXJJdGVtKSk7XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudmlld0luaXRUaW1lb3V0KTtcbiAgICB0aGlzLmFjdGlvbkJhclNlcnZpY2UucmVtb3ZlKHRoaXMgYXMgQWN0aW9uQmFySXRlbSk7XG4gIH1cbn1cbiIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxsaSBjbGFzcz1cInt7IGl0ZW1DbGFzcyB9fVwiPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgPC9saT5cbjwvbmctdGVtcGxhdGU+XG4iXX0=