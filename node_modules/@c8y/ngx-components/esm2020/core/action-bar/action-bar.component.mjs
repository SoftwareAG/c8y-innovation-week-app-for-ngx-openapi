import { PRODUCT_EXPERIENCE } from '../shared/core.model';
import { Component, HostBinding, HostListener, Input } from '@angular/core';
import { filter, sortBy } from 'lodash-es';
import { Observable, Subject, of } from 'rxjs';
import { map, takeUntil } from 'rxjs/operators';
import { GainsightService } from '../product-experience/gainsight.service';
import * as i0 from "@angular/core";
import * as i1 from "../product-experience/gainsight.service";
import * as i2 from "ngx-bootstrap/dropdown";
import * as i3 from "../common/icon.directive";
import * as i4 from "../common/outlet.directive";
import * as i5 from "../i18n/c8y-translate.directive";
import * as i6 from "@angular/common";
import * as i7 from "../i18n/c8y-translate.pipe";
/**
 * This component is used as the outlet to show the action bars.
 * In a c8ycli app it is by default placed on the bootstrap component.
 */
export class ActionBarComponent {
    constructor(gainsightService) {
        this.gainsightService = gainsightService;
        /**
         * Identifies if the navigator is opened. If yes, the action-bar
         * needs to move to the right.
         */
        this.navigatorOpen = false;
        /**
         * Identifies if the current view has tabs. If yes, the action bar needs
         * to move down.
         */
        this.hasTabs = false;
        /**
         * Identifies if the tabs are aligned horizontally. If yes, the tabs don't
         * need to move to the left.
         */
        this.isTabsHorizontal = false;
        /**
         * Identifies if in a mobile view the toolbar is expanded or not.
         */
        this.isPageToolbarExpanded = false;
        /**
         * Adds the default `c8y-ui-action-bar` class.
         */
        this.uiActionBar = true;
        /**
         * The current items to display in the ActionBar.
         */
        this.items$ = of([]);
        /**
         * Provides observable for right action items.
         */
        this.right$ = of([]);
        /**
         * Provides observable for left action items.
         */
        this.left$ = of([]);
        /**
         * Provides observable for more action items.
         */
        this.more$ = of([]);
        /**
         * Returns true if no items are present and hides the action bar.
         */
        this.hidden$ = of(true);
        /**
         * Binds hidden property to this component's native element
         */
        this.hidden = true;
        this.destroy$ = new Subject();
    }
    mouseDown(event) {
        if (event.getAttribute('id') === 'page-toolbar') {
            return;
        }
        const element = event.closest('[px-event]') || event.closest('[title]') || event.closest('[uib-tooltip]');
        if (!element || element.getAttribute('disabled')) {
            return;
        }
        const itemName = element.getAttribute('px-event') ||
            element.getAttribute('title') ||
            element.getAttribute('uib-tooltip');
        const translatedItemName = this.gainsightService.translateToEnglish(itemName);
        this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.ACTION_BAR.EVENTS.ACTION_BAR_ITEM, {
            component: PRODUCT_EXPERIENCE.ACTION_BAR.COMPONENTS.ACTION_BAR_COMPONENT,
            action: `${translatedItemName}`,
            url: location.href
        });
    }
    ngOnInit() {
        this.right$ = this.items$.pipe(map(items => filter(items, { placement: 'right' })), map(items => sortBy(items, this.byPriority)));
        this.left$ = this.items$.pipe(map(items => filter(items, { placement: 'left' })), map(items => sortBy(items, this.byPriority)));
        this.more$ = this.items$.pipe(map(items => filter(items, { placement: 'more' })), map(items => sortBy(items, this.byPriority)));
        this.hidden$ = this.items$.pipe(map(items => {
            return !(items && items.length);
        }));
        this.hidden$.pipe(takeUntil(this.destroy$)).subscribe(hidden => {
            this.hidden = hidden;
        });
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    byPriority(item) {
        return -item.priority;
    }
}
ActionBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarComponent, deps: [{ token: i1.GainsightService }], target: i0.ɵɵFactoryTarget.Component });
ActionBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ActionBarComponent, selector: "c8y-action-bar", inputs: { navigatorOpen: "navigatorOpen", hasTabs: "hasTabs", isTabsHorizontal: "isTabsHorizontal", items$: "items$" }, host: { listeners: { "mousedown": "mouseDown($event.target)" }, properties: { "class.navigator-open": "this.navigatorOpen", "class.has-tabs": "this.hasTabs", "class.horizontal-tabs": "this.isTabsHorizontal", "class.c8y-ui-action-bar": "this.uiActionBar", "hidden": "this.hidden" }, classAttribute: "c8y-ui-action-bar" }, ngImport: i0, template: "<div class=\"navbar-header\" role=\"presentation\">\n  <p class=\"text-label-small p-l-16 p-t-8 p-b-8 visible-xs\">\n    <span class=\"text-primary\">{{ 'Action bar' | translate }}</span>\n  </p>\n</div>\n\n<div id=\"page-toolbar\" class=\"navbar-collapse\" role=\"complementary\" >\n  <ul class=\"nav navbar-nav navbar-left\">\n    <ng-container *ngFor=\"let item of left$ | async\">\n      <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n    </ng-container>\n  </ul>\n  <ul class=\"nav navbar-nav navbar-right\">\n    <ng-container *ngFor=\"let item of right$ | async\">\n      <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n    </ng-container>\n    <li *ngIf=\"(more$ | async).length === 1; else moreWithMultipleOptions\" class=\"no-remove more-wrapper\">\n      <ng-container *ngFor=\"let item of more$ | async\">\n        <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n      </ng-container>\n    </li>\n    <ng-template #moreWithMultipleOptions>\n      <li class=\"no-remove more-wrapper\" *ngIf=\"(more$ | async).length > 1\">\n        <div class=\"dropdown\" dropdown>\n          <button\n            title=\"{{ 'More\u2026' | translate }}\"\n            type=\"button\"\n            class=\"dropdown-toggle c8y-dropdown d-flex\"\n            dropdownToggle\n            aria-haspopup=\"true\"\n            data-cy=\"action-bar--button-more\"\n          >\n            <span class=\"text-truncate\" translate>More\u2026</span>\n            <i [c8yIcon]=\"'caret-down'\"></i>\n          </button>\n          <ul class=\"dropdown-menu visible-xs\">\n            <ng-container *ngFor=\"let item of more$ | async\">\n              <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n            </ng-container>\n          </ul>\n          <ul class=\"dropdown-menu dropdown-menu-right hidden-xs\" *dropdownMenu>\n            <ng-container *ngFor=\"let item of more$ | async\">\n              <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n            </ng-container>\n          </ul>\n        </div>\n      </li>\n    </ng-template>    \n  </ul>\n</div>\n", dependencies: [{ kind: "directive", type: i2.BsDropdownMenuDirective, selector: "[bsDropdownMenu],[dropdownMenu]", exportAs: ["bs-dropdown-menu"] }, { kind: "directive", type: i2.BsDropdownToggleDirective, selector: "[bsDropdownToggle],[dropdownToggle]", exportAs: ["bs-dropdown-toggle"] }, { kind: "directive", type: i2.BsDropdownDirective, selector: "[bsDropdown], [dropdown]", inputs: ["placement", "triggers", "container", "dropup", "autoClose", "isAnimated", "insideClick", "isDisabled", "isOpen"], outputs: ["isOpenChange", "onShown", "onHidden"], exportAs: ["bs-dropdown"] }, { kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.OutletDirective, selector: "[c8yOutlet]", inputs: ["c8yOutlet", "c8yOutletProperties", "c8yOutletInjector"] }, { kind: "directive", type: i5.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i7.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-action-bar', host: { class: 'c8y-ui-action-bar' }, template: "<div class=\"navbar-header\" role=\"presentation\">\n  <p class=\"text-label-small p-l-16 p-t-8 p-b-8 visible-xs\">\n    <span class=\"text-primary\">{{ 'Action bar' | translate }}</span>\n  </p>\n</div>\n\n<div id=\"page-toolbar\" class=\"navbar-collapse\" role=\"complementary\" >\n  <ul class=\"nav navbar-nav navbar-left\">\n    <ng-container *ngFor=\"let item of left$ | async\">\n      <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n    </ng-container>\n  </ul>\n  <ul class=\"nav navbar-nav navbar-right\">\n    <ng-container *ngFor=\"let item of right$ | async\">\n      <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n    </ng-container>\n    <li *ngIf=\"(more$ | async).length === 1; else moreWithMultipleOptions\" class=\"no-remove more-wrapper\">\n      <ng-container *ngFor=\"let item of more$ | async\">\n        <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n      </ng-container>\n    </li>\n    <ng-template #moreWithMultipleOptions>\n      <li class=\"no-remove more-wrapper\" *ngIf=\"(more$ | async).length > 1\">\n        <div class=\"dropdown\" dropdown>\n          <button\n            title=\"{{ 'More\u2026' | translate }}\"\n            type=\"button\"\n            class=\"dropdown-toggle c8y-dropdown d-flex\"\n            dropdownToggle\n            aria-haspopup=\"true\"\n            data-cy=\"action-bar--button-more\"\n          >\n            <span class=\"text-truncate\" translate>More\u2026</span>\n            <i [c8yIcon]=\"'caret-down'\"></i>\n          </button>\n          <ul class=\"dropdown-menu visible-xs\">\n            <ng-container *ngFor=\"let item of more$ | async\">\n              <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n            </ng-container>\n          </ul>\n          <ul class=\"dropdown-menu dropdown-menu-right hidden-xs\" *dropdownMenu>\n            <ng-container *ngFor=\"let item of more$ | async\">\n              <ng-container *c8yOutlet=\"item.component || item.template; injector: item.injector\"></ng-container>\n            </ng-container>\n          </ul>\n        </div>\n      </li>\n    </ng-template>    \n  </ul>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.GainsightService }]; }, propDecorators: { navigatorOpen: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.navigator-open']
            }], hasTabs: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.has-tabs']
            }], isTabsHorizontal: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.horizontal-tabs']
            }], uiActionBar: [{
                type: HostBinding,
                args: ['class.c8y-ui-action-bar']
            }], items$: [{
                type: Input
            }], hidden: [{
                type: HostBinding
            }], mouseDown: [{
                type: HostListener,
                args: ['mousedown', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,