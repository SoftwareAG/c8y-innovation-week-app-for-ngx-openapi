import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Subject, timer } from 'rxjs';
import { debounce, distinctUntilChanged, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../common/icon.directive";
import * as i2 from "../i18n/c8y-translate.pipe";
export class FilterInputComponent {
    constructor() {
        this.onSearch = new EventEmitter();
        this.filterChange$ = new Subject();
        this.filterTerm = '';
        this.CARRIAGE_RETURN_KEY = 13;
        this.CARRIAGE_RETURN_CODE = 'Enter';
    }
    ngOnInit() {
        this.reset();
        this.filterChange$
            .pipe(debounce((event) => event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY
            ? timer(10)
            : timer(300)), map((e) => e.target.value), distinctUntilChanged())
            .subscribe(filterTerm => {
            this.filterTerm = filterTerm;
            this.onSearch.emit(filterTerm);
        });
    }
    reset() {
        this.filterTerm = '';
        this.onSearch.emit('');
    }
    ngOnDestroy() {
        this.filterChange$.complete();
    }
}
FilterInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilterInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FilterInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: FilterInputComponent, selector: "c8y-filter", inputs: { icon: "icon" }, outputs: { onSearch: "onSearch" }, ngImport: i0, template: "<div class=\"input-group input-group-search\">\n  <input\n    class=\"form-control\"\n    placeholder=\"{{ 'Filter\u2026' | translate }}\"\n    type=\"text\"\n    [value]=\"filterTerm\"\n    (keyup)=\"filterChange$.next($event)\"\n    px-event=\"Filter\u2026\"\n  />\n  <span class=\"input-group-btn\">\n    <button class=\"btn btn-clean\" title=\"{{filterTerm.length === 0 ? ('search' | translate) : ('close' | translate)}}\" px-event=\"Clear filtering\" (click)=\"reset()\">\n      <i [c8yIcon]=\"filterTerm.length === 0 ? 'search' : 'close'\"></i>\n    </button>\n  </span>\n</div>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "pipe", type: i2.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: FilterInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-filter', template: "<div class=\"input-group input-group-search\">\n  <input\n    class=\"form-control\"\n    placeholder=\"{{ 'Filter\u2026' | translate }}\"\n    type=\"text\"\n    [value]=\"filterTerm\"\n    (keyup)=\"filterChange$.next($event)\"\n    px-event=\"Filter\u2026\"\n  />\n  <span class=\"input-group-btn\">\n    <button class=\"btn btn-clean\" title=\"{{filterTerm.length === 0 ? ('search' | translate) : ('close' | translate)}}\" px-event=\"Clear filtering\" (click)=\"reset()\">\n      <i [c8yIcon]=\"filterTerm.length === 0 ? 'search' : 'close'\"></i>\n    </button>\n  </span>\n</div>\n" }]
        }], propDecorators: { icon: [{
                type: Input
            }], onSearch: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvZm9ybXMvZmlsdGVyLWlucHV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2NvcmUvZm9ybXMvZmlsdGVyLWlucHV0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxRQUFRLEVBQUUsb0JBQW9CLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNckUsTUFBTSxPQUFPLG9CQUFvQjtJQUpqQztRQU1ZLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBQ2hELGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUM5QixlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ0Msd0JBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLHlCQUFvQixHQUFHLE9BQU8sQ0FBQztLQTRCakQ7SUExQkMsUUFBUTtRQUNOLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxhQUFhO2FBQ2YsSUFBSSxDQUNILFFBQVEsQ0FBQyxDQUFDLEtBQVUsRUFBRSxFQUFFLENBQ3RCLEtBQUssQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLG9CQUFvQixJQUFJLEtBQUssQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLG1CQUFtQjtZQUNwRixDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUNYLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQ2YsRUFDRCxHQUFHLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQy9CLG9CQUFvQixFQUFFLENBQ3ZCO2FBQ0EsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7aUhBakNVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLCtHQ1JqQyw0a0JBZUE7MkZEUGEsb0JBQW9CO2tCQUpoQyxTQUFTOytCQUNFLFlBQVk7OEJBSWIsSUFBSTtzQkFBWixLQUFLO2dCQUNJLFFBQVE7c0JBQWpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QsIHRpbWVyIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBkZWJvdW5jZSwgZGlzdGluY3RVbnRpbENoYW5nZWQsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWZpbHRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9maWx0ZXItaW5wdXQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEZpbHRlcklucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBpY29uOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBvblNlYXJjaCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBmaWx0ZXJDaGFuZ2UkID0gbmV3IFN1YmplY3QoKTtcbiAgZmlsdGVyVGVybSA9ICcnO1xuICBwcml2YXRlIHJlYWRvbmx5IENBUlJJQUdFX1JFVFVSTl9LRVkgPSAxMztcbiAgcHJpdmF0ZSByZWFkb25seSBDQVJSSUFHRV9SRVRVUk5fQ09ERSA9ICdFbnRlcic7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZXNldCgpO1xuICAgIHRoaXMuZmlsdGVyQ2hhbmdlJFxuICAgICAgLnBpcGUoXG4gICAgICAgIGRlYm91bmNlKChldmVudDogYW55KSA9PlxuICAgICAgICAgIGV2ZW50LmNvZGUgPT09IHRoaXMuQ0FSUklBR0VfUkVUVVJOX0NPREUgfHwgZXZlbnQua2V5Q29kZSA9PT0gdGhpcy5DQVJSSUFHRV9SRVRVUk5fS0VZXG4gICAgICAgICAgICA/IHRpbWVyKDEwKVxuICAgICAgICAgICAgOiB0aW1lcigzMDApXG4gICAgICAgICksXG4gICAgICAgIG1hcCgoZTogYW55KSA9PiBlLnRhcmdldC52YWx1ZSksXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKClcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoZmlsdGVyVGVybSA9PiB7XG4gICAgICAgIHRoaXMuZmlsdGVyVGVybSA9IGZpbHRlclRlcm07XG4gICAgICAgIHRoaXMub25TZWFyY2guZW1pdChmaWx0ZXJUZXJtKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5maWx0ZXJUZXJtID0gJyc7XG4gICAgdGhpcy5vblNlYXJjaC5lbWl0KCcnKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuZmlsdGVyQ2hhbmdlJC5jb21wbGV0ZSgpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc2VhcmNoXCI+XG4gIDxpbnB1dFxuICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICBwbGFjZWhvbGRlcj1cInt7ICdGaWx0ZXLigKYnIHwgdHJhbnNsYXRlIH19XCJcbiAgICB0eXBlPVwidGV4dFwiXG4gICAgW3ZhbHVlXT1cImZpbHRlclRlcm1cIlxuICAgIChrZXl1cCk9XCJmaWx0ZXJDaGFuZ2UkLm5leHQoJGV2ZW50KVwiXG4gICAgcHgtZXZlbnQ9XCJGaWx0ZXLigKZcIlxuICAvPlxuICA8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWJ0blwiPlxuICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLWNsZWFuXCIgdGl0bGU9XCJ7e2ZpbHRlclRlcm0ubGVuZ3RoID09PSAwID8gKCdzZWFyY2gnIHwgdHJhbnNsYXRlKSA6ICgnY2xvc2UnIHwgdHJhbnNsYXRlKX19XCIgcHgtZXZlbnQ9XCJDbGVhciBmaWx0ZXJpbmdcIiAoY2xpY2spPVwicmVzZXQoKVwiPlxuICAgICAgPGkgW2M4eUljb25dPVwiZmlsdGVyVGVybS5sZW5ndGggPT09IDAgPyAnc2VhcmNoJyA6ICdjbG9zZSdcIj48L2k+XG4gICAgPC9idXR0b24+XG4gIDwvc3Bhbj5cbjwvZGl2PlxuIl19