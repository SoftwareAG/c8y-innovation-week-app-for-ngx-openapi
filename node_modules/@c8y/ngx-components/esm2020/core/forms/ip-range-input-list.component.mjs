import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "./min-validation.directive";
import * as i4 from "./form-group.component";
import * as i5 from "./input-group-list.component";
import * as i6 from "./input-group-list-container.directive";
import * as i7 from "./required-input-placeholder.directive";
import * as i8 from "../i18n/c8y-translate.pipe";
export class IpRangeInputListComponent {
    set data(list) {
        this.ipRangeList = list;
        if (this.ipRangeList.length === 0) {
            this.add();
        }
    }
    get data() {
        return this.ipRangeList;
    }
    add() {
        this.ipRangeList.push({ ip: '', cidr: undefined });
    }
    remove(index) {
        this.ipRangeList.splice(index, 1);
    }
}
IpRangeInputListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: IpRangeInputListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
IpRangeInputListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: IpRangeInputListComponent, selector: "c8y-ip-range-input-list", inputs: { data: "data" }, ngImport: i0, template: "<c8y-form-group class=\"m-t-8 m-b-8\">\n  <ul c8yInputGroupListContainer class=\"list-unstyled\">\n    <li class=\"m-b-8\" *ngFor=\"let item of data; let i = index\">\n      <c8y-input-group-list [index]=\"i\" (onAdd)=\"add()\" (onRemove)=\"remove($event)\">\n        <input\n          type=\"text\"\n          name=\"ipAddress\"\n          class=\"form-control m-r-4\"\n          placeholder=\"{{ 'IP range start, e.g.' | translate }} 192.168.0.1\"\n          style=\"flex-grow: 2\"\n          [(ngModel)]=\"item.ip\"\n          [required]=\"true\"\n          #ipAddress\n        />\n        <input\n          type=\"number\"\n          name=\"cidr\"\n          [min]=\"0\"\n          class=\"form-control\"\n          placeholder=\"{{ 'e.g.' | translate }} 20\"\n          [(ngModel)]=\"item.cidr\"\n          [required]=\"true\"\n          #cidr\n        />\n      </c8y-input-group-list>\n    </li>\n  </ul>\n</c8y-form-group>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.MinValidationDirective, selector: "[min]", inputs: ["min"] }, { kind: "component", type: i4.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "component", type: i5.InputGroupListComponent, selector: "c8y-input-group-list", inputs: ["plus", "minus", "index"], outputs: ["onRemove", "onAdd"] }, { kind: "directive", type: i6.InputGroupListContainerDirective, selector: "[c8yInputGroupListContainer]" }, { kind: "directive", type: i7.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "pipe", type: i8.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: IpRangeInputListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-ip-range-input-list', template: "<c8y-form-group class=\"m-t-8 m-b-8\">\n  <ul c8yInputGroupListContainer class=\"list-unstyled\">\n    <li class=\"m-b-8\" *ngFor=\"let item of data; let i = index\">\n      <c8y-input-group-list [index]=\"i\" (onAdd)=\"add()\" (onRemove)=\"remove($event)\">\n        <input\n          type=\"text\"\n          name=\"ipAddress\"\n          class=\"form-control m-r-4\"\n          placeholder=\"{{ 'IP range start, e.g.' | translate }} 192.168.0.1\"\n          style=\"flex-grow: 2\"\n          [(ngModel)]=\"item.ip\"\n          [required]=\"true\"\n          #ipAddress\n        />\n        <input\n          type=\"number\"\n          name=\"cidr\"\n          [min]=\"0\"\n          class=\"form-control\"\n          placeholder=\"{{ 'e.g.' | translate }} 20\"\n          [(ngModel)]=\"item.cidr\"\n          [required]=\"true\"\n          #cidr\n        />\n      </c8y-input-group-list>\n    </li>\n  </ul>\n</c8y-form-group>\n" }]
        }], propDecorators: { data: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXAtcmFuZ2UtaW5wdXQtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2Zvcm1zL2lwLXJhbmdlLWlucHV0LWxpc3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vY29yZS9mb3Jtcy9pcC1yYW5nZS1pbnB1dC1saXN0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7O0FBTWpELE1BQU0sT0FBTyx5QkFBeUI7SUFDcEMsSUFDSSxJQUFJLENBQUMsSUFBSTtRQUNYLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUNaO0lBQ0gsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBSUQsR0FBRztRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQUs7UUFDVixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7c0hBckJVLHlCQUF5QjswR0FBekIseUJBQXlCLHlGQ050QyxzNkJBNEJBOzJGRHRCYSx5QkFBeUI7a0JBSnJDLFNBQVM7K0JBQ0UseUJBQXlCOzhCQUsvQixJQUFJO3NCQURQLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1pcC1yYW5nZS1pbnB1dC1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lwLXJhbmdlLWlucHV0LWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBzZXQgZGF0YShsaXN0KSB7XG4gICAgdGhpcy5pcFJhbmdlTGlzdCA9IGxpc3Q7XG4gICAgaWYgKHRoaXMuaXBSYW5nZUxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLmFkZCgpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBkYXRhKCkge1xuICAgIHJldHVybiB0aGlzLmlwUmFuZ2VMaXN0O1xuICB9XG5cbiAgaXBSYW5nZUxpc3Q6IEFycmF5PHsgaXA6IHN0cmluZzsgY2lkcjogbnVtYmVyIH0+O1xuXG4gIGFkZCgpIHtcbiAgICB0aGlzLmlwUmFuZ2VMaXN0LnB1c2goeyBpcDogJycsIGNpZHI6IHVuZGVmaW5lZCB9KTtcbiAgfVxuXG4gIHJlbW92ZShpbmRleCkge1xuICAgIHRoaXMuaXBSYW5nZUxpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxufVxuIiwiPGM4eS1mb3JtLWdyb3VwIGNsYXNzPVwibS10LTggbS1iLThcIj5cbiAgPHVsIGM4eUlucHV0R3JvdXBMaXN0Q29udGFpbmVyIGNsYXNzPVwibGlzdC11bnN0eWxlZFwiPlxuICAgIDxsaSBjbGFzcz1cIm0tYi04XCIgKm5nRm9yPVwibGV0IGl0ZW0gb2YgZGF0YTsgbGV0IGkgPSBpbmRleFwiPlxuICAgICAgPGM4eS1pbnB1dC1ncm91cC1saXN0IFtpbmRleF09XCJpXCIgKG9uQWRkKT1cImFkZCgpXCIgKG9uUmVtb3ZlKT1cInJlbW92ZSgkZXZlbnQpXCI+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICBuYW1lPVwiaXBBZGRyZXNzXCJcbiAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbCBtLXItNFwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnSVAgcmFuZ2Ugc3RhcnQsIGUuZy4nIHwgdHJhbnNsYXRlIH19IDE5Mi4xNjguMC4xXCJcbiAgICAgICAgICBzdHlsZT1cImZsZXgtZ3JvdzogMlwiXG4gICAgICAgICAgWyhuZ01vZGVsKV09XCJpdGVtLmlwXCJcbiAgICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgICAgI2lwQWRkcmVzc1xuICAgICAgICAvPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICBuYW1lPVwiY2lkclwiXG4gICAgICAgICAgW21pbl09XCIwXCJcbiAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnZS5nLicgfCB0cmFuc2xhdGUgfX0gMjBcIlxuICAgICAgICAgIFsobmdNb2RlbCldPVwiaXRlbS5jaWRyXCJcbiAgICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgICAgI2NpZHJcbiAgICAgICAgLz5cbiAgICAgIDwvYzh5LWlucHV0LWdyb3VwLWxpc3Q+XG4gICAgPC9saT5cbiAgPC91bD5cbjwvYzh5LWZvcm0tZ3JvdXA+XG4iXX0=