import { Directive, QueryList, ContentChildren } from '@angular/core';
import { InputGroupListComponent } from './input-group-list.component';
import * as i0 from "@angular/core";
export class InputGroupListContainerDirective {
    ngAfterContentInit() {
        this.listProjections.map(element => {
            if (element !== this.listProjections.last) {
                setTimeout(() => {
                    element.plus = false;
                });
            }
        });
        this.listProjections.changes.subscribe(elements => {
            if (elements.length === 1) {
                setTimeout(() => {
                    elements.first.plus = true;
                    elements.first.minus = false;
                });
                return;
            }
            elements.map(element => {
                setTimeout(() => {
                    element.minus = true;
                });
                if (element !== elements.last) {
                    setTimeout(() => {
                        element.plus = false;
                    });
                }
                if (element === elements.last) {
                    setTimeout(() => {
                        element.plus = true;
                    });
                }
            });
        });
    }
}
InputGroupListContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: InputGroupListContainerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
InputGroupListContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.7", type: InputGroupListContainerDirective, selector: "[c8yInputGroupListContainer]", queries: [{ propertyName: "listProjections", predicate: InputGroupListComponent }], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: InputGroupListContainerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[c8yInputGroupListContainer]'
                }]
        }], propDecorators: { listProjections: [{
                type: ContentChildren,
                args: [InputGroupListComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZ3JvdXAtbGlzdC1jb250YWluZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9mb3Jtcy9pbnB1dC1ncm91cC1saXN0LWNvbnRhaW5lci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQW9CLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7QUFLdkUsTUFBTSxPQUFPLGdDQUFnQztJQUczQyxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDakMsSUFBSSxPQUFPLEtBQUssSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3pDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7b0JBQ2QsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO2FBQ0o7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNoRCxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN6QixVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztvQkFDM0IsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO2dCQUMvQixDQUFDLENBQUMsQ0FBQztnQkFFSCxPQUFPO2FBQ1I7WUFDRCxRQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNyQixVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2dCQUN2QixDQUFDLENBQUMsQ0FBQztnQkFFSCxJQUFJLE9BQU8sS0FBSyxRQUFRLENBQUMsSUFBSSxFQUFFO29CQUM3QixVQUFVLENBQUMsR0FBRyxFQUFFO3dCQUNkLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO29CQUN2QixDQUFDLENBQUMsQ0FBQztpQkFDSjtnQkFDRCxJQUFJLE9BQU8sS0FBSyxRQUFRLENBQUMsSUFBSSxFQUFFO29CQUM3QixVQUFVLENBQUMsR0FBRyxFQUFFO3dCQUNkLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO29CQUN0QixDQUFDLENBQUMsQ0FBQztpQkFDSjtZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs2SEF0Q1UsZ0NBQWdDO2lIQUFoQyxnQ0FBZ0Msb0dBQzFCLHVCQUF1QjsyRkFEN0IsZ0NBQWdDO2tCQUg1QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7aUJBQ3pDOzhCQUUyQyxlQUFlO3NCQUF4RCxlQUFlO3VCQUFDLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgUXVlcnlMaXN0LCBBZnRlckNvbnRlbnRJbml0LCBDb250ZW50Q2hpbGRyZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElucHV0R3JvdXBMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1ncm91cC1saXN0LmNvbXBvbmVudCc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjOHlJbnB1dEdyb3VwTGlzdENvbnRhaW5lcl0nXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBMaXN0Q29udGFpbmVyRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBDb250ZW50Q2hpbGRyZW4oSW5wdXRHcm91cExpc3RDb21wb25lbnQpIGxpc3RQcm9qZWN0aW9uczogUXVlcnlMaXN0PElucHV0R3JvdXBMaXN0Q29tcG9uZW50PjtcblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5saXN0UHJvamVjdGlvbnMubWFwKGVsZW1lbnQgPT4ge1xuICAgICAgaWYgKGVsZW1lbnQgIT09IHRoaXMubGlzdFByb2plY3Rpb25zLmxhc3QpIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgZWxlbWVudC5wbHVzID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5saXN0UHJvamVjdGlvbnMuY2hhbmdlcy5zdWJzY3JpYmUoZWxlbWVudHMgPT4ge1xuICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBlbGVtZW50cy5maXJzdC5wbHVzID0gdHJ1ZTtcbiAgICAgICAgICBlbGVtZW50cy5maXJzdC5taW51cyA9IGZhbHNlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlbGVtZW50cy5tYXAoZWxlbWVudCA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGVsZW1lbnQubWludXMgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZWxlbWVudCAhPT0gZWxlbWVudHMubGFzdCkge1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgZWxlbWVudC5wbHVzID0gZmFsc2U7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IGVsZW1lbnRzLmxhc3QpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQucGx1cyA9IHRydWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=