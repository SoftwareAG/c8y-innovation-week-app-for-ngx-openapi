import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../common/icon.directive";
import * as i2 from "@angular/common";
/**
 * An icon to display on a list item. Use it with content projection.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-li-icon="rocket"></c8y-li-icon>
 * </c8y-li>
 * ```
 */
export class ListItemIconComponent {
}
ListItemIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ListItemIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ListItemIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ListItemIconComponent, selector: "c8y-list-item-icon, c8y-li-icon", inputs: { icon: "icon", status: "status" }, host: { classAttribute: "c8y-list__item__icon" }, ngImport: i0, template: "<i [c8yIcon]=\"icon\" [ngClass]=\"status\" *ngIf=\"icon\"></i>\n<ng-content></ng-content>", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ListItemIconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-list-item-icon, c8y-li-icon', host: {
                        class: 'c8y-list__item__icon'
                    }, template: "<i [c8yIcon]=\"icon\" [ngClass]=\"status\" *ngIf=\"icon\"></i>\n<ng-content></ng-content>" }]
        }], propDecorators: { icon: [{
                type: Input
            }], status: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9saXN0LWdyb3VwL2xpc3QtaXRlbS1pY29uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2NvcmUvbGlzdC1ncm91cC9saXN0LWl0ZW0taWNvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUVqRDs7Ozs7Ozs7O0dBU0c7QUFRSCxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO3NHQUFyQixxQkFBcUIscUtDbkJsQywyRkFDeUI7MkZEa0JaLHFCQUFxQjtrQkFQakMsU0FBUzsrQkFDRSxpQ0FBaUMsUUFFckM7d0JBQ0osS0FBSyxFQUFFLHNCQUFzQjtxQkFDOUI7OEJBT0QsSUFBSTtzQkFESCxLQUFLO2dCQU9OLE1BQU07c0JBREwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBBbiBpY29uIHRvIGRpc3BsYXkgb24gYSBsaXN0IGl0ZW0uIFVzZSBpdCB3aXRoIGNvbnRlbnQgcHJvamVjdGlvbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbFxuICogPGM4eS1saT5cbiAqICAgPGM4eS1saS1pY29uPVwicm9ja2V0XCI+PC9jOHktbGktaWNvbj5cbiAqIDwvYzh5LWxpPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1saXN0LWl0ZW0taWNvbiwgYzh5LWxpLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vbGlzdC1pdGVtLWljb24uY29tcG9uZW50Lmh0bWwnLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdjOHktbGlzdF9faXRlbV9faWNvbidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBMaXN0SXRlbUljb25Db21wb25lbnQge1xuICAvKipcbiAgICogVGhlIGljb24gbmFtZSBwYXNzZWQgdG8gdGhlIGBjOHlJY29uYCBkaXJlY3RpdmUuXG4gICAqL1xuICBASW5wdXQoKVxuICBpY29uOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEEgc3RhdHVzIHRvIGNoYW5nZSB0aGUgY29sb3Igb2YgdGhlIGljb24uXG4gICAqL1xuICBASW5wdXQoKVxuICBzdGF0dXM/OlxuICAgIHwgJ3N0YXR1c09rJ1xuICAgIHwgJ3N0YXR1c1Vua25vd24nXG4gICAgfCAnc3RhdHVzQWxlcnQnXG4gICAgfCAnc3RhdHVzTm9rJ1xuICAgIHwgJ3N0YXR1cyBjcml0aWNhbCdcbiAgICB8ICdzdGF0dXMgd2FybmluZydcbiAgICB8ICdzdGF0dXMgbWlub3InXG4gICAgfCAnc3RhdHVzIG1ham9yJztcbn1cbiIsIjxpIFtjOHlJY29uXT1cImljb25cIiBbbmdDbGFzc109XCJzdGF0dXNcIiAqbmdJZj1cImljb25cIj48L2k+XG48bmctY29udGVudD48L25nLWNvbnRlbnQ+Il19