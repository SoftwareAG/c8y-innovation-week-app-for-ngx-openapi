import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Display collapsed content on a list item. Can be
 * used for more detailed information. Use it with
 * content projection.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-collapsed>
 *     <strong>I am only visible if extended</strong>
 *   </c8y-collapsed>
 * </c8y-li>
 * ```
 */
export class ListItemCollapseComponent {
    constructor() {
        /**
         * The way how to toggle collapse state.
         * button (default) - additional button for toggle collapse state
         * row - toggling collapse state by clicking to entire row.
         */
        this.collapseWay = 'button';
    }
}
ListItemCollapseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ListItemCollapseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ListItemCollapseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ListItemCollapseComponent, selector: "c8y-list-item-collapse, c8y-li-collapse", inputs: { collapseWay: "collapseWay" }, ngImport: i0, template: "<ng-content></ng-content>\n" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ListItemCollapseComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-list-item-collapse, c8y-li-collapse', template: "<ng-content></ng-content>\n" }]
        }], propDecorators: { collapseWay: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWNvbGxhcHNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbGlzdC1ncm91cC9saXN0LWl0ZW0tY29sbGFwc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vY29yZS9saXN0LWdyb3VwL2xpc3QtaXRlbS1jb2xsYXBzZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFakQ7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUtILE1BQU0sT0FBTyx5QkFBeUI7SUFKdEM7UUFLRTs7OztXQUlHO1FBRUgsZ0JBQVcsR0FBcUIsUUFBUSxDQUFDO0tBQzFDOztzSEFSWSx5QkFBeUI7MEdBQXpCLHlCQUF5Qix1SENwQnRDLDZCQUNBOzJGRG1CYSx5QkFBeUI7a0JBSnJDLFNBQVM7K0JBQ0UseUNBQXlDOzhCQVVuRCxXQUFXO3NCQURWLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogRGlzcGxheSBjb2xsYXBzZWQgY29udGVudCBvbiBhIGxpc3QgaXRlbS4gQ2FuIGJlXG4gKiB1c2VkIGZvciBtb3JlIGRldGFpbGVkIGluZm9ybWF0aW9uLiBVc2UgaXQgd2l0aFxuICogY29udGVudCBwcm9qZWN0aW9uLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8Yzh5LWxpPlxuICogICA8Yzh5LWNvbGxhcHNlZD5cbiAqICAgICA8c3Ryb25nPkkgYW0gb25seSB2aXNpYmxlIGlmIGV4dGVuZGVkPC9zdHJvbmc+XG4gKiAgIDwvYzh5LWNvbGxhcHNlZD5cbiAqIDwvYzh5LWxpPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1saXN0LWl0ZW0tY29sbGFwc2UsIGM4eS1saS1jb2xsYXBzZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXN0LWl0ZW0tY29sbGFwc2UuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIExpc3RJdGVtQ29sbGFwc2VDb21wb25lbnQge1xuICAvKipcbiAgICogVGhlIHdheSBob3cgdG8gdG9nZ2xlIGNvbGxhcHNlIHN0YXRlLlxuICAgKiBidXR0b24gKGRlZmF1bHQpIC0gYWRkaXRpb25hbCBidXR0b24gZm9yIHRvZ2dsZSBjb2xsYXBzZSBzdGF0ZVxuICAgKiByb3cgLSB0b2dnbGluZyBjb2xsYXBzZSBzdGF0ZSBieSBjbGlja2luZyB0byBlbnRpcmUgcm93LlxuICAgKi9cbiAgQElucHV0KClcbiAgY29sbGFwc2VXYXk6ICdidXR0b24nIHwgJ3JvdycgPSAnYnV0dG9uJztcbn1cbiIsIjxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiJdfQ==