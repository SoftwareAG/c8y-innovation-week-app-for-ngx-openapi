import { A11yModule } from '@angular/cdk/a11y';
import { DragDropModule } from '@angular/cdk/drag-drop';
import { CdkTableModule } from '@angular/cdk/table';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PaginationModule } from 'ngx-bootstrap/pagination';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule as C8YCommonModule } from '../common/common.module';
import { DynamicFormsModule } from '../dynamic-forms/dynamic-forms.module';
import { FormsModule as C8yFormsModule } from '../forms/forms.module';
import { ModalModule } from '../modal/modal.module';
import { ProductExperienceModule } from '../product-experience/product-experience.module';
import { BaseFilteringFormRendererComponent } from './column/base.filtering-form-renderer.component';
import { CellRendererDefDirective, HeaderCellRendererDefDirective } from './column/cell-renderer';
import { CellRendererComponent } from './column/cell-renderer.component';
import { ColumnDirective } from './column/column.directive';
import { FilteringFormRendererDefDirective } from './column/filtering-form-renderer';
import { FilteringFormRendererComponent } from './column/filtering-form-renderer.component';
import { ConfigureCustomColumnComponent } from './configure-custom-column/configure-custom-column.component';
import { DataGridComponent } from './data-grid.component';
import { FilterMapperModule } from './filter-chip/filter-mapper.module';
import { IsControlVisiblePipe } from './is-control-visible.pipe';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/dropdown";
import * as i2 from "ngx-bootstrap/popover";
import * as i3 from "ngx-bootstrap/tooltip";
import * as i4 from "ngx-bootstrap/pagination";
export class DataGridModule {
}
DataGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DataGridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DataGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: DataGridModule, declarations: [CellRendererDefDirective,
        HeaderCellRendererDefDirective,
        BaseFilteringFormRendererComponent,
        CellRendererComponent,
        FilteringFormRendererDefDirective,
        FilteringFormRendererComponent,
        ColumnDirective,
        DataGridComponent,
        IsControlVisiblePipe,
        ConfigureCustomColumnComponent], imports: [CommonModule,
        CdkTableModule,
        DragDropModule,
        FormsModule,
        ReactiveFormsModule,
        DynamicFormsModule,
        C8YCommonModule,
        C8yFormsModule,
        ModalModule, i1.BsDropdownModule, i2.PopoverModule, i3.TooltipModule, i4.PaginationModule, ProductExperienceModule,
        A11yModule,
        FilterMapperModule], exports: [CellRendererDefDirective,
        HeaderCellRendererDefDirective,
        FilteringFormRendererDefDirective,
        BaseFilteringFormRendererComponent,
        ColumnDirective,
        DataGridComponent,
        IsControlVisiblePipe] });
DataGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DataGridModule, imports: [CommonModule,
        CdkTableModule,
        DragDropModule,
        FormsModule,
        ReactiveFormsModule,
        DynamicFormsModule,
        C8YCommonModule,
        C8yFormsModule,
        ModalModule,
        BsDropdownModule.forRoot(),
        PopoverModule.forRoot(),
        TooltipModule.forRoot(),
        PaginationModule.forRoot(),
        ProductExperienceModule,
        A11yModule,
        FilterMapperModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: DataGridModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        CdkTableModule,
                        DragDropModule,
                        FormsModule,
                        ReactiveFormsModule,
                        DynamicFormsModule,
                        C8YCommonModule,
                        C8yFormsModule,
                        ModalModule,
                        BsDropdownModule.forRoot(),
                        PopoverModule.forRoot(),
                        TooltipModule.forRoot(),
                        PaginationModule.forRoot(),
                        ProductExperienceModule,
                        A11yModule,
                        FilterMapperModule
                    ],
                    declarations: [
                        CellRendererDefDirective,
                        HeaderCellRendererDefDirective,
                        BaseFilteringFormRendererComponent,
                        CellRendererComponent,
                        FilteringFormRendererDefDirective,
                        FilteringFormRendererComponent,
                        ColumnDirective,
                        DataGridComponent,
                        IsControlVisiblePipe,
                        ConfigureCustomColumnComponent
                    ],
                    exports: [
                        CellRendererDefDirective,
                        HeaderCellRendererDefDirective,
                        FilteringFormRendererDefDirective,
                        BaseFilteringFormRendererComponent,
                        ColumnDirective,
                        DataGridComponent,
                        IsControlVisiblePipe
                    ],
                    entryComponents: [DataGridComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1ncmlkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvZGF0YS1ncmlkL2RhdGEtZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzVELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksSUFBSSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsV0FBVyxJQUFJLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMxRixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNyRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsOEJBQThCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNsRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDckYsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDNUYsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDN0csT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDeEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7OztBQTRDakUsTUFBTSxPQUFPLGNBQWM7OzJHQUFkLGNBQWM7NEdBQWQsY0FBYyxpQkF0QnZCLHdCQUF3QjtRQUN4Qiw4QkFBOEI7UUFDOUIsa0NBQWtDO1FBQ2xDLHFCQUFxQjtRQUNyQixpQ0FBaUM7UUFDakMsOEJBQThCO1FBQzlCLGVBQWU7UUFDZixpQkFBaUI7UUFDakIsb0JBQW9CO1FBQ3BCLDhCQUE4QixhQTNCOUIsWUFBWTtRQUNaLGNBQWM7UUFDZCxjQUFjO1FBQ2QsV0FBVztRQUNYLG1CQUFtQjtRQUNuQixrQkFBa0I7UUFDbEIsZUFBZTtRQUNmLGNBQWM7UUFDZCxXQUFXLGdGQUtYLHVCQUF1QjtRQUN2QixVQUFVO1FBQ1Ysa0JBQWtCLGFBZWxCLHdCQUF3QjtRQUN4Qiw4QkFBOEI7UUFDOUIsaUNBQWlDO1FBQ2pDLGtDQUFrQztRQUNsQyxlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLG9CQUFvQjs0R0FJWCxjQUFjLFlBeEN2QixZQUFZO1FBQ1osY0FBYztRQUNkLGNBQWM7UUFDZCxXQUFXO1FBQ1gsbUJBQW1CO1FBQ25CLGtCQUFrQjtRQUNsQixlQUFlO1FBQ2YsY0FBYztRQUNkLFdBQVc7UUFDWCxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7UUFDMUIsYUFBYSxDQUFDLE9BQU8sRUFBRTtRQUN2QixhQUFhLENBQUMsT0FBTyxFQUFFO1FBQ3ZCLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtRQUMxQix1QkFBdUI7UUFDdkIsVUFBVTtRQUNWLGtCQUFrQjsyRkF5QlQsY0FBYztrQkExQzFCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxjQUFjO3dCQUNkLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YsY0FBYzt3QkFDZCxXQUFXO3dCQUNYLGdCQUFnQixDQUFDLE9BQU8sRUFBRTt3QkFDMUIsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO3dCQUMxQix1QkFBdUI7d0JBQ3ZCLFVBQVU7d0JBQ1Ysa0JBQWtCO3FCQUNuQjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osd0JBQXdCO3dCQUN4Qiw4QkFBOEI7d0JBQzlCLGtDQUFrQzt3QkFDbEMscUJBQXFCO3dCQUNyQixpQ0FBaUM7d0JBQ2pDLDhCQUE4Qjt3QkFDOUIsZUFBZTt3QkFDZixpQkFBaUI7d0JBQ2pCLG9CQUFvQjt3QkFDcEIsOEJBQThCO3FCQUMvQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1Asd0JBQXdCO3dCQUN4Qiw4QkFBOEI7d0JBQzlCLGlDQUFpQzt3QkFDakMsa0NBQWtDO3dCQUNsQyxlQUFlO3dCQUNmLGlCQUFpQjt3QkFDakIsb0JBQW9CO3FCQUNyQjtvQkFDRCxlQUFlLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztpQkFDckMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBMTF5TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgRHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcbmltcG9ydCB7IENka1RhYmxlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3RhYmxlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCc0Ryb3Bkb3duTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9kcm9wZG93bic7XG5pbXBvcnQgeyBQYWdpbmF0aW9uTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wYWdpbmF0aW9uJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgYXMgQzhZQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZHluYW1pYy1mb3Jtcy9keW5hbWljLWZvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSBhcyBDOHlGb3Jtc01vZHVsZSB9IGZyb20gJy4uL2Zvcm1zL2Zvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBQcm9kdWN0RXhwZXJpZW5jZU1vZHVsZSB9IGZyb20gJy4uL3Byb2R1Y3QtZXhwZXJpZW5jZS9wcm9kdWN0LWV4cGVyaWVuY2UubW9kdWxlJztcbmltcG9ydCB7IEJhc2VGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi9iYXNlLmZpbHRlcmluZy1mb3JtLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJEZWZEaXJlY3RpdmUsIEhlYWRlckNlbGxSZW5kZXJlckRlZkRpcmVjdGl2ZSB9IGZyb20gJy4vY29sdW1uL2NlbGwtcmVuZGVyZXInO1xuaW1wb3J0IHsgQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4vY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29sdW1uRGlyZWN0aXZlIH0gZnJvbSAnLi9jb2x1bW4vY29sdW1uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJEZWZEaXJlY3RpdmUgfSBmcm9tICcuL2NvbHVtbi9maWx0ZXJpbmctZm9ybS1yZW5kZXJlcic7XG5pbXBvcnQgeyBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi9maWx0ZXJpbmctZm9ybS1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29uZmlndXJlQ3VzdG9tQ29sdW1uQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maWd1cmUtY3VzdG9tLWNvbHVtbi9jb25maWd1cmUtY3VzdG9tLWNvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YUdyaWRDb21wb25lbnQgfSBmcm9tICcuL2RhdGEtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmlsdGVyTWFwcGVyTW9kdWxlIH0gZnJvbSAnLi9maWx0ZXItY2hpcC9maWx0ZXItbWFwcGVyLm1vZHVsZSc7XG5pbXBvcnQgeyBJc0NvbnRyb2xWaXNpYmxlUGlwZSB9IGZyb20gJy4vaXMtY29udHJvbC12aXNpYmxlLnBpcGUnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIENka1RhYmxlTW9kdWxlLFxuICAgIERyYWdEcm9wTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgRHluYW1pY0Zvcm1zTW9kdWxlLFxuICAgIEM4WUNvbW1vbk1vZHVsZSxcbiAgICBDOHlGb3Jtc01vZHVsZSxcbiAgICBNb2RhbE1vZHVsZSxcbiAgICBCc0Ryb3Bkb3duTW9kdWxlLmZvclJvb3QoKSxcbiAgICBQb3BvdmVyTW9kdWxlLmZvclJvb3QoKSxcbiAgICBUb29sdGlwTW9kdWxlLmZvclJvb3QoKSxcbiAgICBQYWdpbmF0aW9uTW9kdWxlLmZvclJvb3QoKSxcbiAgICBQcm9kdWN0RXhwZXJpZW5jZU1vZHVsZSxcbiAgICBBMTF5TW9kdWxlLFxuICAgIEZpbHRlck1hcHBlck1vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDZWxsUmVuZGVyZXJEZWZEaXJlY3RpdmUsXG4gICAgSGVhZGVyQ2VsbFJlbmRlcmVyRGVmRGlyZWN0aXZlLFxuICAgIEJhc2VGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQsXG4gICAgQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEZpbHRlcmluZ0Zvcm1SZW5kZXJlckRlZkRpcmVjdGl2ZSxcbiAgICBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQsXG4gICAgQ29sdW1uRGlyZWN0aXZlLFxuICAgIERhdGFHcmlkQ29tcG9uZW50LFxuICAgIElzQ29udHJvbFZpc2libGVQaXBlLFxuICAgIENvbmZpZ3VyZUN1c3RvbUNvbHVtbkNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgQ2VsbFJlbmRlcmVyRGVmRGlyZWN0aXZlLFxuICAgIEhlYWRlckNlbGxSZW5kZXJlckRlZkRpcmVjdGl2ZSxcbiAgICBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJEZWZEaXJlY3RpdmUsXG4gICAgQmFzZUZpbHRlcmluZ0Zvcm1SZW5kZXJlckNvbXBvbmVudCxcbiAgICBDb2x1bW5EaXJlY3RpdmUsXG4gICAgRGF0YUdyaWRDb21wb25lbnQsXG4gICAgSXNDb250cm9sVmlzaWJsZVBpcGVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbRGF0YUdyaWRDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIERhdGFHcmlkTW9kdWxlIHt9XG4iXX0=