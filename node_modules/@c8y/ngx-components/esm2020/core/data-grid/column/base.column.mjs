import { BaseFilteringFormRendererComponent } from './base.filtering-form-renderer.component';
export class BaseColumn {
    constructor(config = {}) {
        this.filteringFormRendererComponent = BaseFilteringFormRendererComponent;
        Object.assign(this, config);
        if (config.filter?.externalFilterQuery) {
            this.externalFilterQuery = config.filter.externalFilterQuery;
        }
    }
    /**
     * Gets a label template to be used in the schema-form's `type: 'template'` form item.
     * @param label The label to be displayed.
     * @param options Additional options:
     *   - `showWildcardTooltip`: `boolean` - appends a tooltip explaining wildcard usage
     * @returns The string with the template.
     */
    getLabelTemplate(label, options = {}) {
        const wildcardTooltip = `
      <i
        class="text-info"
        c8y-icon="info-circle"
        title="{{ 'Use * as a wildcard character' | translate }}"
      ></i>
    `;
        return `
      <label>
        <span>
          {{ '${label}' | translate }}
        </span>
        ${options.showWildcardTooltip ? wildcardTooltip : ''}
      </label>
    `;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5jb2x1bW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2RhdGEtZ3JpZC9jb2x1bW4vYmFzZS5jb2x1bW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVUEsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFFOUYsTUFBTSxPQUFPLFVBQVU7SUEyQnJCLFlBQVksU0FBdUIsRUFBRTtRQUNuQyxJQUFJLENBQUMsOEJBQThCLEdBQUcsa0NBQWtDLENBQUM7UUFDekUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDNUIsSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFLG1CQUFtQixFQUFFO1lBQ3RDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDO1NBQzlEO0lBQ0gsQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNILGdCQUFnQixDQUFDLEtBQWEsRUFBRSxVQUE2QyxFQUFFO1FBQzdFLE1BQU0sZUFBZSxHQUFHOzs7Ozs7S0FNdkIsQ0FBQztRQUNGLE9BQU87OztnQkFHSyxLQUFLOztVQUVYLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxFQUFFOztLQUV2RCxDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ29sdW1uLFxuICBDb2x1bW5Db25maWcsXG4gIENvbHVtbkRhdGFUeXBlLFxuICBDb2x1bW5Tb3J0aW5nQ29uZmlnLFxuICBGaWx0ZXJQcmVkaWNhdGVGdW5jdGlvbixcbiAgRm9ybWx5Q29sdW1uRmlsdGVyaW5nQ29uZmlnLFxuICBTb3J0T3JkZXJcbn0gZnJvbSAnLi4vZGF0YS1ncmlkLm1vZGVsJztcbmltcG9ydCB7IEJhc2VGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2Jhc2UuZmlsdGVyaW5nLWZvcm0tcmVuZGVyZXIuY29tcG9uZW50JztcblxuZXhwb3J0IGNsYXNzIEJhc2VDb2x1bW4gaW1wbGVtZW50cyBDb2x1bW4ge1xuICBuYW1lOiBzdHJpbmc7XG4gIHBhdGg/OiBzdHJpbmc7XG4gIGhlYWRlcj86IHN0cmluZztcbiAgZGF0YVR5cGU/OiBDb2x1bW5EYXRhVHlwZTtcblxuICB2aXNpYmxlPzogYm9vbGVhbjtcbiAgcG9zaXRpb25GaXhlZD86IGJvb2xlYW47XG4gIHJlc2l6YWJsZT86IGJvb2xlYW47XG4gIGdyaWRUcmFja1NpemU/OiBzdHJpbmc7XG5cbiAgaGVhZGVyQ1NTQ2xhc3NOYW1lPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIGhlYWRlckNlbGxSZW5kZXJlckNvbXBvbmVudD86IFR5cGU8YW55PjtcblxuICBjZWxsQ1NTQ2xhc3NOYW1lPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIGNlbGxSZW5kZXJlckNvbXBvbmVudD86IFR5cGU8YW55PjtcblxuICBzb3J0YWJsZT86IGJvb2xlYW47XG4gIHNvcnRpbmdDb25maWc/OiBDb2x1bW5Tb3J0aW5nQ29uZmlnO1xuICBzb3J0T3JkZXI/OiBTb3J0T3JkZXI7XG5cbiAgZmlsdGVyYWJsZT86IGJvb2xlYW47XG4gIGZpbHRlcmluZ0NvbmZpZz86IEZvcm1seUNvbHVtbkZpbHRlcmluZ0NvbmZpZztcbiAgZmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29tcG9uZW50PzogVHlwZTxhbnk+O1xuICBmaWx0ZXJQcmVkaWNhdGU/OiBzdHJpbmcgfCBGaWx0ZXJQcmVkaWNhdGVGdW5jdGlvbjtcbiAgZXh0ZXJuYWxGaWx0ZXJRdWVyeT86IHN0cmluZyB8IG9iamVjdDtcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IENvbHVtbkNvbmZpZyA9IHt9KSB7XG4gICAgdGhpcy5maWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgPSBCYXNlRmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29tcG9uZW50O1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgY29uZmlnKTtcbiAgICBpZiAoY29uZmlnLmZpbHRlcj8uZXh0ZXJuYWxGaWx0ZXJRdWVyeSkge1xuICAgICAgdGhpcy5leHRlcm5hbEZpbHRlclF1ZXJ5ID0gY29uZmlnLmZpbHRlci5leHRlcm5hbEZpbHRlclF1ZXJ5O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGEgbGFiZWwgdGVtcGxhdGUgdG8gYmUgdXNlZCBpbiB0aGUgc2NoZW1hLWZvcm0ncyBgdHlwZTogJ3RlbXBsYXRlJ2AgZm9ybSBpdGVtLlxuICAgKiBAcGFyYW0gbGFiZWwgVGhlIGxhYmVsIHRvIGJlIGRpc3BsYXllZC5cbiAgICogQHBhcmFtIG9wdGlvbnMgQWRkaXRpb25hbCBvcHRpb25zOlxuICAgKiAgIC0gYHNob3dXaWxkY2FyZFRvb2x0aXBgOiBgYm9vbGVhbmAgLSBhcHBlbmRzIGEgdG9vbHRpcCBleHBsYWluaW5nIHdpbGRjYXJkIHVzYWdlXG4gICAqIEByZXR1cm5zIFRoZSBzdHJpbmcgd2l0aCB0aGUgdGVtcGxhdGUuXG4gICAqL1xuICBnZXRMYWJlbFRlbXBsYXRlKGxhYmVsOiBzdHJpbmcsIG9wdGlvbnM6IHsgc2hvd1dpbGRjYXJkVG9vbHRpcD86IGJvb2xlYW4gfSA9IHt9KTogc3RyaW5nIHtcbiAgICBjb25zdCB3aWxkY2FyZFRvb2x0aXAgPSBgXG4gICAgICA8aVxuICAgICAgICBjbGFzcz1cInRleHQtaW5mb1wiXG4gICAgICAgIGM4eS1pY29uPVwiaW5mby1jaXJjbGVcIlxuICAgICAgICB0aXRsZT1cInt7ICdVc2UgKiBhcyBhIHdpbGRjYXJkIGNoYXJhY3RlcicgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgPjwvaT5cbiAgICBgO1xuICAgIHJldHVybiBgXG4gICAgICA8bGFiZWw+XG4gICAgICAgIDxzcGFuPlxuICAgICAgICAgIHt7ICcke2xhYmVsfScgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICAke29wdGlvbnMuc2hvd1dpbGRjYXJkVG9vbHRpcCA/IHdpbGRjYXJkVG9vbHRpcCA6ICcnfVxuICAgICAgPC9sYWJlbD5cbiAgICBgO1xuICB9XG59XG4iXX0=