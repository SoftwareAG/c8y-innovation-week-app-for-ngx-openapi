/* tslint:disable:max-classes-per-file */
import { Directive, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export class CellRendererContext {
}
export class CellRendererDefDirective {
    constructor(template) {
        this.template = template;
    }
}
CellRendererDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: CellRendererDefDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CellRendererDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.7", type: CellRendererDefDirective, selector: "[c8yCellRendererDef]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: CellRendererDefDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[c8yCellRendererDef]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class HeaderCellRendererDefDirective {
    constructor(template) {
        this.template = template;
    }
}
HeaderCellRendererDefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: HeaderCellRendererDefDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
HeaderCellRendererDefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.7", type: HeaderCellRendererDefDirective, selector: "[c8yHeaderCellRendererDef]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: HeaderCellRendererDefDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[c8yHeaderCellRendererDef]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1yZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZGF0YS1ncmlkL2NvbHVtbi9jZWxsLXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUV6QyxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBUSxNQUFNLGVBQWUsQ0FBQzs7QUFhN0QsTUFBTSxPQUFPLG1CQUFtQjtDQUkvQjtBQUdELE1BQU0sT0FBTyx3QkFBd0I7SUFDbkMsWUFBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7SUFBRyxDQUFDOztxSEFEdEMsd0JBQXdCO3lHQUF4Qix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFEcEMsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRTs7QUFNL0MsTUFBTSxPQUFPLDhCQUE4QjtJQUN6QyxZQUFtQixRQUEwQjtRQUExQixhQUFRLEdBQVIsUUFBUSxDQUFrQjtJQUFHLENBQUM7OzJIQUR0Qyw4QkFBOEI7K0dBQTlCLDhCQUE4QjsyRkFBOUIsOEJBQThCO2tCQUQxQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGU6bWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb2x1bW4gfSBmcm9tICcuLi9kYXRhLWdyaWQubW9kZWwnO1xuXG5leHBvcnQgaW50ZXJmYWNlIENlbGxSZW5kZXJlckRlZiB7XG4gIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENlbGxSZW5kZXJlclNwZWMge1xuICByZW5kZXJlcjogVGVtcGxhdGVSZWY8Q2VsbFJlbmRlcmVyQ29udGV4dD4gfCBUeXBlPGFueT47XG4gIGNvbnRleHQ6IENlbGxSZW5kZXJlckNvbnRleHQ7XG59XG5cbmV4cG9ydCBjbGFzcyBDZWxsUmVuZGVyZXJDb250ZXh0IHtcbiAgdmFsdWU6IGFueTtcbiAgaXRlbT86IGFueTtcbiAgcHJvcGVydHk6IENvbHVtbjtcbn1cblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2M4eUNlbGxSZW5kZXJlckRlZl0nIH0pXG5leHBvcnQgY2xhc3MgQ2VsbFJlbmRlcmVyRGVmRGlyZWN0aXZlIGltcGxlbWVudHMgQ2VsbFJlbmRlcmVyRGVmIHtcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbYzh5SGVhZGVyQ2VsbFJlbmRlcmVyRGVmXScgfSlcbmV4cG9ydCBjbGFzcyBIZWFkZXJDZWxsUmVuZGVyZXJEZWZEaXJlY3RpdmUgaW1wbGVtZW50cyBDZWxsUmVuZGVyZXJEZWYge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHt9XG59XG4iXX0=