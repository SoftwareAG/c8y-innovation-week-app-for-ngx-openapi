import { Component, Input } from '@angular/core';
import { sortBy } from 'lodash-es';
import { BehaviorSubject } from 'rxjs';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../common/icon.directive";
import * as i2 from "../common/outlet.directive";
import * as i3 from "@angular/common";
import * as i4 from "ngx-bootstrap/dropdown";
import * as i5 from "../i18n/c8y-translate.pipe";
/**
 * This component is used as the outlet to show the action list.
 * In a c8ycli app it is by default placed on the header component near app-switcher.
 */
export class ActionOutletComponent {
    constructor() {
        /**
         * Identifies if in a mobile view the toolbar is expanded or not.
         */
        this.isPageToolbarExpanded = false;
        this.items$ = new BehaviorSubject([]);
        /**
         * Returns the items that are displayed in the "add"-dropdown ordered by priority.
         */
        this.templatesAndLabels$ = this.items$.pipe(map(items => sortBy(items.filter(action => !action.component), this.byPriority)));
        /**
         * Returns the items that are displayed at the top navigation.
         */
        this.components$ = this.items$.pipe(map(items => sortBy(items.filter(action => action.component), this.byPriority)));
    }
    /**
     * The current items to display in the action dropdown.
     */
    set items(value) {
        this.items$.next(value);
    }
    get items() {
        return this.items$.value;
    }
    /**
     * Invokes action after an action is clicked.
     */
    invoke(action) {
        if (action.action) {
            action.action.call();
        }
    }
    byPriority(item) {
        return -item.priority;
    }
}
ActionOutletComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionOutletComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ActionOutletComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ActionOutletComponent, selector: "c8y-action-outlet", inputs: { items: "items" }, host: { classAttribute: "d-contents" }, ngImport: i0, template: "<ng-container *ngIf=\"(components$ | async)?.length > 0\">\n  <div class=\"main-header-item\" *ngFor=\"let item of components$ | async\">\n    <ng-container *ngComponentOutlet=\"item.component; injector: item.injector\"></ng-container>\n  </div>\n</ng-container>\n<ng-container>\n  <div class=\"main-header-item\" *ngIf=\"(templatesAndLabels$ | async)?.length > 0\">\n    <div class=\"dropdown\" dropdown>\n      <button\n        type=\"button\"\n        class=\"main-header-button dropdown-toggle c8y-dropdown\"\n        dropdownToggle\n        aria-haspopup=\"true\"\n        title=\"{{ 'Actions' | translate }}\"\n      >\n        <i [c8yIcon]=\"'plus-circle'\" class=\"icon-2x\"></i>\n      </button>\n\n      <ul class=\"dropdown-menu cog-dropdown\" *dropdownMenu>\n        <ng-container *ngFor=\"let item of templatesAndLabels$ | async\">\n          <ng-container *c8yOutlet=\"item.template; injector: item.injector\"></ng-container>\n          <li *ngIf=\"item.label\">\n            <button\n              title=\"{{ item.label | translate }}\"\n              type=\"button\"\n              [attr.disabled]=\"item.disabled ? 'disabled' : null\"\n              (click)=\"invoke(item)\"\n            >\n              <i *ngIf=\"item.icon\" [c8yIcon]=\"item.icon\"></i>\n              {{ item.label | translate }}\n            </button>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.OutletDirective, selector: "[c8yOutlet]", inputs: ["c8yOutlet", "c8yOutletProperties", "c8yOutletInjector"] }, { kind: "directive", type: i3.NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModule", "ngComponentOutletNgModuleFactory"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.BsDropdownMenuDirective, selector: "[bsDropdownMenu],[dropdownMenu]", exportAs: ["bs-dropdown-menu"] }, { kind: "directive", type: i4.BsDropdownToggleDirective, selector: "[bsDropdownToggle],[dropdownToggle]", exportAs: ["bs-dropdown-toggle"] }, { kind: "directive", type: i4.BsDropdownDirective, selector: "[bsDropdown], [dropdown]", inputs: ["placement", "triggers", "container", "dropup", "autoClose", "isAnimated", "insideClick", "isDisabled", "isOpen"], outputs: ["isOpenChange", "onShown", "onHidden"], exportAs: ["bs-dropdown"] }, { kind: "pipe", type: i5.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ActionOutletComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-action-outlet', host: { class: 'd-contents' }, template: "<ng-container *ngIf=\"(components$ | async)?.length > 0\">\n  <div class=\"main-header-item\" *ngFor=\"let item of components$ | async\">\n    <ng-container *ngComponentOutlet=\"item.component; injector: item.injector\"></ng-container>\n  </div>\n</ng-container>\n<ng-container>\n  <div class=\"main-header-item\" *ngIf=\"(templatesAndLabels$ | async)?.length > 0\">\n    <div class=\"dropdown\" dropdown>\n      <button\n        type=\"button\"\n        class=\"main-header-button dropdown-toggle c8y-dropdown\"\n        dropdownToggle\n        aria-haspopup=\"true\"\n        title=\"{{ 'Actions' | translate }}\"\n      >\n        <i [c8yIcon]=\"'plus-circle'\" class=\"icon-2x\"></i>\n      </button>\n\n      <ul class=\"dropdown-menu cog-dropdown\" *dropdownMenu>\n        <ng-container *ngFor=\"let item of templatesAndLabels$ | async\">\n          <ng-container *c8yOutlet=\"item.template; injector: item.injector\"></ng-container>\n          <li *ngIf=\"item.label\">\n            <button\n              title=\"{{ item.label | translate }}\"\n              type=\"button\"\n              [attr.disabled]=\"item.disabled ? 'disabled' : null\"\n              (click)=\"invoke(item)\"\n            >\n              <i *ngIf=\"item.icon\" [c8yIcon]=\"item.icon\"></i>\n              {{ item.label | translate }}\n            </button>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </div>\n</ng-container>\n" }]
        }], propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLW91dGxldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2FjdGlvbi9hY3Rpb24tb3V0bGV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2NvcmUvYWN0aW9uL2FjdGlvbi1vdXRsZXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNuQyxPQUFPLEVBQUUsZUFBZSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQUdyQzs7O0dBR0c7QUFNSCxNQUFNLE9BQU8scUJBQXFCO0lBTGxDO1FBTUU7O1dBRUc7UUFDSCwwQkFBcUIsR0FBRyxLQUFLLENBQUM7UUFhdEIsV0FBTSxHQUE4QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVwRTs7V0FFRztRQUNILHdCQUFtQixHQUF5QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDMUQsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQ1YsTUFBTSxDQUNKLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFDekMsSUFBSSxDQUFDLFVBQVUsQ0FDaEIsQ0FDRixDQUNGLENBQUM7UUFFRjs7V0FFRztRQUNILGdCQUFXLEdBQXlCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNsRCxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FDVixNQUFNLENBQ0osS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFDeEMsSUFBSSxDQUFDLFVBQVUsQ0FDaEIsQ0FDRixDQUNGLENBQUM7S0FjSDtJQWpEQzs7T0FFRztJQUNILElBQ0ksS0FBSyxDQUFDLEtBQUs7UUFDYixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUMzQixDQUFDO0lBNEJEOztPQUVHO0lBQ0gsTUFBTSxDQUFDLE1BQU07UUFDWCxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDakIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN0QjtJQUNILENBQUM7SUFFTyxVQUFVLENBQUMsSUFBSTtRQUNyQixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN4QixDQUFDOztrSEF0RFUscUJBQXFCO3NHQUFyQixxQkFBcUIsNkhDZmxDLDg1Q0FxQ0E7MkZEdEJhLHFCQUFxQjtrQkFMakMsU0FBUzsrQkFDRSxtQkFBbUIsUUFFdkIsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFOzhCQVl6QixLQUFLO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBzb3J0QnkgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL2FjdGlvbi5tb2RlbCc7XG5cbi8qKlxuICogVGhpcyBjb21wb25lbnQgaXMgdXNlZCBhcyB0aGUgb3V0bGV0IHRvIHNob3cgdGhlIGFjdGlvbiBsaXN0LlxuICogSW4gYSBjOHljbGkgYXBwIGl0IGlzIGJ5IGRlZmF1bHQgcGxhY2VkIG9uIHRoZSBoZWFkZXIgY29tcG9uZW50IG5lYXIgYXBwLXN3aXRjaGVyLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYWN0aW9uLW91dGxldCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpb24tb3V0bGV0LmNvbXBvbmVudC5odG1sJyxcbiAgaG9zdDogeyBjbGFzczogJ2QtY29udGVudHMnIH1cbn0pXG5leHBvcnQgY2xhc3MgQWN0aW9uT3V0bGV0Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIElkZW50aWZpZXMgaWYgaW4gYSBtb2JpbGUgdmlldyB0aGUgdG9vbGJhciBpcyBleHBhbmRlZCBvciBub3QuXG4gICAqL1xuICBpc1BhZ2VUb29sYmFyRXhwYW5kZWQgPSBmYWxzZTtcblxuICAvKipcbiAgICogVGhlIGN1cnJlbnQgaXRlbXMgdG8gZGlzcGxheSBpbiB0aGUgYWN0aW9uIGRyb3Bkb3duLlxuICAgKi9cbiAgQElucHV0KClcbiAgc2V0IGl0ZW1zKHZhbHVlKSB7XG4gICAgdGhpcy5pdGVtcyQubmV4dCh2YWx1ZSk7XG4gIH1cbiAgZ2V0IGl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLml0ZW1zJC52YWx1ZTtcbiAgfVxuXG4gIHByaXZhdGUgaXRlbXMkOiBCZWhhdmlvclN1YmplY3Q8QWN0aW9uW10+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChbXSk7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGl0ZW1zIHRoYXQgYXJlIGRpc3BsYXllZCBpbiB0aGUgXCJhZGRcIi1kcm9wZG93biBvcmRlcmVkIGJ5IHByaW9yaXR5LlxuICAgKi9cbiAgdGVtcGxhdGVzQW5kTGFiZWxzJDogT2JzZXJ2YWJsZTxBY3Rpb25bXT4gPSB0aGlzLml0ZW1zJC5waXBlKFxuICAgIG1hcChpdGVtcyA9PlxuICAgICAgc29ydEJ5KFxuICAgICAgICBpdGVtcy5maWx0ZXIoYWN0aW9uID0+ICFhY3Rpb24uY29tcG9uZW50KSxcbiAgICAgICAgdGhpcy5ieVByaW9yaXR5XG4gICAgICApXG4gICAgKVxuICApO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpdGVtcyB0aGF0IGFyZSBkaXNwbGF5ZWQgYXQgdGhlIHRvcCBuYXZpZ2F0aW9uLlxuICAgKi9cbiAgY29tcG9uZW50cyQ6IE9ic2VydmFibGU8QWN0aW9uW10+ID0gdGhpcy5pdGVtcyQucGlwZShcbiAgICBtYXAoaXRlbXMgPT5cbiAgICAgIHNvcnRCeShcbiAgICAgICAgaXRlbXMuZmlsdGVyKGFjdGlvbiA9PiBhY3Rpb24uY29tcG9uZW50KSxcbiAgICAgICAgdGhpcy5ieVByaW9yaXR5XG4gICAgICApXG4gICAgKVxuICApO1xuXG4gIC8qKlxuICAgKiBJbnZva2VzIGFjdGlvbiBhZnRlciBhbiBhY3Rpb24gaXMgY2xpY2tlZC5cbiAgICovXG4gIGludm9rZShhY3Rpb24pIHtcbiAgICBpZiAoYWN0aW9uLmFjdGlvbikge1xuICAgICAgYWN0aW9uLmFjdGlvbi5jYWxsKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBieVByaW9yaXR5KGl0ZW0pIHtcbiAgICByZXR1cm4gLWl0ZW0ucHJpb3JpdHk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCIoY29tcG9uZW50cyQgfCBhc3luYyk/Lmxlbmd0aCA+IDBcIj5cbiAgPGRpdiBjbGFzcz1cIm1haW4taGVhZGVyLWl0ZW1cIiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBjb21wb25lbnRzJCB8IGFzeW5jXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdDb21wb25lbnRPdXRsZXQ9XCJpdGVtLmNvbXBvbmVudDsgaW5qZWN0b3I6IGl0ZW0uaW5qZWN0b3JcIj48L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXI+XG4gIDxkaXYgY2xhc3M9XCJtYWluLWhlYWRlci1pdGVtXCIgKm5nSWY9XCIodGVtcGxhdGVzQW5kTGFiZWxzJCB8IGFzeW5jKT8ubGVuZ3RoID4gMFwiPlxuICAgIDxkaXYgY2xhc3M9XCJkcm9wZG93blwiIGRyb3Bkb3duPlxuICAgICAgPGJ1dHRvblxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgY2xhc3M9XCJtYWluLWhlYWRlci1idXR0b24gZHJvcGRvd24tdG9nZ2xlIGM4eS1kcm9wZG93blwiXG4gICAgICAgIGRyb3Bkb3duVG9nZ2xlXG4gICAgICAgIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCJcbiAgICAgICAgdGl0bGU9XCJ7eyAnQWN0aW9ucycgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgPlxuICAgICAgICA8aSBbYzh5SWNvbl09XCIncGx1cy1jaXJjbGUnXCIgY2xhc3M9XCJpY29uLTJ4XCI+PC9pPlxuICAgICAgPC9idXR0b24+XG5cbiAgICAgIDx1bCBjbGFzcz1cImRyb3Bkb3duLW1lbnUgY29nLWRyb3Bkb3duXCIgKmRyb3Bkb3duTWVudT5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgaXRlbSBvZiB0ZW1wbGF0ZXNBbmRMYWJlbHMkIHwgYXN5bmNcIj5cbiAgICAgICAgICA8bmctY29udGFpbmVyICpjOHlPdXRsZXQ9XCJpdGVtLnRlbXBsYXRlOyBpbmplY3RvcjogaXRlbS5pbmplY3RvclwiPjwvbmctY29udGFpbmVyPlxuICAgICAgICAgIDxsaSAqbmdJZj1cIml0ZW0ubGFiZWxcIj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgdGl0bGU9XCJ7eyBpdGVtLmxhYmVsIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIFthdHRyLmRpc2FibGVkXT1cIml0ZW0uZGlzYWJsZWQgPyAnZGlzYWJsZWQnIDogbnVsbFwiXG4gICAgICAgICAgICAgIChjbGljayk9XCJpbnZva2UoaXRlbSlcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aSAqbmdJZj1cIml0ZW0uaWNvblwiIFtjOHlJY29uXT1cIml0ZW0uaWNvblwiPjwvaT5cbiAgICAgICAgICAgICAge3sgaXRlbS5sYWJlbCB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuIl19