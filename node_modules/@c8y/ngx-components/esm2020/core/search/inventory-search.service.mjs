import { Injectable } from '@angular/core';
import { InventoryService, QueriesUtil } from '@c8y/client';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
export class InventorySearchService {
    constructor(inventoryService) {
        this.inventoryService = inventoryService;
        this.DEFAULT_PAGE_SIZE = 50;
        this.queriesUtil = new QueriesUtil();
    }
    /**
     * Returns the full-text search results.
     *
     * @param term The search term.
     * @param pagination The currently used pagination.
     */
    search(term, pagination = { currentPage: 1, pageSize: this.DEFAULT_PAGE_SIZE }) {
        return this.inventoryService.list({
            text: term,
            withTotalPages: true,
            pageSize: pagination.pageSize,
            withChildren: false,
            currentPage: pagination.currentPage || 1
        });
    }
    /**
     * Returns group search results by name.
     *
     * @param term The search term - name of group.
     * @param pagination The currently used pagination.
     */
    searchGroups(term, pagination = { currentPage: 1, pageSize: this.DEFAULT_PAGE_SIZE }) {
        const searchFilterQuery = this.getGroupsSearchFilterQuery();
        const query = this.queriesUtil.addAndFilter(searchFilterQuery, { name: `*${term}*` });
        return this.inventoryService.listQuery(query, {
            withTotalPages: true,
            pageSize: pagination.pageSize,
            withChildren: false,
            currentPage: pagination.currentPage || 1
        });
    }
    /**
     * Will return only valid group assets and filter out
     * none useful inventories (e.g. c8y_JsonSchema).
     * @param data All managed objects that should be filtered.
     */
    filterOnlyGroups(data) {
        return data.filter(mo => mo.c8y_IsDeviceGroup || mo.c8y_IsDynamicGroup);
    }
    getGroupsSearchFilterQuery() {
        return {
            __filter: {
                __and: [
                    { __not: { __has: 'c8y_IsDynamicGroup.invisible' } },
                    {
                        __or: [{ __has: 'c8y_IsDeviceGroup' }, { __has: 'c8y_IsDynamicGroup' }]
                    }
                ]
            }
        };
    }
}
InventorySearchService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: InventorySearchService, deps: [{ token: i1.InventoryService }], target: i0.ɵɵFactoryTarget.Injectable });
InventorySearchService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: InventorySearchService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: InventorySearchService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i1.InventoryService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZW50b3J5LXNlYXJjaC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9zZWFyY2gvaW52ZW50b3J5LXNlYXJjaC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFrQixnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7OztBQU01RSxNQUFNLE9BQU8sc0JBQXNCO0lBR2pDLFlBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBRjVDLHNCQUFpQixHQUFHLEVBQUUsQ0FBQztRQUcvQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUNKLElBQVksRUFDWixhQUF5QixFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtRQUU3RSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7WUFDaEMsSUFBSSxFQUFFLElBQUk7WUFDVixjQUFjLEVBQUUsSUFBSTtZQUNwQixRQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVE7WUFDN0IsWUFBWSxFQUFFLEtBQUs7WUFDbkIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksQ0FBQztTQUN6QyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxZQUFZLENBQ1YsSUFBWSxFQUNaLGFBQXlCLEVBQUUsV0FBVyxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1FBRTdFLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7UUFDNUQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFFdEYsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRTtZQUM1QyxjQUFjLEVBQUUsSUFBSTtZQUNwQixRQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVE7WUFDN0IsWUFBWSxFQUFFLEtBQUs7WUFDbkIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksQ0FBQztTQUN6QyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILGdCQUFnQixDQUFDLElBQXNCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRU8sMEJBQTBCO1FBQ2hDLE9BQU87WUFDTCxRQUFRLEVBQUU7Z0JBQ1IsS0FBSyxFQUFFO29CQUNMLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLDhCQUE4QixFQUFFLEVBQUU7b0JBQ3BEO3dCQUNFLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQztxQkFDeEU7aUJBQ0Y7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzttSEFuRVUsc0JBQXNCO3VIQUF0QixzQkFBc0IsY0FGckIsTUFBTTsyRkFFUCxzQkFBc0I7a0JBSGxDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIEludmVudG9yeVNlcnZpY2UsIFF1ZXJpZXNVdGlsIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgUGFnaW5hdGlvbiB9IGZyb20gJy4uL2RhdGEtZ3JpZCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEludmVudG9yeVNlYXJjaFNlcnZpY2Uge1xuICBwcm90ZWN0ZWQgREVGQVVMVF9QQUdFX1NJWkUgPSA1MDtcbiAgcHJpdmF0ZSBxdWVyaWVzVXRpbDogUXVlcmllc1V0aWw7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW52ZW50b3J5U2VydmljZTogSW52ZW50b3J5U2VydmljZSkge1xuICAgIHRoaXMucXVlcmllc1V0aWwgPSBuZXcgUXVlcmllc1V0aWwoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBmdWxsLXRleHQgc2VhcmNoIHJlc3VsdHMuXG4gICAqXG4gICAqIEBwYXJhbSB0ZXJtIFRoZSBzZWFyY2ggdGVybS5cbiAgICogQHBhcmFtIHBhZ2luYXRpb24gVGhlIGN1cnJlbnRseSB1c2VkIHBhZ2luYXRpb24uXG4gICAqL1xuICBzZWFyY2goXG4gICAgdGVybTogc3RyaW5nLFxuICAgIHBhZ2luYXRpb246IFBhZ2luYXRpb24gPSB7IGN1cnJlbnRQYWdlOiAxLCBwYWdlU2l6ZTogdGhpcy5ERUZBVUxUX1BBR0VfU0laRSB9XG4gICkge1xuICAgIHJldHVybiB0aGlzLmludmVudG9yeVNlcnZpY2UubGlzdCh7XG4gICAgICB0ZXh0OiB0ZXJtLFxuICAgICAgd2l0aFRvdGFsUGFnZXM6IHRydWUsXG4gICAgICBwYWdlU2l6ZTogcGFnaW5hdGlvbi5wYWdlU2l6ZSxcbiAgICAgIHdpdGhDaGlsZHJlbjogZmFsc2UsXG4gICAgICBjdXJyZW50UGFnZTogcGFnaW5hdGlvbi5jdXJyZW50UGFnZSB8fCAxXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBncm91cCBzZWFyY2ggcmVzdWx0cyBieSBuYW1lLlxuICAgKlxuICAgKiBAcGFyYW0gdGVybSBUaGUgc2VhcmNoIHRlcm0gLSBuYW1lIG9mIGdyb3VwLlxuICAgKiBAcGFyYW0gcGFnaW5hdGlvbiBUaGUgY3VycmVudGx5IHVzZWQgcGFnaW5hdGlvbi5cbiAgICovXG4gIHNlYXJjaEdyb3VwcyhcbiAgICB0ZXJtOiBzdHJpbmcsXG4gICAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbiA9IHsgY3VycmVudFBhZ2U6IDEsIHBhZ2VTaXplOiB0aGlzLkRFRkFVTFRfUEFHRV9TSVpFIH1cbiAgKSB7XG4gICAgY29uc3Qgc2VhcmNoRmlsdGVyUXVlcnkgPSB0aGlzLmdldEdyb3Vwc1NlYXJjaEZpbHRlclF1ZXJ5KCk7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnF1ZXJpZXNVdGlsLmFkZEFuZEZpbHRlcihzZWFyY2hGaWx0ZXJRdWVyeSwgeyBuYW1lOiBgKiR7dGVybX0qYCB9KTtcblxuICAgIHJldHVybiB0aGlzLmludmVudG9yeVNlcnZpY2UubGlzdFF1ZXJ5KHF1ZXJ5LCB7XG4gICAgICB3aXRoVG90YWxQYWdlczogdHJ1ZSxcbiAgICAgIHBhZ2VTaXplOiBwYWdpbmF0aW9uLnBhZ2VTaXplLFxuICAgICAgd2l0aENoaWxkcmVuOiBmYWxzZSxcbiAgICAgIGN1cnJlbnRQYWdlOiBwYWdpbmF0aW9uLmN1cnJlbnRQYWdlIHx8IDFcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaWxsIHJldHVybiBvbmx5IHZhbGlkIGdyb3VwIGFzc2V0cyBhbmQgZmlsdGVyIG91dFxuICAgKiBub25lIHVzZWZ1bCBpbnZlbnRvcmllcyAoZS5nLiBjOHlfSnNvblNjaGVtYSkuXG4gICAqIEBwYXJhbSBkYXRhIEFsbCBtYW5hZ2VkIG9iamVjdHMgdGhhdCBzaG91bGQgYmUgZmlsdGVyZWQuXG4gICAqL1xuICBmaWx0ZXJPbmx5R3JvdXBzKGRhdGE6IElNYW5hZ2VkT2JqZWN0W10pOiBJTWFuYWdlZE9iamVjdFtdIHtcbiAgICByZXR1cm4gZGF0YS5maWx0ZXIobW8gPT4gbW8uYzh5X0lzRGV2aWNlR3JvdXAgfHwgbW8uYzh5X0lzRHluYW1pY0dyb3VwKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0R3JvdXBzU2VhcmNoRmlsdGVyUXVlcnkoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIF9fZmlsdGVyOiB7XG4gICAgICAgIF9fYW5kOiBbXG4gICAgICAgICAgeyBfX25vdDogeyBfX2hhczogJ2M4eV9Jc0R5bmFtaWNHcm91cC5pbnZpc2libGUnIH0gfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBfX29yOiBbeyBfX2hhczogJ2M4eV9Jc0RldmljZUdyb3VwJyB9LCB7IF9faGFzOiAnYzh5X0lzRHluYW1pY0dyb3VwJyB9XVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH07XG4gIH1cbn1cbiJdfQ==