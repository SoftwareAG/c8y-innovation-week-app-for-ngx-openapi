import { Inject, Injectable, Optional } from '@angular/core';
import { AppStateService } from '../common';
import { VERSION_MODULE_CONFIG } from './version.model';
import * as i0 from "@angular/core";
import * as i1 from "../common";
/**
 * Will provide the application version (taken from package.json's `version` field) and
 * the installed versions of the packages`@c8y/ng1-modules` and `@c8y/ngx-components` if available.
 */
export class WebSDKVersionFactory {
    constructor(config, appState) {
        this.config = config;
        this.appState = appState;
        this.webSDKVersions = [];
        this.defaults = {
            type: 'WebSDK',
            priority: 0,
            hidden: true
        };
        if (this.config?.disableWebSDKVersionFactory) {
            return;
        }
        const { ng1, ngx, package: pkg } = this.appState.state.versions.ui;
        if (ng1) {
            this.webSDKVersions.push({
                ...this.defaults,
                label: '@c8y/ng1-modules',
                version: ng1
            });
        }
        if (ngx) {
            this.webSDKVersions.push({
                ...this.defaults,
                label: '@c8y/ngx-components',
                version: ngx
            });
        }
        if (pkg) {
            this.webSDKVersions.push({
                ...this.defaults,
                label: 'Frontend',
                version: pkg,
                hidden: false,
                priority: 50
            });
        }
    }
    get() {
        return this.webSDKVersions;
    }
}
WebSDKVersionFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WebSDKVersionFactory, deps: [{ token: VERSION_MODULE_CONFIG, optional: true }, { token: i1.AppStateService }], target: i0.ɵɵFactoryTarget.Injectable });
WebSDKVersionFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WebSDKVersionFactory, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: WebSDKVersionFactory, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [VERSION_MODULE_CONFIG]
                }] }, { type: i1.AppStateService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vic2RrLXZlcnNpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvdmVyc2lvbi93ZWJzZGstdmVyc2lvbi5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFvQixNQUFNLFdBQVcsQ0FBQztBQUM5RCxPQUFPLEVBQWdDLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQUV0Rjs7O0dBR0c7QUFJSCxNQUFNLE9BQU8sb0JBQW9CO0lBUS9CLFlBQ3FELE1BQTJCLEVBQ3RFLFFBQXlCO1FBRGtCLFdBQU0sR0FBTixNQUFNLENBQXFCO1FBQ3RFLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBVG5DLG1CQUFjLEdBQWMsRUFBRSxDQUFDO1FBQ3ZCLGFBQVEsR0FBRztZQUNqQixJQUFJLEVBQUUsUUFBUTtZQUNkLFFBQVEsRUFBRSxDQUFDO1lBQ1gsTUFBTSxFQUFFLElBQUk7U0FDYixDQUFDO1FBTUEsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLDJCQUEyQixFQUFFO1lBQzVDLE9BQU87U0FDUjtRQUNELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1FBQ25FLElBQUksR0FBRyxFQUFFO1lBQ1AsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3ZCLEdBQUcsSUFBSSxDQUFDLFFBQVE7Z0JBQ2hCLEtBQUssRUFBRSxrQkFBa0I7Z0JBQ3pCLE9BQU8sRUFBRSxHQUFHO2FBQ2IsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxJQUFJLEdBQUcsRUFBRTtZQUNQLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDO2dCQUN2QixHQUFHLElBQUksQ0FBQyxRQUFRO2dCQUNoQixLQUFLLEVBQUUscUJBQXFCO2dCQUM1QixPQUFPLEVBQUUsR0FBRzthQUNiLENBQUMsQ0FBQztTQUNKO1FBQ0QsSUFBSSxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQztnQkFDdkIsR0FBRyxJQUFJLENBQUMsUUFBUTtnQkFDaEIsS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLE9BQU8sRUFBRSxHQUFHO2dCQUNaLE1BQU0sRUFBRSxLQUFLO2dCQUNiLFFBQVEsRUFBRSxFQUFFO2FBQ2IsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQsR0FBRztRQUNELE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QixDQUFDOztpSEEzQ1Usb0JBQW9CLGtCQVNULHFCQUFxQjtxSEFUaEMsb0JBQW9CLGNBRm5CLE1BQU07MkZBRVAsb0JBQW9CO2tCQUhoQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7MEJBVUksUUFBUTs7MEJBQUksTUFBTTsyQkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBTdGF0ZVNlcnZpY2UsIEV4dGVuc2lvbkZhY3RvcnkgfSBmcm9tICcuLi9jb21tb24nO1xuaW1wb3J0IHsgVmVyc2lvbiwgVmVyc2lvbk1vZHVsZUNvbmZpZywgVkVSU0lPTl9NT0RVTEVfQ09ORklHIH0gZnJvbSAnLi92ZXJzaW9uLm1vZGVsJztcblxuLyoqXG4gKiBXaWxsIHByb3ZpZGUgdGhlIGFwcGxpY2F0aW9uIHZlcnNpb24gKHRha2VuIGZyb20gcGFja2FnZS5qc29uJ3MgYHZlcnNpb25gIGZpZWxkKSBhbmRcbiAqIHRoZSBpbnN0YWxsZWQgdmVyc2lvbnMgb2YgdGhlIHBhY2thZ2VzYEBjOHkvbmcxLW1vZHVsZXNgIGFuZCBgQGM4eS9uZ3gtY29tcG9uZW50c2AgaWYgYXZhaWxhYmxlLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBXZWJTREtWZXJzaW9uRmFjdG9yeSBpbXBsZW1lbnRzIEV4dGVuc2lvbkZhY3Rvcnk8VmVyc2lvbj4ge1xuICB3ZWJTREtWZXJzaW9uczogVmVyc2lvbltdID0gW107XG4gIHByaXZhdGUgZGVmYXVsdHMgPSB7XG4gICAgdHlwZTogJ1dlYlNESycsXG4gICAgcHJpb3JpdHk6IDAsXG4gICAgaGlkZGVuOiB0cnVlXG4gIH07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChWRVJTSU9OX01PRFVMRV9DT05GSUcpIHByaXZhdGUgY29uZmlnOiBWZXJzaW9uTW9kdWxlQ29uZmlnLFxuICAgIHByaXZhdGUgYXBwU3RhdGU6IEFwcFN0YXRlU2VydmljZVxuICApIHtcbiAgICBpZiAodGhpcy5jb25maWc/LmRpc2FibGVXZWJTREtWZXJzaW9uRmFjdG9yeSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB7IG5nMSwgbmd4LCBwYWNrYWdlOiBwa2cgfSA9IHRoaXMuYXBwU3RhdGUuc3RhdGUudmVyc2lvbnMudWk7XG4gICAgaWYgKG5nMSkge1xuICAgICAgdGhpcy53ZWJTREtWZXJzaW9ucy5wdXNoKHtcbiAgICAgICAgLi4udGhpcy5kZWZhdWx0cyxcbiAgICAgICAgbGFiZWw6ICdAYzh5L25nMS1tb2R1bGVzJyxcbiAgICAgICAgdmVyc2lvbjogbmcxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKG5neCkge1xuICAgICAgdGhpcy53ZWJTREtWZXJzaW9ucy5wdXNoKHtcbiAgICAgICAgLi4udGhpcy5kZWZhdWx0cyxcbiAgICAgICAgbGFiZWw6ICdAYzh5L25neC1jb21wb25lbnRzJyxcbiAgICAgICAgdmVyc2lvbjogbmd4XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHBrZykge1xuICAgICAgdGhpcy53ZWJTREtWZXJzaW9ucy5wdXNoKHtcbiAgICAgICAgLi4udGhpcy5kZWZhdWx0cyxcbiAgICAgICAgbGFiZWw6ICdGcm9udGVuZCcsXG4gICAgICAgIHZlcnNpb246IHBrZyxcbiAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAgICAgICAgcHJpb3JpdHk6IDUwXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXQoKTogVmVyc2lvbltdIHtcbiAgICByZXR1cm4gdGhpcy53ZWJTREtWZXJzaW9ucztcbiAgfVxufVxuIl19