import { Component } from '@angular/core';
import { UserService } from '@c8y/client';
import { Status } from '../common/status.model';
import { gettext } from '../i18n/gettext';
import { ModalService } from '../modal/modal.service';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { LoginService } from '../login/login.service';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "../modal/modal.service";
import * as i3 from "ngx-bootstrap/modal";
import * as i4 from "../login/login.service";
import * as i5 from "../modal/modal.component";
import * as i6 from "../authentication/totp-challenge.component";
import * as i7 from "../authentication/totp-setup.component";
import * as i8 from "../i18n/c8y-translate.pipe";
export class UserTotpSetupComponent {
    constructor(user, modalService, modal, loginService) {
        this.user = user;
        this.modalService = modalService;
        this.modal = modal;
        this.loginService = loginService;
    }
    async totpSetupVerified() {
        await this.user.activateTotp();
        this.modal.hide();
        try {
            await this.modalService.acknowledge(gettext('Logout required'), gettext('You must log out in order to apply your changes'), Status.WARNING, gettext('Log out'));
            await this.loginService.logout();
        }
        catch (ex) {
            // intended empty
        }
    }
    close() {
        this.modal.hide();
    }
}
UserTotpSetupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UserTotpSetupComponent, deps: [{ token: i1.UserService }, { token: i2.ModalService }, { token: i3.BsModalRef }, { token: i4.LoginService }], target: i0.ɵɵFactoryTarget.Component });
UserTotpSetupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: UserTotpSetupComponent, selector: "c8y-user-totp-setup", ngImport: i0, template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Set up two-factor authentication' | translate\">\n  <c8y-totp-setup></c8y-totp-setup>\n  <c8y-totp-challenge (onSuccess)=\"totpSetupVerified()\" (totpUnconfirmedEmitter)=\"close()\"></c8y-totp-challenge>\n</c8y-modal>\n", dependencies: [{ kind: "component", type: i5.ModalComponent, selector: "c8y-modal", inputs: ["disabled", "close", "dismiss", "title", "body", "customFooter", "headerClasses", "labels"], outputs: ["onDismiss", "onClose"] }, { kind: "component", type: i6.TotpChallengeComponent, selector: "c8y-totp-challenge", inputs: ["verify", "loading", "hasError"], outputs: ["onSuccess", "totpUnconfirmedEmitter"] }, { kind: "component", type: i7.TotpSetupComponent, selector: "c8y-totp-setup" }, { kind: "pipe", type: i8.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UserTotpSetupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-user-totp-setup', template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Set up two-factor authentication' | translate\">\n  <c8y-totp-setup></c8y-totp-setup>\n  <c8y-totp-challenge (onSuccess)=\"totpSetupVerified()\" (totpUnconfirmedEmitter)=\"close()\"></c8y-totp-challenge>\n</c8y-modal>\n" }]
        }], ctorParameters: function () { return [{ type: i1.UserService }, { type: i2.ModalService }, { type: i3.BsModalRef }, { type: i4.LoginService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXNldHVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvdXNlci91c2VyLXRvdHAtc2V0dXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vY29yZS91c2VyL3VzZXItdG90cC1zZXR1cC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7Ozs7OztBQU10RCxNQUFNLE9BQU8sc0JBQXNCO0lBQ2pDLFlBQ1UsSUFBaUIsRUFDakIsWUFBMEIsRUFDMUIsS0FBaUIsRUFDakIsWUFBMEI7UUFIMUIsU0FBSSxHQUFKLElBQUksQ0FBYTtRQUNqQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixVQUFLLEdBQUwsS0FBSyxDQUFZO1FBQ2pCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQ2pDLENBQUM7SUFFSixLQUFLLENBQUMsaUJBQWlCO1FBQ3JCLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2xCLElBQUk7WUFDRixNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUNqQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFDMUIsT0FBTyxDQUFDLGlEQUFpRCxDQUFDLEVBQzFELE1BQU0sQ0FBQyxPQUFPLEVBQ2QsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUNuQixDQUFDO1lBQ0YsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2xDO1FBQUMsT0FBTyxFQUFFLEVBQUU7WUFDWCxpQkFBaUI7U0FDbEI7SUFDSCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7bUhBMUJVLHNCQUFzQjt1R0FBdEIsc0JBQXNCLDJEQ1puQywyUUFJQTsyRkRRYSxzQkFBc0I7a0JBSmxDLFNBQVM7K0JBQ0UscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFN0YXR1cyB9IGZyb20gJy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4uL2xvZ2luL2xvZ2luLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktdXNlci10b3RwLXNldHVwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItdG90cC1zZXR1cC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVXNlclRvdHBTZXR1cENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdXNlcjogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IE1vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsOiBCc01vZGFsUmVmLFxuICAgIHByaXZhdGUgbG9naW5TZXJ2aWNlOiBMb2dpblNlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIHRvdHBTZXR1cFZlcmlmaWVkKCkge1xuICAgIGF3YWl0IHRoaXMudXNlci5hY3RpdmF0ZVRvdHAoKTtcbiAgICB0aGlzLm1vZGFsLmhpZGUoKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5tb2RhbFNlcnZpY2UuYWNrbm93bGVkZ2UoXG4gICAgICAgIGdldHRleHQoJ0xvZ291dCByZXF1aXJlZCcpLFxuICAgICAgICBnZXR0ZXh0KCdZb3UgbXVzdCBsb2cgb3V0IGluIG9yZGVyIHRvIGFwcGx5IHlvdXIgY2hhbmdlcycpLFxuICAgICAgICBTdGF0dXMuV0FSTklORyxcbiAgICAgICAgZ2V0dGV4dCgnTG9nIG91dCcpXG4gICAgICApO1xuICAgICAgYXdhaXQgdGhpcy5sb2dpblNlcnZpY2UubG9nb3V0KCk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIC8vIGludGVuZGVkIGVtcHR5XG4gICAgfVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gIH1cbn1cbiIsIjxjOHktbW9kYWwgW2N1c3RvbUZvb3Rlcl09XCJ0cnVlXCIgW3RpdGxlXT1cIidTZXQgdXAgdHdvLWZhY3RvciBhdXRoZW50aWNhdGlvbicgfCB0cmFuc2xhdGVcIj5cbiAgPGM4eS10b3RwLXNldHVwPjwvYzh5LXRvdHAtc2V0dXA+XG4gIDxjOHktdG90cC1jaGFsbGVuZ2UgKG9uU3VjY2Vzcyk9XCJ0b3RwU2V0dXBWZXJpZmllZCgpXCIgKHRvdHBVbmNvbmZpcm1lZEVtaXR0ZXIpPVwiY2xvc2UoKVwiPjwvYzh5LXRvdHAtY2hhbGxlbmdlPlxuPC9jOHktbW9kYWw+XG4iXX0=