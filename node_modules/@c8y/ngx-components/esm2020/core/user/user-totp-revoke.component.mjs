import { Component, Input, Output, EventEmitter } from '@angular/core';
import { UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { gettext } from '../i18n/gettext';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "../alert/alert.service";
import * as i3 from "../common/icon.directive";
import * as i4 from "../i18n/c8y-translate.directive";
import * as i5 from "ngx-bootstrap/popover";
import * as i6 from "../i18n/c8y-translate.pipe";
export class UserTotpRevokeComponent {
    constructor(users, alert) {
        this.users = users;
        this.alert = alert;
        this.revokeEmitter = new EventEmitter();
    }
    async revoke() {
        try {
            await this.users.totpRevokeSecret(this.user);
            this.alert.success(gettext('User TOTP secret revoked.'));
            this.revokeEmitter.next();
        }
        catch (e) {
            this.alert.addServerFailure(e);
        }
    }
}
UserTotpRevokeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UserTotpRevokeComponent, deps: [{ token: i1.UserService }, { token: i2.AlertService }], target: i0.ɵɵFactoryTarget.Component });
UserTotpRevokeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: UserTotpRevokeComponent, selector: "c8y-user-totp-revoke", inputs: { user: "user" }, outputs: { revokeEmitter: "revoke" }, ngImport: i0, template: "<button\n  class=\"btn btn-default\"\n  type=\"button\"\n  [popoverTitle]=\"'Revoke TOTP secret' | translate\"\n  [popover]=\"confirm\"\n  #popover=\"bs-popover\"\n  placement=\"bottom\"\n>\n  <i c8yIcon=\"key\"></i>\n  {{ 'Revoke TOTP secret' | translate }}\n</button>\n\n<ng-template #confirm>\n  <p class=\"m-b-16\" translate>\n    This action will revoke the user's stored TOTP secret which will require a new setup.\n  </p>\n  <button\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Cancel' | translate }}\"\n    (click)=\"popover.hide()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    class=\"btn btn-danger\"\n    type=\"button\"\n    title=\"{{ 'Revoke' | translate }}\"\n    (click)=\"revoke(); popover.hide()\"\n    translate\n  >\n    Revoke\n  </button>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i3.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i4.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i5.PopoverDirective, selector: "[popover]", inputs: ["adaptivePosition", "boundariesElement", "popover", "popoverContext", "popoverTitle", "placement", "outsideClick", "triggers", "container", "containerClass", "isOpen", "delay"], outputs: ["onShown", "onHidden"], exportAs: ["bs-popover"] }, { kind: "pipe", type: i6.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UserTotpRevokeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-user-totp-revoke', template: "<button\n  class=\"btn btn-default\"\n  type=\"button\"\n  [popoverTitle]=\"'Revoke TOTP secret' | translate\"\n  [popover]=\"confirm\"\n  #popover=\"bs-popover\"\n  placement=\"bottom\"\n>\n  <i c8yIcon=\"key\"></i>\n  {{ 'Revoke TOTP secret' | translate }}\n</button>\n\n<ng-template #confirm>\n  <p class=\"m-b-16\" translate>\n    This action will revoke the user's stored TOTP secret which will require a new setup.\n  </p>\n  <button\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Cancel' | translate }}\"\n    (click)=\"popover.hide()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    class=\"btn btn-danger\"\n    type=\"button\"\n    title=\"{{ 'Revoke' | translate }}\"\n    (click)=\"revoke(); popover.hide()\"\n    translate\n  >\n    Revoke\n  </button>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.UserService }, { type: i2.AlertService }]; }, propDecorators: { user: [{
                type: Input
            }], revokeEmitter: [{
                type: Output,
                args: ['revoke']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXJldm9rZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3VzZXIvdXNlci10b3RwLXJldm9rZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9jb3JlL3VzZXIvdXNlci10b3RwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFTLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7OztBQU0xQyxNQUFNLE9BQU8sdUJBQXVCO0lBR2xDLFlBQW9CLEtBQWtCLEVBQVUsS0FBbUI7UUFBL0MsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQUFVLFVBQUssR0FBTCxLQUFLLENBQWM7UUFEakQsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBYSxDQUFDO0lBQ00sQ0FBQztJQUV2RSxLQUFLLENBQUMsTUFBTTtRQUNWLElBQUk7WUFDRixNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUM7WUFDekQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUMzQjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7O29IQWJVLHVCQUF1Qjt3R0FBdkIsdUJBQXVCLDRIQ1RwQyxxekJBbUNBOzJGRDFCYSx1QkFBdUI7a0JBSm5DLFNBQVM7K0JBQ0Usc0JBQXNCOzZIQUl2QixJQUFJO3NCQUFaLEtBQUs7Z0JBQ1ksYUFBYTtzQkFBOUIsTUFBTTt1QkFBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElVc2VyLCBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11c2VyLXRvdHAtcmV2b2tlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItdG90cC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVXNlclRvdHBSZXZva2VDb21wb25lbnQge1xuICBASW5wdXQoKSB1c2VyOiBJVXNlcjtcbiAgQE91dHB1dCgncmV2b2tlJykgcmV2b2tlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8dW5kZWZpbmVkPigpO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHVzZXJzOiBVc2VyU2VydmljZSwgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlKSB7fVxuXG4gIGFzeW5jIHJldm9rZSgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy51c2Vycy50b3RwUmV2b2tlU2VjcmV0KHRoaXMudXNlcik7XG4gICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnVXNlciBUT1RQIHNlY3JldCByZXZva2VkLicpKTtcbiAgICAgIHRoaXMucmV2b2tlRW1pdHRlci5uZXh0KCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgIH1cbiAgfVxufVxuIiwiPGJ1dHRvblxuICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiXG4gIHR5cGU9XCJidXR0b25cIlxuICBbcG9wb3ZlclRpdGxlXT1cIidSZXZva2UgVE9UUCBzZWNyZXQnIHwgdHJhbnNsYXRlXCJcbiAgW3BvcG92ZXJdPVwiY29uZmlybVwiXG4gICNwb3BvdmVyPVwiYnMtcG9wb3ZlclwiXG4gIHBsYWNlbWVudD1cImJvdHRvbVwiXG4+XG4gIDxpIGM4eUljb249XCJrZXlcIj48L2k+XG4gIHt7ICdSZXZva2UgVE9UUCBzZWNyZXQnIHwgdHJhbnNsYXRlIH19XG48L2J1dHRvbj5cblxuPG5nLXRlbXBsYXRlICNjb25maXJtPlxuICA8cCBjbGFzcz1cIm0tYi0xNlwiIHRyYW5zbGF0ZT5cbiAgICBUaGlzIGFjdGlvbiB3aWxsIHJldm9rZSB0aGUgdXNlcidzIHN0b3JlZCBUT1RQIHNlY3JldCB3aGljaCB3aWxsIHJlcXVpcmUgYSBuZXcgc2V0dXAuXG4gIDwvcD5cbiAgPGJ1dHRvblxuICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0XCJcbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICB0aXRsZT1cInt7ICdDYW5jZWwnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAoY2xpY2spPVwicG9wb3Zlci5oaWRlKClcIlxuICAgIHRyYW5zbGF0ZVxuICA+XG4gICAgQ2FuY2VsXG4gIDwvYnV0dG9uPlxuICA8YnV0dG9uXG4gICAgY2xhc3M9XCJidG4gYnRuLWRhbmdlclwiXG4gICAgdHlwZT1cImJ1dHRvblwiXG4gICAgdGl0bGU9XCJ7eyAnUmV2b2tlJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgKGNsaWNrKT1cInJldm9rZSgpOyBwb3BvdmVyLmhpZGUoKVwiXG4gICAgdHJhbnNsYXRlXG4gID5cbiAgICBSZXZva2VcbiAgPC9idXR0b24+XG48L25nLXRlbXBsYXRlPlxuIl19