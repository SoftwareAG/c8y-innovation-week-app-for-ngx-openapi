import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../icon.directive";
import * as i3 from "../../i18n/c8y-translate.pipe";
/**
 * A component to show generic empty state.
 * Title and subtitle should be used with translate pipe to mark strings for translation.
 * Component can be displayed vertically (default) or horizontally.
 * Additional markup elements can be placed inside the tag.
 *
 * Example:
 * ```html
 * <c8y-ui-empty-state
 *   [icon]="'c8y-icon'"
 *   [title]="'Place your title here' | translate"
 *   [subtitle]="'Place your subtitle here' | translate"
 *   [horizontal]="true"
 * >
 *   (...)
 * </c8y-ui-empty-state>
 * ```
 */
export class EmptyStateComponent {
}
EmptyStateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: EmptyStateComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
EmptyStateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: { icon: "icon", title: "title", subtitle: "subtitle", horizontal: "horizontal" }, ngImport: i0, template: "<div class=\"c8y-empty-state\" [ngClass]=\"{ 'c8y-empty-state--horizontal': horizontal }\">\n  <i [c8yIcon]=\"icon\" class=\"c8y-icon-duocolor\"></i>\n\n  <ng-container *ngIf=\"!horizontal\">\n    <div>\n      <h3 class=\"text-medium\">{{ title | translate }}</h3>\n      <p class=\"p-b-16\" *ngIf=\"subtitle\">{{ subtitle | translate }}</p>\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"horizontal\">\n    <div class=\"d-flex d-col j-c-center\">\n      <p class=\"text-medium a-s-start\">{{ title | translate }}</p>\n      <p *ngIf=\"subtitle\" class=\"small a-s-start\">{{ subtitle | translate }}</p>\n      <div class=\"small a-s-start\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #content>\n    <ng-content></ng-content>\n  </ng-template>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: EmptyStateComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-ui-empty-state', template: "<div class=\"c8y-empty-state\" [ngClass]=\"{ 'c8y-empty-state--horizontal': horizontal }\">\n  <i [c8yIcon]=\"icon\" class=\"c8y-icon-duocolor\"></i>\n\n  <ng-container *ngIf=\"!horizontal\">\n    <div>\n      <h3 class=\"text-medium\">{{ title | translate }}</h3>\n      <p class=\"p-b-16\" *ngIf=\"subtitle\">{{ subtitle | translate }}</p>\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"horizontal\">\n    <div class=\"d-flex d-col j-c-center\">\n      <p class=\"text-medium a-s-start\">{{ title | translate }}</p>\n      <p *ngIf=\"subtitle\" class=\"small a-s-start\">{{ subtitle | translate }}</p>\n      <div class=\"small a-s-start\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #content>\n    <ng-content></ng-content>\n  </ng-template>\n</div>\n" }]
        }], propDecorators: { icon: [{
                type: Input
            }], title: [{
                type: Input
            }], subtitle: [{
                type: Input
            }], horizontal: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktc3RhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29yZS9jb21tb24vZW1wdHktc3RhdGUvZW1wdHktc3RhdGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vY29yZS9jb21tb24vZW1wdHktc3RhdGUvZW1wdHktc3RhdGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBRWpEOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUtILE1BQU0sT0FBTyxtQkFBbUI7O2dIQUFuQixtQkFBbUI7b0dBQW5CLG1CQUFtQixvSkN4QmhDLDI1QkF5QkE7MkZERGEsbUJBQW1CO2tCQUovQixTQUFTOytCQUNFLG9CQUFvQjs4QkFLckIsSUFBSTtzQkFBWixLQUFLO2dCQUVHLEtBQUs7c0JBQWIsS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLO2dCQUVHLFVBQVU7c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBnZW5lcmljIGVtcHR5IHN0YXRlLlxuICogVGl0bGUgYW5kIHN1YnRpdGxlIHNob3VsZCBiZSB1c2VkIHdpdGggdHJhbnNsYXRlIHBpcGUgdG8gbWFyayBzdHJpbmdzIGZvciB0cmFuc2xhdGlvbi5cbiAqIENvbXBvbmVudCBjYW4gYmUgZGlzcGxheWVkIHZlcnRpY2FsbHkgKGRlZmF1bHQpIG9yIGhvcml6b250YWxseS5cbiAqIEFkZGl0aW9uYWwgbWFya3VwIGVsZW1lbnRzIGNhbiBiZSBwbGFjZWQgaW5zaWRlIHRoZSB0YWcuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYGh0bWxcbiAqIDxjOHktdWktZW1wdHktc3RhdGVcbiAqICAgW2ljb25dPVwiJ2M4eS1pY29uJ1wiXG4gKiAgIFt0aXRsZV09XCInUGxhY2UgeW91ciB0aXRsZSBoZXJlJyB8IHRyYW5zbGF0ZVwiXG4gKiAgIFtzdWJ0aXRsZV09XCInUGxhY2UgeW91ciBzdWJ0aXRsZSBoZXJlJyB8IHRyYW5zbGF0ZVwiXG4gKiAgIFtob3Jpem9udGFsXT1cInRydWVcIlxuICogPlxuICogICAoLi4uKVxuICogPC9jOHktdWktZW1wdHktc3RhdGU+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXVpLWVtcHR5LXN0YXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2VtcHR5LXN0YXRlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBFbXB0eVN0YXRlQ29tcG9uZW50IHtcbiAgLyoqIEljb24gbmFtZS4gKi9cbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICAvKiogUmVxdWlyZWQgdGl0bGUuICovXG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIC8qKiBPcHRpb25hbCBzdWJ0aXRsZS4gKi9cbiAgQElucHV0KCkgc3VidGl0bGU6IHN0cmluZztcbiAgLyoqIFdoZXRoZXIgdG8gZGlzcGxheSBpdCBpbiBob3Jpem9udGFsIGxheW91dC4gKi9cbiAgQElucHV0KCkgaG9yaXpvbnRhbDogYm9vbGVhbjtcbn1cbiIsIjxkaXYgY2xhc3M9XCJjOHktZW1wdHktc3RhdGVcIiBbbmdDbGFzc109XCJ7ICdjOHktZW1wdHktc3RhdGUtLWhvcml6b250YWwnOiBob3Jpem9udGFsIH1cIj5cbiAgPGkgW2M4eUljb25dPVwiaWNvblwiIGNsYXNzPVwiYzh5LWljb24tZHVvY29sb3JcIj48L2k+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFob3Jpem9udGFsXCI+XG4gICAgPGRpdj5cbiAgICAgIDxoMyBjbGFzcz1cInRleHQtbWVkaXVtXCI+e3sgdGl0bGUgfCB0cmFuc2xhdGUgfX08L2gzPlxuICAgICAgPHAgY2xhc3M9XCJwLWItMTZcIiAqbmdJZj1cInN1YnRpdGxlXCI+e3sgc3VidGl0bGUgfCB0cmFuc2xhdGUgfX08L3A+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY29udGVudFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cblxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiaG9yaXpvbnRhbFwiPlxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZC1jb2wgai1jLWNlbnRlclwiPlxuICAgICAgPHAgY2xhc3M9XCJ0ZXh0LW1lZGl1bSBhLXMtc3RhcnRcIj57eyB0aXRsZSB8IHRyYW5zbGF0ZSB9fTwvcD5cbiAgICAgIDxwICpuZ0lmPVwic3VidGl0bGVcIiBjbGFzcz1cInNtYWxsIGEtcy1zdGFydFwiPnt7IHN1YnRpdGxlIHwgdHJhbnNsYXRlIH19PC9wPlxuICAgICAgPGRpdiBjbGFzcz1cInNtYWxsIGEtcy1zdGFydFwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY29udGVudFwiPjwvbmctY29udGFpbmVyPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxuZy10ZW1wbGF0ZSAjY29udGVudD5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIDwvbmctdGVtcGxhdGU+XG48L2Rpdj5cbiJdfQ==