/*
 * Implementation of pure "Mapping" pipe based on
 * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b
 */
import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class MapFunctionPipe {
    /*
     * This will be a universal pipe for array mappings. You may add more
     * type checkings and runtime checkings to make sure it works correctly everywhere.
     */
    transform(value, mappingFunction, thisArg) {
        return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);
    }
}
MapFunctionPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: MapFunctionPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
MapFunctionPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: MapFunctionPipe, name: "map" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: MapFunctionPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'map'
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLWZ1bmN0aW9uLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2NvbW1vbi9tYXAtZnVuY3Rpb24ucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFLcEQsTUFBTSxPQUFPLGVBQWU7SUFDMUI7OztPQUdHO0lBQ0gsU0FBUyxDQUFDLEtBQUssRUFBRSxlQUFrQyxFQUFFLE9BQWE7UUFDaEUsT0FBTyxlQUFlLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDeEYsQ0FBQzs7NEdBUFUsZUFBZTswR0FBZixlQUFlOzJGQUFmLGVBQWU7a0JBSDNCLElBQUk7bUJBQUM7b0JBQ0osSUFBSSxFQUFFLEtBQUs7aUJBQ1oiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogSW1wbGVtZW50YXRpb24gb2YgcHVyZSBcIk1hcHBpbmdcIiBwaXBlIGJhc2VkIG9uXG4gKiBodHRwczovL2NvZGVidXJzdC5pby9hbmd1bGFyLWJhZC1wcmFjdGljZXMtZWFiMGU1OTRjZTkyIzM4OWJcbiAqL1xuXG5pbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ21hcCdcbn0pXG5leHBvcnQgY2xhc3MgTWFwRnVuY3Rpb25QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIC8qXG4gICAqIFRoaXMgd2lsbCBiZSBhIHVuaXZlcnNhbCBwaXBlIGZvciBhcnJheSBtYXBwaW5ncy4gWW91IG1heSBhZGQgbW9yZVxuICAgKiB0eXBlIGNoZWNraW5ncyBhbmQgcnVudGltZSBjaGVja2luZ3MgdG8gbWFrZSBzdXJlIGl0IHdvcmtzIGNvcnJlY3RseSBldmVyeXdoZXJlLlxuICAgKi9cbiAgdHJhbnNmb3JtKHZhbHVlLCBtYXBwaW5nRnVuY3Rpb246IChhcmc6IGFueSkgPT4gYW55LCB0aGlzQXJnPzogYW55KSB7XG4gICAgcmV0dXJuIG1hcHBpbmdGdW5jdGlvbi5hcHBseSh0aGlzQXJnIHx8IHRoaXMsIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbdmFsdWVdKTtcbiAgfVxufVxuIl19