import { Pipe } from '@angular/core';
import { isNaN, isFinite } from 'lodash-es';
import * as i0 from "@angular/core";
/*
 * Converts the file size to a readable format.
 * Usage:
 *
 * ```html
 *  {{ myData | bytes }} <!-- e.g. 100.1 MB -->
 *
 * ```
 * Default precision is set to 1 decimal place.
 * To change the precision, pass an additional argument to pipe.

 * ```html
 * {{ myData | bytes: 5 }} <!-- e.g. 100.12345 MB -->
 * ```
 *
 */
export class BytesPipe {
    static bytes(bytes, precision) {
        if (isNaN(bytes) || !isFinite(bytes)) {
            return '-';
        }
        if (bytes === 0) {
            return 0;
        }
        const units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];
        const num = Math.floor(Math.log(bytes) / Math.log(1024));
        // eslint-disable-next-line no-mixed-operators
        const result = (bytes / 1024 ** Math.floor(num)).toFixed(precision);
        return `${result} ${units[num]}`;
    }
    transform(value, precision = 1) {
        return BytesPipe.bytes(value, precision);
    }
}
BytesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BytesPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
BytesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: BytesPipe, name: "bytes" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: BytesPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bytes' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvY29tbW9uL2J5dGVzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBRTVDOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE1BQU0sT0FBTyxTQUFTO0lBQ3BCLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBYSxFQUFFLFNBQWlCO1FBQzNDLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3BDLE9BQU8sR0FBRyxDQUFDO1NBQ1o7UUFDRCxJQUFJLEtBQUssS0FBSyxDQUFDLEVBQUU7WUFDZixPQUFPLENBQUMsQ0FBQztTQUNWO1FBQ0QsTUFBTSxLQUFLLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RELE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDekQsOENBQThDO1FBQzlDLE1BQU0sTUFBTSxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXBFLE9BQU8sR0FBRyxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7SUFDbkMsQ0FBQztJQUVELFNBQVMsQ0FBQyxLQUFhLEVBQUUsU0FBUyxHQUFHLENBQUM7UUFDcEMsT0FBTyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztJQUMzQyxDQUFDOztzR0FsQlUsU0FBUztvR0FBVCxTQUFTOzJGQUFULFNBQVM7a0JBRHJCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNOYU4sIGlzRmluaXRlIH0gZnJvbSAnbG9kYXNoLWVzJztcblxuLypcbiAqIENvbnZlcnRzIHRoZSBmaWxlIHNpemUgdG8gYSByZWFkYWJsZSBmb3JtYXQuXG4gKiBVc2FnZTpcbiAqXG4gKiBgYGBodG1sXG4gKiAge3sgbXlEYXRhIHwgYnl0ZXMgfX0gPCEtLSBlLmcuIDEwMC4xIE1CIC0tPlxuICpcbiAqIGBgYFxuICogRGVmYXVsdCBwcmVjaXNpb24gaXMgc2V0IHRvIDEgZGVjaW1hbCBwbGFjZS5cbiAqIFRvIGNoYW5nZSB0aGUgcHJlY2lzaW9uLCBwYXNzIGFuIGFkZGl0aW9uYWwgYXJndW1lbnQgdG8gcGlwZS5cblxuICogYGBgaHRtbFxuICoge3sgbXlEYXRhIHwgYnl0ZXM6IDUgfX0gPCEtLSBlLmcuIDEwMC4xMjM0NSBNQiAtLT5cbiAqIGBgYFxuICpcbiAqL1xuQFBpcGUoeyBuYW1lOiAnYnl0ZXMnIH0pXG5leHBvcnQgY2xhc3MgQnl0ZXNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHN0YXRpYyBieXRlcyhieXRlczogbnVtYmVyLCBwcmVjaXNpb246IG51bWJlcik6IHN0cmluZyB8IG51bWJlciB7XG4gICAgaWYgKGlzTmFOKGJ5dGVzKSB8fCAhaXNGaW5pdGUoYnl0ZXMpKSB7XG4gICAgICByZXR1cm4gJy0nO1xuICAgIH1cbiAgICBpZiAoYnl0ZXMgPT09IDApIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBjb25zdCB1bml0cyA9IFsnYnl0ZXMnLCAna0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInXTtcbiAgICBjb25zdCBudW0gPSBNYXRoLmZsb29yKE1hdGgubG9nKGJ5dGVzKSAvIE1hdGgubG9nKDEwMjQpKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWl4ZWQtb3BlcmF0b3JzXG4gICAgY29uc3QgcmVzdWx0ID0gKGJ5dGVzIC8gMTAyNCAqKiBNYXRoLmZsb29yKG51bSkpLnRvRml4ZWQocHJlY2lzaW9uKTtcblxuICAgIHJldHVybiBgJHtyZXN1bHR9ICR7dW5pdHNbbnVtXX1gO1xuICB9XG5cbiAgdHJhbnNmb3JtKHZhbHVlOiBudW1iZXIsIHByZWNpc2lvbiA9IDEpOiBzdHJpbmcgfCBudW1iZXIge1xuICAgIHJldHVybiBCeXRlc1BpcGUuYnl0ZXModmFsdWUsIHByZWNpc2lvbik7XG4gIH1cbn1cbiJdfQ==