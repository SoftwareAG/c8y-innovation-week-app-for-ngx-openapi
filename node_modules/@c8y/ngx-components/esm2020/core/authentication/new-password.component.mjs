import { Component, EventEmitter, Output } from '@angular/core';
import { ControlContainer, NgForm } from '@angular/forms';
import { LoginService } from '../login/login.service';
import * as i0 from "@angular/core";
import * as i1 from "../login/login.service";
import * as i2 from "../forms/default-validation.directive";
import * as i3 from "@angular/forms";
import * as i4 from "../forms/form-group.component";
import * as i5 from "../i18n/c8y-translate.directive";
import * as i6 from "@angular/common";
import * as i7 from "./password-confirm.directive";
import * as i8 from "./password-strength.component";
import * as i9 from "./password-check-list.component";
import * as i10 from "./password-input.component";
import * as i11 from "../i18n/c8y-translate.pipe";
export class NewPasswordComponent {
    constructor(loginService) {
        this.loginService = loginService;
        this.password = new EventEmitter();
        this.model = {};
        this.changePassword = false;
        this.passwordEnforced = false;
    }
    ngOnInit() {
        this.loadPasswordStrengthSettings();
        this.loginService.getGreenMinLength().then(value => {
            this.minlength = value;
        });
    }
    newPasswordChanged() {
        this.password.emit({
            password: this.model.newPassword,
            passwordStrength: this.model.strength
        });
    }
    async loadPasswordStrengthSettings() {
        this.passwordEnforced = await this.loginService.getPasswordStrengthEnforced({ refresh: true });
    }
    showPasswordStrength() {
        return this.model.newPassword && this.model.newPassword.length >= this.minlength;
    }
    toggleChangePassword() {
        this.changePassword = !this.changePassword;
        if (!this.changePassword) {
            this.password.emit({});
            this.model = {};
        }
    }
}
NewPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NewPasswordComponent, deps: [{ token: i1.LoginService }], target: i0.ɵɵFactoryTarget.Component });
NewPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: NewPasswordComponent, selector: "c8y-new-password", outputs: { password: "password" }, ngImport: i0, template: "<div class=\"form-group\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"toggleChangePassword()\">\n    <ng-container *ngIf=\"!changePassword\">\n      {{ 'Change password' | translate }}\n    </ng-container>\n    <ng-container *ngIf=\"changePassword\">\n      {{ 'Cancel password change' | translate }}\n    </ng-container>\n  </button>\n</div>\n\n<div *ngIf=\"changePassword\" class=\"row content-flex-50\">\n  <div class=\"col-7\">\n    <c8y-form-group>\n      <label for=\"newPassword\" translate>Password</label>\n      <c8y-password-input\n        [id]=\"'newPassword'\"\n        name=\"newPassword\"\n        #newPassword=\"ngModel\"\n        [(ngModel)]=\"model.newPassword\"\n        (change)=\"newPasswordChanged()\"\n        (input)=\"newPasswordConfirm.control.updateValueAndValidity()\"\n        required\n        c8yDefaultValidation=\"password\"\n        [autocomplete]=\"'new-password'\"\n      ></c8y-password-input>\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label for=\"newConfirmPassword\" translate>Confirm password</label>\n      <c8y-password-input\n        [id]=\"'newConfirmPassword'\"\n        name=\"newPasswordConfirm\"\n        #newPasswordConfirm=\"ngModel\"\n        [(ngModel)]=\"model.newPasswordConfirm\"\n        required\n        passwordConfirm=\"newPassword\"\n        [autocomplete]=\"'new-password'\"\n      ></c8y-password-input>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-5\">\n    <c8y-password-strength\n      [password]=\"model.newPassword\"\n      (strength)=\"model.strength = $event\"\n    ></c8y-password-strength>\n\n    <c8y-password-check-list\n      class=\"m-t-32\"\n      [password]=\"model.newPassword\"\n      [hidden]=\"!passwordEnforced\"\n    ></c8y-password-check-list>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.DefaultValidationDirective, selector: "[c8yDefaultValidation]", inputs: ["c8yDefaultValidation"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i4.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i5.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i7.PasswordConfirm, selector: "[passwordConfirm]" }, { kind: "component", type: i8.PasswordStrengthComponent, selector: "c8y-password-strength", inputs: ["password"], outputs: ["strength"] }, { kind: "component", type: i9.PasswordCheckListComponent, selector: "c8y-password-check-list", inputs: ["password"] }, { kind: "component", type: i10.PasswordInputComponent, selector: "c8y-password-input", inputs: ["id", "autocomplete"] }, { kind: "pipe", type: i11.C8yTranslatePipe, name: "translate" }], viewProviders: [{ provide: ControlContainer, useExisting: NgForm }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: NewPasswordComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-new-password', viewProviders: [{ provide: ControlContainer, useExisting: NgForm }], template: "<div class=\"form-group\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"toggleChangePassword()\">\n    <ng-container *ngIf=\"!changePassword\">\n      {{ 'Change password' | translate }}\n    </ng-container>\n    <ng-container *ngIf=\"changePassword\">\n      {{ 'Cancel password change' | translate }}\n    </ng-container>\n  </button>\n</div>\n\n<div *ngIf=\"changePassword\" class=\"row content-flex-50\">\n  <div class=\"col-7\">\n    <c8y-form-group>\n      <label for=\"newPassword\" translate>Password</label>\n      <c8y-password-input\n        [id]=\"'newPassword'\"\n        name=\"newPassword\"\n        #newPassword=\"ngModel\"\n        [(ngModel)]=\"model.newPassword\"\n        (change)=\"newPasswordChanged()\"\n        (input)=\"newPasswordConfirm.control.updateValueAndValidity()\"\n        required\n        c8yDefaultValidation=\"password\"\n        [autocomplete]=\"'new-password'\"\n      ></c8y-password-input>\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label for=\"newConfirmPassword\" translate>Confirm password</label>\n      <c8y-password-input\n        [id]=\"'newConfirmPassword'\"\n        name=\"newPasswordConfirm\"\n        #newPasswordConfirm=\"ngModel\"\n        [(ngModel)]=\"model.newPasswordConfirm\"\n        required\n        passwordConfirm=\"newPassword\"\n        [autocomplete]=\"'new-password'\"\n      ></c8y-password-input>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-5\">\n    <c8y-password-strength\n      [password]=\"model.newPassword\"\n      (strength)=\"model.strength = $event\"\n    ></c8y-password-strength>\n\n    <c8y-password-check-list\n      class=\"m-t-32\"\n      [password]=\"model.newPassword\"\n      [hidden]=\"!passwordEnforced\"\n    ></c8y-password-check-list>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LoginService }]; }, propDecorators: { password: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vbmV3LXBhc3N3b3JkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7O0FBT3RELE1BQU0sT0FBTyxvQkFBb0I7SUFPL0IsWUFBb0IsWUFBMEI7UUFBMUIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFOcEMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUF3QixDQUFDO1FBQzlELFVBQUssR0FBUSxFQUFFLENBQUM7UUFDaEIsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIscUJBQWdCLEdBQUcsS0FBSyxDQUFDO0lBR3dCLENBQUM7SUFFbEQsUUFBUTtRQUNOLElBQUksQ0FBQyw0QkFBNEIsRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDakQsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDekIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO1lBQ2pCLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7WUFDaEMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRO1NBQ3RDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsNEJBQTRCO1FBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNqRyxDQUFDO0lBRUQsb0JBQW9CO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDbkYsQ0FBQztJQUVELG9CQUFvQjtRQUNsQixJQUFJLENBQUMsY0FBYyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztTQUNqQjtJQUNILENBQUM7O2lIQXJDVSxvQkFBb0I7cUdBQXBCLG9CQUFvQiwyRkNWakMsK3ZEQXNEQSw0aUREOUNpQixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzsyRkFFeEQsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLGtCQUFrQixpQkFFYixDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsQ0FBQzttR0FHekQsUUFBUTtzQkFBakIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmV3UGFzc3dvcmQgfSBmcm9tICcuL3Bhc3N3b3JkLm1vZGVsJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIsIE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4uL2xvZ2luL2xvZ2luLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktbmV3LXBhc3N3b3JkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25ldy1wYXNzd29yZC5jb21wb25lbnQuaHRtbCcsXG4gIHZpZXdQcm92aWRlcnM6IFt7IHByb3ZpZGU6IENvbnRyb2xDb250YWluZXIsIHVzZUV4aXN0aW5nOiBOZ0Zvcm0gfV1cbn0pXG5leHBvcnQgY2xhc3MgTmV3UGFzc3dvcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgcGFzc3dvcmQgPSBuZXcgRXZlbnRFbWl0dGVyPE5ld1Bhc3N3b3JkIHwgb2JqZWN0PigpO1xuICBtb2RlbDogYW55ID0ge307XG4gIGNoYW5nZVBhc3N3b3JkID0gZmFsc2U7XG4gIHBhc3N3b3JkRW5mb3JjZWQgPSBmYWxzZTtcbiAgbWlubGVuZ3RoOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmxvYWRQYXNzd29yZFN0cmVuZ3RoU2V0dGluZ3MoKTtcbiAgICB0aGlzLmxvZ2luU2VydmljZS5nZXRHcmVlbk1pbkxlbmd0aCgpLnRoZW4odmFsdWUgPT4ge1xuICAgICAgdGhpcy5taW5sZW5ndGggPSB2YWx1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIG5ld1Bhc3N3b3JkQ2hhbmdlZCgpIHtcbiAgICB0aGlzLnBhc3N3b3JkLmVtaXQoe1xuICAgICAgcGFzc3dvcmQ6IHRoaXMubW9kZWwubmV3UGFzc3dvcmQsXG4gICAgICBwYXNzd29yZFN0cmVuZ3RoOiB0aGlzLm1vZGVsLnN0cmVuZ3RoXG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBsb2FkUGFzc3dvcmRTdHJlbmd0aFNldHRpbmdzKCkge1xuICAgIHRoaXMucGFzc3dvcmRFbmZvcmNlZCA9IGF3YWl0IHRoaXMubG9naW5TZXJ2aWNlLmdldFBhc3N3b3JkU3RyZW5ndGhFbmZvcmNlZCh7IHJlZnJlc2g6IHRydWUgfSk7XG4gIH1cblxuICBzaG93UGFzc3dvcmRTdHJlbmd0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5uZXdQYXNzd29yZCAmJiB0aGlzLm1vZGVsLm5ld1Bhc3N3b3JkLmxlbmd0aCA+PSB0aGlzLm1pbmxlbmd0aDtcbiAgfVxuXG4gIHRvZ2dsZUNoYW5nZVBhc3N3b3JkKCkge1xuICAgIHRoaXMuY2hhbmdlUGFzc3dvcmQgPSAhdGhpcy5jaGFuZ2VQYXNzd29yZDtcbiAgICBpZiAoIXRoaXMuY2hhbmdlUGFzc3dvcmQpIHtcbiAgICAgIHRoaXMucGFzc3dvcmQuZW1pdCh7fSk7XG4gICAgICB0aGlzLm1vZGVsID0ge307XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiIChjbGljayk9XCJ0b2dnbGVDaGFuZ2VQYXNzd29yZCgpXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFjaGFuZ2VQYXNzd29yZFwiPlxuICAgICAge3sgJ0NoYW5nZSBwYXNzd29yZCcgfCB0cmFuc2xhdGUgfX1cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY2hhbmdlUGFzc3dvcmRcIj5cbiAgICAgIHt7ICdDYW5jZWwgcGFzc3dvcmQgY2hhbmdlJyB8IHRyYW5zbGF0ZSB9fVxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2J1dHRvbj5cbjwvZGl2PlxuXG48ZGl2ICpuZ0lmPVwiY2hhbmdlUGFzc3dvcmRcIiBjbGFzcz1cInJvdyBjb250ZW50LWZsZXgtNTBcIj5cbiAgPGRpdiBjbGFzcz1cImNvbC03XCI+XG4gICAgPGM4eS1mb3JtLWdyb3VwPlxuICAgICAgPGxhYmVsIGZvcj1cIm5ld1Bhc3N3b3JkXCIgdHJhbnNsYXRlPlBhc3N3b3JkPC9sYWJlbD5cbiAgICAgIDxjOHktcGFzc3dvcmQtaW5wdXRcbiAgICAgICAgW2lkXT1cIiduZXdQYXNzd29yZCdcIlxuICAgICAgICBuYW1lPVwibmV3UGFzc3dvcmRcIlxuICAgICAgICAjbmV3UGFzc3dvcmQ9XCJuZ01vZGVsXCJcbiAgICAgICAgWyhuZ01vZGVsKV09XCJtb2RlbC5uZXdQYXNzd29yZFwiXG4gICAgICAgIChjaGFuZ2UpPVwibmV3UGFzc3dvcmRDaGFuZ2VkKClcIlxuICAgICAgICAoaW5wdXQpPVwibmV3UGFzc3dvcmRDb25maXJtLmNvbnRyb2wudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpXCJcbiAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgYzh5RGVmYXVsdFZhbGlkYXRpb249XCJwYXNzd29yZFwiXG4gICAgICAgIFthdXRvY29tcGxldGVdPVwiJ25ldy1wYXNzd29yZCdcIlxuICAgICAgPjwvYzh5LXBhc3N3b3JkLWlucHV0PlxuICAgIDwvYzh5LWZvcm0tZ3JvdXA+XG5cbiAgICA8Yzh5LWZvcm0tZ3JvdXA+XG4gICAgICA8bGFiZWwgZm9yPVwibmV3Q29uZmlybVBhc3N3b3JkXCIgdHJhbnNsYXRlPkNvbmZpcm0gcGFzc3dvcmQ8L2xhYmVsPlxuICAgICAgPGM4eS1wYXNzd29yZC1pbnB1dFxuICAgICAgICBbaWRdPVwiJ25ld0NvbmZpcm1QYXNzd29yZCdcIlxuICAgICAgICBuYW1lPVwibmV3UGFzc3dvcmRDb25maXJtXCJcbiAgICAgICAgI25ld1Bhc3N3b3JkQ29uZmlybT1cIm5nTW9kZWxcIlxuICAgICAgICBbKG5nTW9kZWwpXT1cIm1vZGVsLm5ld1Bhc3N3b3JkQ29uZmlybVwiXG4gICAgICAgIHJlcXVpcmVkXG4gICAgICAgIHBhc3N3b3JkQ29uZmlybT1cIm5ld1Bhc3N3b3JkXCJcbiAgICAgICAgW2F1dG9jb21wbGV0ZV09XCInbmV3LXBhc3N3b3JkJ1wiXG4gICAgICA+PC9jOHktcGFzc3dvcmQtaW5wdXQ+XG4gICAgPC9jOHktZm9ybS1ncm91cD5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjb2wtNVwiPlxuICAgIDxjOHktcGFzc3dvcmQtc3RyZW5ndGhcbiAgICAgIFtwYXNzd29yZF09XCJtb2RlbC5uZXdQYXNzd29yZFwiXG4gICAgICAoc3RyZW5ndGgpPVwibW9kZWwuc3RyZW5ndGggPSAkZXZlbnRcIlxuICAgID48L2M4eS1wYXNzd29yZC1zdHJlbmd0aD5cblxuICAgIDxjOHktcGFzc3dvcmQtY2hlY2stbGlzdFxuICAgICAgY2xhc3M9XCJtLXQtMzJcIlxuICAgICAgW3Bhc3N3b3JkXT1cIm1vZGVsLm5ld1Bhc3N3b3JkXCJcbiAgICAgIFtoaWRkZW5dPVwiIXBhc3N3b3JkRW5mb3JjZWRcIlxuICAgID48L2M4eS1wYXNzd29yZC1jaGVjay1saXN0PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19