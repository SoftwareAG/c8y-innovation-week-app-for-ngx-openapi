import { Component, Output, EventEmitter, Input } from '@angular/core';
import { LoginService } from '../login/login.service';
import { AlertService } from '../alert/alert.service';
import { LoginViews } from '../login/login.model';
import { UserService } from '@c8y/client';
import * as i0 from "@angular/core";
import * as i1 from "../login/login.service";
import * as i2 from "../alert/alert.service";
import * as i3 from "@c8y/client";
import * as i4 from "../forms/phone-validation.directive";
import * as i5 from "@angular/forms";
import * as i6 from "../forms/form-group.component";
import * as i7 from "../forms/required-input-placeholder.directive";
import * as i8 from "../i18n/c8y-translate.directive";
import * as i9 from "@angular/common";
import * as i10 from "../i18n/c8y-translate.pipe";
export class ProvidePhoneNumberComponent {
    constructor(loginService, alert, userService) {
        this.loginService = loginService;
        this.alert = alert;
        this.userService = userService;
        this.onCancel = new EventEmitter();
        this.onChangeView = new EventEmitter();
        this.requestInProgress = false;
        this.sendTfa = '0';
    }
    async save() {
        try {
            this.requestInProgress = true;
            await this.userService.savePhoneNumber(this.phoneNumber);
            await this.sendTFASms();
            this.onChangeView.emit({
                view: LoginViews.SmsChallenge,
                credentials: this.credentials
            });
        }
        catch (e) {
            this.alert.addServerFailure(e);
        }
        finally {
            this.requestInProgress = false;
        }
    }
    async sendTFASms() {
        try {
            await this.userService.verifyTFACode(this.sendTfa);
        }
        catch (e) {
            if (e.res.status === 403) {
                this.loginService.cleanMessages();
                this.loginService.addSuccessMessage('send_sms');
            }
            else {
                throw e;
            }
        }
    }
}
ProvidePhoneNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProvidePhoneNumberComponent, deps: [{ token: i1.LoginService }, { token: i2.AlertService }, { token: i3.UserService }], target: i0.ɵɵFactoryTarget.Component });
ProvidePhoneNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ProvidePhoneNumberComponent, selector: "c8y-provide-phone-number", inputs: { credentials: "credentials" }, outputs: { onCancel: "onCancel", onChangeView: "onChangeView" }, ngImport: i0, template: "<form #twoFactorForm=\"ngForm\" class=\"loginForm\" (ngSubmit)=\"save()\" novalidate>\n  <div class=\"legend form-block center\" translate>Two-factor authentication</div>\n\n  <c8y-form-group [ngClass]=\"requestInProgress || twoFactorForm.invalid ? 'p-b-8' : ''\">\n    <label translate>Provide your phone number</label>\n\n    <input\n      class=\"form-control\"\n      [(ngModel)]=\"phoneNumber\"\n      #contactPhone=\"ngModel\"\n      type=\"text\"\n      name=\"phone\"\n      autocomplete=\"off\"\n      placeholder=\"{{ 'e.g. +49 9 876 543 210`LOCALIZE`' | translate }}\"\n      c8yPhoneValidation\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Save and continue' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    [disabled]=\"requestInProgress || twoFactorForm.invalid\"\n  >\n    {{ 'Save and continue' | translate }}\n  </button>\n\n  <div class=\"d-flex m-t-8\">\n    <a\n      title=\"{{ 'Login' | translate }}\"\n      class=\"small pointer m-l-auto\"\n      href=\"#\"\n      (click)=\"onCancel.emit()\"\n    >\n      {{ 'Login' | translate }}\n    </a>\n  </div>\n</form>\n", dependencies: [{ kind: "directive", type: i4.PhoneValidationDirective, selector: "[c8yPhoneValidation]" }, { kind: "directive", type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i6.FormGroupComponent, selector: "c8y-form-group", inputs: ["hasError", "hasWarning", "hasSuccess", "novalidation", "status"] }, { kind: "directive", type: i7.RequiredInputPlaceholderDirective, selector: "input[required], input[formControlName]" }, { kind: "directive", type: i8.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i9.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "pipe", type: i10.C8yTranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProvidePhoneNumberComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-provide-phone-number', template: "<form #twoFactorForm=\"ngForm\" class=\"loginForm\" (ngSubmit)=\"save()\" novalidate>\n  <div class=\"legend form-block center\" translate>Two-factor authentication</div>\n\n  <c8y-form-group [ngClass]=\"requestInProgress || twoFactorForm.invalid ? 'p-b-8' : ''\">\n    <label translate>Provide your phone number</label>\n\n    <input\n      class=\"form-control\"\n      [(ngModel)]=\"phoneNumber\"\n      #contactPhone=\"ngModel\"\n      type=\"text\"\n      name=\"phone\"\n      autocomplete=\"off\"\n      placeholder=\"{{ 'e.g. +49 9 876 543 210`LOCALIZE`' | translate }}\"\n      c8yPhoneValidation\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Save and continue' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    [disabled]=\"requestInProgress || twoFactorForm.invalid\"\n  >\n    {{ 'Save and continue' | translate }}\n  </button>\n\n  <div class=\"d-flex m-t-8\">\n    <a\n      title=\"{{ 'Login' | translate }}\"\n      class=\"small pointer m-l-auto\"\n      href=\"#\"\n      (click)=\"onCancel.emit()\"\n    >\n      {{ 'Login' | translate }}\n    </a>\n  </div>\n</form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LoginService }, { type: i2.AlertService }, { type: i3.UserService }]; }, propDecorators: { credentials: [{
                type: Input
            }], onCancel: [{
                type: Output
            }], onChangeView: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1waG9uZS1udW1iZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9wcm92aWRlLXBob25lLW51bWJlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9jb3JlL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGUtcGhvbmUtbnVtYmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7Ozs7Ozs7Ozs7OztBQU14RCxNQUFNLE9BQU8sMkJBQTJCO0lBU3RDLFlBQ1MsWUFBMEIsRUFDMUIsS0FBbUIsRUFDbEIsV0FBd0I7UUFGekIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQUNsQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQVZ4QixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM5QixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFHNUMsc0JBQWlCLEdBQUcsS0FBSyxDQUFDO1FBQ1QsWUFBTyxHQUFXLEdBQUcsQ0FBQztJQU1wQyxDQUFDO0lBRUosS0FBSyxDQUFDLElBQUk7UUFDUixJQUFJO1lBQ0YsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQztZQUM5QixNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUN6RCxNQUFNLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQztnQkFDckIsSUFBSSxFQUFFLFVBQVUsQ0FBQyxZQUFZO2dCQUM3QixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7YUFDOUIsQ0FBQyxDQUFDO1NBQ0o7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDaEM7Z0JBQVM7WUFDUixJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQztJQUVPLEtBQUssQ0FBQyxVQUFVO1FBQ3RCLElBQUk7WUFDRixNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNwRDtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDakQ7aUJBQU07Z0JBQ0wsTUFBTSxDQUFDLENBQUM7YUFDVDtTQUNGO0lBQ0gsQ0FBQzs7d0hBMUNVLDJCQUEyQjs0R0FBM0IsMkJBQTJCLHlLQ1Z4QyxtcENBdUNBOzJGRDdCYSwyQkFBMkI7a0JBSnZDLFNBQVM7K0JBQ0UsMEJBQTBCO3dKQUkzQixXQUFXO3NCQUFuQixLQUFLO2dCQUNJLFFBQVE7c0JBQWpCLE1BQU07Z0JBQ0csWUFBWTtzQkFBckIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuLi9sb2dpbi9sb2dpbi5zZXJ2aWNlJztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9naW5WaWV3cyB9IGZyb20gJy4uL2xvZ2luL2xvZ2luLm1vZGVsJztcbmltcG9ydCB7IElDcmVkZW50aWFscywgVXNlclNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1wcm92aWRlLXBob25lLW51bWJlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm92aWRlLXBob25lLW51bWJlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY3JlZGVudGlhbHM6IElDcmVkZW50aWFscztcbiAgQE91dHB1dCgpIG9uQ2FuY2VsID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgb25DaGFuZ2VWaWV3ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHBob25lTnVtYmVyOiBzdHJpbmc7XG4gIHJlcXVlc3RJblByb2dyZXNzID0gZmFsc2U7XG4gIHByaXZhdGUgcmVhZG9ubHkgc2VuZFRmYTogc3RyaW5nID0gJzAnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSxcbiAgICBwdWJsaWMgYWxlcnQ6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHVzZXJTZXJ2aWNlOiBVc2VyU2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgc2F2ZSgpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5yZXF1ZXN0SW5Qcm9ncmVzcyA9IHRydWU7XG4gICAgICBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLnNhdmVQaG9uZU51bWJlcih0aGlzLnBob25lTnVtYmVyKTtcbiAgICAgIGF3YWl0IHRoaXMuc2VuZFRGQVNtcygpO1xuICAgICAgdGhpcy5vbkNoYW5nZVZpZXcuZW1pdCh7XG4gICAgICAgIHZpZXc6IExvZ2luVmlld3MuU21zQ2hhbGxlbmdlLFxuICAgICAgICBjcmVkZW50aWFsczogdGhpcy5jcmVkZW50aWFsc1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLnJlcXVlc3RJblByb2dyZXNzID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBzZW5kVEZBU21zKCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLnZlcmlmeVRGQUNvZGUodGhpcy5zZW5kVGZhKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAoZS5yZXMuc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgdGhpcy5sb2dpblNlcnZpY2UuY2xlYW5NZXNzYWdlcygpO1xuICAgICAgICB0aGlzLmxvZ2luU2VydmljZS5hZGRTdWNjZXNzTWVzc2FnZSgnc2VuZF9zbXMnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCI8Zm9ybSAjdHdvRmFjdG9yRm9ybT1cIm5nRm9ybVwiIGNsYXNzPVwibG9naW5Gb3JtXCIgKG5nU3VibWl0KT1cInNhdmUoKVwiIG5vdmFsaWRhdGU+XG4gIDxkaXYgY2xhc3M9XCJsZWdlbmQgZm9ybS1ibG9jayBjZW50ZXJcIiB0cmFuc2xhdGU+VHdvLWZhY3RvciBhdXRoZW50aWNhdGlvbjwvZGl2PlxuXG4gIDxjOHktZm9ybS1ncm91cCBbbmdDbGFzc109XCJyZXF1ZXN0SW5Qcm9ncmVzcyB8fCB0d29GYWN0b3JGb3JtLmludmFsaWQgPyAncC1iLTgnIDogJydcIj5cbiAgICA8bGFiZWwgdHJhbnNsYXRlPlByb3ZpZGUgeW91ciBwaG9uZSBudW1iZXI8L2xhYmVsPlxuXG4gICAgPGlucHV0XG4gICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICBbKG5nTW9kZWwpXT1cInBob25lTnVtYmVyXCJcbiAgICAgICNjb250YWN0UGhvbmU9XCJuZ01vZGVsXCJcbiAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgIG5hbWU9XCJwaG9uZVwiXG4gICAgICBhdXRvY29tcGxldGU9XCJvZmZcIlxuICAgICAgcGxhY2Vob2xkZXI9XCJ7eyAnZS5nLiArNDkgOSA4NzYgNTQzIDIxMGBMT0NBTElaRWAnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgIGM4eVBob25lVmFsaWRhdGlvblxuICAgICAgcmVxdWlyZWRcbiAgICAvPlxuICA8L2M4eS1mb3JtLWdyb3VwPlxuXG4gIDxidXR0b25cbiAgICB0aXRsZT1cInt7ICdTYXZlIGFuZCBjb250aW51ZScgfCB0cmFuc2xhdGUgfX1cIlxuICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1sZyBidG4tYmxvY2sgZm9ybS1ncm91cFwiXG4gICAgW2Rpc2FibGVkXT1cInJlcXVlc3RJblByb2dyZXNzIHx8IHR3b0ZhY3RvckZvcm0uaW52YWxpZFwiXG4gID5cbiAgICB7eyAnU2F2ZSBhbmQgY29udGludWUnIHwgdHJhbnNsYXRlIH19XG4gIDwvYnV0dG9uPlxuXG4gIDxkaXYgY2xhc3M9XCJkLWZsZXggbS10LThcIj5cbiAgICA8YVxuICAgICAgdGl0bGU9XCJ7eyAnTG9naW4nIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgIGNsYXNzPVwic21hbGwgcG9pbnRlciBtLWwtYXV0b1wiXG4gICAgICBocmVmPVwiI1wiXG4gICAgICAoY2xpY2spPVwib25DYW5jZWwuZW1pdCgpXCJcbiAgICA+XG4gICAgICB7eyAnTG9naW4nIHwgdHJhbnNsYXRlIH19XG4gICAgPC9hPlxuICA8L2Rpdj5cbjwvZm9ybT5cbiJdfQ==