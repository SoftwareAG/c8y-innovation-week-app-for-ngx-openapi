import { NgModule } from '@angular/core';
import { CommonModule } from '../common/common.module';
import { HeaderModule } from '../header/header.module';
import { PluginsModule } from '../plugins/plugins.module';
import { PropertiesListModule } from '../properties-list/properties-list.module';
import { hookStepper } from '../stepper/stepper.service';
import { StepperModule } from '../stepper/stepper.module';
import { SetupCompletedComponent } from './setup-completed.component';
import { SetupComponent } from './setup.component';
import { SetupStepperFactory } from './setup-stepper-factory';
import { HookProviderTypes } from '../common';
import * as i0 from "@angular/core";
export class SetupModule {
}
SetupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SetupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SetupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: SetupModule, declarations: [SetupComponent, SetupCompletedComponent], imports: [CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule], exports: [SetupComponent, SetupCompletedComponent] });
SetupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SetupModule, providers: [
        hookStepper(SetupStepperFactory, { providerType: HookProviderTypes.ExistingProvider })
    ], imports: [CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: SetupModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SetupComponent, SetupCompletedComponent],
                    imports: [CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule],
                    exports: [SetupComponent, SetupCompletedComponent],
                    entryComponents: [SetupCompletedComponent],
                    providers: [
                        hookStepper(SetupStepperFactory, { providerType: HookProviderTypes.ExistingProvider })
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9zZXR1cC9zZXR1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBVzlDLE1BQU0sT0FBTyxXQUFXOzt3R0FBWCxXQUFXO3lHQUFYLFdBQVcsaUJBUlAsY0FBYyxFQUFFLHVCQUF1QixhQUM1QyxZQUFZLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsb0JBQW9CLGFBQzlFLGNBQWMsRUFBRSx1QkFBdUI7eUdBTXRDLFdBQVcsYUFKWDtRQUNULFdBQVcsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0tBQ3ZGLFlBTFMsWUFBWSxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLG9CQUFvQjsyRkFPN0UsV0FBVztrQkFUdkIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxjQUFjLEVBQUUsdUJBQXVCLENBQUM7b0JBQ3ZELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxvQkFBb0IsQ0FBQztvQkFDekYsT0FBTyxFQUFFLENBQUMsY0FBYyxFQUFFLHVCQUF1QixDQUFDO29CQUNsRCxlQUFlLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztvQkFDMUMsU0FBUyxFQUFFO3dCQUNULFdBQVcsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO3FCQUN2RjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBIZWFkZXJNb2R1bGUgfSBmcm9tICcuLi9oZWFkZXIvaGVhZGVyLm1vZHVsZSc7XG5pbXBvcnQgeyBQbHVnaW5zTW9kdWxlIH0gZnJvbSAnLi4vcGx1Z2lucy9wbHVnaW5zLm1vZHVsZSc7XG5pbXBvcnQgeyBQcm9wZXJ0aWVzTGlzdE1vZHVsZSB9IGZyb20gJy4uL3Byb3BlcnRpZXMtbGlzdC9wcm9wZXJ0aWVzLWxpc3QubW9kdWxlJztcbmltcG9ydCB7IGhvb2tTdGVwcGVyIH0gZnJvbSAnLi4vc3RlcHBlci9zdGVwcGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcHBlck1vZHVsZSB9IGZyb20gJy4uL3N0ZXBwZXIvc3RlcHBlci5tb2R1bGUnO1xuaW1wb3J0IHsgU2V0dXBDb21wbGV0ZWRDb21wb25lbnQgfSBmcm9tICcuL3NldHVwLWNvbXBsZXRlZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2V0dXBDb21wb25lbnQgfSBmcm9tICcuL3NldHVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZXR1cFN0ZXBwZXJGYWN0b3J5IH0gZnJvbSAnLi9zZXR1cC1zdGVwcGVyLWZhY3RvcnknO1xuaW1wb3J0IHsgSG9va1Byb3ZpZGVyVHlwZXMgfSBmcm9tICcuLi9jb21tb24nO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTZXR1cENvbXBvbmVudCwgU2V0dXBDb21wbGV0ZWRDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBIZWFkZXJNb2R1bGUsIFN0ZXBwZXJNb2R1bGUsIFBsdWdpbnNNb2R1bGUsIFByb3BlcnRpZXNMaXN0TW9kdWxlXSxcbiAgZXhwb3J0czogW1NldHVwQ29tcG9uZW50LCBTZXR1cENvbXBsZXRlZENvbXBvbmVudF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1NldHVwQ29tcGxldGVkQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgaG9va1N0ZXBwZXIoU2V0dXBTdGVwcGVyRmFjdG9yeSwgeyBwcm92aWRlclR5cGU6IEhvb2tQcm92aWRlclR5cGVzLkV4aXN0aW5nUHJvdmlkZXIgfSlcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTZXR1cE1vZHVsZSB7fVxuIl19