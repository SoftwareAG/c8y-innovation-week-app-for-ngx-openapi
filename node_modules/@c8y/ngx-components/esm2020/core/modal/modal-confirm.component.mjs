import { Component, Input } from '@angular/core';
import { isEmpty, mapValues } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Status, statusAlert, statusIcons } from '../common/status.model';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as i2 from "@angular/common";
import * as i3 from "../i18n/c8y-translate.pipe";
import * as i4 from "../common/show-if-filter.pipe";
export class ConfirmModalComponent {
    set labels(labels) {
        const { ok = 'OK', cancel = 'Cancel' } = labels || {};
        this._labels = { ok, cancel };
    }
    get labels() {
        return this._labels;
    }
    constructor(modal) {
        this.modal = modal;
        this.status = Status.INFO;
        this._labels = {
            ok: 'OK',
            cancel: 'Cancel'
        };
        this.result = new Promise((resolve, reject) => {
            this.dismiss = () => {
                reject();
                this.modal.hide();
            };
            this.close = () => {
                resolve(isEmpty(this.confirmOptions)
                    ? true
                    : {
                        confirmed: true,
                        confirmOptions: mapValues(this.confirmOptions, option => option.checked)
                    });
                this.modal.hide();
            };
        });
    }
    get classIcon() {
        return `dlt-c8y-icon-${statusIcons[this.status]}`;
    }
    get classAlert() {
        return statusAlert[this.status];
    }
    ngOnDestroy() {
        this.dismiss();
    }
}
ConfirmModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmModalComponent, deps: [{ token: i1.BsModalRef }], target: i0.ɵɵFactoryTarget.Component });
ConfirmModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ConfirmModalComponent, selector: "c8y-confirm-modal", inputs: { title: "title", body: "body", confirmOptions: "confirmOptions", status: "status", labels: "labels" }, ngImport: i0, template: "<div class=\"c8y-prompt alert\" [ngClass]=\"[classAlert]\" data-cy=\"prompt-alert\">\n  <h3 class=\"m-b-16 d-flex a-i-center\" *ngIf=\"title\">\n    <i class=\"dlt-c8y-icon\" [ngClass]=\"[classIcon]\"></i>\n    <span *ngIf=\"title\">{{ title | translate }}</span>\n  </h3>\n  <p class=\"text-break-word m-b-16\">{{ body | translate }}</p>\n  <div\n    class=\"c8y-checkbox plain m-b-8\"\n    *ngFor=\"let co of confirmOptions | showIfFilter | async | keyvalue\"\n  >\n    <label [title]=\"co.value.text | translate\" class=\"c8y-checkbox\">\n      <input\n        type=\"checkbox\"\n        [checked]=\"co.value.checked\"\n        (change)=\"co.value.checked = !co.value.checked\"\n        [disabled]=\"confirmOptions[co.value.disabledByKey]?.checked\"\n      />\n      <span></span>\n      <span class=\"text-muted\">{{ co.value.text | translate }}</span>\n    </label>\n  </div>\n  <ng-content></ng-content>\n  <div class=\"alert-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      *ngIf=\"labels.cancel !== null\"\n      (click)=\"dismiss()\"\n      data-cy=\"c8y-confirm-modal--cancel\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button\n      title=\"{{ labels.ok | translate }}\"\n      type=\"button\"\n      class=\"btn btn-primary m-t-xs-8\"\n      (click)=\"close()\"\n      data-cy=\"c8y-confirm-modal--ok\"\n    >\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.KeyValuePipe, name: "keyvalue" }, { kind: "pipe", type: i4.ShowIfFilterPipe, name: "showIfFilter" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ConfirmModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-confirm-modal', template: "<div class=\"c8y-prompt alert\" [ngClass]=\"[classAlert]\" data-cy=\"prompt-alert\">\n  <h3 class=\"m-b-16 d-flex a-i-center\" *ngIf=\"title\">\n    <i class=\"dlt-c8y-icon\" [ngClass]=\"[classIcon]\"></i>\n    <span *ngIf=\"title\">{{ title | translate }}</span>\n  </h3>\n  <p class=\"text-break-word m-b-16\">{{ body | translate }}</p>\n  <div\n    class=\"c8y-checkbox plain m-b-8\"\n    *ngFor=\"let co of confirmOptions | showIfFilter | async | keyvalue\"\n  >\n    <label [title]=\"co.value.text | translate\" class=\"c8y-checkbox\">\n      <input\n        type=\"checkbox\"\n        [checked]=\"co.value.checked\"\n        (change)=\"co.value.checked = !co.value.checked\"\n        [disabled]=\"confirmOptions[co.value.disabledByKey]?.checked\"\n      />\n      <span></span>\n      <span class=\"text-muted\">{{ co.value.text | translate }}</span>\n    </label>\n  </div>\n  <ng-content></ng-content>\n  <div class=\"alert-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      *ngIf=\"labels.cancel !== null\"\n      (click)=\"dismiss()\"\n      data-cy=\"c8y-confirm-modal--cancel\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button\n      title=\"{{ labels.ok | translate }}\"\n      type=\"button\"\n      class=\"btn btn-primary m-t-xs-8\"\n      (click)=\"close()\"\n      data-cy=\"c8y-confirm-modal--ok\"\n    >\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BsModalRef }]; }, propDecorators: { title: [{
                type: Input
            }], body: [{
                type: Input
            }], confirmOptions: [{
                type: Input
            }], status: [{
                type: Input
            }], labels: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29uZmlybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL21vZGFsL21vZGFsLWNvbmZpcm0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vY29yZS9tb2RhbC9tb2RhbC1jb25maXJtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQWMsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7O0FBK0J0RixNQUFNLE9BQU8scUJBQXFCO0lBUWhDLElBQWEsTUFBTSxDQUFDLE1BQW1CO1FBQ3JDLE1BQU0sRUFBRSxFQUFFLEdBQUcsSUFBSSxFQUFFLE1BQU0sR0FBRyxRQUFRLEVBQUUsR0FBRyxNQUFNLElBQUksRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBR0QsWUFBb0IsS0FBaUI7UUFBakIsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQVg1QixXQUFNLEdBQWUsTUFBTSxDQUFDLElBQUksQ0FBQztRQVl4QyxJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ2IsRUFBRSxFQUFFLElBQUk7WUFDUixNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRTtnQkFDbEIsTUFBTSxFQUFFLENBQUM7Z0JBQ1QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNwQixDQUFDLENBQUM7WUFDRixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRTtnQkFDaEIsT0FBTyxDQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO29CQUMxQixDQUFDLENBQUMsSUFBSTtvQkFDTixDQUFDLENBQUM7d0JBQ0UsU0FBUyxFQUFFLElBQUk7d0JBQ2YsY0FBYyxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztxQkFDekUsQ0FDTixDQUFDO2dCQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDcEIsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxnQkFBZ0IsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ3BELENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7a0hBcERVLHFCQUFxQjtzR0FBckIscUJBQXFCLHlLQ25DbEMsZytDQTRDQTsyRkRUYSxxQkFBcUI7a0JBSmpDLFNBQVM7K0JBQ0UsbUJBQW1CO2lHQU9wQixLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLGNBQWM7c0JBQXRCLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNPLE1BQU07c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGlzRW1wdHksIG1hcFZhbHVlcyB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTdGF0dXMsIHN0YXR1c0FsZXJ0LCBzdGF0dXNJY29ucywgU3RhdHVzVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgTW9kYWxMYWJlbHMgfSBmcm9tICcuLi9zZWxlY3QtbW9kYWwvc2VsZWN0LW1vZGFsLm1vZGVsJztcblxuLyoqXG4gKiBMYWJlbHMgdG8gYmUgdXNlZCBpbiB0aGUgc2VsZWN0aW9uIG1vZGFsLlxuICogQGRlcHJlY2F0ZWQgVGhpcyBpcyBnb2luZyB0byBiZSByZW1vdmVkIGFmdGVyIDEwMDcuNy4wLiBVc2UgTW9kYWxMYWJlbHMgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1pbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgSUxhYmVscyBleHRlbmRzIE1vZGFsTGFiZWxzIHt9XG5cbi8qKlxuICogRGVmaW5lcyBvcHRpb25zIHRvIGJlIGRpc3BsYXllZCBpbiB0aGUgY29uZmlybSBkaWFsb2cuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlybU9wdGlvbnMge1xuICBba2V5OiBzdHJpbmddOiBDb25maXJtT3B0aW9uO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpcm1PcHRpb24ge1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNoZWNrZWQ/OiBib29sZWFuO1xuICBzaG93SWY/OiBib29sZWFuIHwgKCgpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+IHwgT2JzZXJ2YWJsZTxib29sZWFuPik7XG4gIC8qKlxuICAgKiBXaWxsIGRpc2FibGUgdGhlIGN1cnJlbnQgb3B0aW9uIHdoZW4gYW4gb3B0aW9uIHdpdGggdGhlIGdpdmVuIGtleSBpcyBzZWxlY3RlZC5cbiAgICovXG4gIGRpc2FibGVkQnlLZXk/OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1jb25maXJtLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vZGFsLWNvbmZpcm0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1Nb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHJlc3VsdDogUHJvbWlzZTxib29sZWFuIHwgeyBjb25maXJtZWQ6IGJvb2xlYW47IGNvbmZpcm1PcHRpb25zOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSB9PjtcbiAgZGlzbWlzczogKCkgPT4gdm9pZDtcbiAgY2xvc2U6ICgpID0+IHZvaWQ7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGJvZHk6IHN0cmluZztcbiAgQElucHV0KCkgY29uZmlybU9wdGlvbnM6IENvbmZpcm1PcHRpb25zO1xuICBASW5wdXQoKSBzdGF0dXM6IFN0YXR1c1R5cGUgPSBTdGF0dXMuSU5GTztcbiAgQElucHV0KCkgc2V0IGxhYmVscyhsYWJlbHM6IE1vZGFsTGFiZWxzKSB7XG4gICAgY29uc3QgeyBvayA9ICdPSycsIGNhbmNlbCA9ICdDYW5jZWwnIH0gPSBsYWJlbHMgfHwge307XG4gICAgdGhpcy5fbGFiZWxzID0geyBvaywgY2FuY2VsIH07XG4gIH1cblxuICBnZXQgbGFiZWxzKCk6IE1vZGFsTGFiZWxzIHtcbiAgICByZXR1cm4gdGhpcy5fbGFiZWxzO1xuICB9XG5cbiAgcHJpdmF0ZSBfbGFiZWxzOiBNb2RhbExhYmVscztcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbDogQnNNb2RhbFJlZikge1xuICAgIHRoaXMuX2xhYmVscyA9IHtcbiAgICAgIG9rOiAnT0snLFxuICAgICAgY2FuY2VsOiAnQ2FuY2VsJ1xuICAgIH07XG4gICAgdGhpcy5yZXN1bHQgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLmRpc21pc3MgPSAoKSA9PiB7XG4gICAgICAgIHJlamVjdCgpO1xuICAgICAgICB0aGlzLm1vZGFsLmhpZGUoKTtcbiAgICAgIH07XG4gICAgICB0aGlzLmNsb3NlID0gKCkgPT4ge1xuICAgICAgICByZXNvbHZlKFxuICAgICAgICAgIGlzRW1wdHkodGhpcy5jb25maXJtT3B0aW9ucylcbiAgICAgICAgICAgID8gdHJ1ZVxuICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgY29uZmlybWVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbmZpcm1PcHRpb25zOiBtYXBWYWx1ZXModGhpcy5jb25maXJtT3B0aW9ucywgb3B0aW9uID0+IG9wdGlvbi5jaGVja2VkKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHRoaXMubW9kYWwuaGlkZSgpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBjbGFzc0ljb24oKSB7XG4gICAgcmV0dXJuIGBkbHQtYzh5LWljb24tJHtzdGF0dXNJY29uc1t0aGlzLnN0YXR1c119YDtcbiAgfVxuXG4gIGdldCBjbGFzc0FsZXJ0KCkge1xuICAgIHJldHVybiBzdGF0dXNBbGVydFt0aGlzLnN0YXR1c107XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRpc21pc3MoKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImM4eS1wcm9tcHQgYWxlcnRcIiBbbmdDbGFzc109XCJbY2xhc3NBbGVydF1cIiBkYXRhLWN5PVwicHJvbXB0LWFsZXJ0XCI+XG4gIDxoMyBjbGFzcz1cIm0tYi0xNiBkLWZsZXggYS1pLWNlbnRlclwiICpuZ0lmPVwidGl0bGVcIj5cbiAgICA8aSBjbGFzcz1cImRsdC1jOHktaWNvblwiIFtuZ0NsYXNzXT1cIltjbGFzc0ljb25dXCI+PC9pPlxuICAgIDxzcGFuICpuZ0lmPVwidGl0bGVcIj57eyB0aXRsZSB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj5cbiAgPC9oMz5cbiAgPHAgY2xhc3M9XCJ0ZXh0LWJyZWFrLXdvcmQgbS1iLTE2XCI+e3sgYm9keSB8IHRyYW5zbGF0ZSB9fTwvcD5cbiAgPGRpdlxuICAgIGNsYXNzPVwiYzh5LWNoZWNrYm94IHBsYWluIG0tYi04XCJcbiAgICAqbmdGb3I9XCJsZXQgY28gb2YgY29uZmlybU9wdGlvbnMgfCBzaG93SWZGaWx0ZXIgfCBhc3luYyB8IGtleXZhbHVlXCJcbiAgPlxuICAgIDxsYWJlbCBbdGl0bGVdPVwiY28udmFsdWUudGV4dCB8IHRyYW5zbGF0ZVwiIGNsYXNzPVwiYzh5LWNoZWNrYm94XCI+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgW2NoZWNrZWRdPVwiY28udmFsdWUuY2hlY2tlZFwiXG4gICAgICAgIChjaGFuZ2UpPVwiY28udmFsdWUuY2hlY2tlZCA9ICFjby52YWx1ZS5jaGVja2VkXCJcbiAgICAgICAgW2Rpc2FibGVkXT1cImNvbmZpcm1PcHRpb25zW2NvLnZhbHVlLmRpc2FibGVkQnlLZXldPy5jaGVja2VkXCJcbiAgICAgIC8+XG4gICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cInRleHQtbXV0ZWRcIj57eyBjby52YWx1ZS50ZXh0IHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgIDwvbGFiZWw+XG4gIDwvZGl2PlxuICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIDxkaXYgY2xhc3M9XCJhbGVydC1mb290ZXJcIj5cbiAgICA8YnV0dG9uXG4gICAgICB0aXRsZT1cInt7IGxhYmVscy5jYW5jZWwgfCB0cmFuc2xhdGUgfX1cIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiXG4gICAgICAqbmdJZj1cImxhYmVscy5jYW5jZWwgIT09IG51bGxcIlxuICAgICAgKGNsaWNrKT1cImRpc21pc3MoKVwiXG4gICAgICBkYXRhLWN5PVwiYzh5LWNvbmZpcm0tbW9kYWwtLWNhbmNlbFwiXG4gICAgPlxuICAgICAge3sgbGFiZWxzLmNhbmNlbCB8IHRyYW5zbGF0ZSB9fVxuICAgIDwvYnV0dG9uPlxuICAgIDxidXR0b25cbiAgICAgIHRpdGxlPVwie3sgbGFiZWxzLm9rIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgbS10LXhzLThcIlxuICAgICAgKGNsaWNrKT1cImNsb3NlKClcIlxuICAgICAgZGF0YS1jeT1cImM4eS1jb25maXJtLW1vZGFsLS1va1wiXG4gICAgPlxuICAgICAge3sgbGFiZWxzLm9rIHwgdHJhbnNsYXRlIH19XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=