import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../common/icon.directive";
import * as i2 from "@angular/common";
export class C8yStepperProgress {
    constructor() {
        /** Emits the index: number of the step which was clicked */
        this.onStepClicked = new EventEmitter();
    }
    /** Called on click and emits the step index */
    stepSelected() {
        this.onStepClicked.emit(this.index);
    }
}
C8yStepperProgress.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: C8yStepperProgress, deps: [], target: i0.ɵɵFactoryTarget.Component });
C8yStepperProgress.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: C8yStepperProgress, selector: "c8y-stepper-progress", inputs: { iconOverrides: "iconOverrides", index: "index", selected: "selected", state: "state", disabled: "disabled" }, outputs: { onStepClicked: "onStepClicked" }, ngImport: i0, template: "<button\n  type=\"button\"\n  class=\"c8y-step\"\n  [ngClass]=\"{\n    active: selected,\n    'step-done': state === 'done' || state === '_done',\n    'step-error': state === 'error',\n    'step-warning': state === 'warning'\n  }\"\n  [disabled]=\"disabled\"\n  [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\"\n  (click)=\"stepSelected()\"\n>\n  <ng-container *ngSwitchCase=\"true\" [ngTemplateOutlet]=\"iconOverrides[state]\"></ng-container>\n  <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\n    <span *ngSwitchCase=\"'edit'\">\n      <span [c8yIcon]=\"'edit'\"></span>\n    </span>\n    <span *ngSwitchCase=\"'done'\">\n      <span class=\"m-t-4\" [c8yIcon]=\"'check'\"></span>\n    </span>\n    <span *ngSwitchCase=\"'error'\">\n      <span class=\"m-t-4\" [c8yIcon]=\"'exclamation'\"></span>\n    </span>\n    <span *ngSwitchDefault>{{ index + 1 }}</span>\n  </ng-container>\n</button>\n", dependencies: [{ kind: "directive", type: i1.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: C8yStepperProgress, decorators: [{
            type: Component,
            args: [{ selector: 'c8y-stepper-progress', template: "<button\n  type=\"button\"\n  class=\"c8y-step\"\n  [ngClass]=\"{\n    active: selected,\n    'step-done': state === 'done' || state === '_done',\n    'step-error': state === 'error',\n    'step-warning': state === 'warning'\n  }\"\n  [disabled]=\"disabled\"\n  [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\"\n  (click)=\"stepSelected()\"\n>\n  <ng-container *ngSwitchCase=\"true\" [ngTemplateOutlet]=\"iconOverrides[state]\"></ng-container>\n  <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\n    <span *ngSwitchCase=\"'edit'\">\n      <span [c8yIcon]=\"'edit'\"></span>\n    </span>\n    <span *ngSwitchCase=\"'done'\">\n      <span class=\"m-t-4\" [c8yIcon]=\"'check'\"></span>\n    </span>\n    <span *ngSwitchCase=\"'error'\">\n      <span class=\"m-t-4\" [c8yIcon]=\"'exclamation'\"></span>\n    </span>\n    <span *ngSwitchDefault>{{ index + 1 }}</span>\n  </ng-container>\n</button>\n" }]
        }], propDecorators: { iconOverrides: [{
                type: Input
            }], index: [{
                type: Input
            }], selected: [{
                type: Input
            }], state: [{
                type: Input
            }], disabled: [{
                type: Input
            }], onStepClicked: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1wcm9ncmVzcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3N0ZXBwZXIvc3RlcHBlci1wcm9ncmVzcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9jb3JlL3N0ZXBwZXIvc3RlcHBlci1wcm9ncmVzcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBT3BGLE1BQU0sT0FBTyxrQkFBa0I7SUFKL0I7UUF1QkUsNERBQTREO1FBQ2xELGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztLQU10RDtJQUpDLCtDQUErQztJQUMvQyxZQUFZO1FBQ1YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7OytHQXpCVSxrQkFBa0I7bUdBQWxCLGtCQUFrQixpT0NQL0IsNjRCQTJCQTsyRkRwQmEsa0JBQWtCO2tCQUo5QixTQUFTOytCQUNFLHNCQUFzQjs4QkFhdkIsYUFBYTtzQkFBckIsS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBRUcsUUFBUTtzQkFBaEIsS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBRUcsUUFBUTtzQkFBaEIsS0FBSztnQkFFSSxhQUFhO3NCQUF0QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdGVwU3RhdGUgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zdGVwcGVyLXByb2dyZXNzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0ZXBwZXItcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEM4eVN0ZXBwZXJQcm9ncmVzcyB7XG4gIC8qKiBMaXN0IG9mIG92ZXJyaWRlbiBpY29ucyBhcyBUZW1wbGF0ZVJlZi4gQWxzbyBkZWZhdWx0IGljb25zIGNvdWxkIGJlIG92ZXJyaWRlbi5cbiAgICogIFRoZSBnaXZlbiBvdmVycmlkZW4gaWNvbnMgd2lsbCByZXBsYWNlIGFuIGljb24gd2l0aCBtYXRjaGluZyBzdGF0ZTogU3RlcFN0YXRlXG4gICAqXG4gICAqIDxuZy1jb250YWluZXJcbiAgICogKm5nU3dpdGNoQ2FzZT1cInRydWVcIlxuICAgKiBbbmdUZW1wbGF0ZU91dGxldF09XCJpY29uT3ZlcnJpZGVzW3N0YXRlXVwiXG4gICAqID48L25nLWNvbnRhaW5lcj5cbiAgICpcbiAgICovXG4gIEBJbnB1dCgpIGljb25PdmVycmlkZXM6IHsgW2tleTogc3RyaW5nXTogVGVtcGxhdGVSZWY8YW55PiB9O1xuICAvKiogVGhlIGluZGV4IG9mIHRoZSBjdXJyZW50IHN0ZXAgKi9cbiAgQElucHV0KCkgaW5kZXg6IG51bWJlcjtcbiAgLyoqIFdoZXRoZXIgdGhlIHN0ZXAgaXMgY3VycmVudGx5IHNlbGVjdGVkIG9yIG5vdCAgKi9cbiAgQElucHV0KCkgc2VsZWN0ZWQ6IGJvb2xlYW47XG4gIC8qKiBUaGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgc3RlcCAqL1xuICBASW5wdXQoKSBzdGF0ZTogU3RlcFN0YXRlO1xuICAvKiogRGlzYWJsZSBuYXZpZ2F0aW9uIGJ1dHRvbnMgKi9cbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW47XG4gIC8qKiBFbWl0cyB0aGUgaW5kZXg6IG51bWJlciBvZiB0aGUgc3RlcCB3aGljaCB3YXMgY2xpY2tlZCAqL1xuICBAT3V0cHV0KCkgb25TdGVwQ2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXG4gIC8qKiBDYWxsZWQgb24gY2xpY2sgYW5kIGVtaXRzIHRoZSBzdGVwIGluZGV4ICovXG4gIHN0ZXBTZWxlY3RlZCgpIHtcbiAgICB0aGlzLm9uU3RlcENsaWNrZWQuZW1pdCh0aGlzLmluZGV4KTtcbiAgfVxufVxuIiwiPGJ1dHRvblxuICB0eXBlPVwiYnV0dG9uXCJcbiAgY2xhc3M9XCJjOHktc3RlcFwiXG4gIFtuZ0NsYXNzXT1cIntcbiAgICBhY3RpdmU6IHNlbGVjdGVkLFxuICAgICdzdGVwLWRvbmUnOiBzdGF0ZSA9PT0gJ2RvbmUnIHx8IHN0YXRlID09PSAnX2RvbmUnLFxuICAgICdzdGVwLWVycm9yJzogc3RhdGUgPT09ICdlcnJvcicsXG4gICAgJ3N0ZXAtd2FybmluZyc6IHN0YXRlID09PSAnd2FybmluZydcbiAgfVwiXG4gIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gIFtuZ1N3aXRjaF09XCIhIShpY29uT3ZlcnJpZGVzICYmIGljb25PdmVycmlkZXNbc3RhdGVdKVwiXG4gIChjbGljayk9XCJzdGVwU2VsZWN0ZWQoKVwiXG4+XG4gIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cInRydWVcIiBbbmdUZW1wbGF0ZU91dGxldF09XCJpY29uT3ZlcnJpZGVzW3N0YXRlXVwiPjwvbmctY29udGFpbmVyPlxuICA8bmctY29udGFpbmVyICpuZ1N3aXRjaERlZmF1bHQgW25nU3dpdGNoXT1cInN0YXRlXCI+XG4gICAgPHNwYW4gKm5nU3dpdGNoQ2FzZT1cIidlZGl0J1wiPlxuICAgICAgPHNwYW4gW2M4eUljb25dPVwiJ2VkaXQnXCI+PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2RvbmUnXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cIm0tdC00XCIgW2M4eUljb25dPVwiJ2NoZWNrJ1wiPjwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gKm5nU3dpdGNoQ2FzZT1cIidlcnJvcidcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibS10LTRcIiBbYzh5SWNvbl09XCInZXhjbGFtYXRpb24nXCI+PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiAqbmdTd2l0Y2hEZWZhdWx0Pnt7IGluZGV4ICsgMSB9fTwvc3Bhbj5cbiAgPC9uZy1jb250YWluZXI+XG48L2J1dHRvbj5cbiJdfQ==