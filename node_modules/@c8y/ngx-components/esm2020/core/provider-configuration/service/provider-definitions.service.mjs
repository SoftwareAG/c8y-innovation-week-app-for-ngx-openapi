import { Injectable } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FetchClient, Service } from '@c8y/client';
import { get } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client";
import * as i2 from "@angular/router";
export class ProviderDefinitionsService extends Service {
    constructor(client, activatedRoute) {
        super(client);
        this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.baseUrl');
        this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.listUrl');
    }
    async list() {
        return super.list();
    }
}
ProviderDefinitionsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderDefinitionsService, deps: [{ token: i1.FetchClient }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });
ProviderDefinitionsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderDefinitionsService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderDefinitionsService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.FetchClient }, { type: i2.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItZGVmaW5pdGlvbnMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvcHJvdmlkZXItY29uZmlndXJhdGlvbi9zZXJ2aWNlL3Byb3ZpZGVyLWRlZmluaXRpb25zLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBZSxPQUFPLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDaEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7OztBQUloQyxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsT0FBMkI7SUFJekUsWUFBWSxNQUFtQixFQUFFLGNBQThCO1FBQzdELEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLGNBQWMsRUFBRSxvREFBb0QsQ0FBQyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLGNBQWMsRUFBRSxvREFBb0QsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBSTtRQUNSLE9BQU8sS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7O3VIQVpVLDBCQUEwQjsySEFBMUIsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBRHRDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBGZXRjaENsaWVudCwgSVJlc3VsdExpc3QsIFNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgUHJvdmlkZXJEZWZpbml0aW9uIH0gZnJvbSAnLi4vbW9kZWwvcHJvdmlkZXItZGVmaW5pdGlvbi5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQcm92aWRlckRlZmluaXRpb25zU2VydmljZSBleHRlbmRzIFNlcnZpY2U8UHJvdmlkZXJEZWZpbml0aW9uPiB7XG4gIHByb3RlY3RlZCBiYXNlVXJsOiBzdHJpbmc7XG4gIHByb3RlY3RlZCBsaXN0VXJsOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoY2xpZW50OiBGZXRjaENsaWVudCwgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlKSB7XG4gICAgc3VwZXIoY2xpZW50KTtcbiAgICB0aGlzLmJhc2VVcmwgPSBnZXQoYWN0aXZhdGVkUm91dGUsICdzbmFwc2hvdC5kYXRhLmVuZHBvaW50LmRlZmluaXRpb25zRW5kcG9pbnQuYmFzZVVybCcpO1xuICAgIHRoaXMubGlzdFVybCA9IGdldChhY3RpdmF0ZWRSb3V0ZSwgJ3NuYXBzaG90LmRhdGEuZW5kcG9pbnQuZGVmaW5pdGlvbnNFbmRwb2ludC5saXN0VXJsJyk7XG4gIH1cblxuICBhc3luYyBsaXN0KCk6IFByb21pc2U8SVJlc3VsdExpc3Q8UHJvdmlkZXJEZWZpbml0aW9uPj4ge1xuICAgIHJldHVybiBzdXBlci5saXN0KCk7XG4gIH1cbn1cbiJdfQ==