import { NgModule } from '@angular/core';
import { CommonModule } from '../common/common.module';
import { CoreModule } from '../core.module';
import { DynamicFormsModule } from '../dynamic-forms/dynamic-forms.module';
import { hookNavigator } from '../navigator';
import { hookRoute } from '../router';
import { hookTab } from '../tabs';
import { hookDynamicProviderConfig } from './provider-configuration-hook';
import { ProviderConfigurationNodeFactory } from './provider-configuration-node.factory';
import { ProviderConfigurationRouteFactory } from './provider-configuration-route.factory';
import { ProviderConfigurationTabFactory } from './provider-configuration-tab.factory';
import { ProviderConfigurationComponent } from './provider-configuration.component';
import * as i0 from "@angular/core";
export class ProviderConfigurationModule {
    static config(config) {
        return {
            ngModule: ProviderConfigurationModule,
            providers: [hookDynamicProviderConfig(config)]
        };
    }
}
ProviderConfigurationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderConfigurationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ProviderConfigurationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: ProviderConfigurationModule, declarations: [ProviderConfigurationComponent], imports: [CoreModule, CommonModule, DynamicFormsModule], exports: [ProviderConfigurationComponent] });
ProviderConfigurationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderConfigurationModule, providers: [
        hookRoute(ProviderConfigurationRouteFactory),
        hookNavigator(ProviderConfigurationNodeFactory),
        hookTab(ProviderConfigurationTabFactory)
    ], imports: [CoreModule, CommonModule, DynamicFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ProviderConfigurationModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ProviderConfigurationComponent],
                    exports: [ProviderConfigurationComponent],
                    imports: [CoreModule, CommonModule, DynamicFormsModule],
                    entryComponents: [ProviderConfigurationComponent],
                    providers: [
                        hookRoute(ProviderConfigurationRouteFactory),
                        hookNavigator(ProviderConfigurationNodeFactory),
                        hookTab(ProviderConfigurationTabFactory)
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItY29uZmlndXJhdGlvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24vcHJvdmlkZXItY29uZmlndXJhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzdDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVsQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN6RixPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMzRixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFhcEYsTUFBTSxPQUFPLDJCQUEyQjtJQUN0QyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQStCO1FBQzNDLE9BQU87WUFDTCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLFNBQVMsRUFBRSxDQUFDLHlCQUF5QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQy9DLENBQUM7SUFDSixDQUFDOzt3SEFOVSwyQkFBMkI7eUhBQTNCLDJCQUEyQixpQkFWdkIsOEJBQThCLGFBRW5DLFVBQVUsRUFBRSxZQUFZLEVBQUUsa0JBQWtCLGFBRDVDLDhCQUE4Qjt5SEFTN0IsMkJBQTJCLGFBTjNCO1FBQ1QsU0FBUyxDQUFDLGlDQUFpQyxDQUFDO1FBQzVDLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQztRQUMvQyxPQUFPLENBQUMsK0JBQStCLENBQUM7S0FDekMsWUFOUyxVQUFVLEVBQUUsWUFBWSxFQUFFLGtCQUFrQjsyRkFRM0MsMkJBQTJCO2tCQVh2QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLDhCQUE4QixDQUFDO29CQUM5QyxPQUFPLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztvQkFDekMsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLFlBQVksRUFBRSxrQkFBa0IsQ0FBQztvQkFDdkQsZUFBZSxFQUFFLENBQUMsOEJBQThCLENBQUM7b0JBQ2pELFNBQVMsRUFBRTt3QkFDVCxTQUFTLENBQUMsaUNBQWlDLENBQUM7d0JBQzVDLGFBQWEsQ0FBQyxnQ0FBZ0MsQ0FBQzt3QkFDL0MsT0FBTyxDQUFDLCtCQUErQixDQUFDO3FCQUN6QztpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnLi4vY29yZS5tb2R1bGUnO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZHluYW1pYy1mb3Jtcy9keW5hbWljLWZvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBob29rTmF2aWdhdG9yIH0gZnJvbSAnLi4vbmF2aWdhdG9yJztcbmltcG9ydCB7IGhvb2tSb3V0ZSB9IGZyb20gJy4uL3JvdXRlcic7XG5pbXBvcnQgeyBob29rVGFiIH0gZnJvbSAnLi4vdGFicyc7XG5pbXBvcnQgeyBEeW5hbWljUHJvdmlkZXJDb25maWcgfSBmcm9tICcuL21vZGVsL2R5bmFtaWMtcHJvdmlkZXItY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IGhvb2tEeW5hbWljUHJvdmlkZXJDb25maWcgfSBmcm9tICcuL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24taG9vayc7XG5pbXBvcnQgeyBQcm92aWRlckNvbmZpZ3VyYXRpb25Ob2RlRmFjdG9yeSB9IGZyb20gJy4vcHJvdmlkZXItY29uZmlndXJhdGlvbi1ub2RlLmZhY3RvcnknO1xuaW1wb3J0IHsgUHJvdmlkZXJDb25maWd1cmF0aW9uUm91dGVGYWN0b3J5IH0gZnJvbSAnLi9wcm92aWRlci1jb25maWd1cmF0aW9uLXJvdXRlLmZhY3RvcnknO1xuaW1wb3J0IHsgUHJvdmlkZXJDb25maWd1cmF0aW9uVGFiRmFjdG9yeSB9IGZyb20gJy4vcHJvdmlkZXItY29uZmlndXJhdGlvbi10YWIuZmFjdG9yeSc7XG5pbXBvcnQgeyBQcm92aWRlckNvbmZpZ3VyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbUHJvdmlkZXJDb25maWd1cmF0aW9uQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1Byb3ZpZGVyQ29uZmlndXJhdGlvbkNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBDb21tb25Nb2R1bGUsIER5bmFtaWNGb3Jtc01vZHVsZV0sXG4gIGVudHJ5Q29tcG9uZW50czogW1Byb3ZpZGVyQ29uZmlndXJhdGlvbkNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIGhvb2tSb3V0ZShQcm92aWRlckNvbmZpZ3VyYXRpb25Sb3V0ZUZhY3RvcnkpLFxuICAgIGhvb2tOYXZpZ2F0b3IoUHJvdmlkZXJDb25maWd1cmF0aW9uTm9kZUZhY3RvcnkpLFxuICAgIGhvb2tUYWIoUHJvdmlkZXJDb25maWd1cmF0aW9uVGFiRmFjdG9yeSlcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlckNvbmZpZ3VyYXRpb25Nb2R1bGUge1xuICBzdGF0aWMgY29uZmlnKGNvbmZpZzogRHluYW1pY1Byb3ZpZGVyQ29uZmlnW10pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFByb3ZpZGVyQ29uZmlndXJhdGlvbk1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogUHJvdmlkZXJDb25maWd1cmF0aW9uTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbaG9va0R5bmFtaWNQcm92aWRlckNvbmZpZyhjb25maWcpXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==