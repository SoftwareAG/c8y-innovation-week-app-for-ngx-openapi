import { Injectable } from '@angular/core';
import { RealtimeSubjectService } from './realtime-subject.service';
import { RealtimeService } from './realtime.service';
import * as i0 from "@angular/core";
import * as i1 from "./realtime-subject.service";
/**
 * A service for handling bulk operation realtime notifications in RxJS fashion.
 */
export class OperationBulkRealtimeService extends RealtimeService {
    constructor(realtimeSubject) {
        super(realtimeSubject);
        this.realtimeSubject = realtimeSubject;
    }
    /**
     * Get an Observable of all CREATE realtime notifications.
     *
     * @returns An [[Observable]] of newly created entity objects.
     */
    onCreate$() {
        return super.onCreate$();
    }
    channel() {
        return '/bulkOperations/*';
    }
}
OperationBulkRealtimeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationBulkRealtimeService, deps: [{ token: i1.RealtimeSubjectService }], target: i0.ɵɵFactoryTarget.Injectable });
OperationBulkRealtimeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationBulkRealtimeService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: OperationBulkRealtimeService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.RealtimeSubjectService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLWJ1bGstcmVhbHRpbWUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvcmVhbHRpbWUvb3BlcmF0aW9uLWJ1bGstcmVhbHRpbWUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7O0FBRXJEOztHQUVHO0FBRUgsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGVBQStCO0lBQy9FLFlBQXNCLGVBQXVDO1FBQzNELEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQURILG9CQUFlLEdBQWYsZUFBZSxDQUF3QjtJQUU3RCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFNBQVM7UUFDUCxPQUFPLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRVMsT0FBTztRQUNmLE9BQU8sbUJBQW1CLENBQUM7SUFDN0IsQ0FBQzs7eUhBaEJVLDRCQUE0Qjs2SEFBNUIsNEJBQTRCOzJGQUE1Qiw0QkFBNEI7a0JBRHhDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uQnVsayB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFJlYWx0aW1lU3ViamVjdFNlcnZpY2UgfSBmcm9tICcuL3JlYWx0aW1lLXN1YmplY3Quc2VydmljZSc7XG5pbXBvcnQgeyBSZWFsdGltZVNlcnZpY2UgfSBmcm9tICcuL3JlYWx0aW1lLnNlcnZpY2UnO1xuXG4vKipcbiAqIEEgc2VydmljZSBmb3IgaGFuZGxpbmcgYnVsayBvcGVyYXRpb24gcmVhbHRpbWUgbm90aWZpY2F0aW9ucyBpbiBSeEpTIGZhc2hpb24uXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPcGVyYXRpb25CdWxrUmVhbHRpbWVTZXJ2aWNlIGV4dGVuZHMgUmVhbHRpbWVTZXJ2aWNlPElPcGVyYXRpb25CdWxrPiB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCByZWFsdGltZVN1YmplY3Q6IFJlYWx0aW1lU3ViamVjdFNlcnZpY2UpIHtcbiAgICBzdXBlcihyZWFsdGltZVN1YmplY3QpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbiBPYnNlcnZhYmxlIG9mIGFsbCBDUkVBVEUgcmVhbHRpbWUgbm90aWZpY2F0aW9ucy5cbiAgICpcbiAgICogQHJldHVybnMgQW4gW1tPYnNlcnZhYmxlXV0gb2YgbmV3bHkgY3JlYXRlZCBlbnRpdHkgb2JqZWN0cy5cbiAgICovXG4gIG9uQ3JlYXRlJCgpOiBPYnNlcnZhYmxlPElPcGVyYXRpb25CdWxrPiB7XG4gICAgcmV0dXJuIHN1cGVyLm9uQ3JlYXRlJCgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGNoYW5uZWwoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJy9idWxrT3BlcmF0aW9ucy8qJztcbiAgfVxufVxuIl19