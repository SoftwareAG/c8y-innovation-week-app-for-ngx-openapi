import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ActionType } from './export-schedules.interface';
import { ReportsService } from './reports.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ScheduleModalComponent } from './schedule-modal.component';
import { gettext, OptionsService } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { CronService } from './cron.service';
import { TranslateService } from '@ngx-translate/core';
import { UserService } from '@c8y/client';
import * as i0 from "@angular/core";
import * as i1 from "./reports.service";
import * as i2 from "ngx-bootstrap/modal";
import * as i3 from "./cron.service";
import * as i4 from "@ngx-translate/core";
import * as i5 from "@c8y/client";
import * as i6 from "@c8y/ngx-components";
import * as i7 from "@angular/common";
import * as i8 from "ngx-bootstrap/dropdown";
export class ExportSchedulesComponent {
    set exportId(exportId) {
        this._exportId = exportId;
    }
    constructor(reportsService, bsModalService, cronService, translateService, userService, optionsService) {
        this.reportsService = reportsService;
        this.bsModalService = bsModalService;
        this.cronService = cronService;
        this.translateService = translateService;
        this.userService = userService;
        this.optionsService = optionsService;
        this.onSchedulesUpdate = new EventEmitter();
        this.scheduleList = [];
        this.initialSchedule = {
            timestamp: null,
            emailConfig: {
                to: [],
                cc: [],
                bcc: [],
                replyTo: '',
                text: '',
                subject: ''
            },
            cronConfig: {
                minute: '0',
                hour: '0',
                day: '1',
                month: '1',
                weekday: '?'
            }
        };
        this.listClass = 'interact-list';
        this.sortReverse = false;
        this.isOpen = {};
        this.isEditMenuOpen = false;
        this.currentUserEmail = '';
        this.hasRequiredRole = false;
        this.defaultExportEmailTemplate = this.translateService.instant(gettext('File with exported data can be downloaded from {tenant-domain}/apps/cockpit/index.html#?download={binaryId}.'));
        this.loadingStatus = {
            inProgress: false,
            done: false,
            error: false
        };
    }
    async ngOnInit() {
        this.hasRequiredRole = await this.checkRole();
        this.getScheduleList(true);
        const currentUserEmail = await this.getCurrentUserEmail();
        this.initialSchedule.emailConfig.text = await this.optionsService.getTenantOption('configuration', 'export.data.mail.text', this.defaultExportEmailTemplate);
        this.initialSchedule.emailConfig.to = currentUserEmail;
        this.exp = await this.reportsService.getExport(this._exportId);
        this.initialSchedule.emailConfig.subject = this.translateService.instant(gettext('Export of "{{expName}}"'), { expName: this.exp.name });
    }
    ngOnChanges() {
        this.translateButtonTitles();
    }
    translateButtonTitles() {
        this.buttonLabels = {
            edit: this.translateService.instant(gettext('Edit schedule')),
            editNoPermission: this.translateService.instant(gettext('Edit schedule - no permissions')),
            duplicate: this.translateService.instant(gettext('Duplicate schedule')),
            duplicateNoPermission: this.translateService.instant(gettext('Duplicate schedule - no permissions')),
            delete: this.translateService.instant(gettext('Delete schedule')),
            deleteNoPermission: this.translateService.instant(gettext('Delete schedule - no permissions'))
        };
    }
    async getCurrentUserEmail() {
        const { data } = await this.userService.current();
        return data && data.email ? [data.email] : [];
    }
    async checkRole() {
        const { data } = await this.userService.current();
        const role = 'ROLE_SCHEDULE_REPORT_ADMIN';
        const hasRole = this.userService.hasRole(data, role);
        return hasRole;
    }
    async getScheduleList(withProgress) {
        if (withProgress) {
            this.loadingStatus.inProgress = true;
        }
        this.scheduleList = await this.reportsService.getScheduleList(this._exportId);
        if (withProgress) {
            this.loadingStatus.inProgress = false;
        }
    }
    addSchedule() {
        this.openAddEditModal(this._exportId, this.initialSchedule, ActionType.CREATE);
    }
    editSchedule(schedule, index, event) {
        if (this.hasRequiredRole) {
            event.preventDefault();
            this.openAddEditModal(this._exportId, schedule, ActionType.EDIT, index);
        }
    }
    duplicateSchedule(schedule, event) {
        event.preventDefault();
        this.openAddEditModal(this._exportId, schedule, ActionType.DUPLICATE);
    }
    openAddEditModal(exportId, schedule, actionType, index) {
        const payload = { actionType, exportId, schedule: cloneDeep(schedule) };
        const modalOptions = {
            class: 'modal-sm',
            ariaDescribedby: 'modal-body',
            ariaLabelledBy: 'modal-title',
            initialState: payload
        };
        this.modalRef = this.bsModalService.show(ScheduleModalComponent, modalOptions);
        this.modalRef.content.emitter.subscribe((load) => this.getMessageFromModal(load, index));
    }
    getMessageFromModal(payload, index) {
        if (payload.success) {
            if (index !== undefined) {
                this.scheduleList[index] = payload.schedule;
            }
            else {
                this.scheduleList.push(payload.schedule);
            }
            this.onSchedulesUpdate.emit(this.scheduleList);
        }
    }
    removeSchedule(schedule, index, event) {
        event.preventDefault();
        this.scheduleList.splice(index, 1);
        this.onSchedulesUpdate.emit(this.scheduleList);
    }
}
ExportSchedulesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ExportSchedulesComponent, deps: [{ token: i1.ReportsService }, { token: i2.BsModalService }, { token: i3.CronService }, { token: i4.TranslateService }, { token: i5.UserService }, { token: i6.OptionsService }], target: i0.ɵɵFactoryTarget.Component });
ExportSchedulesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.7", type: ExportSchedulesComponent, selector: "export-schedules", inputs: { exportId: "exportId" }, outputs: { onSchedulesUpdate: "onSchedulesUpdate" }, usesOnChanges: true, ngImport: i0, template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"d-flex a-i-center\">\n    <c8y-loading></c8y-loading>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning max-width-100\" translate>Could not load schedules list.</div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <c8y-ui-empty-state\n      *ngIf=\"!scheduleList.length\"\n      [icon]=\"'c8y-report'\"\n      [title]=\"'No export schedules defined.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n\n    <div class=\"c8y-list__group\" *ngIf=\"scheduleList.length\">\n      <div class=\"c8y-list__item hidden-xs\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i class=\"p-l-24\"></i>\n          </div>\n          <div class=\"c8y-list__item__body\">\n            <div class=\"d-flex\">\n              <div class=\"col-sm-6\">\n                <label class=\"m-0\">\n                  {{ 'Description' | translate }}\n                </label>\n              </div>\n              <div class=\"col-sm-6 m-r-40\">\n                <label class=\"m-0\">\n                  {{ 'Frequency' | translate }}\n                </label>\n              </div>\n            </div>\n          </div>\n          <span></span>\n        </div>\n      </div>\n\n      <div\n        class=\"c8y-list__item pointer\"\n        *ngFor=\"let schedule of scheduleList; index as i\"\n        (click)=\"editSchedule(schedule, i, $event)\"\n      >\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"c8y-list__item__body d-flex\">\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n                {{ schedule.emailConfig.subject }}\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"d-flex a-i-baseline\">\n                <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n                <span class=\"smart-rule-information\">\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ minutes: schedule.cronConfig.minute | number: '2.0-0' }\"\n                  >\n                    Hourly: {{ minutes }} minute(s) past the hour.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Daily: at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      weekDay: cronService.getWeekDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Weekly: {{ weekDay }}, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Monthly: {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      month: cronService.getMonthName(schedule.cronConfig),\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Yearly: {{ month }}, {{ monthDay }} day of the month, at {{ hour }}:{{\n                      minutes\n                    }}.\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"c8y-list__item__actions\" (click)=\"$event.stopPropagation()\">\n            <div class=\"settings dropdown\" dropdown>\n              <button\n                class=\"dropdown-toggle c8y-dropdown\"\n                type=\"button\"\n                title=\"{{ 'Actions' | translate }}\"\n                dropdownToggle\n              >\n                <i [c8yIcon]=\"'ellipsis-v'\"></i>\n              </button>\n              <ul role=\"list\" class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"hasRequiredRole ? buttonLabels.edit : buttonLabels.editNoPermission\"\n                    (click)=\"editSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'pencil'\"></i>\n                    {{ 'Edit' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.duplicate : buttonLabels.duplicateNoPermission\n                    \"\n                    (click)=\"duplicateSchedule(schedule, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'copy'\"></i>\n                    {{ 'Duplicate' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.delete : buttonLabels.deleteNoPermission\n                    \"\n                    (click)=\"removeSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'delete'\"></i>\n                    {{ 'Delete' | translate }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"alert alert-warning max-width-100\" *ngIf=\"!hasRequiredRole\" role=\"alert\" translate>\n    You don't have the permission required to schedule exports.\n  </div>\n  <button\n    class=\"btn btn-default m-t-16\"\n    type=\"button\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n    [disabled]=\"!hasRequiredRole\"\n  >\n    <i [c8yIcon]=\"'plus-circle'\"></i>\n    {{ 'Add schedule' | translate }}\n  </button>\n</div>\n", dependencies: [{ kind: "component", type: i6.EmptyStateComponent, selector: "c8y-ui-empty-state", inputs: ["icon", "title", "subtitle", "horizontal"] }, { kind: "directive", type: i6.IconDirective, selector: "[c8yIcon]", inputs: ["c8yIcon"] }, { kind: "directive", type: i6.C8yTranslateDirective, selector: "[translate],[ngx-translate]" }, { kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.LoadingComponent, selector: "c8y-loading" }, { kind: "directive", type: i8.BsDropdownMenuDirective, selector: "[bsDropdownMenu],[dropdownMenu]", exportAs: ["bs-dropdown-menu"] }, { kind: "directive", type: i8.BsDropdownToggleDirective, selector: "[bsDropdownToggle],[dropdownToggle]", exportAs: ["bs-dropdown-toggle"] }, { kind: "directive", type: i8.BsDropdownDirective, selector: "[bsDropdown], [dropdown]", inputs: ["placement", "triggers", "container", "dropup", "autoClose", "isAnimated", "insideClick", "isDisabled", "isOpen"], outputs: ["isOpenChange", "onShown", "onHidden"], exportAs: ["bs-dropdown"] }, { kind: "pipe", type: i6.C8yTranslatePipe, name: "translate" }, { kind: "pipe", type: i7.DecimalPipe, name: "number" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: ExportSchedulesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'export-schedules', template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"d-flex a-i-center\">\n    <c8y-loading></c8y-loading>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning max-width-100\" translate>Could not load schedules list.</div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <c8y-ui-empty-state\n      *ngIf=\"!scheduleList.length\"\n      [icon]=\"'c8y-report'\"\n      [title]=\"'No export schedules defined.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n\n    <div class=\"c8y-list__group\" *ngIf=\"scheduleList.length\">\n      <div class=\"c8y-list__item hidden-xs\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i class=\"p-l-24\"></i>\n          </div>\n          <div class=\"c8y-list__item__body\">\n            <div class=\"d-flex\">\n              <div class=\"col-sm-6\">\n                <label class=\"m-0\">\n                  {{ 'Description' | translate }}\n                </label>\n              </div>\n              <div class=\"col-sm-6 m-r-40\">\n                <label class=\"m-0\">\n                  {{ 'Frequency' | translate }}\n                </label>\n              </div>\n            </div>\n          </div>\n          <span></span>\n        </div>\n      </div>\n\n      <div\n        class=\"c8y-list__item pointer\"\n        *ngFor=\"let schedule of scheduleList; index as i\"\n        (click)=\"editSchedule(schedule, i, $event)\"\n      >\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"c8y-list__item__body d-flex\">\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n                {{ schedule.emailConfig.subject }}\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"d-flex a-i-baseline\">\n                <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n                <span class=\"smart-rule-information\">\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ minutes: schedule.cronConfig.minute | number: '2.0-0' }\"\n                  >\n                    Hourly: {{ minutes }} minute(s) past the hour.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Daily: at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      weekDay: cronService.getWeekDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Weekly: {{ weekDay }}, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Monthly: {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      month: cronService.getMonthName(schedule.cronConfig),\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Yearly: {{ month }}, {{ monthDay }} day of the month, at {{ hour }}:{{\n                      minutes\n                    }}.\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"c8y-list__item__actions\" (click)=\"$event.stopPropagation()\">\n            <div class=\"settings dropdown\" dropdown>\n              <button\n                class=\"dropdown-toggle c8y-dropdown\"\n                type=\"button\"\n                title=\"{{ 'Actions' | translate }}\"\n                dropdownToggle\n              >\n                <i [c8yIcon]=\"'ellipsis-v'\"></i>\n              </button>\n              <ul role=\"list\" class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"hasRequiredRole ? buttonLabels.edit : buttonLabels.editNoPermission\"\n                    (click)=\"editSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'pencil'\"></i>\n                    {{ 'Edit' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.duplicate : buttonLabels.duplicateNoPermission\n                    \"\n                    (click)=\"duplicateSchedule(schedule, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'copy'\"></i>\n                    {{ 'Duplicate' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    type=\"button\"\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.delete : buttonLabels.deleteNoPermission\n                    \"\n                    (click)=\"removeSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'delete'\"></i>\n                    {{ 'Delete' | translate }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"alert alert-warning max-width-100\" *ngIf=\"!hasRequiredRole\" role=\"alert\" translate>\n    You don't have the permission required to schedule exports.\n  </div>\n  <button\n    class=\"btn btn-default m-t-16\"\n    type=\"button\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n    [disabled]=\"!hasRequiredRole\"\n  >\n    <i [c8yIcon]=\"'plus-circle'\"></i>\n    {{ 'Add schedule' | translate }}\n  </button>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ReportsService }, { type: i2.BsModalService }, { type: i3.CronService }, { type: i4.TranslateService }, { type: i5.UserService }, { type: i6.OptionsService }]; }, propDecorators: { exportId: [{
                type: Input
            }], onSchedulesUpdate: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0LXNjaGVkdWxlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZXBvcnRzL2V4cG9ydC1zY2hlZHVsZXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vcmVwb3J0cy9leHBvcnQtc2NoZWR1bGVzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBb0MsVUFBVSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDNUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxjQUFjLEVBQTRCLE1BQU0scUJBQXFCLENBQUM7QUFDL0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDOzs7Ozs7Ozs7O0FBSzFDLE1BQU0sT0FBTyx3QkFBd0I7SUFDbkMsSUFBYSxRQUFRLENBQUMsUUFBcUI7UUFDekMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQTBDRCxZQUNVLGNBQThCLEVBQzlCLGNBQThCLEVBQy9CLFdBQXdCLEVBQ3ZCLGdCQUFrQyxFQUNsQyxXQUF3QixFQUN4QixjQUE4QjtRQUw5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsbUJBQWMsR0FB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QVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQW9CLEVBQUUsRUFBRSxDQUMvRCxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUN0QyxDQUFDO0lBQ0osQ0FBQztJQUVELG1CQUFtQixDQUFDLE9BQXVCLEVBQUUsS0FBYztRQUN6RCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUU7WUFDbkIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO2dCQUN2QixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7YUFDN0M7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzFDO1lBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRUQsY0FBYyxDQUFDLFFBQWtCLEVBQUUsS0FBYSxFQUFFLEtBQVU7UUFDMUQsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNqRCxDQUFDOztxSEFyS1Usd0JBQXdCO3lHQUF4Qix3QkFBd0Isb0tDZnJDLG13UEErTEE7MkZEaExhLHdCQUF3QjtrQkFKcEMsU0FBUzsrQkFDRSxrQkFBa0I7a1BBSWYsUUFBUTtzQkFBcEIsS0FBSztnQkFJSSxpQkFBaUI7c0JBQTFCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4cG9ydCwgU2NoZWR1bGUsIEVtaXR0ZXJQYXlsb2FkLCBBY3Rpb25UeXBlIH0gZnJvbSAnLi9leHBvcnQtc2NoZWR1bGVzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBSZXBvcnRzU2VydmljZSB9IGZyb20gJy4vcmVwb3J0cy5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlLCBCc01vZGFsUmVmLCBNb2RhbE9wdGlvbnMgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IFNjaGVkdWxlTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3NjaGVkdWxlLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBPcHRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IENyb25TZXJ2aWNlIH0gZnJvbSAnLi9jcm9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWRSZWZlcmVuY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2V4cG9ydC1zY2hlZHVsZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vZXhwb3J0LXNjaGVkdWxlcy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRXhwb3J0U2NoZWR1bGVzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBzZXQgZXhwb3J0SWQoZXhwb3J0SWQ6IElkUmVmZXJlbmNlKSB7XG4gICAgdGhpcy5fZXhwb3J0SWQgPSBleHBvcnRJZDtcbiAgfVxuXG4gIEBPdXRwdXQoKSBvblNjaGVkdWxlc1VwZGF0ZSA9IG5ldyBFdmVudEVtaXR0ZXI8U2NoZWR1bGVbXT4oKTtcblxuICBleHA6IEV4cG9ydDtcbiAgc2NoZWR1bGVMaXN0OiBTY2hlZHVsZVtdID0gW107XG4gIGluaXRpYWxTY2hlZHVsZTogU2NoZWR1bGUgPSB7XG4gICAgdGltZXN0YW1wOiBudWxsLFxuICAgIGVtYWlsQ29uZmlnOiB7XG4gICAgICB0bzogW10sXG4gICAgICBjYzogW10sXG4gICAgICBiY2M6IFtdLFxuICAgICAgcmVwbHlUbzogJycsXG4gICAgICB0ZXh0OiAnJyxcbiAgICAgIHN1YmplY3Q6ICcnXG4gICAgfSxcbiAgICBjcm9uQ29uZmlnOiB7XG4gICAgICBtaW51dGU6ICcwJyxcbiAgICAgIGhvdXI6ICcwJyxcbiAgICAgIGRheTogJzEnLFxuICAgICAgbW9udGg6ICcxJyxcbiAgICAgIHdlZWtkYXk6ICc/J1xuICAgIH1cbiAgfTtcbiAgYnV0dG9uTGFiZWxzOiBhbnk7XG4gIGxpc3RDbGFzcyA9ICdpbnRlcmFjdC1saXN0JztcbiAgbG9hZGluZ1N0YXR1czogYW55O1xuICBzb3J0VHlwZTogc3RyaW5nO1xuICBzb3J0UmV2ZXJzZSA9IGZhbHNlO1xuICBpc09wZW46IGFueSA9IHt9O1xuICBpc0ZsaXBwZWQ6IGJvb2xlYW47XG4gIGlzRWRpdE1lbnVPcGVuID0gZmFsc2U7XG4gIG1vZGFsUmVmOiBCc01vZGFsUmVmO1xuICBjdXJyZW50VXNlckVtYWlsID0gJyc7XG4gIGhhc1JlcXVpcmVkUm9sZSA9IGZhbHNlO1xuICBwcml2YXRlIF9leHBvcnRJZDogSWRSZWZlcmVuY2U7XG4gIHByaXZhdGUgZGVmYXVsdEV4cG9ydEVtYWlsVGVtcGxhdGUgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChcbiAgICBnZXR0ZXh0KFxuICAgICAgJ0ZpbGUgd2l0aCBleHBvcnRlZCBkYXRhIGNhbiBiZSBkb3dubG9hZGVkIGZyb20ge3RlbmFudC1kb21haW59L2FwcHMvY29ja3BpdC9pbmRleC5odG1sIz9kb3dubG9hZD17YmluYXJ5SWR9LidcbiAgICApXG4gICk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZXBvcnRzU2VydmljZTogUmVwb3J0c1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBic01vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXG4gICAgcHVibGljIGNyb25TZXJ2aWNlOiBDcm9uU2VydmljZSxcbiAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSB1c2VyU2VydmljZTogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBvcHRpb25zU2VydmljZTogT3B0aW9uc1NlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5sb2FkaW5nU3RhdHVzID0ge1xuICAgICAgaW5Qcm9ncmVzczogZmFsc2UsXG4gICAgICBkb25lOiBmYWxzZSxcbiAgICAgIGVycm9yOiBmYWxzZVxuICAgIH07XG4gIH1cblxuICBhc3luYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmhhc1JlcXVpcmVkUm9sZSA9IGF3YWl0IHRoaXMuY2hlY2tSb2xlKCk7XG4gICAgdGhpcy5nZXRTY2hlZHVsZUxpc3QodHJ1ZSk7XG4gICAgY29uc3QgY3VycmVudFVzZXJFbWFpbCA9IGF3YWl0IHRoaXMuZ2V0Q3VycmVudFVzZXJFbWFpbCgpO1xuICAgIHRoaXMuaW5pdGlhbFNjaGVkdWxlLmVtYWlsQ29uZmlnLnRleHQgPSBhd2FpdCB0aGlzLm9wdGlvbnNTZXJ2aWNlLmdldFRlbmFudE9wdGlvbihcbiAgICAgICdjb25maWd1cmF0aW9uJyxcbiAgICAgICdleHBvcnQuZGF0YS5tYWlsLnRleHQnLFxuICAgICAgdGhpcy5kZWZhdWx0RXhwb3J0RW1haWxUZW1wbGF0ZVxuICAgICk7XG4gICAgdGhpcy5pbml0aWFsU2NoZWR1bGUuZW1haWxDb25maWcudG8gPSBjdXJyZW50VXNlckVtYWlsO1xuICAgIHRoaXMuZXhwID0gYXdhaXQgdGhpcy5yZXBvcnRzU2VydmljZS5nZXRFeHBvcnQodGhpcy5fZXhwb3J0SWQpO1xuICAgIHRoaXMuaW5pdGlhbFNjaGVkdWxlLmVtYWlsQ29uZmlnLnN1YmplY3QgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChcbiAgICAgIGdldHRleHQoJ0V4cG9ydCBvZiBcInt7ZXhwTmFtZX19XCInKSxcbiAgICAgIHsgZXhwTmFtZTogdGhpcy5leHAubmFtZSB9XG4gICAgKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMudHJhbnNsYXRlQnV0dG9uVGl0bGVzKCk7XG4gIH1cblxuICB0cmFuc2xhdGVCdXR0b25UaXRsZXMoKSB7XG4gICAgdGhpcy5idXR0b25MYWJlbHMgPSB7XG4gICAgICBlZGl0OiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdFZGl0IHNjaGVkdWxlJykpLFxuICAgICAgZWRpdE5vUGVybWlzc2lvbjogdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoZ2V0dGV4dCgnRWRpdCBzY2hlZHVsZSAtIG5vIHBlcm1pc3Npb25zJykpLFxuICAgICAgZHVwbGljYXRlOiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdEdXBsaWNhdGUgc2NoZWR1bGUnKSksXG4gICAgICBkdXBsaWNhdGVOb1Blcm1pc3Npb246IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KFxuICAgICAgICBnZXR0ZXh0KCdEdXBsaWNhdGUgc2NoZWR1bGUgLSBubyBwZXJtaXNzaW9ucycpXG4gICAgICApLFxuICAgICAgZGVsZXRlOiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdEZWxldGUgc2NoZWR1bGUnKSksXG4gICAgICBkZWxldGVOb1Blcm1pc3Npb246IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGdldHRleHQoJ0RlbGV0ZSBzY2hlZHVsZSAtIG5vIHBlcm1pc3Npb25zJykpXG4gICAgfTtcbiAgfVxuXG4gIGFzeW5jIGdldEN1cnJlbnRVc2VyRW1haWwoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLmN1cnJlbnQoKTtcbiAgICByZXR1cm4gZGF0YSAmJiBkYXRhLmVtYWlsID8gW2RhdGEuZW1haWxdIDogW107XG4gIH1cbiAgYXN5bmMgY2hlY2tSb2xlKCkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy51c2VyU2VydmljZS5jdXJyZW50KCk7XG4gICAgY29uc3Qgcm9sZSA9ICdST0xFX1NDSEVEVUxFX1JFUE9SVF9BRE1JTic7XG4gICAgY29uc3QgaGFzUm9sZSA9IHRoaXMudXNlclNlcnZpY2UuaGFzUm9sZShkYXRhLCByb2xlKTtcbiAgICByZXR1cm4gaGFzUm9sZTtcbiAgfVxuXG4gIGFzeW5jIGdldFNjaGVkdWxlTGlzdCh3aXRoUHJvZ3Jlc3M6IGJvb2xlYW4pIHtcbiAgICBpZiAod2l0aFByb2dyZXNzKSB7XG4gICAgICB0aGlzLmxvYWRpbmdTdGF0dXMuaW5Qcm9ncmVzcyA9IHRydWU7XG4gICAgfVxuICAgIHRoaXMuc2NoZWR1bGVMaXN0ID0gYXdhaXQgdGhpcy5yZXBvcnRzU2VydmljZS5nZXRTY2hlZHVsZUxpc3QodGhpcy5fZXhwb3J0SWQpO1xuICAgIGlmICh3aXRoUHJvZ3Jlc3MpIHtcbiAgICAgIHRoaXMubG9hZGluZ1N0YXR1cy5pblByb2dyZXNzID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgYWRkU2NoZWR1bGUoKSB7XG4gICAgdGhpcy5vcGVuQWRkRWRpdE1vZGFsKHRoaXMuX2V4cG9ydElkLCB0aGlzLmluaXRpYWxTY2hlZHVsZSwgQWN0aW9uVHlwZS5DUkVBVEUpO1xuICB9XG5cbiAgZWRpdFNjaGVkdWxlKHNjaGVkdWxlOiBTY2hlZHVsZSwgaW5kZXg6IG51bWJlciwgZXZlbnQ6IGFueSkge1xuICAgIGlmICh0aGlzLmhhc1JlcXVpcmVkUm9sZSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMub3BlbkFkZEVkaXRNb2RhbCh0aGlzLl9leHBvcnRJZCwgc2NoZWR1bGUsIEFjdGlvblR5cGUuRURJVCwgaW5kZXgpO1xuICAgIH1cbiAgfVxuXG4gIGR1cGxpY2F0ZVNjaGVkdWxlKHNjaGVkdWxlOiBTY2hlZHVsZSwgZXZlbnQ6IGFueSkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5vcGVuQWRkRWRpdE1vZGFsKHRoaXMuX2V4cG9ydElkLCBzY2hlZHVsZSwgQWN0aW9uVHlwZS5EVVBMSUNBVEUpO1xuICB9XG5cbiAgb3BlbkFkZEVkaXRNb2RhbChcbiAgICBleHBvcnRJZDogSWRSZWZlcmVuY2UsXG4gICAgc2NoZWR1bGU6IFNjaGVkdWxlLFxuICAgIGFjdGlvblR5cGU6IEFjdGlvblR5cGUsXG4gICAgaW5kZXg/OiBudW1iZXJcbiAgKSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IHsgYWN0aW9uVHlwZSwgZXhwb3J0SWQsIHNjaGVkdWxlOiBjbG9uZURlZXAoc2NoZWR1bGUpIH07XG4gICAgY29uc3QgbW9kYWxPcHRpb25zID0ge1xuICAgICAgY2xhc3M6ICdtb2RhbC1zbScsXG4gICAgICBhcmlhRGVzY3JpYmVkYnk6ICdtb2RhbC1ib2R5JyxcbiAgICAgIGFyaWFMYWJlbGxlZEJ5OiAnbW9kYWwtdGl0bGUnLFxuICAgICAgaW5pdGlhbFN0YXRlOiBwYXlsb2FkXG4gICAgfSBhcyBNb2RhbE9wdGlvbnM7XG4gICAgdGhpcy5tb2RhbFJlZiA9IHRoaXMuYnNNb2RhbFNlcnZpY2Uuc2hvdyhTY2hlZHVsZU1vZGFsQ29tcG9uZW50LCBtb2RhbE9wdGlvbnMpO1xuICAgIHRoaXMubW9kYWxSZWYuY29udGVudC5lbWl0dGVyLnN1YnNjcmliZSgobG9hZDogRW1pdHRlclBheWxvYWQpID0+XG4gICAgICB0aGlzLmdldE1lc3NhZ2VGcm9tTW9kYWwobG9hZCwgaW5kZXgpXG4gICAgKTtcbiAgfVxuXG4gIGdldE1lc3NhZ2VGcm9tTW9kYWwocGF5bG9hZDogRW1pdHRlclBheWxvYWQsIGluZGV4PzogbnVtYmVyKSB7XG4gICAgaWYgKHBheWxvYWQuc3VjY2Vzcykge1xuICAgICAgaWYgKGluZGV4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5zY2hlZHVsZUxpc3RbaW5kZXhdID0gcGF5bG9hZC5zY2hlZHVsZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVMaXN0LnB1c2gocGF5bG9hZC5zY2hlZHVsZSk7XG4gICAgICB9XG4gICAgICB0aGlzLm9uU2NoZWR1bGVzVXBkYXRlLmVtaXQodGhpcy5zY2hlZHVsZUxpc3QpO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZVNjaGVkdWxlKHNjaGVkdWxlOiBTY2hlZHVsZSwgaW5kZXg6IG51bWJlciwgZXZlbnQ6IGFueSkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5zY2hlZHVsZUxpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICB0aGlzLm9uU2NoZWR1bGVzVXBkYXRlLmVtaXQodGhpcy5zY2hlZHVsZUxpc3QpO1xuICB9XG59XG4iLCI8ZGl2PlxuICA8ZGl2ICpuZ0lmPVwibG9hZGluZ1N0YXR1cy5pblByb2dyZXNzXCIgY2xhc3M9XCJkLWZsZXggYS1pLWNlbnRlclwiPlxuICAgIDxjOHktbG9hZGluZz48L2M4eS1sb2FkaW5nPlxuICA8L2Rpdj5cblxuICA8ZGl2ICpuZ0lmPVwiIWxvYWRpbmdTdGF0dXMuaW5Qcm9ncmVzcyAmJiBsb2FkaW5nU3RhdHVzLmRvbmUgJiYgbG9hZGluZ1N0YXR1cy5lcnJvclwiPlxuICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC13YXJuaW5nIG1heC13aWR0aC0xMDBcIiB0cmFuc2xhdGU+Q291bGQgbm90IGxvYWQgc2NoZWR1bGVzIGxpc3QuPC9kaXY+XG4gIDwvZGl2PlxuXG4gIDxkaXYgKm5nSWY9XCIhbG9hZGluZ1N0YXR1cy5pblByb2dyZXNzICYmICFsb2FkaW5nU3RhdHVzLmRvbmUgJiYgIWxvYWRpbmdTdGF0dXMuZXJyb3JcIj5cbiAgICA8Yzh5LXVpLWVtcHR5LXN0YXRlXG4gICAgICAqbmdJZj1cIiFzY2hlZHVsZUxpc3QubGVuZ3RoXCJcbiAgICAgIFtpY29uXT1cIidjOHktcmVwb3J0J1wiXG4gICAgICBbdGl0bGVdPVwiJ05vIGV4cG9ydCBzY2hlZHVsZXMgZGVmaW5lZC4nIHwgdHJhbnNsYXRlXCJcbiAgICAgIFtob3Jpem9udGFsXT1cInRydWVcIlxuICAgID48L2M4eS11aS1lbXB0eS1zdGF0ZT5cblxuICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9fZ3JvdXBcIiAqbmdJZj1cInNjaGVkdWxlTGlzdC5sZW5ndGhcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9faXRlbSBoaWRkZW4teHNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImM4eS1saXN0X19pdGVtX19ibG9ja1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9faXRlbV9faWNvblwiPlxuICAgICAgICAgICAgPGkgY2xhc3M9XCJwLWwtMjRcIj48L2k+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImM4eS1saXN0X19pdGVtX19ib2R5XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNlwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIm0tMFwiPlxuICAgICAgICAgICAgICAgICAge3sgJ0Rlc2NyaXB0aW9uJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTYgbS1yLTQwXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibS0wXCI+XG4gICAgICAgICAgICAgICAgICB7eyAnRnJlcXVlbmN5JyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiYzh5LWxpc3RfX2l0ZW0gcG9pbnRlclwiXG4gICAgICAgICpuZ0Zvcj1cImxldCBzY2hlZHVsZSBvZiBzY2hlZHVsZUxpc3Q7IGluZGV4IGFzIGlcIlxuICAgICAgICAoY2xpY2spPVwiZWRpdFNjaGVkdWxlKHNjaGVkdWxlLCBpLCAkZXZlbnQpXCJcbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzcz1cImM4eS1saXN0X19pdGVtX19ibG9ja1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9faXRlbV9faWNvblwiPlxuICAgICAgICAgICAgPGkgYzh5SWNvbj1cImM4eS1yZXBvcnRcIiBjbGFzcz1cImM4eS1pY29uLWR1b2NvbG9yXCI+PC9pPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjOHktbGlzdF9faXRlbV9fYm9keSBkLWZsZXhcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNiBjb2wteHMtNlwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC10cnVuY2F0ZVwiIHRpdGxlPVwie3sgc2NoZWR1bGUuZW1haWxDb25maWcuc3ViamVjdCB9fVwiPlxuICAgICAgICAgICAgICAgIHt7IHNjaGVkdWxlLmVtYWlsQ29uZmlnLnN1YmplY3QgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tNiBjb2wteHMtNlwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGEtaS1iYXNlbGluZVwiPlxuICAgICAgICAgICAgICAgIDxpIGM4eUljb249XCJjYWxlbmRhclwiIGNsYXNzPVwidGV4dC1tdXRlZCBtLXItNFwiPjwvaT5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInNtYXJ0LXJ1bGUtaW5mb3JtYXRpb25cIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiY3JvblNlcnZpY2UuZ2V0QmFzZShzY2hlZHVsZS5jcm9uQ29uZmlnKSA9PT0gMlwiXG4gICAgICAgICAgICAgICAgICAgIG5nTm9uQmluZGFibGVcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlXG4gICAgICAgICAgICAgICAgICAgIFt0cmFuc2xhdGVQYXJhbXNdPVwieyBtaW51dGVzOiBzY2hlZHVsZS5jcm9uQ29uZmlnLm1pbnV0ZSB8IG51bWJlcjogJzIuMC0wJyB9XCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgSG91cmx5OiB7eyBtaW51dGVzIH19IG1pbnV0ZShzKSBwYXN0IHRoZSBob3VyLlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJjcm9uU2VydmljZS5nZXRCYXNlKHNjaGVkdWxlLmNyb25Db25maWcpID09PSAzXCJcbiAgICAgICAgICAgICAgICAgICAgbmdOb25CaW5kYWJsZVxuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgICAgICAgW3RyYW5zbGF0ZVBhcmFtc109XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogc2NoZWR1bGUuY3JvbkNvbmZpZy5ob3VyIHwgbnVtYmVyOiAnMi4wLTAnLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZXM6IHNjaGVkdWxlLmNyb25Db25maWcubWludXRlIHwgbnVtYmVyOiAnMi4wLTAnXG4gICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBEYWlseTogYXQge3sgaG91ciB9fTp7eyBtaW51dGVzIH19LlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJjcm9uU2VydmljZS5nZXRCYXNlKHNjaGVkdWxlLmNyb25Db25maWcpID09PSA0XCJcbiAgICAgICAgICAgICAgICAgICAgbmdOb25CaW5kYWJsZVxuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVcbiAgICAgICAgICAgICAgICAgICAgW3RyYW5zbGF0ZVBhcmFtc109XCJ7XG4gICAgICAgICAgICAgICAgICAgICAgd2Vla0RheTogY3JvblNlcnZpY2UuZ2V0V2Vla0RheU5hbWUoc2NoZWR1bGUuY3JvbkNvbmZpZyksXG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogc2NoZWR1bGUuY3JvbkNvbmZpZy5ob3VyIHwgbnVtYmVyOiAnMi4wLTAnLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZXM6IHNjaGVkdWxlLmNyb25Db25maWcubWludXRlIHwgbnVtYmVyOiAnMi4wLTAnXG4gICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBXZWVrbHk6IHt7IHdlZWtEYXkgfX0sIGF0IHt7IGhvdXIgfX06e3sgbWludXRlcyB9fS5cbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiY3JvblNlcnZpY2UuZ2V0QmFzZShzY2hlZHVsZS5jcm9uQ29uZmlnKSA9PT0gNVwiXG4gICAgICAgICAgICAgICAgICAgIG5nTm9uQmluZGFibGVcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlXG4gICAgICAgICAgICAgICAgICAgIFt0cmFuc2xhdGVQYXJhbXNdPVwie1xuICAgICAgICAgICAgICAgICAgICAgIG1vbnRoRGF5OiBjcm9uU2VydmljZS5nZXRNb250aERheU5hbWUoc2NoZWR1bGUuY3JvbkNvbmZpZyksXG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogc2NoZWR1bGUuY3JvbkNvbmZpZy5ob3VyIHwgbnVtYmVyOiAnMi4wLTAnLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZXM6IHNjaGVkdWxlLmNyb25Db25maWcubWludXRlIHwgbnVtYmVyOiAnMi4wLTAnXG4gICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBNb250aGx5OiB7eyBtb250aERheSB9fSBkYXkgb2YgdGhlIG1vbnRoLCBhdCB7eyBob3VyIH19Ont7IG1pbnV0ZXMgfX0uXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICAqbmdJZj1cImNyb25TZXJ2aWNlLmdldEJhc2Uoc2NoZWR1bGUuY3JvbkNvbmZpZykgPT09IDZcIlxuICAgICAgICAgICAgICAgICAgICBuZ05vbkJpbmRhYmxlXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVxuICAgICAgICAgICAgICAgICAgICBbdHJhbnNsYXRlUGFyYW1zXT1cIntcbiAgICAgICAgICAgICAgICAgICAgICBtb250aDogY3JvblNlcnZpY2UuZ2V0TW9udGhOYW1lKHNjaGVkdWxlLmNyb25Db25maWcpLFxuICAgICAgICAgICAgICAgICAgICAgIG1vbnRoRGF5OiBjcm9uU2VydmljZS5nZXRNb250aERheU5hbWUoc2NoZWR1bGUuY3JvbkNvbmZpZyksXG4gICAgICAgICAgICAgICAgICAgICAgaG91cjogc2NoZWR1bGUuY3JvbkNvbmZpZy5ob3VyIHwgbnVtYmVyOiAnMi4wLTAnLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZXM6IHNjaGVkdWxlLmNyb25Db25maWcubWludXRlIHwgbnVtYmVyOiAnMi4wLTAnXG4gICAgICAgICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBZZWFybHk6IHt7IG1vbnRoIH19LCB7eyBtb250aERheSB9fSBkYXkgb2YgdGhlIG1vbnRoLCBhdCB7eyBob3VyIH19Ont7XG4gICAgICAgICAgICAgICAgICAgICAgbWludXRlc1xuICAgICAgICAgICAgICAgICAgICB9fS5cbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImM4eS1saXN0X19pdGVtX19hY3Rpb25zXCIgKGNsaWNrKT1cIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNldHRpbmdzIGRyb3Bkb3duXCIgZHJvcGRvd24+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzcz1cImRyb3Bkb3duLXRvZ2dsZSBjOHktZHJvcGRvd25cIlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwie3sgJ0FjdGlvbnMnIHwgdHJhbnNsYXRlIH19XCJcbiAgICAgICAgICAgICAgICBkcm9wZG93blRvZ2dsZVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGkgW2M4eUljb25dPVwiJ2VsbGlwc2lzLXYnXCI+PC9pPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPHVsIHJvbGU9XCJsaXN0XCIgY2xhc3M9XCJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHRcIiAqZHJvcGRvd25NZW51PlxuICAgICAgICAgICAgICAgIDxsaSByb2xlPVwibWVudWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIFt0aXRsZV09XCJoYXNSZXF1aXJlZFJvbGUgPyBidXR0b25MYWJlbHMuZWRpdCA6IGJ1dHRvbkxhYmVscy5lZGl0Tm9QZXJtaXNzaW9uXCJcbiAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cImVkaXRTY2hlZHVsZShzY2hlZHVsZSwgaSwgJGV2ZW50KVwiXG4gICAgICAgICAgICAgICAgICAgIFtkaXNhYmxlZF09XCIhaGFzUmVxdWlyZWRSb2xlXCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGkgW2M4eUljb25dPVwiJ3BlbmNpbCdcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgIHt7ICdFZGl0JyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGkgcm9sZT1cIm1lbnVpdGVtXCI+XG4gICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICBbdGl0bGVdPVwiXG4gICAgICAgICAgICAgICAgICAgICAgaGFzUmVxdWlyZWRSb2xlID8gYnV0dG9uTGFiZWxzLmR1cGxpY2F0ZSA6IGJ1dHRvbkxhYmVscy5kdXBsaWNhdGVOb1Blcm1pc3Npb25cbiAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cImR1cGxpY2F0ZVNjaGVkdWxlKHNjaGVkdWxlLCAkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cIiFoYXNSZXF1aXJlZFJvbGVcIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8aSBbYzh5SWNvbl09XCInY29weSdcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgIHt7ICdEdXBsaWNhdGUnIHwgdHJhbnNsYXRlIH19XG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaSByb2xlPVwibWVudWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIFt0aXRsZV09XCJcbiAgICAgICAgICAgICAgICAgICAgICBoYXNSZXF1aXJlZFJvbGUgPyBidXR0b25MYWJlbHMuZGVsZXRlIDogYnV0dG9uTGFiZWxzLmRlbGV0ZU5vUGVybWlzc2lvblxuICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwicmVtb3ZlU2NoZWR1bGUoc2NoZWR1bGUsIGksICRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwiIWhhc1JlcXVpcmVkUm9sZVwiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxpIFtjOHlJY29uXT1cIidkZWxldGUnXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICB7eyAnRGVsZXRlJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXdhcm5pbmcgbWF4LXdpZHRoLTEwMFwiICpuZ0lmPVwiIWhhc1JlcXVpcmVkUm9sZVwiIHJvbGU9XCJhbGVydFwiIHRyYW5zbGF0ZT5cbiAgICBZb3UgZG9uJ3QgaGF2ZSB0aGUgcGVybWlzc2lvbiByZXF1aXJlZCB0byBzY2hlZHVsZSBleHBvcnRzLlxuICA8L2Rpdj5cbiAgPGJ1dHRvblxuICAgIGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0IG0tdC0xNlwiXG4gICAgdHlwZT1cImJ1dHRvblwiXG4gICAgdGl0bGU9XCJ7eyAnQWRkIHNjaGVkdWxlJyB8IHRyYW5zbGF0ZSB9fVwiXG4gICAgKGNsaWNrKT1cImFkZFNjaGVkdWxlKClcIlxuICAgIFtkaXNhYmxlZF09XCIhaGFzUmVxdWlyZWRSb2xlXCJcbiAgPlxuICAgIDxpIFtjOHlJY29uXT1cIidwbHVzLWNpcmNsZSdcIj48L2k+XG4gICAge3sgJ0FkZCBzY2hlZHVsZScgfCB0cmFuc2xhdGUgfX1cbiAgPC9idXR0b24+XG48L2Rpdj5cbiJdfQ==