{"version":3,"file":"c8y-ngx-components-sigfox-device-registration.mjs","sources":["../../sigfox-device-registration/sigfox-device-registration.model.ts","../../sigfox-device-registration/sigfox-provider.service.ts","../../sigfox-device-registration/sigfox-device-registration.component.ts","../../sigfox-device-registration/sigfox-device-registration.component.html","../../sigfox-device-registration/sigfox-device-registration-button.component.ts","../../sigfox-device-registration/sigfox-device-registration-button.component.html","../../sigfox-device-registration/sigfox-device-registration.factory.ts","../../sigfox-device-registration/sigfox-device-registration.module.ts","../../sigfox-device-registration/c8y-ngx-components-sigfox-device-registration.ts"],"sourcesContent":["import { IManagedObject } from '@c8y/client';\n\nexport interface SigfoxDevice {\n  id: string;\n  pac: string;\n  deviceType: IManagedObject;\n  contractId: string;\n  prototype: boolean;\n  productCertificate: string;\n  error?: string;\n  lnsConnectionName: string;\n}\n\nexport interface Contract {\n  id: string;\n  name: string;\n}\n\nexport interface SigfoxDeviceFormly extends SigfoxDevice {\n  contract: Contract;\n  connection: {\n    name: string;\n    description: string;\n    baseUrl: string;\n    parentGroupId: string;\n    username: string;\n    password: string;\n  };\n}\n\nexport const PRODUCT_EXPERIENCE = {\n  EVENT: 'deviceRegistration',\n  COMPONENT: 'sigfox-registration',\n  RESULT: { SUCCESS: 'registrationSuccess', FAILURE: 'registrationFailure' }\n};\n","import { Injectable } from '@angular/core';\nimport {\n  FetchClient,\n  IFetchOptions,\n  IManagedObject,\n  InventoryService,\n  IResult,\n  IResultList,\n  ITenantOption,\n  TenantOptionsService\n} from '@c8y/client';\nimport { SigfoxDevice } from './sigfox-device-registration.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppStateService, gettext } from '@c8y/ngx-components';\n\nexport enum ErrorName {\n  NoDeviceProtocolsError = 'NoDeviceProtocolsError',\n  NoConnectivitySettingsError = 'NoConnectivitySettingsError',\n  ConnectivitySettingsError = 'ConnectivitySettingsError',\n  ContractError = 'ContractError',\n  NoContractsError = 'NoContractsError',\n  RegistrationError = 'RegistrationError',\n  DeviceProtocolsFetchError = 'DeviceProtocolsFetchError'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SigfoxProviderService {\n  private readonly baseUrl: string = '/service/sigfox-agent/';\n  private readonly registrationUrl: string = `${this.baseUrl}newDeviceRequest`;\n  private readonly contractsUrl: string = `${this.baseUrl}contract`;\n  private readonly header: any = { 'Content-Type': 'application/json' };\n\n  constructor(\n    private client: FetchClient,\n    private inventoryService: InventoryService,\n    private tenantOptions: TenantOptionsService,\n    private translateService: TranslateService,\n    private appState: AppStateService\n  ) {}\n  async getConnections() {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header\n    };\n    const res = await this.client.fetch(`${this.baseUrl}lns-connection`, options);\n    const data = await res.json();\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n        await this.throwNoConnectivitySettingsError();\n      }\n    } else {\n      await this.throwConnectivitySettingsError(data);\n    }\n    return { res, data };\n  }\n\n  /**\n   * Gets contracts from Sigfox platform.\n   * @param connectionName The name of connection for which contracts will be retrieved\n   * @returns The result list with contract, or throws an error with exception.\n   */\n  async getContracts(connectionName: string): Promise<IResultList<any>> {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header,\n      params: {\n        sigfoxConnectionName: connectionName\n      }\n    };\n    const res = await this.client.fetch(this.contractsUrl, options);\n\n    const data = await res.json();\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n        this.throwNoContractsError();\n      }\n    } else {\n      this.throwContractError(data);\n    }\n    return { res, data };\n  }\n\n  async createDevice(device: SigfoxDevice): Promise<IResult<SigfoxDevice>> {\n    const options: IFetchOptions = {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(device)\n    };\n    const res = await this.client.fetch(this.registrationUrl, options);\n    const data = await res.json();\n\n    if (res.status !== 201) {\n      this.throwRegistrationError(data);\n    }\n    return { res, data };\n  }\n\n  async getAvailableProtocols(\n    filter: object = { withTotalPages: true }\n  ): Promise<IResultList<IManagedObject>> {\n    const query = {\n      __filter: {\n        __and: [\n          { __has: 'c8y_IsDeviceType' },\n          {\n            type: { __in: ['c8y_SigfoxDeviceType', 'c8y_LpwanDeviceType'] }\n          }\n        ]\n      },\n      __orderby: [{ name: 1 }]\n    };\n    const deviceProtocolsList = await this.inventoryService.listQuery(query, filter);\n    const { res, data } = deviceProtocolsList;\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n        this.throwNoDeviceProtocolsError();\n      }\n    } else {\n      this.throwDeviceProtocolsFetchError();\n    }\n    return deviceProtocolsList;\n  }\n\n  async hasConnectivitySettings(): Promise<boolean> {\n    const option: ITenantOption = {\n      category: 'sigfox-agent',\n      key: 'provider.token'\n    };\n    try {\n      await this.tenantOptions.detail(option);\n      return true;\n    } catch (e) {\n      await this.throwNoConnectivitySettingsError();\n    }\n  }\n\n  private async throwNoConnectivitySettingsError() {\n    const error = new Error();\n    error.name = ErrorName.NoConnectivitySettingsError;\n    const hasAdminRight = await this.appState.isApplicationAvailable('administration');\n    if (hasAdminRight) {\n      error.message = this.translateService.instant(\n        gettext(\n          `Connectivity settings are not configured. Configure them in the Administration application under <a href=\"{{ link }}\">Settings</a>.`\n        ),\n        {\n          link: '/apps/administration/index.html#/connectivitySettings/sigfox_provider_settings'\n        }\n      );\n    } else {\n      error.message = gettext(\n        'Connectivity settings are not configured. Contact the administrator.'\n      );\n    }\n\n    throw error;\n  }\n\n  private throwConnectivitySettingsError(data: { message: string }) {\n    const error = new Error();\n    error.name = ErrorName.ConnectivitySettingsError;\n    error.message = data.message;\n    throw error;\n  }\n  private throwRegistrationError(data: { message: string }) {\n    const error = new Error();\n    error.name = ErrorName.RegistrationError;\n    error.message = data.message;\n    throw error;\n  }\n\n  private throwDeviceProtocolsFetchError() {\n    const error = new Error();\n    error.name = ErrorName.DeviceProtocolsFetchError;\n    error.message = gettext('Could not load device protocols.');\n    throw error;\n  }\n\n  private throwNoDeviceProtocolsError() {\n    const error = new Error();\n    error.name = ErrorName.NoDeviceProtocolsError;\n    error.message = this.translateService.instant(\n      gettext(\n        `No device protocols configured. Create a Sigfox device protocol in <a href=\"{{ link }}\">Device protocols</a>.`\n      ),\n      {\n        link: '/apps/devicemanagement/#/deviceprotocols'\n      }\n    );\n    throw error;\n  }\n\n  private throwContractError(data: { message: string }) {\n    const error = new Error();\n    error.name = ErrorName.ContractError;\n    error.message = data.message;\n    throw error;\n  }\n\n  private throwNoContractsError() {\n    const error = new Error();\n    error.name = ErrorName.NoContractsError;\n    error.message = gettext(\n      'No contracts found. New contracts must be created via the Sigfox platform.'\n    );\n    throw error;\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { C8yStepper, GainsightService, gettext } from '@c8y/ngx-components';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { cloneDeep, uniq } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, defer, forkJoin, from, of, Subject, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, shareReplay, switchMap, takeUntil } from 'rxjs/operators';\nimport {\n  SigfoxDevice,\n  SigfoxDeviceFormly,\n  PRODUCT_EXPERIENCE\n} from './sigfox-device-registration.model';\nimport { ErrorName, SigfoxProviderService } from './sigfox-provider.service';\n\ntype State =\n  | 'loadPending'\n  | 'loadSuccess'\n  | 'loadError'\n  | 'registrationPending'\n  | 'registrationSuccess'\n  | 'registrationError';\n\n@Component({\n  selector: 'c8y-sigfox-device-registration',\n  templateUrl: 'sigfox-device-registration.component.html'\n})\nexport class SigfoxDeviceRegistrationComponent {\n  stepper: C8yStepper;\n  readonly PAGING: object = {\n    withTotalPages: true,\n    pageSize: 10\n  };\n\n  form = new FormGroup({});\n  model: SigfoxDeviceFormly = {} as any;\n  protocols$ = this.getProtocols$();\n  connections$ = this.getConnections$();\n  unsubscribe$: Subject<void> = new Subject();\n\n  load$ = this.connections$.pipe(\n    catchError((error: Error) => of(error)),\n    switchMap(connections => {\n      if (\n        connections instanceof Error &&\n        connections.name === ErrorName.NoConnectivitySettingsError\n      ) {\n        return of([connections]);\n      }\n      return forkJoin([\n        of(connections),\n        this.protocols$.pipe(catchError((error: Error) => of(error)))\n      ]);\n    }),\n    map(results => {\n      return results.filter(result => {\n        return result instanceof Error;\n      });\n    }),\n    switchMap(errors => {\n      return errors.length === 0 ? of([]) : throwError(errors);\n    })\n  );\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'id',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'FED987',\n        label: gettext('ID'),\n        required: true,\n        pattern: '(0x){0,1}[0-9A-F]+(h){0,1}'\n      },\n      validation: {\n        messages: {\n          pattern: gettext('Must be a valid hexadecimal number.')\n        }\n      }\n    },\n    {\n      key: 'pac',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'FEDCBA9876543210',\n        label: gettext('PAC'),\n        required: true,\n        pattern: '^([a-fA-F0-9]{16})$'\n      },\n      validation: {\n        messages: {\n          pattern: gettext('Must be a valid 16 digit hexadecimal number.')\n        }\n      }\n    },\n    {\n      key: 'connection',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Connection'),\n        required: true,\n        c8yForOptions: this.connections$,\n        displayProperty: 'name',\n        valueProperties: ['name']\n      }\n    },\n    {\n      key: 'contract',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Contract'),\n        required: true,\n        placeholder: 'Free contract_25',\n        displayProperty: 'name',\n        valueProperties: ['id'],\n        description: gettext('Only active contracts with free slots are displayed.')\n      },\n      hooks: {\n        onInit: field => {\n          const connectionControl = field.form.get('connection');\n          connectionControl.valueChanges\n            .pipe(\n              takeUntil(this.unsubscribe$),\n              mergeMap(({ name }) => this.getContracts$(name))\n            )\n            .subscribe(\n              profiles => {\n                field.templateOptions.c8yForOptions = of(profiles);\n                field.formControl.setValue(null);\n              },\n              error => {\n                field.form.get('contract').setErrors({ contract: true });\n                field.validators.contract.message = error.message;\n              }\n            );\n        }\n      },\n      validators: {\n        contract: {\n          expression: (control: AbstractControl) => {\n            return control.status === 'VALID';\n          },\n          message: () => ''\n        }\n      }\n    },\n    {\n      key: 'deviceType',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Device protocol'),\n        required: true,\n        c8yForOptions: this.protocols$,\n        displayProperty: 'name',\n        valueProperties: ['id', 'name']\n      }\n    },\n    {\n      key: 'productCertificate',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'P_001F_EDCB_01',\n        label: gettext('Product certificate key'),\n        pattern: 'P_[0-9A-F]{4}_[0-9A-F]{4}_[0-9A-F]{2}',\n        description: gettext(\n          'If no product certificate key is specified, the device is considered a prototype.'\n        )\n      },\n      validation: {\n        messages: {\n          pattern: (_error, _field: FormlyFieldConfig) =>\n            this.translateService.instant(\n              gettext('Must be a valid product certificate key, for example, {{ example }}'),\n              { example: 'P_001F_EDCB_01' }\n            )\n        }\n      }\n    }\n  ];\n\n  registrationStepLabels = {\n    next: gettext('Register')\n  };\n  finalStepLabels = {\n    back: gettext('Close')\n  };\n\n  state: State = 'loadPending';\n  errors$ = new BehaviorSubject<Error[]>([]);\n  errorMessages$ = this.errors$.pipe(\n    map(errors => errors.map(error => error.message)),\n    map(messages => uniq(messages))\n  );\n  constructor(\n    public bsModalRef: BsModalRef,\n    private sigfoxService: SigfoxProviderService,\n    private translateService: TranslateService,\n    private gainsightService: GainsightService\n  ) {\n    this.load$.subscribe(\n      () => {\n        this.state = 'loadSuccess';\n      },\n      errors => {\n        this.state = 'loadError';\n        this.errors$.next(errors);\n      }\n    );\n  }\n\n  async create(event: { stepper: C8yStepper; step: CdkStep }) {\n    this.state = 'registrationPending';\n    const sigfoxDevice = this.getSigfoxDeviceToSend();\n    try {\n      await this.sigfoxService.createDevice(sigfoxDevice);\n      this.state = 'registrationSuccess';\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {\n        result: PRODUCT_EXPERIENCE.RESULT.SUCCESS,\n        component: PRODUCT_EXPERIENCE.COMPONENT\n      });\n    } catch (error) {\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.EVENT, {\n        result: PRODUCT_EXPERIENCE.RESULT.FAILURE,\n        component: PRODUCT_EXPERIENCE.COMPONENT\n      });\n      this.state = 'registrationError';\n      this.errors$.next([error]);\n    }\n\n    event.stepper.next();\n  }\n\n  getSigfoxDeviceToSend() {\n    const sigfoxDevice: SigfoxDevice = cloneDeep(this.model);\n    sigfoxDevice.lnsConnectionName = this.model.connection.name;\n    sigfoxDevice.contractId = this.model.contract.id;\n    sigfoxDevice.prototype = !sigfoxDevice.productCertificate;\n    delete (sigfoxDevice as any).contract;\n    delete (sigfoxDevice as any).connection;\n    return sigfoxDevice;\n  }\n\n  getContracts$(name) {\n    return defer(() => from(this.sigfoxService.getContracts(name))).pipe(shareReplay(1));\n  }\n\n  getProtocols$() {\n    return defer(() => from(this.sigfoxService.getAvailableProtocols())).pipe(shareReplay(1));\n  }\n\n  getConnections$() {\n    return defer(() => from(this.sigfoxService.getConnections())).pipe(shareReplay(1));\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","<c8y-modal\n  [title]=\"'Sigfox registration' | translate\"\n  [headerClasses]=\"'dialog-header'\"\n  [customFooter]=\"true\"\n>\n  <ng-container c8y-modal-title>\n    <span [c8yIcon]=\"'c8y-device-connect'\"></span>\n  </ng-container>\n  <ng-container *ngIf=\"state === 'loadPending'; else registrationForm\">\n    <div class=\"p-16 text-center\">\n      <c8y-loading></c8y-loading>\n    </div>\n  </ng-container>\n\n  <ng-template #registrationForm>\n    <c8y-stepper\n      [hideStepProgress]=\"true\"\n      linear\n      c8y-modal-body\n      *ngIf=\"(errorMessages$ | async).length === 0; else errorMessagesPresent\"\n    >\n      <cdk-step [stepControl]=\"form\">\n        <div class=\"p-b-16\">\n          <p class=\"modal-subtitle sticky-top\">\n            {{ 'Register a single Sigfox device' | translate }}\n          </p>\n          <formly-form\n            class=\"d-block p-l-24 p-r-24 p-t-16\"\n            [form]=\"form\"\n            [fields]=\"fields\"\n            [model]=\"model\"\n          ></formly-form>\n        </div>\n        <c8y-stepper-buttons\n          class=\"modal-footer d-block sticky-bottom separator-top bg-component\"\n          [labels]=\"registrationStepLabels\"\n          (onNext)=\"create($event)\"\n          (onCancel)=\"bsModalRef.hide()\"\n          [showButtons]=\"{ cancel: true, next: true }\"\n          [pending]=\"state === 'registrationPending'\"\n          [disabled]=\"!form.valid\"\n        ></c8y-stepper-buttons>\n      </cdk-step>\n      <cdk-step state=\"final\">\n        <div\n          class=\"p-16 text-center\"\n          *ngIf=\"state === 'registrationPending'\"\n        >\n          <c8y-loading></c8y-loading>\n        </div>\n        <div class=\"m-24\">\n          <c8y-operation-result\n            class=\"lead m-b-0\"\n            type=\"success\"\n            *ngIf=\"state === 'registrationSuccess'\"\n            text=\"{{ 'Device registered' | translate }}\"\n            [size]=\"84\"\n            [vertical]=\"true\"\n          ></c8y-operation-result>\n        </div>\n\n        <c8y-stepper-buttons\n          class=\"sticky-bottom d-block p-t-16 p-b-16 separator-top bg-component\"\n          (onCustom)=\"bsModalRef.hide()\"\n          [showButtons]=\"{ custom: true }\"\n          [labels]=\"finalStepLabels\"\n        ></c8y-stepper-buttons>\n      </cdk-step>\n    </c8y-stepper>\n  </ng-template>\n\n  <ng-template #errorMessagesPresent>\n    <div class=\"m-24\">\n      <c8y-operation-result\n        class=\"lead\"\n        type=\"error\"\n        *ngIf=\"state === 'registrationError'\"\n        text=\"{{ 'Failed to register' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n      ></c8y-operation-result>\n      <div\n        class=\"m-b-8\"\n        *ngFor=\"let msg of errorMessages$ | async\"\n        data-cy=\"sigfox-device-registration.component--registration-error\"\n        [ngClass]=\"{\n          'text-center': state === 'registrationError',\n          'alert alert-danger': state === 'loadError'\n        }\"\n      >\n        <span [innerHTML]=\"msg | translate\"></span>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button\n        class=\"btn btn-default\"\n        title=\"{{ 'Close' | translate }}\"\n        type=\"button\"\n        (click)=\"bsModalRef.hide()\"\n      >\n        {{ 'Close' | translate }}\n      </button>\n    </div>\n  </ng-template>\n</c8y-modal>\n","import { Component } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SigfoxDeviceRegistrationComponent } from './sigfox-device-registration.component';\n@Component({\n  selector: 'c8y-sigfox-registration',\n  templateUrl: 'sigfox-device-registration-button.component.html'\n})\nexport class SigfoxDeviceRegistrationButtonComponent {\n  constructor(private modalService: BsModalService) {}\n\n  open() {\n    this.modalService.show(SigfoxDeviceRegistrationComponent, {\n      class: 'modal-sm',\n      ariaDescribedby: 'modal-body',\n      ariaLabelledBy: 'modal-title',\n      ignoreBackdropClick: true\n    });\n  }\n}\n","<button title=\"{{ 'Sigfox' | translate }}\" type=\"button\" (click)=\"open()\">\n  <i c8yIcon=\"c8y-device-connect\"></i>\n  {{ 'Sigfox' | translate }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { SigfoxDeviceRegistrationButtonComponent } from './sigfox-device-registration-button.component';\nimport { RegisterDeviceFactory, RegisterDeviceItem } from '@c8y/ngx-components/register-device';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SigfoxDeviceRegistrationFactory implements RegisterDeviceFactory {\n  constructor(private tenantService: TenantUiService) {}\n\n  get() {\n    const items: RegisterDeviceItem[] = [];\n    if (this.tenantService.isMicroserviceSubscribedInCurrentTenant('sigfox-agent')) {\n      items.push({\n        template: SigfoxDeviceRegistrationButtonComponent,\n        priority: 98,\n        category: 'single'\n      } as RegisterDeviceItem);\n    }\n    return items;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, CoreModule } from '@c8y/ngx-components';\nimport { hookDeviceRegistration } from '@c8y/ngx-components/register-device';\nimport { SigfoxDeviceRegistrationButtonComponent } from './sigfox-device-registration-button.component';\nimport { SigfoxDeviceRegistrationComponent } from './sigfox-device-registration.component';\nimport { SigfoxDeviceRegistrationFactory } from './sigfox-device-registration.factory';\nimport { SigfoxProviderService } from './sigfox-provider.service';\n\n@NgModule({\n  imports: [CoreModule, CommonModule],\n  declarations: [SigfoxDeviceRegistrationButtonComponent, SigfoxDeviceRegistrationComponent],\n  providers: [hookDeviceRegistration(SigfoxDeviceRegistrationFactory), SigfoxProviderService]\n})\nexport class SigfoxDeviceRegistrationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3","i1","i2.SigfoxProviderService","i2"],"mappings":"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"}