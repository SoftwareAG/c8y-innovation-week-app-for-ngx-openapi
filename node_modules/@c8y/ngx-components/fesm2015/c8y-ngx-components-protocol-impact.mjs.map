{"version":3,"file":"c8y-ngx-components-protocol-impact.mjs","sources":["../../protocol-impact/impact-subscription.service.ts","../../protocol-impact/refresh-action.component.ts","../../protocol-impact/refresh-action.component.html","../../protocol-impact/impact-action.factory.ts","../../protocol-impact/impact-protocol.module.ts","../../protocol-impact/c8y-ngx-components-protocol-impact.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions, IFetchResponse } from '@c8y/client';\n\n@Injectable()\nexport class ImpactSubscriptionService {\n  private readonly microserviceUrl: string = '/service/impact';\n  private readonly header: any = { 'Content-Type': 'application/json' };\n\n  constructor(private client: FetchClient) {}\n\n  refreshDeviceResources(deviceId: string | number): Promise<IFetchResponse> {\n    const options: IFetchOptions = {\n      method: 'PUT',\n      headers: this.header\n    };\n    return this.client.fetch(`${this.microserviceUrl}/refresh/${deviceId}`, options);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IFetchResponse } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { ImpactSubscriptionService } from './impact-subscription.service';\n\n@Component({\n  selector: 'c8y-impact-refresh-action',\n  templateUrl: './refresh-action.component.html'\n})\nexport class RefreshActionComponent implements OnInit {\n  @ViewChild('templateCopy', { read: TemplateRef, static: true }) templateCopy;\n  requestInProgress: boolean;\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private router: Router,\n    private impactService: ImpactSubscriptionService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.vcRef.createEmbeddedView(this.templateCopy);\n  }\n\n  async refresh() {\n    // TODO This is only a dirty hack to retrieve deviceId from URL;\n    // In fact contextData should be provided for this component by a resolver?\n    const url: string =\n      this.router &&\n      this.router.routerState &&\n      this.router.routerState.snapshot &&\n      this.router.routerState.snapshot.url;\n    const deviceId: string = url && (/^\\/device\\/(\\d+)\\/.*$/gi.exec(url) || [])[1];\n\n    if (deviceId) {\n      this.requestInProgress = true;\n      try {\n        const res: IFetchResponse = await this.impactService.refreshDeviceResources(deviceId);\n        if (res && res.status !== 200) {\n          const data = res.json ? await res.json() : undefined;\n          this.alert.addServerFailure({ data, res });\n        } else {\n          this.alert.success(gettext('Device resource refresh scheduled.'));\n        }\n      } catch (ex) {\n        this.alert.addServerFailure(ex);\n      }\n      this.requestInProgress = false;\n    } else {\n      this.alert.danger(gettext('Could not find device ID in URL.'));\n    }\n  }\n}\n","<ng-template #templateCopy>\n  <li>\n    <button\n      class=\"btn btn-link\"\n      title=\"{{ 'Refresh device resources' | translate }}\"\n      (click)=\"refresh()\"\n    >\n      <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': requestInProgress }\"></i>&nbsp;<span\n        translate\n        >Refresh device resources</span\n      >\n    </button>\n  </li>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionBarFactory, ActionBarItem, AppStateService } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { RefreshActionComponent } from './refresh-action.component';\n\n@Injectable()\nexport class ImpactActionFactory implements ActionBarFactory {\n  private static readonly applicationName = 'impact';\n\n  constructor(private appState: AppStateService) {}\n\n  async get(activeRoute?: ActivatedRoute) {\n    const actions: ActionBarItem[] = [];\n\n    const data =\n      !activeRoute.parent || activeRoute.snapshot.data.context\n        ? activeRoute.snapshot.data\n        : activeRoute.parent.snapshot.data;\n    const { contextData } = data;\n\n    const isDeviceInfoTab: boolean = get(activeRoute, 'snapshot.url[0].path') === 'device-info';\n\n    const showRefreshActionButton: boolean =\n      isDeviceInfoTab &&\n      contextData &&\n      contextData.c8y_ImpactResourceInfo &&\n      /* call application service only for relevant devices to reduce number of service calls! */\n      (await this.appState.isApplicationAvailable(ImpactActionFactory.applicationName));\n\n    if (showRefreshActionButton) {\n      actions.push({\n        priority: 500,\n        placement: 'right',\n        component: RefreshActionComponent\n      });\n    }\n\n    return actions;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, hookActionBar } from '@c8y/ngx-components';\nimport { ImpactActionFactory } from './impact-action.factory';\nimport { ImpactSubscriptionService } from './impact-subscription.service';\nimport { RefreshActionComponent } from './refresh-action.component';\n\n@NgModule({\n  declarations: [RefreshActionComponent],\n  imports: [CoreModule],\n  providers: [ImpactSubscriptionService, hookActionBar(ImpactActionFactory)],\n  entryComponents: [RefreshActionComponent]\n})\nexport class ImpactProtocolModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2.ImpactSubscriptionService"],"mappings":"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"}