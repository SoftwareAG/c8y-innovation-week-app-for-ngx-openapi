import * as i0 from '@angular/core';
import { NgModule } from '@angular/core';

class Ng1UserInventoryRolesService {
}
function UserInventoryRolesFactory(injector) {
    return injector.get('c8yUserInventoryRoles');
}
const userInventoryRolesServiceProvider = {
    provide: Ng1UserInventoryRolesService,
    useFactory: UserInventoryRolesFactory,
    deps: ['$injector']
};

class Ng1RolesService {
}
function RolesServiceFactory(injector) {
    return injector.get('c8yRoles');
}
const rolesServiceProvider = {
    provide: Ng1RolesService,
    useFactory: RolesServiceFactory,
    deps: ['$injector']
};

/**
 * This module is used for providing upgraded services from AngularJS to Angular. Separate module is created
 * to prevent circular dependency errors in more complex situations, where downgraded NgX component injects
 * NgJS upgraded services.
 */
class UpgradedServicesModule {
}
UpgradedServicesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UpgradedServicesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UpgradedServicesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.7", ngImport: i0, type: UpgradedServicesModule });
UpgradedServicesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UpgradedServicesModule, providers: [rolesServiceProvider, userInventoryRolesServiceProvider] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.7", ngImport: i0, type: UpgradedServicesModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [rolesServiceProvider, userInventoryRolesServiceProvider]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { Ng1RolesService, Ng1UserInventoryRolesService, RolesServiceFactory, UpgradedServicesModule, UserInventoryRolesFactory, rolesServiceProvider, userInventoryRolesServiceProvider };
//# sourceMappingURL=c8y-ngx-components-upgrade-upgraded-services.mjs.map
