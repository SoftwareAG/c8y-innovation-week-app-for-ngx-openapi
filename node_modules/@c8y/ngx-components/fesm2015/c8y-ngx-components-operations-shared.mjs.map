{"version":3,"file":"c8y-ngx-components-operations-shared.mjs","sources":["../../operations/shared/operations.model.ts","../../operations/shared/operations.service.ts","../../operations/shared/operations-shared.module.ts","../../operations/shared/c8y-ngx-components-operations-shared.ts"],"sourcesContent":["import { OperationStatus } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { StatusOption } from './status-option.model';\n\nexport const OPERATION_STATUS_LABELS = {\n  PENDING: gettext('Pending'),\n  EXECUTING: gettext('Executing'),\n  FAILED: gettext('Failed'),\n  SUCCESSFUL: gettext('Successful')\n};\n\nexport type OperationStatusOptionsMap = {\n  [key in keyof typeof OperationStatus]?: StatusOption;\n};\n\nexport const OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = {\n  PENDING: {\n    label: OPERATION_STATUS_LABELS.PENDING,\n    status: OperationStatus.PENDING,\n    icon: 'clock-o',\n    styleClass: ''\n  } as unknown as StatusOption,\n  EXECUTING: {\n    label: OPERATION_STATUS_LABELS.EXECUTING,\n    status: OperationStatus.EXECUTING,\n    icon: 'refresh',\n    styleClass: 'text-info'\n  } as unknown as StatusOption,\n  SUCCESSFUL: {\n    label: OPERATION_STATUS_LABELS.SUCCESSFUL,\n    status: OperationStatus.SUCCESSFUL,\n    icon: 'check-circle',\n    styleClass: 'text-success'\n  } as unknown as StatusOption,\n  FAILED: {\n    label: OPERATION_STATUS_LABELS.FAILED,\n    status: OperationStatus.FAILED,\n    icon: 'exclamation-circle',\n    styleClass: 'text-danger'\n  } as unknown as StatusOption\n};\n\nexport const CLEAN_KEYS = ['creationTime', 'deviceExternalIDs', 'id', 'self'];\n\nexport const CLEAN_KEYS_UPDATE = ['deviceId', 'deviceName', 'bulkOperationId'];\n\nexport const RESERVED_KEYS = CLEAN_KEYS.concat(['deviceId', 'deviceName', 'bulkOperationId']);\n\nexport const STANDARD_KEYS = {\n  failureReason: gettext('Failure reason'),\n  description: gettext('Description'),\n  status: gettext('Status')\n};\n","import { Injectable } from '@angular/core';\nimport { IOperation, OperationService, OperationStatus } from '@c8y/client';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { assign, difference, has, includes, keys, pickBy, without } from 'lodash-es';\nimport { RESERVED_KEYS, STANDARD_KEYS } from './operations.model';\n\n@Injectable()\nexport class OperationsService {\n  constructor(\n    private operationService: OperationService,\n    private modal: ModalService,\n    private alertService: AlertService\n  ) {}\n\n  getStandardKeys(operation: IOperation) {\n    return pickBy(STANDARD_KEYS, (_, key) => has(operation, key));\n  }\n\n  getNonStandardKeys(operation: IOperation, excluding: string[] = []) {\n    return without(\n      difference(this.getKeys(operation), keys(this.getStandardKeys(operation))),\n      ...excluding\n    );\n  }\n\n  async cancel(operation: Partial<IOperation>) {\n    try {\n      await this.modal.confirm(\n        gettext('Cancel operation'),\n        gettext('You are about to cancel the operation. Do you want to proceed?'),\n        Status.DANGER\n      );\n\n      const operationAfterUpdate = (\n        await this.operationService.update({\n          id: operation.id,\n          status: OperationStatus.FAILED,\n          failureReason: gettext('Operation cancelled by user.')\n        })\n      ).data;\n      assign(operation, operationAfterUpdate);\n      this.alertService.success(gettext('Operation cancelled.'));\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n    }\n  }\n\n  private getKeys(managedObject) {\n    return Object.keys({ ...managedObject }).filter(key => !includes(RESERVED_KEYS, key));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OperationsService } from './operations.service';\n\n@NgModule({\n  providers: [OperationsService]\n})\nexport class OperationsSharedModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}