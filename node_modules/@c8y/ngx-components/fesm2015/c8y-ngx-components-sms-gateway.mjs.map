{"version":3,"file":"c8y-ngx-components-sms-gateway.mjs","sources":["../../sms-gateway/pattern-messages.data.ts","../../sms-gateway/sms-gateway.guard.ts","../../sms-gateway/sms-gateway.module.ts","../../sms-gateway/c8y-ngx-components-sms-gateway.ts"],"sourcesContent":["import { gettext } from '@c8y/ngx-components';\n\nexport const MESSAGES = {\n  '^Sender name$': {\n    gettext: gettext('Sender name')\n  },\n  '^Sender name used for sent SMS$': {\n    gettext: gettext('Sender name used for sent SMS')\n  },\n  '^Sender address$': {\n    gettext: gettext('Sender address')\n  },\n  '^Sender address used for sent SMS$': {\n    gettext: gettext('Sender address used for sent SMS')\n  },\n  '^Username$': {\n    gettext: gettext('Username')\n  },\n  '^Password$': {\n    gettext: gettext('Password')\n  },\n  '^Licence key$': {\n    gettext: gettext('License key')\n  },\n  '^Key$': {\n    gettext: gettext('Key')\n  },\n  '^API base URL$': {\n    gettext: gettext('API base URL')\n  },\n  '^API URL$': {\n    gettext: gettext('API URL')\n  },\n  '^oauth$': {\n    gettext: gettext('OAuth')\n  },\n  '^basic$': {\n    gettext: gettext('Basic')\n  },\n  '^Authentication method$': {\n    gettext: gettext('Authentication method')\n  },\n  '^Defines which authentication method is used with the provider$': {\n    gettext: gettext('Defines which authentication method is used with the provider')\n  },\n  '^Static headers$': {\n    gettext: gettext('Static headers')\n  },\n  '^Static headers that should be added to requests towards the provider$': {\n    gettext: gettext('Static headers that should be added to requests towards the provider')\n  },\n  '^OAuth token URL$': {\n    gettext: gettext('OAuth token URL')\n  },\n  '^URL where the OAuth token is requested from (required if OAuth method is chosen)$': {\n    gettext: gettext(\n      'URL where the OAuth token is requested from (required if OAuth method is selected)'\n    )\n  },\n  '^OAuth toke mime type$': {\n    gettext: gettext('OAuth token mime type')\n  },\n  '^Overrides the OAuth token response mime type$': {\n    gettext: gettext('Overrides the OAuth token response mime type')\n  },\n  '^OAuth access toke type$': {\n    gettext: gettext('OAuth access token type')\n  },\n  '^Overrides the OAuth access token type$': {\n    gettext: gettext('Overrides the OAuth access token type')\n  },\n  '^Global configuration$': {\n    gettext: gettext('Global configuration')\n  },\n  '^Enables or disables if the settings may be used globally for all tenants (Only possible in management tenant)$':\n    {\n      gettext: gettext(\n        'Enables or disables the settings globally for all tenants (only possible in management tenant)'\n      )\n    },\n  '^API key$': {\n    gettext: gettext('API key')\n  },\n  '^Inherit to subtenants$': {\n    gettext: gettext('Inherit to subtenants')\n  },\n  \"^Enables or disables if this tenant's configuration may be inherited to subtenants$\": {\n    gettext: gettext(\n      'Enables or disables the option to inherit the tenant configuration to subtenants'\n    )\n  },\n  '^Login$': {\n    gettext: gettext('Login')\n  },\n  '^Source business unit ID$': {\n    gettext: gettext('Source business unit ID')\n  },\n  '^Client ID$': {\n    gettext: gettext('Client ID')\n  },\n  '^Client secret$': {\n    gettext: gettext('Client secret')\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Permissions, AppStateService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class SmsGatewayGuard implements CanActivate {\n  private static readonly applicationName = 'sms-gateway';\n  private showSMSProvider: Promise<boolean>;\n\n  constructor(private permissions: Permissions, private appState: AppStateService) {}\n\n  canActivate(): Promise<boolean> {\n    if (this.showSMSProvider === undefined) {\n      const hasRole: Promise<boolean> = Promise.resolve(this.permissions.hasRole('ROLE_SMS_READ'));\n\n      this.showSMSProvider = hasRole.then(\n        (hasPermissions: boolean) =>\n          hasPermissions && this.appState.isApplicationAvailable(SmsGatewayGuard.applicationName)\n      );\n    }\n\n    return this.showSMSProvider;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { gettext, hookPatternMessages, ProviderConfigurationModule } from '@c8y/ngx-components';\nimport { MESSAGES } from './pattern-messages.data';\nimport { SmsGatewayGuard } from './sms-gateway.guard';\n\n@NgModule({\n  imports: [\n    ProviderConfigurationModule.config([\n      {\n        navigation: {\n          label: gettext('SMS provider'),\n          path: 'smsgateway',\n          icon: 'envelope-o',\n          parent: gettext('Settings'),\n          priority: 1000,\n          canActivate: [SmsGatewayGuard]\n        },\n        layout: {\n          pageTitle: gettext('SMS provider'),\n          cardTitle: gettext('Credentials'),\n          description: gettext(\n            'Enter your credentials from your SMS provider. This enables platform features that utilize SMS services (for example, two-factor authentication and user notifications).'\n          ),\n          providerName: gettext('SMS provider'),\n          providerNamePlaceholder: gettext('Select or type to filter providers'),\n          providerNameNoMatchesHint: gettext('Select one of the existing providers.'),\n          deleteRoles: ['ROLE_SMS_ADMIN'],\n          deleteBtnLabel: gettext('Delete'),\n          saveRoles: ['ROLE_SMS_ADMIN'],\n          saveBtnLabel: gettext('Save'),\n          configurationUpdatedSuccessMsg: gettext('Credentials updated.'),\n          deleteConfigurationModalTitle: gettext('Delete credentials'),\n          deleteConfigurationModalBody: gettext(\n            `You are about to delete SMS provider credentials. Deleting credentials will lock out any users with SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication. Do you want to proceed?`\n          ),\n          deleteConfigurationModalOkBtnLabel: gettext('Delete'),\n          configurationDeletedSuccessMsg: gettext('Credentials deleted.')\n        },\n        endpoint: {\n          definitionsEndpoint: {\n            baseUrl: 'service/messaging/providers',\n            listUrl: 'definitions'\n          },\n          configurationEndpoint: {\n            baseUrl: 'service/messaging/providers',\n            listUrl: 'configuration'\n          }\n        }\n      }\n    ])\n  ],\n  providers: [SmsGatewayGuard, hookPatternMessages(MESSAGES)]\n})\nexport class SmsGatewayModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}