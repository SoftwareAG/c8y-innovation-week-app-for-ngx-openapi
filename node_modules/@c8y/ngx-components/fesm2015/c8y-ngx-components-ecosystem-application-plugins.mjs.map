{"version":3,"file":"c8y-ngx-components-ecosystem-application-plugins.mjs","sources":["../../ecosystem/application-plugins/appState.pipe.ts","../../ecosystem/application-plugins/apps-to-update-remotes-select.component.ts","../../ecosystem/application-plugins/apps-to-update-remotes-select.component.html","../../ecosystem/application-plugins/plugin-list-item.component.ts","../../ecosystem/application-plugins/plugin-list-item.component.html","../../ecosystem/application-plugins/plugin-list.component.ts","../../ecosystem/application-plugins/plugin-list.component.html","../../ecosystem/application-plugins/only-latest-plugin-version.pipe.ts","../../ecosystem/application-plugins/install-plugin.component.ts","../../ecosystem/application-plugins/install-plugin.component.html","../../ecosystem/application-plugins/label-cell-renderer.component.ts","../../ecosystem/application-plugins/label-cell-renderer.component.html","../../ecosystem/application-plugins/orphaned-status-cell-renderer.component.ts","../../ecosystem/application-plugins/orphaned-status-cell-renderer.component.html","../../ecosystem/application-plugins/update-plugin-of-app/update-plugin-of-app.component.ts","../../ecosystem/application-plugins/update-plugin-of-app/update-plugin-of-app.component.html","../../ecosystem/application-plugins/application-plugins.component.ts","../../ecosystem/application-plugins/application-plugins.component.html","../../ecosystem/application-plugins/application-plugins.guard.ts","../../ecosystem/application-plugins/application-plugins.module.ts","../../ecosystem/application-plugins/c8y-ngx-components-ecosystem-application-plugins.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { IApplication } from '@c8y/client';\nimport { ApplicationState, EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n@Pipe({\n  name: 'appState',\n  pure: true\n})\nexport class AppStatePipe implements PipeTransform {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  transform(\n    app: IApplication,\n    arg: keyof ApplicationState\n  ): ApplicationState[keyof ApplicationState] {\n    const appState = this.ecosystemService.getAppState(app);\n    return appState[arg];\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { IApplication } from '@c8y/client';\nimport { UpdateType } from './apps-to-update-remotes-select.model';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  templateUrl: './apps-to-update-remotes-select.component.html'\n})\nexport class AppsToUpdateRemotesSelectComponent implements OnInit {\n  @Input() apps: IApplication[];\n  @Input() updateType: UpdateType;\n  @Input() pluginName: string;\n  @Input() appsDisabled: Set<IApplication['id']>;\n  filterTerm$: BehaviorSubject<string> = new BehaviorSubject('');\n  filteredApps$: Observable<IApplication[]> = new BehaviorSubject([]);\n  textConfig: {\n    header: string;\n    applyButton: string;\n  };\n  appsToUpdateRemotes: IApplication[] = [];\n  result: Promise<IApplication[]> = new Promise((resolve, reject) => {\n    this._update = resolve;\n    this._cancel = reject;\n  });\n  private _update: (apps: IApplication[]) => void;\n  private _cancel: (reason?: any) => void;\n\n  constructor(private bsModalRef: BsModalRef, private ecosystemService: EcosystemService) {}\n\n  ngOnInit(): void {\n    this.filteredApps$ = combineLatest([of(this.apps), this.filterTerm$]).pipe(\n      map(([apps, filterTerm]) =>\n        filterTerm.trim().length === 0\n          ? apps\n          : apps.filter((application: IApplication) =>\n              this.ecosystemService.filterContainString(application.name, filterTerm)\n            )\n      )\n    );\n    this.textConfig =\n      this.updateType === 'install'\n        ? {\n            header: gettext('Select applications to install the plugin to'),\n            applyButton: gettext('Install')\n          }\n        : {\n            header: gettext('Select applications to uninstall the plugin from'),\n            applyButton: gettext('Uninstall')\n          };\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setSelectedApps(selected: boolean, app: IApplication) {\n    selected\n      ? this.appsToUpdateRemotes.push(app)\n      : (this.appsToUpdateRemotes = this.appsToUpdateRemotes.filter(\n          application => app.key !== application.key\n        ));\n  }\n\n  async apply() {\n    this._update(this.appsToUpdateRemotes);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'c8y-modules'\"></i>\n    <div\n      class=\"modal-title h4\"\n      id=\"modal-title\"\n      translate\n    >\n      Custom applications\n    </div>\n  </div>\n  <div\n    class=\"inner-scroll\"\n    id=\"modal-body\"\n  >\n    <div class=\"p-16 text-center separator-bottom sticky-top bg-component\">\n      <p class=\"text-medium\">\n        {{ textConfig.header | translate }}\n      </p>\n      <c8y-filter (onSearch)=\"filterTerm$.next($event)\"></c8y-filter>\n    </div>\n    <c8y-list-group *ngIf=\"apps.length; else emptyList\">\n      <c8y-li\n        [ngClass]=\"{ disabled: updateType === 'install' && appsDisabled.has(app.id) }\"\n        *ngFor=\"let app of filteredApps$ | async\"\n      >\n        <c8y-li-checkbox (onSelect)=\"setSelectedApps($event, app)\"></c8y-li-checkbox>\n        <c8y-li-icon class=\"p-l-0 icon-32\">\n          <c8y-app-icon\n            class=\"list-group-icon\"\n            [app]=\"app\"\n            [contextPath]=\"app.contextPath\"\n            [name]=\"app.name\"\n          ></c8y-app-icon>\n        </c8y-li-icon>\n        <div class=\"d-flex\">\n          <div class=\"p-r-8\">\n            <p\n              class=\"text-medium\"\n              [innerText]=\"app | humanizeAppName | async\"\n            ></p>\n            <p class=\"small text-muted\">{{ app.description }}</p>\n          </div>\n          <span\n            class=\"label m-l-auto a-s-start\"\n            [ngClass]=\"app | appState: 'class'\"\n          >\n            {{ app | appState: 'label' | translate }}\n          </span>\n        </div>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n      (click)=\"cancel()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ textConfig.applyButton | translate }}\"\n      [disabled]=\"appsToUpdateRemotes.length === 0\"\n      (click)=\"apply()\"\n    >\n      {{ textConfig.applyButton | translate }}\n    </button>\n  </div>\n</div>\n<ng-template #emptyList>\n  <c8y-ui-empty-state\n    [icon]=\"'c8y-modules'\"\n    [title]=\"'No custom applications available.' | translate\"\n    [subtitle]=\"'No custom applications available.' | translate\"\n    [horizontal]=\"true\"\n  ></c8y-ui-empty-state>\n</ng-template>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApplicationPlugin } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-plugin-list-item',\n  templateUrl: './plugin-list-item.component.html'\n})\nexport class PluginListItemComponent {\n  @Input() plugin: ApplicationPlugin;\n  @Input() selectable: boolean;\n  @Output() isItemSelected: EventEmitter<boolean> = new EventEmitter();\n\n  onChange(event) {\n    this.isItemSelected.next(event);\n  }\n}\n","\n  <c8y-li-checkbox\n    (change)=\"onChange($event.target.checked)\"\n    *ngIf=\"selectable\"\n    [disabled]=\"plugin.installed\"\n    class=\"p-r-16 p-l-0\"\n  ></c8y-li-checkbox>\n  <c8y-li-icon class=\"p-l-0\">\n    <i class=\"c8y-plugin-icon\">\n      <span>{{ plugin.name?.substr(0, 2) }}</span>\n    </i>\n  </c8y-li-icon>\n  <div class=\"d-flex\">\n    <div [ngClass]=\"{'p-r-8' : selectable}\">\n      <p>\n        <span class=\"text-medium\">{{ plugin.name }}</span>\n        <em class=\"text-muted small m-l-8\">{{ plugin.version }}</em>\n        <span *ngIf=\"plugin.installed\">\n          <i [c8yIcon]=\"'check-circle'\" class=\"text-success\"></i>\n          <em class=\"text-muted small\" translate>Installed`plugins`</em>\n        </span>\n      </p>\n      <p class=\"small l-h-tight\">{{ plugin.description }}</p>\n    </div>\n    <span *ngIf=\"selectable\" class=\"label label-info m-l-auto a-s-start\">{{\n      plugin.contextPath\n    }}</span>\n  </div>\n     \n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApplicationRemotePlugins, ApplicationType, IApplication } from '@c8y/client';\nimport {\n  AlertService,\n  ApplicationPlugin,\n  GainsightService,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AppsToUpdateRemotesSelectComponent } from './apps-to-update-remotes-select.component';\nimport { UpdateType } from './apps-to-update-remotes-select.model';\n\n@Component({\n  selector: 'c8y-plugin-list',\n  templateUrl: './plugin-list.component.html'\n})\nexport class PluginListComponent {\n  CURRENT_LOCATION = location.href;\n\n  @Input() plugins$: Observable<ApplicationPlugin[]>;\n  @Input() emptyListText = '';\n  @Input() selectable: boolean;\n  /**\n   * Shows the install button for each plugin separately. Currently used in package-details view.\n   */\n  @Input() installable = false;\n  @Input() package: IApplication;\n  @Output() selectedItems: EventEmitter<ApplicationPlugin[]> = new EventEmitter();\n  remotePlugins$: BehaviorSubject<ApplicationRemotePlugins> = new BehaviorSubject({});\n  selectedPlugins: { [key: string]: ApplicationPlugin } = {};\n  updatingPluginId: Record<UpdateType, string> = { install: '', uninstall: '' };\n  appsDisabled: Set<IApplication['id']> = new Set<IApplication['id']>();\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private bsModalService: BsModalService,\n    private pluginsService: PluginsService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private gainsightService: GainsightService\n  ) {}\n\n  updateSelectedItems(selected: boolean, plugin: ApplicationPlugin) {\n    this.selectedPlugins[plugin.id] = selected ? plugin : undefined;\n    const onlyInstalledPlugins = Object.values(this.selectedPlugins).filter(Boolean);\n    this.selectedItems.emit(onlyInstalledPlugins);\n  }\n\n  async installPlugin(plugin: ApplicationPlugin) {\n    await this.updateAppRemotes(plugin, 'install');\n  }\n\n  async uninstallPlugin(plugin: ApplicationPlugin) {\n    this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n      component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n      action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.INSTALL_PLUGIN,\n      url: this.CURRENT_LOCATION\n    });\n    await this.updateAppRemotes(plugin, 'uninstall');\n  }\n\n  private async updateAppRemotes(plugin: ApplicationPlugin, updateType: UpdateType) {\n    this.updatingPluginId[updateType] = plugin?.id;\n    let initialState: Pick<\n      AppsToUpdateRemotesSelectComponent,\n      'apps' | 'updateType' | 'pluginName' | 'appsDisabled'\n    >;\n    try {\n      const apps = await this.getAppsForUpdate(plugin, updateType);\n      initialState = {\n        apps,\n        updateType,\n        pluginName: plugin.name,\n        appsDisabled: this.appsDisabled\n      };\n    } catch (e) {\n      this.alertService.addServerFailure(e);\n      this.updatingPluginId[updateType] = '';\n      return;\n    }\n\n    let selectedApps: IApplication[];\n    try {\n      selectedApps = await this.selectApps(initialState);\n      if (!selectedApps) {\n        this.updatingPluginId[updateType] = '';\n        return;\n      }\n    } catch {\n      // unreached\n    }\n\n    if (updateType === 'install') {\n      const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses([plugin]);\n      if (!licensesVerifiedByUser) {\n        this.updatingPluginId[updateType] = '';\n        return;\n      }\n    }\n\n    for (const app of selectedApps) {\n      try {\n        await this.handleRemotesUpdate(app, plugin, updateType);\n        const successText =\n          updateType === 'install'\n            ? this.translateService.instant(\n                gettext('Plugin installed to application \"{{ appName }}\".'),\n                {\n                  appName: app.name\n                }\n              )\n            : this.translateService.instant(\n                gettext('Plugin uninstalled from application \"{{ appName }}\".'),\n                { appName: app.name }\n              );\n        this.alertService.success(successText);\n        this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_INSTALLED,\n          url: this.CURRENT_LOCATION\n        });\n      } catch {\n        this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n          url: this.CURRENT_LOCATION\n        });\n      }\n    }\n    this.updatingPluginId[updateType] = '';\n  }\n\n  private async getAppsForUpdate(plugin: ApplicationPlugin, updateType: UpdateType) {\n    let apps = (await this.ecosystemService.getWebApplications()).filter(\n      app => this.ecosystemService.isOwner(app) && app.type !== ApplicationType.EXTERNAL\n    );\n\n    if (updateType === 'install') {\n      this.appsDisabled.clear();\n      for (const app of apps) {\n        if (await this.isPluginInstalledInApp(plugin, app)) {\n          this.appsDisabled.add(app.id);\n        }\n      }\n    }\n\n    if (updateType === 'uninstall') {\n      const installedApps: IApplication[] = [];\n      for (const app of apps) {\n        if (await this.isPluginInstalledInApp(plugin, app)) {\n          installedApps.push(app);\n        }\n      }\n      apps = installedApps;\n    }\n    return apps;\n  }\n\n  private async isPluginInstalledInApp(\n    plugin: ApplicationPlugin,\n    app: IApplication\n  ): Promise<boolean> {\n    const appRemotes = this.pluginsService.getMFRemotes(app) || {};\n    return Object.keys(appRemotes).some(\n      remote => this.getInstalledPluginContextPathWithoutVersion(remote) === plugin.contextPath\n    );\n  }\n\n  private getInstalledPluginContextPathWithoutVersion(remote: string) {\n    return remote.split('@')[0];\n  }\n\n  private async handleRemotesUpdate(\n    application: IApplication,\n    plugin: ApplicationPlugin,\n    updateType: UpdateType\n  ) {\n    try {\n      // When remotes object is not set in the configuration object of an application.\n      // Fallback to setInitialRemotes is triggered.\n      let updatedRemotes = await (updateType === 'install'\n        ? this.pluginsService.addRemotes(application, plugin)\n        : this.pluginsService.removeRemotes(application, this.getAllPluginsToRemove(plugin)));\n      if (!updatedRemotes) {\n        // TODO discuss if we need to handle it like that.\n        // Right now remotes from the cumulocity.json are taken into account when remotes object is missing in the configuration.\n        updatedRemotes = await this.pluginsService.setInitialRemotes(application);\n        // Fresh application MO is needed, after initial state was set.\n        const app = await this.ecosystemService.getApplication(application.id);\n        updatedRemotes = await this.pluginsService.addRemotes(app, plugin);\n      }\n      return this.emitRemotes(updatedRemotes);\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n      throw er;\n    }\n  }\n\n  private getAllPluginsToRemove(plugin: ApplicationPlugin): ApplicationPlugin[] {\n    return this.package.applicationVersions.map(av => ({\n      id: `${plugin.contextPath}@${av.version}/${plugin.module}`,\n      module: plugin.module,\n      path: plugin.path\n    }));\n  }\n\n  private emitRemotes(remotes: ApplicationRemotePlugins): ApplicationRemotePlugins {\n    this.remotePlugins$.next(remotes);\n    return { ...this.remotePlugins$.value };\n  }\n\n  private async selectApps(\n    initialState: Pick<\n      AppsToUpdateRemotesSelectComponent,\n      'apps' | 'updateType' | 'pluginName' | 'appsDisabled'\n    >\n  ): Promise<IApplication[]> {\n    try {\n      return await (\n        this.bsModalService.show(AppsToUpdateRemotesSelectComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState,\n          ignoreBackdropClick: true\n        }).content as AppsToUpdateRemotesSelectComponent\n      ).result;\n    } catch (er) {\n      return;\n    }\n  }\n}\n","<c8y-list-group class=\"bg-inherit\">\n  <ng-container *ngIf=\"(plugins$ | async)?.length !== 0; else emptyList\">\n    <ng-container *ngFor=\"let plugin of plugins$ | async\">\n      <c8y-li [ngClass]=\"{ disabled: plugin.installed }\" class=\"bg-inherit\">\n        <c8y-plugin-list-item\n          (isItemSelected)=\"updateSelectedItems($event, plugin)\"\n          [plugin]=\"plugin\"\n          [selectable]=\"selectable\"\n          class=\"d-flex\"\n        ></c8y-plugin-list-item>\n        <div class=\"p-l-40 m-t-4\">\n          <button\n            *ngIf=\"installable\"\n            (click)=\"uninstallPlugin(plugin)\"\n            [ngClass]=\"{ 'btn-pending': plugin.id === updatingPluginId.uninstall }\"\n            [disabled]=\"updatingPluginId.uninstall && plugin.id !== updatingPluginId.uninstall\"\n            class=\"btn btn-danger btn-sm m-l-4\"\n            title=\"{{ 'Uninstall plugin' | translate }}\"\n            translate\n          >\n            Uninstall plugin\n          </button>\n          <button\n            *ngIf=\"installable\"\n            (click)=\"installPlugin(plugin)\"\n            [ngClass]=\"{ 'btn-pending': plugin.id === updatingPluginId.install }\"\n            [disabled]=\"updatingPluginId.install && plugin.id !== updatingPluginId.install\"\n            class=\"btn btn-default btn-sm m-l-8\"\n            title=\"{{ 'Install plugin' | translate }}\"\n            translate\n          >\n            Install plugin\n          </button>\n        </div>\n      </c8y-li>\n    </ng-container>\n  </ng-container>\n</c8y-list-group>\n<ng-template #emptyList>\n  <div class=\"c8y-empty-state text-left\" *ngIf=\"emptyListText\">\n    <h1 c8yIcon=\"plugin\"></h1>\n    <p>\n      {{ emptyListText | translate }}\n    </p>\n  </div>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApplicationPlugin } from '@c8y/ngx-components';\n\n@Pipe({\n  name: 'onlyLatestPluginVersion'\n})\nexport class OnlyLatestPluginVersionPipe implements PipeTransform {\n  transform(\n    value: Observable<ApplicationPlugin[]>,\n    disabled?: boolean\n  ): Observable<ApplicationPlugin[]> {\n    if (disabled) {\n      return value;\n    }\n\n    return value.pipe(map(list => list.filter(plugin => !!plugin.tags?.includes('latest'))));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalService, ApplicationPlugin } from '@c8y/ngx-components';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { map } from 'rxjs/operators';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-install-plugin',\n  templateUrl: './install-plugin.component.html'\n})\nexport class InstallPluginComponent implements OnInit {\n  @Input() plugins$: BehaviorSubject<ApplicationPlugin[]>;\n  filterTerm$: BehaviorSubject<string> = new BehaviorSubject('');\n  filteredPlugins$: Observable<ApplicationPlugin[]> = new BehaviorSubject([]);\n  selectedPlugins: ApplicationPlugin[] = [];\n  result: Promise<ApplicationPlugin[]> = new Promise((resolve, reject) => {\n    this._install = resolve;\n    this._cancel = reject;\n  });\n  onlyLatestPluginVersion = true;\n  private _install;\n  private _cancel;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private modal: ModalService,\n    private ecosystemService: EcosystemService\n  ) {}\n\n  ngOnInit() {\n    this.filteredPlugins$ = combineLatest([this.plugins$, this.filterTerm$]).pipe(\n      map(([plugins, filterTerm]) =>\n        filterTerm.trim().length === 0\n          ? plugins\n          : plugins.filter((plugin: ApplicationPlugin) =>\n              this.ecosystemService.filterContainString(plugin.name, filterTerm)\n            )\n      )\n    );\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  install() {\n    this._install(this.selectedPlugins);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'plugin'\"></i>\n    <div id=\"modal-title\" class=\"modal-title h4\" translate>Available plugins</div>\n  </div>\n  <div class=\"p-t-8 p-16 text-center separator-bottom flex-no-shrink\">\n    <p class=\"text-medium m-b-8\" translate>Select the compatible plugins to install</p>\n    <label class=\"c8y-switch\">\n      <input type=\"checkbox\" [(ngModel)]=\"onlyLatestPluginVersion\" />\n      <span></span>\n      <span translate>Only latest version of plugins</span>\n    </label>\n    <c8y-filter (onSearch)=\"this.filterTerm$.next($event)\"></c8y-filter>\n  </div>\n  <div class=\"modal-inner-scroll\" id=\"modal-body\">\n    <c8y-plugin-list\n      (selectedItems)=\"selectedPlugins = $event\"\n      [emptyListText]=\"'No plugins available' | translate\"\n      [plugins$]=\"filteredPlugins$ | onlyLatestPluginVersion: !onlyLatestPluginVersion\"\n      [selectable]=\"true\"\n      class=\"m-t-16\"\n    ></c8y-plugin-list>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"cancel()\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      (click)=\"install()\"\n      [disabled]=\"selectedPlugins.length === 0\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Install' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Install' | translate }}\n      <span class=\"badge\" *ngIf=\"selectedPlugins.length as length\">{{ length }}</span>\n    </button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-label-cell-renderer',\n  templateUrl: './label-cell-renderer.component.html'\n})\nexport class LabelCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","<span class=\"label label-info\">{{ context.value }}</span>\n","import { Component } from '@angular/core';\nimport { ApplicationPluginStatus, CellRendererContext, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-orphaned-status-cell-renderer',\n  templateUrl: './orphaned-status-cell-renderer.component.html'\n})\nexport class OrphanedStatusCellRendererComponent {\n  label: { value: string; class: string; text: string } | null;\n  constructor(public context: CellRendererContext) {\n    this.label = this.getLabel(context.value);\n  }\n\n  private getLabel(statusValue: ApplicationPluginStatus): {\n    value: string;\n    class: string;\n    text: string;\n  } | null {\n    switch (statusValue) {\n      case ApplicationPluginStatus.OUTDATED:\n        return {\n          value: statusValue,\n          text: gettext('OUTDATED`plugin status`'),\n          class: 'label-warning'\n        };\n      case ApplicationPluginStatus.ORPHANED:\n        return {\n          value: statusValue,\n          text: gettext('ORPHANED`plugin status`'),\n          class: 'label-danger'\n        };\n      case ApplicationPluginStatus.REVOKED:\n        return {\n          value: statusValue,\n          text: gettext('REVOKED`plugin status`'),\n          class: 'label-danger'\n        };\n      case ApplicationPluginStatus.LATEST:\n        return {\n          value: statusValue,\n          text: gettext('LATEST`plugin status`'),\n          class: 'label-success'\n        };\n      default:\n        return null;\n    }\n  }\n}\n","<span\n  *ngIf=\"label\"\n  class=\"label\"\n  [ngClass]=\"label.class\"\n  [title]=\"label.text | translate\"\n>\n  {{ label.text | translate }}\n</span>\n","import { Component } from '@angular/core';\nimport { ApplicationRemotePlugins, IApplication, IApplicationVersion } from '@c8y/client';\nimport {\n  AlertService,\n  ApplicationPlugin,\n  GainsightService,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { uniq } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-update-plugin-of-app',\n  templateUrl: './update-plugin-of-app.component.html'\n})\nexport class UpdatePluginOfAppComponent {\n  CURRENT_LOCATION = location.href;\n\n  app: IApplication;\n  plugin: ApplicationPlugin;\n  downgrade: boolean;\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._install = resolve;\n    this._cancel = reject;\n  });\n  applicationVersion: IApplicationVersion;\n  updateAll = true;\n\n  private _install: () => void;\n  private _cancel: (reason?: any) => void;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private pluginsService: PluginsService,\n    private alert: AlertService,\n    private ecosystemService: EcosystemService,\n    private gainsightService: GainsightService\n  ) {}\n\n  async update() {\n    const remotes = this.pluginsService.getMFRemotes(this.app);\n    const oldRemotePath = `${this.plugin.contextPath}@${this.plugin.version}`;\n    const newRemotePath = `${this.plugin.contextPath}@${this.applicationVersion.version}`;\n    let oldRemoteModules = [...(remotes[oldRemotePath] || [])];\n    if (!oldRemoteModules.length) {\n      this.alert.warning(gettext('Could not change the version of plugin.'));\n      this.cancel();\n      return;\n    }\n\n    const result = await this.ecosystemService.verifyLicenses([this.plugin]);\n    if (!result) {\n      this.alert.warning(gettext('Plugin update aborted by user.'));\n      this.cancel();\n      return;\n    }\n\n    let remoteModulesOfNewVersion = [...(remotes[newRemotePath] || [])];\n    let olderVersions: ApplicationRemotePlugins = {};\n    if (this.updateAll) {\n      olderVersions = Object.keys(remotes)\n        .filter(key => key.startsWith(`${this.plugin.contextPath}@`))\n        .reduceRight((prev, curr) => {\n          prev[curr] = undefined;\n          return prev;\n        }, {});\n\n      oldRemoteModules = Object.keys(olderVersions)\n        .map(version => remotes[version])\n        .reduceRight((prev, curr) => {\n          prev.push(...curr);\n          return prev;\n        }, []);\n      remoteModulesOfNewVersion.push(...oldRemoteModules);\n    } else {\n      remoteModulesOfNewVersion.push(this.plugin.module);\n      olderVersions[oldRemotePath] = oldRemoteModules.filter(\n        module => module !== this.plugin.module\n      );\n      if (!olderVersions[oldRemotePath].length) {\n        olderVersions[oldRemotePath] = undefined;\n      }\n    }\n\n    remoteModulesOfNewVersion = uniq(remoteModulesOfNewVersion);\n    const newRemotes: ApplicationRemotePlugins = {\n      ...remotes,\n      ...olderVersions,\n      [newRemotePath]: remoteModulesOfNewVersion\n    };\n\n    try {\n      await this.pluginsService.updateRemotesInAppConfig(this.app, newRemotes);\n      this.alert.success(gettext(`Switched the version of plugin.`));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.UPDATE_PLUGIN_OF_APP,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.CHANGE_PLUGIN_VERSION,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_VERSION_CHANGED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (e) {\n      this.alert.addServerFailure(e);\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.UPDATE_PLUGIN_OF_APP,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.CHANGE_PLUGIN_VERSION,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n        url: this.CURRENT_LOCATION\n      });\n    }\n\n    this.bsModalRef.hide();\n    this._install();\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'c8y-modules'\"></i>\n    <h4 *ngIf=\"!downgrade\" id=\"modal-title\" translate>Update plugin</h4>\n    <h4 *ngIf=\"downgrade\" id=\"modal-title\" translate>Downgrade plugin</h4>\n  </div>\n  <div class=\"inner-scroll\" id=\"modal-body\">\n    <div class=\"p-16\">\n      <div class=\"d-block fit-w bg-gray-white\">\n        <c8y-package-version-select\n          [packageContextPath]=\"plugin?.contextPath\"\n          [(ngModel)]=\"applicationVersion\"\n        ></c8y-package-version-select>\n        <div\n          *ngIf=\"plugin?.version && plugin.version === applicationVersion?.version\"\n          class=\"alert alert-info\"\n          role=\"alert\"\n        >\n          <span translate ngNonBindable [translateParams]=\"applicationVersion\">\n            Select another version, as {{ version }} is currently used.\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"c8y-checkbox\">\n          <input [(ngModel)]=\"updateAll\" type=\"checkbox\" />\n          <span></span>\n          <span translate ngNonBindable [translateParams]=\"plugin\">\n            Set version for all plugins using the same context path \"{{ contextPath }}\".\n          </span>\n        </label>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n      (click)=\"cancel()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ 'Set version' | translate }}\"\n      [disabled]=\"!applicationVersion || plugin?.version === applicationVersion?.version\"\n      (click)=\"update()\"\n    >\n      {{ 'Set version' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApplicationRemotePlugins, IApplication } from '@c8y/client';\nimport {\n  ActionControl,\n  AlertService,\n  ApplicationPlugin,\n  ApplicationPluginStatus,\n  BulkActionControl,\n  Column,\n  DataGridComponent,\n  DisplayOptions,\n  GainsightService,\n  HeaderActionControl,\n  Pagination,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { InstallPluginComponent } from './install-plugin.component';\nimport { LabelCellRendererComponent } from './label-cell-renderer.component';\nimport { OrphanedStatusCellRendererComponent } from './orphaned-status-cell-renderer.component';\nimport { UpdatePluginOfAppComponent } from './update-plugin-of-app/update-plugin-of-app.component';\n\n@Component({\n  selector: 'c8y-app-plugins',\n  templateUrl: './application-plugins.component.html'\n})\nexport class ApplicationPluginsComponent implements OnInit, OnDestroy {\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  CURRENT_LOCATION = location.href;\n\n  @Input() appId: string | number;\n  @ViewChild(DataGridComponent, { static: false })\n  dataGrid: DataGridComponent;\n\n  exportedPlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n  remotePlugins$: BehaviorSubject<ApplicationRemotePlugins> = new BehaviorSubject({});\n  allAvailablePlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n\n  installedPlugins$: Observable<ApplicationPlugin[]> = combineLatest([\n    this.remotePlugins$.pipe(map(remotes => this.convertInstalledRemotesToIds(remotes))),\n    this.allAvailablePlugins$\n  ]).pipe(\n    map(([remotePlugins, allPlugins]) => this.getInstalledPlugins(allPlugins, remotePlugins)),\n    shareReplay(1)\n  );\n  orphanedPlugins$ = this.installedPlugins$.pipe(\n    map(plugins => plugins.filter(p => p.status === ApplicationPluginStatus.ORPHANED))\n  );\n  app: IApplication;\n  isLoading: boolean;\n  title: string = gettext('Installed plugins');\n  loadMoreItemsLabel: string = gettext('Load more packages');\n  loadingItemsLabel: string = gettext('Loading packages…');\n  actionControls: ActionControl[] = this.getActionControls();\n  bulkActionControls: BulkActionControl[] = this.getBulkActionControls();\n  headerActionControls: HeaderActionControl[] = [];\n  pagination: Pagination = {\n    pageSize: 10,\n    currentPage: 1\n  };\n  displayOptions: DisplayOptions = {\n    bordered: false,\n    striped: true,\n    filter: true,\n    gridHeader: true\n  };\n  columns: Column[] = [\n    {\n      name: 'name',\n      header: gettext('Plugin name'),\n      path: 'name',\n      filterable: true\n    },\n    {\n      name: 'Version',\n      header: gettext('Version'),\n      path: 'displayVersion',\n      filterable: false\n    },\n    {\n      name: 'description',\n      header: gettext('Description'),\n      path: 'description',\n      filterable: false,\n      cellCSSClassName: 'small'\n    },\n    {\n      name: 'contextPath',\n      header: gettext('Source'),\n      path: 'contextPath',\n      filterable: false,\n      cellRendererComponent: LabelCellRendererComponent\n    },\n    {\n      name: 'status',\n      header: gettext('Status'),\n      path: 'status',\n      filterable: false,\n      cellRendererComponent: OrphanedStatusCellRendererComponent\n    }\n  ];\n  private destroy$: Subject<any> = new Subject();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private ecosystemService: EcosystemService,\n    private bsModalService: BsModalService,\n    private pluginsService: PluginsService,\n    private alertService: AlertService,\n    private gainsightService: GainsightService\n  ) {}\n\n  ngOnInit() {\n    this.addInstallButtonToHeaderActionControls();\n    this.loadData();\n  }\n\n  async loadData() {\n    this.isLoading = true;\n    await this.getApplicationMO();\n    await this.getApplicationMFExports(this.app);\n    await this.getApplicationMFRemotes(this.app);\n    await this.getAllApplicationsMFExports();\n    this.isLoading = false;\n  }\n\n  async installPlugins() {\n    try {\n      const pluginsToAdd: ApplicationPlugin[] =\n        await this.bsModalService.show<InstallPluginComponent>(InstallPluginComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState: this.getInstallModalInitState(),\n          ignoreBackdropClick: true\n        }).content.result;\n\n      const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses(pluginsToAdd);\n      if (!licensesVerifiedByUser) {\n        return;\n      }\n      const verifyVersionCompatibility =\n        await this.ecosystemService.verifyPluginVersionsCompatibility(pluginsToAdd, this.app);\n\n      if (!verifyVersionCompatibility) {\n        return;\n      }\n\n      this.isLoading = true;\n      await this.handleRemotesInstallation(pluginsToAdd);\n\n      this.alertService.success(gettext('Plugins installed.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_INSTALLED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (ex) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n        this.gainsightService.triggerEvent(\n          PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS,\n          {\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n            url: this.CURRENT_LOCATION\n          }\n        );\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async removePlugins(plugins: string[]) {\n    try {\n      this.isLoading = true;\n      const updatedRemotes = await this.pluginsService.removeRemotes(\n        this.app,\n        plugins.map(id => ({ id } as ApplicationPlugin))\n      );\n      this.emitRemotes(updatedRemotes);\n\n      this.isLoading = false;\n      this.dataGrid.cancel();\n      this.alertService.success(gettext('Plugins removed.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_REMOVED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (ex) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n        this.gainsightService.triggerEvent(\n          PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS,\n          {\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n            url: this.CURRENT_LOCATION\n          }\n        );\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async cleanupOrphanedPlugins(plugins: ApplicationPlugin[]) {\n    const pluginIds = plugins.map(p => p.id);\n    await this.removePlugins(pluginIds);\n  }\n\n  getActionControls(): ActionControl[] {\n    return [\n      {\n        type: 'customUpdate',\n        text: gettext('Update'),\n        icon: 'caret-square-o-up',\n        showIf: plugin => {\n          return (\n            plugin.status === ApplicationPluginStatus.OUTDATED ||\n            plugin.status === ApplicationPluginStatus.REVOKED\n          );\n        },\n        callback: plugin => this.updatePlugin(this.app, plugin as ApplicationPlugin)\n      },\n      {\n        type: 'customDowngrade',\n        text: gettext('Downgrade'),\n        icon: 'caret-square-o-down',\n        showIf: plugin => {\n          return plugin.status === ApplicationPluginStatus.LATEST;\n        },\n        callback: plugin => this.updatePlugin(this.app, plugin as ApplicationPlugin, true)\n      }\n    ];\n  }\n\n  getBulkActionControls(): BulkActionControl[] {\n    return [\n      {\n        type: 'customDelete',\n        text: gettext('Remove'),\n        icon: 'trash',\n        callback: plugins => this.removePlugins(plugins)\n      }\n    ];\n  }\n\n  async updatePlugin(app: IApplication, plugin: ApplicationPlugin, downgrade = false) {\n    try {\n      await (\n        this.bsModalService.show(UpdatePluginOfAppComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState: {\n            app,\n            plugin,\n            downgrade\n          },\n          ignoreBackdropClick: true\n        }).content as UpdatePluginOfAppComponent\n      ).result;\n      this.refresh();\n    } catch (er) {\n      return;\n    }\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private addInstallButtonToHeaderActionControls() {\n    if (this.appId) {\n      this.headerActionControls = [\n        {\n          text: gettext('Install plugins'),\n          callback: () => {\n            this.installPlugins();\n          },\n          icon: 'plus-circle',\n          type: 'custom'\n        }\n      ];\n    }\n  }\n\n  private async handleRemotesInstallation(plugins: ApplicationPlugin[]) {\n    // When remotes object is not set in the configuration object of an application.\n    // Fallback to setInitialRemotes is triggered.\n    let updatedRemotes = await this.pluginsService.addRemotes(this.app, plugins);\n\n    if (!updatedRemotes) {\n      // TODO discuss if we need to handle it like that.\n      // Right now remotes from the cumulocity.json are taken into account when remotes object is missing in the configuration.\n      updatedRemotes = await this.pluginsService.setInitialRemotes(this.app);\n      // Fresh application MO is needed, after initial state was set.\n      await this.getApplicationMO();\n      updatedRemotes = await this.pluginsService.addRemotes(this.app, plugins);\n    }\n    return this.emitRemotes(updatedRemotes);\n  }\n\n  private emitRemotes(updatedRemotes: ApplicationRemotePlugins) {\n    this.remotePlugins$.next(updatedRemotes);\n    this.app.config.remotes = updatedRemotes;\n    return { ...this.remotePlugins$.value };\n  }\n\n  private async getApplicationMO(): Promise<IApplication> {\n    let id = this.appId;\n    if (!id) {\n      const { id: routeId } = this.activatedRoute.snapshot.parent.data.contextData;\n      id = routeId;\n    }\n\n    try {\n      this.app = await this.ecosystemService.getApplication(id);\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n    }\n    return this.app;\n  }\n\n  private async getApplicationMFExports(app: IApplication) {\n    const exports = this.pluginsService.getMFExports(app);\n    this.exportedPlugins$.next(exports);\n  }\n\n  private async getApplicationMFRemotes(app: IApplication) {\n    let appConfigRemotes = this.pluginsService.getMFRemotes(app);\n\n    if (!appConfigRemotes) {\n      appConfigRemotes = await this.pluginsService.setInitialRemotes(app);\n      this.app = await this.getApplicationMO();\n    }\n    this.remotePlugins$.next(appConfigRemotes || {});\n  }\n\n  private async getAllApplicationsMFExports() {\n    const allAppsMFExports = await this.pluginsService.getAllMFExports(true);\n    this.allAvailablePlugins$.next(allAppsMFExports);\n  }\n\n  private getInstallModalInitState(): any {\n    return {\n      plugins$: combineLatest([\n        this.allAvailablePlugins$,\n        this.installedPlugins$.pipe(map(plugins => plugins.map(p => p.id))),\n        this.exportedPlugins$.pipe(map(plugins => plugins.map(p => p.id)))\n      ]).pipe(\n        map(([allPlugins, installedPlugins, exportedPluginNames]) => {\n          const plugins = [];\n          allPlugins\n            .filter(p => !exportedPluginNames.includes(p.id))\n            .map(p => plugins.push({ ...p, installed: !!installedPlugins.includes(p.id) }));\n          return plugins;\n        }),\n        shareReplay(1)\n      )\n    };\n  }\n\n  private convertInstalledRemotesToIds(remotes: ApplicationRemotePlugins): string[] {\n    if (!remotes) {\n      return;\n    }\n    const importContextPaths = Object.keys(remotes);\n    const plugins = [];\n    importContextPaths.forEach(contextPath => {\n      const moduleNames = remotes[contextPath];\n      plugins.push(...moduleNames.map(module => this.createId(contextPath, module)));\n    });\n    return plugins;\n  }\n\n  private createId(contextPath: string, pluginModuleName: string): string {\n    return `${contextPath}/${pluginModuleName}`;\n  }\n\n  private getOrphanedPlugins(\n    orphanedPluginIds: string[],\n    allPlugins: ApplicationPlugin[]\n  ): ApplicationPlugin[] {\n    const orphanedPlugins: ApplicationPlugin[] = orphanedPluginIds.map(p => this.extractDetails(p));\n    const orphanedPluginsUpdated = orphanedPlugins.map(p => {\n      const pluginInDifferentVersion = allPlugins.find(\n        tmp => tmp.contextPath === p.contextPath && tmp.module === p.module\n      );\n      if (pluginInDifferentVersion) {\n        return {\n          ...pluginInDifferentVersion,\n          version: p.version || pluginInDifferentVersion.version,\n          id: p.id,\n          status: p.version ? ApplicationPluginStatus.OUTDATED : ApplicationPluginStatus.LATEST\n        };\n      }\n      return p;\n    });\n\n    return orphanedPluginsUpdated;\n  }\n\n  private splitOrphanedPluginsIntoOrphanedAndRevokedPlugins(\n    allPlugins: ApplicationPlugin[],\n    orphanedPlugins: ApplicationPlugin[]\n  ) {\n    const revokedPlugins = new Array<ApplicationPlugin>();\n    const actuallyOrphanedPlugins = new Array<ApplicationPlugin>();\n\n    for (const plugin of orphanedPlugins) {\n      const foundFamiliarPlugin = allPlugins.find(\n        plugin1 => plugin.contextPath === plugin1.contextPath && plugin.module === plugin1.module\n      );\n      if (foundFamiliarPlugin) {\n        revokedPlugins.push(\n          Object.assign({}, foundFamiliarPlugin, plugin, {\n            status: ApplicationPluginStatus.REVOKED\n          })\n        );\n      } else {\n        actuallyOrphanedPlugins.push(plugin);\n      }\n    }\n\n    return { revokedPlugins, actuallyOrphanedPlugins };\n  }\n\n  private getInstalledPlugins(\n    allPlugins: ApplicationPlugin[],\n    remotePlugins: string[]\n  ): ApplicationPlugin[] {\n    const availablePlugins = allPlugins\n      .filter(plugin => remotePlugins.includes(plugin.id))\n      .map(plugin =>\n        Object.assign(plugin, {\n          status: plugin.tags?.includes('latest')\n            ? ApplicationPluginStatus.LATEST\n            : ApplicationPluginStatus.OUTDATED\n        })\n      );\n    const orphanedPluginIds = remotePlugins.filter(\n      r => !availablePlugins.find(plugin => plugin.id === r)\n    );\n    const orphanedPlugins: ApplicationPlugin[] = this.getOrphanedPlugins(\n      orphanedPluginIds,\n      allPlugins\n    );\n\n    const { actuallyOrphanedPlugins, revokedPlugins } =\n      this.splitOrphanedPluginsIntoOrphanedAndRevokedPlugins(allPlugins, orphanedPlugins);\n\n    return [...availablePlugins, ...revokedPlugins, ...actuallyOrphanedPlugins].map(plugin => ({\n      ...plugin,\n      // adding 'v' prefix so version string is not treated as date in data grid\n      displayVersion: 'v' + plugin.version\n    }));\n  }\n\n  private extractDetails(pluginId: string): ApplicationPlugin {\n    const contextPath = this.getStringMatchingRegex(pluginId, /^[^@]*(@|\\/)/);\n    const version = this.getStringMatchingRegex(pluginId, /@.*\\//);\n    const module = this.getStringMatchingRegex(pluginId, /\\/.*$/);\n    const unavailable = gettext('unavailable`plugin`');\n    return {\n      id: pluginId,\n      path: '',\n      module,\n      name: module,\n      status: ApplicationPluginStatus.ORPHANED,\n      contextPath: contextPath,\n      description: unavailable,\n      version: version\n    };\n  }\n\n  private getStringMatchingRegex(\n    str: string,\n    regex: { [Symbol.match](string: string): RegExpMatchArray | null }\n  ): string {\n    const matches = str.match(regex);\n    const value = matches ? matches[0] : '';\n\n    return value.replace(/(@|\\/)/g, '');\n  }\n}\n","<c8y-title>{{ app | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications/application'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"app | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Plugins' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    (click)=\"installPlugins()\"\n    [ngClass]=\"{ 'btn-pending': isLoading }\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Install plugins' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Install plugins' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<ng-container *ngIf=\"orphanedPlugins$ | async as orphanedPlugins\">\n  <c8y-action-bar-item *ngIf=\"orphanedPlugins?.length\" [placement]=\"'right'\">\n    <button\n      (click)=\"cleanupOrphanedPlugins(orphanedPlugins)\"\n      [ngClass]=\"{ 'btn-pending': isLoading }\"\n      class=\"btn btn-link\"\n      title=\"{{ 'Clean up orphaned plugins' | translate }}\"\n    >\n      <i c8yIcon=\"erase\"></i>\n      {{ 'Clean up orphaned plugins' | translate }}\n    </button>\n  </c8y-action-bar-item>\n</ng-container>\n\n<div class=\"content-fullpage d-flex d-col border-top\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [rows]=\"installedPlugins$ | async\"\n    [pagination]=\"pagination\"\n    [selectable]=\"true\"\n    [actionControls]=\"actionControls\"\n    [bulkActionControls]=\"bulkActionControls\"\n    [headerActionControls]=\"headerActionControls\"\n    (onReload)=\"refresh()\"\n    class=\"d-contents\"\n  >\n    <!-- No search/filtered results empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"(installedPlugins$ | async)?.length\"\n      [icon]=\"'search'\"\n      [title]=\"'No plugins to display.' | translate\"\n      [subtitle]=\"'Refine your search terms or check your spelling.' | translate\"\n      [horizontal]=\"true\"\n    >\n    </c8y-ui-empty-state>\n    <!-- No installed plugins empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"!(installedPlugins$ | async)?.length && !isLoading\"\n      [icon]=\"'plugin'\"\n      [title]=\"'No plugins installed.' | translate\"\n      [subtitle]=\"'This application doesn\\'t have any plugin. Click below to install.' | translate\"\n      [horizontal]=\"true\"\n    >\n      <div class=\"fit-w p-t-16\">\n        <button\n          c8yProductExperience\n          [actionName]=\"PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS\"\n          [actionData]=\"{\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.INSTALL_PLUGINS,\n            url: CURRENT_LOCATION\n          }\"\n          (click)=\"installPlugins()\"\n          [ngClass]=\"{ 'btn-pending': isLoading }\"\n          class=\"btn btn-primary btn-sm\"\n          title=\"{{ 'Install plugins' | translate }}\"\n          translate\n        >\n          Install plugins\n        </button>\n      </div>\n    </c8y-ui-empty-state>\n  </c8y-data-grid>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { ApplicationType } from '@c8y/client';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Injectable()\nexport class ApplicationPluginsGuard implements CanActivate {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const app = route.data.contextData || route.parent.data.contextData;\n    if (!app) {\n      return false;\n    }\n    return (\n      app.type === ApplicationType.HOSTED &&\n      this.ecosystemService.isOwner(app) &&\n      !this.ecosystemService.isPackage(app)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { SharedEcosystemModule } from '@c8y/ngx-components/ecosystem/shared';\nimport { ApplicationPluginsComponent } from './application-plugins.component';\nimport { UpdatePluginOfAppComponent } from './update-plugin-of-app/update-plugin-of-app.component';\nimport { AppStatePipe } from './appState.pipe';\nimport { AppsToUpdateRemotesSelectComponent } from './apps-to-update-remotes-select.component';\nimport { InstallPluginComponent } from './install-plugin.component';\nimport { OrphanedStatusCellRendererComponent } from './orphaned-status-cell-renderer.component';\nimport { PluginListItemComponent } from './plugin-list-item.component';\nimport { PluginListComponent } from './plugin-list.component';\nimport { LabelCellRendererComponent } from './label-cell-renderer.component';\nimport { gettext, hookRoute, ViewContext } from '@c8y/ngx-components';\nimport { ApplicationPluginsGuard } from './application-plugins.guard';\nimport { OnlyLatestPluginVersionPipe } from './only-latest-plugin-version.pipe';\n\n@NgModule({\n  imports: [CoreModule, SharedEcosystemModule],\n  declarations: [\n    ApplicationPluginsComponent,\n    PluginListItemComponent,\n    InstallPluginComponent,\n    PluginListComponent,\n    AppsToUpdateRemotesSelectComponent,\n    AppStatePipe,\n    LabelCellRendererComponent,\n    OrphanedStatusCellRendererComponent,\n    UpdatePluginOfAppComponent,\n    OnlyLatestPluginVersionPipe\n  ],\n  exports: [\n    ApplicationPluginsComponent,\n    PluginListItemComponent,\n    InstallPluginComponent,\n    PluginListComponent,\n    AppsToUpdateRemotesSelectComponent,\n    AppStatePipe,\n    LabelCellRendererComponent,\n    OrphanedStatusCellRendererComponent,\n    UpdatePluginOfAppComponent\n  ],\n  providers: [\n    ApplicationPluginsGuard,\n    hookRoute([\n      {\n        path: 'plugins',\n        component: ApplicationPluginsComponent,\n        icon: 'plugin',\n        label: gettext('Plugins'),\n        context: ViewContext.Application,\n        priority: 3,\n        canActivate: [ApplicationPluginsGuard]\n      }\n    ])\n  ]\n})\nexport class ApplicationPluginsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2","i4","i5.AppStatePipe","i6.PluginListItemComponent","i3","i5","i6.PluginListComponent","i7.OnlyLatestPluginVersionPipe"],"mappings":"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"}