{"version":3,"file":"c8y-ngx-components-ecosystem.mjs","sources":["../../ecosystem/activity-log/activity-log.component.ts","../../ecosystem/activity-log/activity-log.component.html","../../ecosystem/application-properties/subscription-modal/subscription-modal.component.ts","../../ecosystem/application-properties/subscription-modal/subscription-modal.component.html","../../ecosystem/application-properties/update-application-modal/update-application-modal.component.ts","../../ecosystem/application-properties/update-application-modal/update-application-modal.component.html","../../ecosystem/application-properties/application-properties.component.ts","../../ecosystem/application-properties/application-properties.component.html","../../ecosystem/application-properties/application-properties.guard.ts","../../ecosystem/applications/add-external-applicaiton/add-external-application.component.ts","../../ecosystem/applications/add-external-applicaiton/add-external-application.component.html","../../ecosystem/applications/add-web-application/add-web-application.component.ts","../../ecosystem/applications/application-list/application-list.component.ts","../../ecosystem/applications/application-list/application-list.component.html","../../ecosystem/applications/install-from-package/install-from-package.component.ts","../../ecosystem/applications/install-from-package/install-from-package.component.html","../../ecosystem/ecosystem-navigation.factory.ts","../../ecosystem/ecosystem-tabs.factory.ts","../../ecosystem/features/feature-list.component.ts","../../ecosystem/features/feature-list.component.html","../../ecosystem/microservices/add-microservice.component.ts","../../ecosystem/microservices/microservice-list.component.ts","../../ecosystem/microservices/microservice-list.component.html","../../ecosystem/packages/package-availability.service.ts","../../ecosystem/packages/add-package.component.ts","../../ecosystem/packages/deploy-application/deploy-application.component.ts","../../ecosystem/packages/deploy-application/deploy-application.component.html","../../ecosystem/application-plugins/appState.pipe.ts","../../ecosystem/application-plugins/apps-to-update-remotes-select.component.ts","../../ecosystem/application-plugins/apps-to-update-remotes-select.component.html","../../ecosystem/application-plugins/plugin-list-item.component.ts","../../ecosystem/application-plugins/plugin-list-item.component.html","../../ecosystem/application-plugins/plugin-list.component.ts","../../ecosystem/application-plugins/plugin-list.component.html","../../ecosystem/packages/package-details/package-details.component.ts","../../ecosystem/packages/package-details/package-details.component.html","../../ecosystem/packages/package-list/packages-list.component.ts","../../ecosystem/packages/package-list/packages-list.component.html","../../ecosystem/packages/package-versions/package-contents/contents-plugins/contents-plugins.component.ts","../../ecosystem/packages/package-versions/package-contents/contents-plugins/contents-plugins.component.html","../../ecosystem/packages/package-versions/package-contents/contents-apps/contents-apps.component.ts","../../ecosystem/packages/package-versions/package-contents/contents-apps/contents-apps.component.html","../../ecosystem/packages/package-versions/package-contents/packages-contents.component.ts","../../ecosystem/packages/package-versions/package-contents/packages-contents.component.html","../../ecosystem/packages/package-versions/package-versions-list/package-versions-list.component.ts","../../ecosystem/packages/package-versions/package-versions-list/package-versions-list.component.html","../../ecosystem/packages/package-versions/packages-versions.component.ts","../../ecosystem/packages/package-versions/packages-versions.component.html","../../ecosystem/packages/package.guard.ts","../../ecosystem/packages/package-versions.guard.ts","../../ecosystem/application-plugins/only-latest-plugin-version.pipe.ts","../../ecosystem/application-plugins/install-plugin.component.ts","../../ecosystem/application-plugins/install-plugin.component.html","../../ecosystem/application-plugins/label-cell-renderer.component.ts","../../ecosystem/application-plugins/label-cell-renderer.component.html","../../ecosystem/application-plugins/orphaned-status-cell-renderer.component.ts","../../ecosystem/application-plugins/orphaned-status-cell-renderer.component.html","../../ecosystem/application-plugins/update-plugin-of-app/update-plugin-of-app.component.ts","../../ecosystem/application-plugins/update-plugin-of-app/update-plugin-of-app.component.html","../../ecosystem/application-plugins/application-plugins.component.ts","../../ecosystem/application-plugins/application-plugins.component.html","../../ecosystem/application-plugins/application-plugins.guard.ts","../../ecosystem/application-plugins/application-plugins.module.ts","../../ecosystem/ecosystem.module.ts","../../ecosystem/c8y-ngx-components-ecosystem.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { IApplication, IApplicationBinary } from '@c8y/client';\nimport { AlertService } from '@c8y/ngx-components';\nimport { BehaviorSubject } from 'rxjs';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-activity-log',\n  templateUrl: './activity-log.component.html'\n})\nexport class ActivityLogComponent implements OnInit {\n  @Input() application: IApplication;\n  @Input() hasAdminPermissions = false;\n  archives: IApplicationBinary[] = [];\n  toActivateVersionId: string;\n  last: IApplicationBinary;\n  isLoading: boolean;\n  canReactivate = false;\n\n  constructor(private ecosystemService: EcosystemService, private alertService: AlertService) {}\n\n  get uploadProgress(): BehaviorSubject<number> {\n    return this.ecosystemService.progress;\n  }\n\n  async ngOnInit() {\n    this.canReactivate = this.showReactivate();\n    this.refresh();\n  }\n\n  isActive(archive: IApplicationBinary): boolean {\n    return this.application.activeVersionId === archive.id;\n  }\n\n  toActivate(archive: IApplicationBinary): boolean {\n    return this.toActivateVersionId === archive.id;\n  }\n\n  checkIfLast(archive: IApplicationBinary): boolean {\n    return archive.id === this.last.id;\n  }\n\n  showReactivate(): boolean {\n    return this.ecosystemService.isApplication(this.application);\n  }\n\n  async setActive(archive): Promise<void> {\n    const id = archive.id || archive;\n    this.toActivateVersionId = id;\n    this.isLoading = true;\n    try {\n      this.application = (\n        await this.ecosystemService.setAppActiveVersion(this.application, id)\n      ).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    this.isLoading = false;\n    this.refresh();\n  }\n\n  async deleteArchive(archive: IApplicationBinary): Promise<void> {\n    await this.ecosystemService.deleteArchive(archive, this.application);\n    this.refresh();\n  }\n\n  async downloadArchive(archive: IApplicationBinary): Promise<void> {\n    await this.ecosystemService.downloadArchive(this.application, archive);\n  }\n\n  async reactivateArchive(): Promise<void> {\n    await this.ecosystemService.reactivateArchive(this.application);\n  }\n\n  async onRefresh() {\n    await this.refresh();\n  }\n\n  private async refresh(): Promise<void> {\n    this.isLoading = true;\n    this.archives = await this.ecosystemService.listArchives(this.application.id);\n    if (this.application.manifest?.package === 'blueprint') {\n      // filter out entries without description because using them as active may break application's\n      //  manifest (changing isPackage property of deployed app to 'true')\n      this.archives = this.archives.filter((archive: IApplicationBinary) => !!archive.description);\n    }\n    this.archives.sort((a, b) => {\n      return (new Date(b.created) as any) - (new Date(a.created) as any);\n    });\n    this.last = this.archives[this.archives.length - 1];\n    this.isLoading = false;\n  }\n}\n","<div class=\"inner-scroll bg-level-1 flex-grow\">\n  <div class=\"card-block overflow-visible\">\n    <c8y-list-group>\n      <c8y-li-timeline *ngFor=\"let archive of archives\" [ngClass]=\"{ active: isActive(archive) }\">\n        {{ archive.created | date: 'd MMM YYYY' }}\n        {{ archive.created | date: 'shortTime' }}\n        <c8y-li>\n          <c8y-li-icon\n            [icon]=\"checkIfLast(archive) ? 'flag-checkered' : 'file-zip-o'\"\n          ></c8y-li-icon>\n          <c8y-li-body>\n            <div class=\"d-flex a-i-start\">\n              <div style=\"min-width: 0; flex: 1\">\n                <span class=\"text-truncate-wrap\" title=\" {{ archive.description || archive.name }}\">\n                  {{ archive.description || archive.name }}\n                </span>\n                <small *ngIf=\"archive.description\" class=\"text-muted\">{{\n                  archive.description\n                }}</small>\n              </div>\n              <i\n                *ngIf=\"isLoading && toActivate(archive)\"\n                [c8yIcon]=\"'circle-o-notch'\"\n                class=\"icon-spin\"\n                title=\"{{ 'Activating' | translate }}\"\n              ></i>\n\n              <span *ngIf=\"isActive(archive)\" class=\"label label-primary m-l-auto m-t-4\">{{\n                'Active' | translate\n              }}</span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-action\n            (click)=\"setActive(archive)\"\n            *ngIf=\"hasAdminPermissions && !isLoading && !isActive(archive)\"\n            icon=\"check-square-o\"\n          >\n            {{ 'Set as active`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action (click)=\"downloadArchive(archive)\" icon=\"download\">\n            {{ 'Download`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"deleteArchive(archive)\"\n            *ngIf=\"\n              hasAdminPermissions &&\n              archives.length > 1 &&\n              !checkIfLast(archive) &&\n              !isActive(archive)\n            \"\n            icon=\"delete\"\n          >\n            {{ 'Delete`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"reactivateArchive()\"\n            *ngIf=\"hasAdminPermissions && canReactivate && isActive(archive)\"\n            icon=\"undo\"\n          >\n            {{ 'Reactivate archive' | translate }}\n          </c8y-li-action>\n        </c8y-li>\n      </c8y-li-timeline>\n    </c8y-list-group>\n  </div>\n</div>\n<div class=\"card-footer\" *ngIf=\"!isLoading && hasAdminPermissions\">\n  <c8y-form-group class=\"m-auto\">\n    <c8y-upload-archive [(application)]=\"application\" (refresh)=\"onRefresh()\"></c8y-upload-archive>\n  </c8y-form-group>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationService, IApplication, IApplicationManagedObject } from '@c8y/client';\nimport {\n  AlertService,\n  ContextRouteService,\n  gettext,\n  ModalService,\n  Status,\n  TabsService\n} from '@c8y/ngx-components';\nimport { isEmpty } from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-subscription-modal',\n  templateUrl: './subscription-modal.component.html'\n})\nexport class SubscriptionModalComponent implements OnInit {\n  readonly RETRY_TIMEOUT = 3000;\n  application: IApplication;\n  message: string;\n  isLoading = false;\n  result: Promise<void> = new Promise(resolve => {\n    this._resolve = resolve;\n  });\n  isSubscribed: boolean;\n  retryCounter = 0;\n\n  private readonly TABS: string[] = ['Logs', 'Status'];\n  private _resolve: (value: void | PromiseLike<void>) => void;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private ecosystemService: EcosystemService,\n    private tabsService: TabsService,\n    private modal: ModalService,\n    private applicationService: ApplicationService,\n    private alertService: AlertService,\n    private contextRouteService: ContextRouteService\n  ) {}\n\n  ngOnInit() {\n    if (this.isSubscribed) {\n      this.unsubscribe();\n    } else {\n      this.subscribe();\n    }\n  }\n\n  async subscribe(): Promise<void> {\n    this.retryCounter = 0;\n    this.isLoading = true;\n    this.message = gettext('Subscribing…');\n    await this.ecosystemService.subscribeApp(this.application);\n    this.getStatusDetails('subscribe');\n  }\n\n  async unsubscribe(): Promise<void> {\n    this.retryCounter = 0;\n    this.isLoading = true;\n    this.message = gettext('Unsubscribing…');\n    await this.ecosystemService.unsubscribeApp(this.application);\n    this.getStatusDetails('unsubscribe');\n  }\n\n  private async getStatusDetails(action: 'subscribe' | 'unsubscribe') {\n    this.contextRouteService.refreshContext();\n    const actionSuccessful =\n      action === 'subscribe' ? await this.onSubscribe() : this.onUnsubscribe();\n    if (actionSuccessful) {\n      return this.hideSubscriptionModal();\n    }\n    if (this.retryCounter === 4) {\n      this.showWarningModal(action);\n      return this.hideSubscriptionModal();\n    }\n    this.retryCounter += 1;\n    setTimeout(async () => {\n      this.getStatusDetails(action);\n    }, this.RETRY_TIMEOUT);\n  }\n\n  private async onSubscribe(): Promise<boolean> {\n    try {\n      const res: IApplicationManagedObject = (\n        await this.applicationService.getStatusDetails(this.application)\n      ).data[0];\n      return this.shouldShowMSSpecificTabs(res);\n    } catch (er) {\n      this.alertService.addServerFailure(er);\n    }\n  }\n\n  // Checks if the UI should show tabs with logs and status\n  private shouldShowMSSpecificTabs(mo: IApplicationManagedObject): boolean {\n    return !isEmpty(mo.c8y_Status?.instances) && !!mo.c8y_SupportedLogs;\n  }\n\n  private onUnsubscribe(): boolean {\n    return !this.tabsService.areAvailable(this.TABS);\n  }\n\n  private hideSubscriptionModal(): void {\n    this._resolve();\n    this.bsModalRef.hide();\n    this.isLoading = false;\n  }\n\n  private showWarningModal(action: string): void {\n    const title = gettext('Warning');\n    const body =\n      action === 'subscribe'\n        ? gettext('Something went wrong, please refresh the page or resubscribe the application.')\n        : gettext(\n            'Something went wrong, please refresh the page or retry to unsubscribe from the application.'\n          );\n    this.modal.acknowledge(title, body, Status.WARNING, gettext('Close'));\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i c8yIcon=\"c8y-atom\"></i>\n    <h4 id=\"modal-title\">{{ message }}</h4>\n  </div>\n  <div class=\"modal-body\" id=\"modal-body\" *ngIf=\"isLoading\">\n    <div class=\"p-16 text-center\">\n      <c8y-loading></c8y-loading>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { ApplicationService, IApplication, InventoryService } from '@c8y/client';\nimport { AlertService } from '@c8y/ngx-components';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-update-application-modal',\n  templateUrl: './update-application-modal.component.html'\n})\nexport class UpdateApplicationModalComponent implements OnInit {\n  @ViewChild('modal', { static: false }) private modal;\n  isUpdateOngoing = true;\n  updateFailure = false;\n  sourcePackage: IApplication;\n  application: IApplication;\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._resolve = resolve;\n    this._reject = reject;\n  });\n\n  private _resolve: (value: void | PromiseLike<void>) => void;\n  private _reject: (value: void | PromiseLike<void>) => void;\n\n  constructor(\n    private inventoryService: InventoryService,\n    private ecosystemService: EcosystemService,\n    private applicationService: ApplicationService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    this.updateApplication();\n  }\n\n  done() {\n    if (!this.updateFailure) {\n      this._resolve();\n      this.modal._dismiss();\n      return;\n    }\n    this._reject();\n    this.modal._dismiss();\n  }\n\n  async updateApplication() {\n    try {\n      const binaryMoId = this.sourcePackage.activeVersionId;\n      await this.uploadNewBinary(binaryMoId);\n    } catch (e) {\n      if (e.res?.status === 404) {\n        await this.fallBackToCloneUpdate();\n      } else {\n        this.updateFailure = true;\n        this.alertService.addServerFailure(e);\n      }\n    } finally {\n      this.isUpdateOngoing = false;\n    }\n  }\n\n  private async uploadNewBinary(binaryMoId: string) {\n    const { data: binaryMo } = await this.inventoryService.detail(binaryMoId);\n    const binary = await this.inventoryService.binary.download(binaryMo.id);\n    const blob = await binary.blob();\n    const file = new File([blob], binaryMo.name);\n    const app = await this.ecosystemService.uploadArchiveToApp(file, this.application, false);\n    await this.ecosystemService.updateAppManifest(app, this.sourcePackage);\n  }\n\n  private async fallBackToCloneUpdate() {\n    try {\n      const { data: clonedApp } = await this.applicationService.clone(this.sourcePackage);\n      await this.uploadNewBinary(clonedApp.activeVersionId);\n      await this.ecosystemService.deleteApp(clonedApp, true);\n    } catch (e) {\n      this.alertService.addServerFailure(e);\n    }\n  }\n}\n","<c8y-modal\n  [title]=\"'Update application' | translate\"\n  [headerClasses]=\"'dialog-header'\"\n  [customFooter]=\"true\"\n  #modal\n>\n  <ng-container c8y-modal-title>\n    <span class=\"dlt-c8y-icon-installing-updates\"></span>\n  </ng-container>\n\n  <c8y-progress-bar\n    *ngIf=\"isUpdateOngoing\"\n    [message]=\"'Updating…' | translate\"\n    class=\"text-center d-block p-t-56 p-b-56 m-t-4 m-b-4\"\n    style=\"min-height: 180px\"\n  ></c8y-progress-bar>\n\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && !updateFailure\"\n    text=\"{{ 'Update completed' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"success\"\n  ></c8y-operation-result>\n  <c8y-operation-result\n    *ngIf=\"!isUpdateOngoing && updateFailure\"\n    text=\"{{ 'Failed to update application.' | translate }}\"\n    [size]=\"120\"\n    [vertical]=\"true\"\n    type=\"error\"\n  ></c8y-operation-result>\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      [disabled]=\"isUpdateOngoing\"\n      class=\"btn btn-default\"\n      (click)=\"done()\"\n    >\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</c8y-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ApplicationService,\n  ApplicationType,\n  BillingMode,\n  IApplication,\n  IManagedObject,\n  InventoryService,\n  Isolation\n} from '@c8y/client';\nimport {\n  AlertService,\n  GainsightService,\n  ModalService,\n  Permissions,\n  PropertiesListItem,\n  ViewContext,\n  gettext\n} from '@c8y/ngx-components';\nimport {\n  ApplicationState,\n  EcosystemService,\n  PRODUCT_EXPERIENCE,\n  packageProperties\n} from '@c8y/ngx-components/ecosystem/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SubscriptionModalComponent } from './subscription-modal/subscription-modal.component';\nimport { UpdateApplicationModalComponent } from './update-application-modal/update-application-modal.component';\n\nconst MICROSERVICES_BASE_PATH = '/ecosystem/microservice/microservices';\nconst APPLICATIONS_BASE_PATH = '/ecosystem/application/applications';\n\n@Component({\n  selector: 'c8y-application-properties',\n  templateUrl: './application-properties.component.html'\n})\nexport class ApplicationPropertiesComponent implements OnInit {\n  CURRENT_LOCATION = location.href;\n  formGroup: FormGroup;\n  application: IApplication;\n  binaryMo: IManagedObject;\n  singleTenant = false;\n  subscription = false;\n  canOpenInBrowser: boolean;\n  disableOpenInBrowser: boolean;\n  canDelete: boolean;\n  isOwner: boolean;\n  isSubscribed: boolean;\n  isPackage: boolean;\n  isMicroservice: boolean;\n  isFeature: boolean;\n  isExternal: boolean;\n  isUnpacked: boolean;\n  iconMap = {\n    HOSTED: 'cloud',\n    EXTERNAL: 'external-link-square',\n    MICROSERVICE: 'microchip'\n  };\n  appState: ApplicationState;\n  sourcePackage: IApplication;\n  isLoading = true;\n  isActivityLogSupported: boolean;\n  isCustomMicroservice: boolean;\n  hasAdminPermissions = false;\n\n  breadcrumbConfig: { icon: string; label: string; path: string };\n  packageProperties: PropertiesListItem[] = [...packageProperties];\n  isUpdateAvailable = false;\n\n  private blueprintApplicationVersion: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private ecosystemService: EcosystemService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private applicationService: ApplicationService,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private permissions: Permissions,\n    private modalService: ModalService,\n    private translate: TranslateService,\n    private bsModalService: BsModalService,\n    private gainsightService: GainsightService\n  ) {}\n\n  async ngOnInit() {\n    this.hasAdminPermissions = this.permissions.hasRole('ROLE_APPLICATION_MANAGEMENT_ADMIN');\n    await this.refresh();\n  }\n\n  async refresh() {\n    await this.load();\n    this.isUnpacked = this.ecosystemService.isUnpacked(this.application);\n    this.isPackage = this.ecosystemService.isPackage(this.application);\n    this.isFeature = this.ecosystemService.isFeature(this.application);\n    this.isExternal = this.ecosystemService.isExternal(this.application);\n    this.isMicroservice = this.ecosystemService.isMicroservice(this.application);\n    this.appState = this.ecosystemService.getAppState(this.application);\n\n    if (this.isUnpacked) {\n      await this.resolveSourcePackageDetails();\n    }\n\n    this.setBreadcrumbConfig();\n\n    if (this.isCustomMicroservice) {\n      this.loadBinaryMo();\n    }\n  }\n\n  async load() {\n    this.isLoading = true;\n    this.initForm();\n    await this.loadApplication();\n    this.isLoading = false;\n  }\n\n  onApplication(app: IApplication) {\n    if (app.manifest) {\n      this.singleTenant = app.manifest.isolation === Isolation.PER_TENANT;\n      this.subscription = app.manifest.billingMode === BillingMode.SUBSCRIPTION;\n    }\n  }\n\n  cancel() {\n    if (this.application.type === ApplicationType.MICROSERVICE) {\n      this.router.navigateByUrl(MICROSERVICES_BASE_PATH);\n    } else {\n      this.router.navigateByUrl(APPLICATIONS_BASE_PATH);\n    }\n  }\n\n  openApp(app) {\n    this.ecosystemService.openApp(app);\n  }\n\n  getPackage(entityOrId: string | number | IApplication) {\n    return this.applicationService.detail(entityOrId);\n  }\n\n  async delete() {\n    try {\n      await this.ecosystemService.deleteApp(this.application);\n      if (this.application.type === ApplicationType.MICROSERVICE) {\n        this.router.navigateByUrl(MICROSERVICES_BASE_PATH);\n      } else {\n        this.router.navigateByUrl(APPLICATIONS_BASE_PATH);\n      }\n    } catch (ex) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async subscribe() {\n    const initialState = { application: this.application, isSubscribed: false };\n    await this.confirmSubscriptionChange(initialState);\n    this.loadApplication();\n  }\n\n  async unsubscribe() {\n    const initialState = { application: this.application, isSubscribed: true };\n    await this.confirmSubscriptionChange(initialState);\n    this.loadApplication();\n  }\n\n  async loadApplication() {\n    const { id } = this.activatedRoute.snapshot.parent.data.contextData;\n    this.application = await this.ecosystemService.getApplication(id);\n    if (this.application.type === ApplicationType.MICROSERVICE) {\n      this.formGroup.get('name').disable();\n    }\n\n    const updatedApplication = {\n      ...this.application,\n      description: this.getDescription(this.application)\n    };\n\n    this.formGroup.patchValue(updatedApplication);\n    this.canOpenInBrowser = this.ecosystemService.canOpenAppInBrowser(this.application);\n    this.disableOpenInBrowser =\n      this.canOpenInBrowser &&\n      (await this.ecosystemService.isOverwrittenByCustomApp(this.application));\n    this.canDelete = await this.ecosystemService.canDeleteApp(this.application);\n    this.isOwner = this.ecosystemService.isOwner(this.application);\n    this.isActivityLogSupported = this.isActivityLogSupportedByApp(this.application);\n    this.isCustomMicroservice = this.ecosystemService.isCustomMicroservice(this.application);\n    this.isSubscribed = await this.ecosystemService.checkIfSubscribed(this.application);\n    this.onApplication(this.application);\n  }\n\n  async save(app: IApplication) {\n    app.id = this.application.id;\n    try {\n      await this.ecosystemService.updateApp(app);\n      this.alertService.success(gettext('Application saved.'));\n      this.formGroup.reset();\n      this.loadApplication();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  onNewArchive() {\n    this.loadBinaryMo();\n  }\n\n  async updateToLatestVersion() {\n    this.gainsightService.triggerEvent(\n      PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.APPLICATION_PROPERTIES,\n      {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PROPERTIES,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.UPDATE_AVAILABLE,\n        url: this.CURRENT_LOCATION\n      }\n    );\n\n    try {\n      const translatedBody = this.translate.instant(\n        gettext(\n          `You're using the version {{ currentVersion }} of the {{ packageName }} package, the latest version available is {{ latestVersion }}, do you want to update? You can always revert to a previous version in the Activity log panel.`\n        ),\n        {\n          currentVersion: this.application.manifest?.version,\n          latestVersion: this.blueprintApplicationVersion,\n          packageName: this.sourcePackage.name\n        }\n      );\n      await this.modalService.confirm(gettext('Update application'), translatedBody, 'warning', {\n        ok: gettext('Update'),\n        cancel: gettext('Cancel')\n      });\n    } catch {\n      // modal canceled\n      return;\n    }\n\n    try {\n      await this.bsModalService.show<UpdateApplicationModalComponent>(\n        UpdateApplicationModalComponent,\n        {\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState: {\n            sourcePackage: this.sourcePackage,\n            application: this.application\n          }\n        }\n      ).content.result;\n    } catch {\n      // modal canceled\n      return;\n    }\n\n    await this.refresh();\n    this.alertService.success(gettext('Application updated.'));\n  }\n\n  private getDescription(application: IApplication): string | undefined {\n    if (!application) {\n      return;\n    }\n    return application.description || application.manifest?.description;\n  }\n\n  private async confirmSubscriptionChange(initialState: {\n    application: IApplication;\n    isSubscribed: boolean;\n  }) {\n    await (\n      this.bsModalService.show(SubscriptionModalComponent, {\n        class: 'modal-sm',\n        ariaDescribedby: 'modal-body',\n        ariaLabelledBy: 'modal-title',\n        initialState,\n        ignoreBackdropClick: true\n      }).content as SubscriptionModalComponent\n    ).result;\n  }\n\n  private async resolveSourcePackageDetails() {\n    try {\n      this.sourcePackage = (await this.getPackage(this.application.manifest?.source)).data;\n      if (this.sourcePackage) {\n        this.packageProperties.push({\n          label: gettext('Source package'),\n          value: this.sourcePackage.name,\n          type: 'link',\n          action: () =>\n            this.router.navigateByUrl(\n              ViewContext.Application.replace(':id', this.sourcePackage.id.toString())\n            )\n        });\n      }\n    } catch {\n      this.alertService.warning(gettext('Unable to resolve source package.'));\n      return;\n    }\n\n    await this.extractVersionInformation(this.application);\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      id: [{ value: '' }],\n      name: [Validators.required, Validators.maxLength(120)],\n      key: [Validators.required, Validators.maxLength(120)],\n      contextPath: [Validators.required, Validators.maxLength(120)],\n      description: ['', Validators.maxLength(200)],\n      username: [Validators.required],\n      password: [Validators.required],\n      externalUrl: [Validators.required]\n    });\n    if (!this.hasAdminPermissions) {\n      this.formGroup.disable();\n    }\n  }\n\n  private isActivityLogSupportedByApp(app: IApplication): boolean {\n    return (\n      this.ecosystemService.isOwner(app) &&\n      app.type !== ApplicationType.MICROSERVICE &&\n      app.type !== ApplicationType.EXTERNAL\n    );\n  }\n\n  private setBreadcrumbConfig() {\n    this.breadcrumbConfig = {\n      icon: this.isMicroservice ? 'microchip' : this.isFeature ? 'tab' : 'c8y-modules',\n      label: this.isMicroservice\n        ? gettext('Microservices')\n        : this.isFeature\n        ? gettext('Features')\n        : gettext('Applications'),\n      path: this.isMicroservice\n        ? '/ecosystem/microservice/microservices'\n        : this.isFeature\n        ? 'ecosystem/application/features'\n        : 'ecosystem/application/applications'\n    };\n  }\n\n  private async loadBinaryMo() {\n    this.binaryMo = (await this.inventoryService.detail(this.application.activeVersionId)).data;\n  }\n\n  private async extractVersionInformation(application: IApplication) {\n    if (!application.manifest.isPackage && !application.manifest.source) {\n      return;\n    }\n\n    const blueprintApplicationId = application.manifest?.source;\n    const currentVersion = application.manifest?.version;\n\n    try {\n      const { data: blueprintApplicationVersions } = await this.applicationService.listVersions(\n        blueprintApplicationId\n      );\n      const blueprintLatestVersion = this.ecosystemService.getApplicationVersionObjectByTag(\n        blueprintApplicationVersions,\n        'latest'\n      );\n      this.blueprintApplicationVersion = blueprintLatestVersion.version;\n      this.isUpdateAvailable = this.ecosystemService.shouldUpgradePackage(\n        currentVersion,\n        blueprintLatestVersion\n      );\n    } catch {\n      this.alertService.warning(gettext('Unable to resolve versions of source package.'));\n    }\n  }\n}\n","<c8y-title>{{ application | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb *ngIf=\"!isMicroservice\">\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-atom'\"\n    [label]=\"'Ecosystem' | translate\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/application/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumbConfig?.icon\"\n    *ngIf=\"isFeature\"\n    [label]=\"breadcrumbConfig?.label\"\n    [path]=\"breadcrumbConfig?.path\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"application | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Properties' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-breadcrumb *ngIf=\"isMicroservice\">\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-atom'\"\n    [label]=\"'Ecosystem' | translate\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumbConfig?.icon\"\n    [label]=\"breadcrumbConfig?.label\"\n    [path]=\"breadcrumbConfig?.path\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"application | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Properties' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"row\">\n  <div [ngClass]=\"{ 'col-md-8': !isActivityLogSupported, 'col-md-12': isActivityLogSupported }\">\n    <div\n      class=\"card content-fullpage\"\n      *ngIf=\"application\"\n      [ngClass]=\"{ 'd-grid grid__col--7-5--md': isActivityLogSupported }\"\n    >\n      <form\n        class=\"d-flex d-col content-fullpage\"\n        (ngSubmit)=\"formGroup.valid && save(formGroup.value)\"\n        [formGroup]=\"formGroup\"\n        novalidate\n      >\n        <div\n          class=\"d-contents\"\n          *ngIf=\"!isLoading\"\n        >\n          <div class=\"card-block separator-bottom large-padding flex-no-shrink\">\n            <div class=\"d-flex-md a-i-start text-center text-left-md\">\n              <c8y-app-icon\n                class=\"icon-48\"\n                *ngIf=\"!isPackage && !isFeature && !isMicroservice && !isExternal\"\n                [app]=\"application\"\n                [contextPath]=\"application.contextPath\"\n                [name]=\"application.name\"\n              ></c8y-app-icon>\n              <i\n                class=\"icon-48\"\n                c8yIcon=\"big-parcel\"\n                *ngIf=\"isPackage\"\n              ></i>\n              <i\n                class=\"icon-48\"\n                c8yIcon=\"tab\"\n                *ngIf=\"isFeature\"\n              ></i>\n              <i\n                class=\"icon-48\"\n                c8yIcon=\"microchip\"\n                *ngIf=\"isMicroservice\"\n              ></i>\n              <i\n                class=\"icon-48\"\n                c8yIcon=\"globe1\"\n                *ngIf=\"isExternal\"\n              ></i>\n\n              <div class=\"p-t-md-16 p-l-md-16 p-r-md-32 flex-grow\">\n                <p class=\"h4 text-medium m-b-8\">{{ application | humanizeAppName | async }}</p>\n                <p *ngIf=\"!isOwner\">\n                  <em class=\"text-muted\">\n                    {{\n                      formGroup?.controls?.description?.value ||\n                        ('No description available.' | translate)\n                    }}\n                  </em>\n                </p>\n                <div\n                  class=\"form-group m-b-0\"\n                  *ngIf=\"isOwner\"\n                >\n                  <label\n                    class=\"editable\"\n                    [ngClass]=\"{ updated: formGroup?.controls?.description?.dirty }\"\n                  >\n                    <textarea\n                      class=\"form-control no-resize\"\n                      placeholder=\"{{ 'No description available.' | translate }}\"\n                      name=\"description\"\n                      c8y-textarea-autoresize\n                      formControlName=\"description\"\n                    ></textarea>\n                  </label>\n                </div>\n              </div>\n              <div class=\"text-right-md m-t-4\">\n                <span\n                  class=\"label\"\n                  [ngClass]=\"appState?.class\"\n                >\n                  {{ appState?.label | translate }}\n                </span>\n                <div\n                  class=\"fit-w m-t-2\"\n                  *ngIf=\"isPackage || isMicroservice\"\n                >\n                  <label\n                    class=\"text-label-small\"\n                    translate\n                  >\n                    Version:\n                  </label>\n                  <small class=\"p-l-4 text-bold\">{{ application.manifest?.version }}</small>\n                </div>\n                <div class=\"fit-w m-t-2\">\n                  <label\n                    class=\"text-label-small\"\n                    translate\n                  >\n                    Creation time:\n                  </label>\n                  <small class=\"p-l-4 text-bold\">\n                    {{ (binaryMo?.creationTime | c8yDate) || '---' }}\n                  </small>\n                </div>\n                <div class=\"m-t-8\">\n                  <button\n                    class=\"btn btn-default btn-sm\"\n                    [attr.aria-label]=\"\n                      'There\\'s a newer version available, click to update' | translate\n                    \"\n                    tooltip=\"{{\n                      'There\\'s a newer version available, click to update' | translate\n                    }}\"\n                    placement=\"top\"\n                    type=\"button\"\n                    *ngIf=\"isUpdateAvailable\"\n                    (click)=\"updateToLatestVersion()\"\n                    [delay]=\"300\"\n                  >\n                    <i [c8yIcon]=\"'installing-updates'\"></i>\n                    {{ 'Update available' | translate }}\n                  </button>\n                  <button\n                    class=\"btn btn-default btn-sm\"\n                    title=\"{{ 'Open' | translate }}\"\n                    type=\"button\"\n                    (click)=\"openApp(application)\"\n                    [disabled]=\"disableOpenInBrowser\"\n                    *ngIf=\"canOpenInBrowser\"\n                  >\n                    <i [c8yIcon]=\"'external-link'\"></i>\n                    {{ 'Open' | translate }}\n                  </button>\n                  <div *ngIf=\"canOpenInBrowser && disableOpenInBrowser\">\n                    <small\n                      class=\"text-muted\"\n                      translate\n                    >\n                      The application is overwritten by a custom application sharing the same path\n                    </small>\n                  </div>\n                  <span *ngIf=\"isCustomMicroservice\">\n                    <button\n                      class=\"btn btn-default btn-sm\"\n                      title=\"{{ 'Subscribe' | translate }}\"\n                      type=\"button\"\n                      (click)=\"subscribe()\"\n                      *ngIf=\"!isSubscribed\"\n                    >\n                      <i [c8yIcon]=\"'check-circle-o'\"></i>\n                      {{ 'Subscribe' | translate }}\n                    </button>\n                    <button\n                      class=\"btn btn-default btn-sm\"\n                      title=\"{{ 'Unsubscribe' | translate }}\"\n                      type=\"button\"\n                      (click)=\"unsubscribe()\"\n                      *ngIf=\"isSubscribed\"\n                    >\n                      <i [c8yIcon]=\"'minus-circle'\"></i>\n                      {{ 'Unsubscribe' | translate }}\n                    </button>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"inner-scroll bg-level-0 flex-grow\">\n            <div class=\"card-block large-padding\">\n              <div\n                class=\"row p-16\"\n                *ngIf=\"isPackage\"\n              >\n                <c8y-properties-list\n                  icon=\"info\"\n                  [title]=\"'Package details' | translate\"\n                  [data]=\"application.manifest\"\n                  [properties]=\"packageProperties\"\n                  [emptyLabel]=\"'---'\"\n                ></c8y-properties-list>\n              </div>\n              <div\n                class=\"row p-16\"\n                *ngIf=\"sourcePackage\"\n              >\n                <c8y-properties-list\n                  icon=\"info\"\n                  [title]=\"'Source package information' | translate\"\n                  [data]=\"sourcePackage.manifest\"\n                  [properties]=\"packageProperties\"\n                  [emptyLabel]=\"'---'\"\n                ></c8y-properties-list>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-sm-5\">\n                  <c8y-form-group>\n                    <label for=\"appId\">ID</label>\n                    <input\n                      class=\"form-control\"\n                      id=\"appId\"\n                      name=\"id\"\n                      type=\"text\"\n                      autocomplete=\"off\"\n                      [readonly]=\"true\"\n                      formControlName=\"id\"\n                    />\n                  </c8y-form-group>\n                </div>\n                <div class=\"col-sm-7\">\n                  <c8y-form-group>\n                    <label>{{ 'Name' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"{{ 'e.g. My application' | translate }}\"\n                      name=\"name\"\n                      type=\"text\"\n                      required\n                      [readonly]=\"!isOwner\"\n                      formControlName=\"name\"\n                    />\n                  </c8y-form-group>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-5\">\n                  <c8y-form-group>\n                    <label>{{ 'Application key' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"{{ 'e.g. my-application-key' | translate }}\"\n                      name=\"key\"\n                      type=\"text\"\n                      required\n                      [readonly]=\"application.id || !isOwner\"\n                      formControlName=\"key\"\n                    />\n                  </c8y-form-group>\n                </div>\n\n                <div class=\"col-sm-7\">\n                  <c8y-form-group>\n                    <label>{{ 'Type' | translate }}</label>\n                    <div>\n                      <div *ngIf=\"application.id\">\n                        <p class=\"form-control-static\">\n                          <i [c8yIcon]=\"iconMap[application.type]\"></i>\n                          <span>\n                            {{ application.type | translate }}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  </c8y-form-group>\n                </div>\n              </div>\n\n              <div [ngSwitch]=\"application.type\">\n                <div *ngSwitchCase=\"'HOSTED'\">\n                  <c8y-form-group>\n                    <label>{{ 'Path' | translate }}</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-addon\">/apps/</span>\n                      <input\n                        class=\"form-control\"\n                        placeholder=\"{{ 'e.g. my-application`used in URL`' | translate }}\"\n                        name=\"contextPath\"\n                        type=\"text\"\n                        required\n                        [readOnly]=\"application.id || !isOwner\"\n                        formControlName=\"contextPath\"\n                      />\n                    </div>\n                  </c8y-form-group>\n                </div>\n\n                <div *ngSwitchCase=\"'MICROSERVICE'\">\n                  <c8y-form-group>\n                    <label>{{ 'Path' | translate }}</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-addon\">/service/</span>\n                      <input\n                        class=\"form-control\"\n                        placeholder=\"{{ 'e.g. my-microservice`used in URL`' | translate }}\"\n                        name=\"contextPath\"\n                        type=\"text\"\n                        required\n                        [readOnly]=\"application.id || !isOwner\"\n                        formControlName=\"contextPath\"\n                      />\n                    </div>\n                  </c8y-form-group>\n                  <div class=\"row\">\n                    <div\n                      class=\"col-sm-4 m-b-16 flex-auto\"\n                      *ngIf=\"application.manifest.version\"\n                    >\n                      <label>{{ 'Version' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        {{ application.manifest.version }}\n                      </p>\n                    </div>\n                    <div\n                      class=\"col-sm-4 m-b-16 flex-auto\"\n                      *ngIf=\"application.manifest.isolation\"\n                    >\n                      <label>{{ 'Isolation' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        <span *ngIf=\"singleTenant\">\n                          <i\n                            class=\"c8y-icon-duocolor h4\"\n                            [c8yIcon]=\"'c8y-enterprise'\"\n                          ></i>\n                          {{ 'Single tenant' | translate }}\n                        </span>\n                        <span *ngIf=\"!singleTenant\">\n                          <i\n                            class=\"c8y-icon-duocolor icon-32\"\n                            [c8yIcon]=\"'c8y-sub-tenants'\"\n                          ></i>\n                          {{ 'Multi tenant' | translate }}\n                        </span>\n                      </p>\n                    </div>\n                    <div\n                      class=\"col-sm-4 m-b-16 flex-auto\"\n                      *ngIf=\"application.manifest.isolation\"\n                    >\n                      <label>{{ 'Billing mode' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        <span\n                          [tooltip]=\"'Resources usage assigned to: Owner' | translate\"\n                          *ngIf=\"subscription\"\n                        >\n                          {{ 'Subscription' | translate }}\n                        </span>\n                        <span\n                          [tooltip]=\"'Resources usage assigned to: Subscriber | translate'\"\n                          *ngIf=\"!subscription && singleTenant\"\n                        >\n                          {{ 'Resources' | translate }}\n                        </span>\n                        <span\n                          [tooltip]=\"'Resources usage assigned to: Owner' | translate\"\n                          *ngIf=\"!subscription && !singleTenant\"\n                        >\n                          {{ 'Resources' | translate }}\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n\n                  <div\n                    class=\"legend form-block m-t-40\"\n                    *ngIf=\"application.manifest.provider\"\n                  >\n                    {{ 'Provider' | translate }}\n                  </div>\n                  <div\n                    class=\"list-inline\"\n                    *ngIf=\"application.manifest.provider\"\n                  >\n                    <div *ngIf=\"application.manifest.provider.name\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Name' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.name }}\n                        </p>\n                      </div>\n                    </div>\n                    <div *ngIf=\"application.manifest.provider.domain\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Domain' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.domain }}\n                        </p>\n                      </div>\n                    </div>\n                    <div *ngIf=\"application.manifest.provider.support\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Support' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.support }}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div *ngSwitchCase=\"'EXTERNAL'\">\n                  <c8y-form-group>\n                    <label>{{ 'External URL' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"{{ 'e.g.' | translate }} http://www.example.com/\"\n                      name=\"externalUrl\"\n                      type=\"url\"\n                      required\n                      [pattern]=\"'^(?!javascript:).+'\"\n                      [readOnly]=\"!isOwner\"\n                      formControlName=\"externalUrl\"\n                    />\n                    <c8y-messages>\n                      <c8y-message\n                        [name]=\"'pattern'\"\n                        [text]=\"'Valid URL required.' | translate\"\n                      ></c8y-message>\n                    </c8y-messages>\n                  </c8y-form-group>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"isCustomMicroservice\">\n            <div\n              class=\"d-contents\"\n              *ngIf=\"!isLoading\"\n            >\n              <c8y-upload-archive\n                [(application)]=\"application\"\n                (refresh)=\"onNewArchive()\"\n              ></c8y-upload-archive>\n            </div>\n          </ng-container>\n          <div\n            class=\"card-footer separator\"\n            *ngIf=\"application && !!isOwner && hasAdminPermissions\"\n          >\n            <button\n              class=\"btn btn-default\"\n              title=\"{{ 'Cancel' | translate }}\"\n              type=\"button\"\n              (click)=\"cancel()\"\n            >\n              {{ 'Cancel' | translate }}\n            </button>\n            <button\n              class=\"btn btn-danger\"\n              title=\"{{ 'Delete' | translate }}\"\n              type=\"button\"\n              (click)=\"delete()\"\n              *ngIf=\"canDelete\"\n            >\n              {{ 'Delete' | translate }}\n            </button>\n            <button\n              class=\"btn btn-primary btn-form\"\n              title=\"{{ 'Save' | translate }}\"\n              type=\"submit\"\n              [disabled]=\"!application.type || formGroup.invalid || formGroup.pristine\"\n            >\n              {{ 'Save' | translate }}\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div\n        class=\"content-fullpage d-flex d-col bg-level-1\"\n        *ngIf=\"isActivityLogSupported\"\n      >\n        <div class=\"card-header separator\">\n          <div\n            class=\"card-title\"\n            translate\n          >\n            Activity log\n          </div>\n          <div class=\"m-l-auto\">\n            <button\n              class=\"btn btn-link btn-sm\"\n              title=\"{{ 'Reload' | translate }}\"\n              type=\"button\"\n              (click)=\"load()\"\n            >\n              <i\n                c8yIcon=\"refresh\"\n                [ngClass]=\"{ 'icon-spin': isLoading }\"\n              ></i>\n              {{ 'Reload' | translate }}\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"p-16 text-center\"\n          *ngIf=\"isLoading\"\n        >\n          <c8y-loading></c8y-loading>\n        </div>\n        <c8y-activity-log\n          class=\"d-contents\"\n          *ngIf=\"!isLoading\"\n          [hasAdminPermissions]=\"hasAdminPermissions\"\n          [application]=\"application\"\n        ></c8y-activity-log>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Injectable()\nexport class ApplicationPropertiesGuard implements CanActivate {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const app = route.data.contextData || route.parent.data.contextData;\n    if (!app) {\n      return false;\n    }\n    return !this.ecosystemService.isPackage(app);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationService, ApplicationType, IApplication, IManifest } from '@c8y/client';\nimport { AlertService, WizardComponent } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-external-application',\n  templateUrl: './add-external-application.component.html'\n})\nexport class AddExternalApplicationComponent implements OnInit {\n  formGroup: FormGroup;\n  createdApp: IApplication;\n\n  constructor(\n    private applicationService: ApplicationService,\n    private formBuilder: FormBuilder,\n    private alertService: AlertService,\n    private wizardComponent: WizardComponent\n  ) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  back() {\n    this.wizardComponent.reset();\n  }\n\n  cancel() {\n    this.wizardComponent.close();\n  }\n\n  done() {\n    this.wizardComponent.close();\n  }\n\n  async save(app: IApplication) {\n    const appToSave = {\n      manifest: {} as IManifest,\n      externalUrl: app.externalUrl,\n      type: ApplicationType.EXTERNAL,\n      name: app.name,\n      key: app.key\n    };\n    try {\n      this.createdApp = await this.applicationService.create(appToSave);\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private initForm(): void {\n    this.formGroup = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.maxLength(120)]],\n      key: ['', [Validators.required, Validators.maxLength(120)]],\n      externalUrl: ['', Validators.required]\n    });\n  }\n}\n","<form *ngIf=\"!createdApp; else appCreated\" [formGroup]=\"formGroup\" novalidate>\n  <c8y-wizard-header>\n    <i [c8yIcon]=\"'cloud-link'\"></i>\n    <h4 translate id=\"modal-title\">Add external application</h4>\n  </c8y-wizard-header>\n\n  <c8y-wizard-body>\n    <p class=\"p-16 text-medium text-center bg-level-0 separator-bottom sticky-top\">\n      {{ 'Provide external application details' | translate }}\n    </p>\n    <div class=\"modal-body p-t-8\" id=\"modal-body\">\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'Name' | translate }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"name\"\n          name=\"name\"\n          placeholder=\"{{ 'e.g. My application' | translate }}\"\n          required\n          type=\"text\"\n        />\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'Application key' | translate }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"key\"\n          name=\"key\"\n          placeholder=\"{{ 'e.g. my-external-application-key' | translate }}\"\n          required\n          type=\"text\"\n        />\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'External URL' | translate }}</label>\n        <input\n          [pattern]=\"'^(?!javascript:).+'\"\n          class=\"form-control\"\n          formControlName=\"externalUrl\"\n          name=\"externalUrl\"\n          placeholder=\"{{ 'e.g.' | translate }} https://www.example.com\"\n          required\n          type=\"url\"\n        />\n      </c8y-form-group>\n    </div>\n  </c8y-wizard-body>\n\n  <c8y-wizard-footer>\n    <button\n      (click)=\"back()\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Back' | translate }}\"\n      translate\n      type=\"button\"\n    >\n      Back\n    </button>\n    <button (click)=\"cancel()\" class=\"btn btn-default\" title=\"{{ 'Cancel' | translate }}\" translate>\n      Cancel\n    </button>\n    <button\n      (click)=\"save(formGroup.value)\"\n      [disabled]=\"formGroup.invalid || formGroup.pristine\"\n      class=\"btn btn-primary btn-form\"\n      title=\"{{ 'Add application' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Add application' | translate }}\n    </button>\n  </c8y-wizard-footer>\n</form>\n<ng-template #appCreated>\n  <c8y-wizard-body>\n    <div class=\"d-flex d-col j-c-center a-i-center\" style=\"min-height: 324px\">\n      <c8y-operation-result\n        text=\"{{ 'Application created' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n        type=\"success\"\n        class=\"lead\"\n      ></c8y-operation-result>\n    </div>\n  </c8y-wizard-body>\n  <c8y-wizard-footer>\n    <button (click)=\"done()\" class=\"btn btn-default\" title=\"{{ 'Done' | translate }}\" translate>\n      Done\n    </button>\n    <a\n      (click)=\"$event.stopPropagation()\"\n      [href]=\"formGroup.value.externalUrl\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Open' | translate }}\"\n    >\n      <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n      {{ 'Open' | translate }}\n    </a>\n  </c8y-wizard-footer>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { ApplicationType, IApplication } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-add-web-application',\n  template: `<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'upload'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createApplicationHandler\"\n    [uploadApplicationHandler]=\"uploadApplicationHandler\"\n    [canGoBack]=\"true\"\n  ></c8y-add-application>`\n})\nexport class AddWebApplicationComponent {\n  headerText: string = gettext('Upload web application');\n  successText: string = gettext('Application created');\n\n  constructor(private ecosystemService: EcosystemService) {}\n\n  createApplicationHandler = (f: File) => this.createApplication(f);\n  uploadApplicationHandler = (f: File, app: IApplication) => this.uploadApplication(f, app);\n\n  async createApplication(file: File): Promise<IApplication> {\n    await this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);\n    return this.ecosystemService.createAppForArchive(file);\n  }\n\n  async uploadApplication(file: File, app: IApplication): Promise<IApplication> {\n    return this.ecosystemService.uploadArchiveToApp(file, app);\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IApplication } from '@c8y/client';\nimport { WizardConfig, WizardModalService } from '@c8y/ngx-components';\nimport { ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport {\n  EcosystemService,\n  EcosystemWizards,\n  defaultPackageAvailabilities,\n  FilterPipe,\n  ListFiltersComponent\n} from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-application-list',\n  templateUrl: './application-list.component.html'\n})\nexport class ApplicationListComponent implements OnInit, OnDestroy {\n  reloading = false;\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n\n  apps$: Observable<IApplication[]> = this.reload$.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.ecosystemService.getWebApplications()),\n    tap(() => (this.reloading = false)),\n    shareReplay()\n  );\n  filteredApps$: Observable<IApplication[]>;\n  listClass: string;\n  packageAvailabilities = defaultPackageAvailabilities;\n  @ViewChild(ListFiltersComponent) filtersComponent: ListFiltersComponent;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private wizardModalService: WizardModalService\n  ) {}\n\n  ngOnInit() {\n    this.loadApplications();\n  }\n\n  loadApplications() {\n    this.reload$.next();\n  }\n\n  addApplication() {\n    const wizardConfig: WizardConfig = {\n      headerText: 'Add Application',\n      headerIcon: 'c8y-atom'\n    };\n\n    const initialState: Record<string, unknown> = {\n      wizardConfig,\n      id: EcosystemWizards.APPLICATION_UPLOAD\n    };\n\n    const modalOptions: ModalOptions = { initialState };\n\n    const modalRef = this.wizardModalService.show(modalOptions);\n    modalRef.content.onClose.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.loadApplications();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setFilterPipe(pipe: FilterPipe) {\n    this.filteredApps$ = this.apps$.pipe(src => pipe(src));\n  }\n\n  resetFilters() {\n    this.filtersComponent.resetAllFilters();\n  }\n}\n","<c8y-title>{{ 'Applications' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/application/applications'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\" *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n  <button\n    (click)=\"addApplication()\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add application' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add application' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"loadApplications()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\">\n  <c8y-list-filters\n    *ngIf=\"apps$ | async\"\n    (filterPipeChange)=\"setFilterPipe($event)\"\n    [packageAvailabilities]=\"packageAvailabilities\"\n  ></c8y-list-filters>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(apps$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/administration/#applications\"></c8y-help>\n\n<div *ngIf=\"(apps$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No applications to display.</h3>\n  <p translate>Add your first application by clicking below.</p>\n  <p>\n    <button\n      (click)=\"addApplication()\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add application' | translate }}\"\n    >\n      {{ 'Add application' | translate }}\n    </button>\n  </p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs d-flex\" *ngIf=\"(apps$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Application' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80 m-r-40\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div *ngFor=\"let app of filteredApps$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      (onAppDeleted)=\"loadApplications()\"\n      (onAppCloned)=\"loadApplications()\"\n      [app]=\"app\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n\n<c8y-ui-empty-state\n  *ngIf=\"(apps$ | async)?.length > 0 && (filteredApps$ | async)?.length === 0\"\n  [icon]=\"'search'\"\n  [title]=\"'No matching applications.' | translate\"\n  [subtitle]=\"'Refine your search terms and/or the filters' | translate\"\n>\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Reset filters' | translate }}\"\n    (click)=\"resetFilters()\"\n  >\n    {{ 'Reset filters' | translate }}\n  </button>\n</c8y-ui-empty-state>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApplicationService, IApplication, IApplicationVersion, IResultList } from '@c8y/client';\nimport { PluginsService, WizardComponent } from '@c8y/ngx-components';\nimport { BehaviorSubject, combineLatest, from, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EcosystemService, LicensedApplicationPlugin } from '@c8y/ngx-components/ecosystem/shared';\nimport { ApplicationPropertiesFormComponent } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-install-from-package',\n  templateUrl: './install-from-package.component.html'\n})\nexport class InstallFromPackageComponent implements OnInit {\n  newAppConfig: IApplication;\n  selectedPackage: IApplication;\n  packages: IApplication[];\n  inProgress: boolean;\n  deployedWithSuccess = false;\n  isDeployed = false;\n\n  model = {\n    selected: undefined,\n    binary: {\n      id: undefined\n    }\n  };\n  canDeploy = false;\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  versions$: Observable<IResultList<IApplicationVersion>>;\n  @ViewChild(ApplicationPropertiesFormComponent)\n  applicationPropertiesForm: ApplicationPropertiesFormComponent;\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private applicationService: ApplicationService,\n    private wizardComponent: WizardComponent,\n    private pluginsService: PluginsService\n  ) {}\n\n  async ngOnInit() {\n    this.loadPackages();\n  }\n\n  back() {\n    this.wizardComponent.reset();\n  }\n\n  clean() {\n    this.selectedPackage = undefined;\n    this.versions$ = undefined;\n    this.model = {\n      selected: undefined,\n      binary: {\n        id: undefined\n      }\n    };\n  }\n\n  cancel() {\n    this.wizardComponent.close();\n  }\n\n  async deployApp() {\n    this.inProgress = true;\n    const formGroupValue = this.applicationPropertiesForm.formGroup.getRawValue();\n    const { contextPath, license, name } = this.selectedPackage;\n    const type = this.pluginsService.getPackageType(this.selectedPackage);\n    const licensedApp: LicensedApplicationPlugin = {\n      contextPath,\n      license,\n      name,\n      type,\n      version: this.model.selected.version\n    };\n    const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses([licensedApp]);\n    if (!licensesVerifiedByUser) {\n      this.cancel();\n      return;\n    }\n\n    // Verify if selected package version is compatible with current platform versions.\n    const verifyVersionCompatibility =\n      await this.ecosystemService.verifyBlueprintVersionsCompatibility(\n        this.selectedPackage.manifest\n      );\n\n    if (!verifyVersionCompatibility) {\n      this.cancel();\n      return;\n    }\n\n    try {\n      await this.ecosystemService.deployApp(this.selectedPackage, formGroupValue, this.model);\n      this.deployedWithSuccess = true;\n    } catch (error) {\n      this.ecosystemService.alertError(error);\n    } finally {\n      this.markAsDeployed();\n    }\n  }\n\n  onAppVersionSelect(appVersion: IApplicationVersion) {\n    Object.assign(this.model, {\n      selected: appVersion\n    });\n    this.canDeploy = true;\n  }\n\n  async selectPackage(selectedPackage: IApplication) {\n    const apps = (await this.ecosystemService.getApplications()).data;\n    this.newAppConfig = this.ecosystemService.getUniqueAppConfig(selectedPackage, apps);\n    this.selectedPackage = selectedPackage;\n\n    this.loadSelectedPackageVersions();\n  }\n\n  private loadSelectedPackageVersions() {\n    this.versions$ = combineLatest([\n      this.getAppVersions(this.selectPackage),\n      this.onInput.asObservable()\n    ]).pipe(\n      map(([resultList, filterStr]) => {\n        this.canDeploy = false;\n        const versionsFilteredByStr = this.filterAppVersions(resultList.data, filterStr);\n        const sortedAppVersions = this.pluginsService.sortVersions(\n          {\n            list: versionsFilteredByStr,\n            path: ['version']\n          },\n          'desc'\n        );\n\n        this.setInitialValueForInput(sortedAppVersions);\n        return { data: sortedAppVersions, res: resultList.res };\n      })\n    );\n  }\n\n  private getAppVersions(mo: IApplication) {\n    const versions = mo?.applicationVersions;\n    return versions && versions.length > 0\n      ? of({ data: versions, res: undefined })\n      : from(this.applicationService.listVersions(this.selectedPackage.id));\n  }\n\n  private setInitialValueForInput(versions: IApplicationVersion[]) {\n    if (!this.model.selected && versions.length > 0) {\n      const latest = versions.find(v => v.tags.includes('latest'));\n      this.model.selected = latest || versions[0];\n      this.canDeploy = true;\n    }\n  }\n\n  private filterAppVersions(\n    appVersions: IApplicationVersion[],\n    filterStr: string\n  ): IApplicationVersion[] {\n    return filterStr === ''\n      ? appVersions\n      : appVersions.filter(appVersion => appVersion.version.includes(filterStr));\n  }\n\n  private markAsDeployed() {\n    this.isDeployed = true;\n    this.inProgress = false;\n  }\n\n  private async loadPackages(): Promise<void> {\n    const applications = await this.ecosystemService.getPackageApplications();\n    this.packages = applications.filter(app => this.ecosystemService.isPackageBlueprint(app));\n  }\n}\n","<c8y-wizard-header>\n  <i [c8yIcon]=\"'big-parcel'\"></i>\n  <h4 id=\"modal-title\" translate>Install from extension package</h4>\n</c8y-wizard-header>\n<c8y-wizard-body>\n  <ng-container *ngIf=\"!selectedPackage\">\n    <div class=\"modal-inner-scroll\" id=\"modal-body\">\n      <p class=\"p-16 text-medium text-center separator-bottom sticky-top bg-level-0\">\n        {{ 'Select from available extension packages' | translate }}\n      </p>\n\n      <c8y-ui-empty-state\n        *ngIf=\"!packages?.length\"\n        [icon]=\"'big-parcel'\"\n        [title]=\"'No extension packages to display.' | translate\"\n        [horizontal]=\"true\"\n      ></c8y-ui-empty-state>\n\n      <div *ngIf=\"packages?.length\" class=\"c8y-wizard-list-nav\" style=\"min-height: 257px\">\n        <button\n          class=\"list-group-item text-truncate\"\n          *ngFor=\"let package of packages\"\n          (click)=\"selectPackage(package)\"\n          title=\"{{ package.name }}\"\n          type=\"button\"\n        >\n          <i c8yIcon=\"big-parcel\" class=\"list-group-icon\"></i>\n          <span [innerText]=\"package.name\"></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!isDeployed && selectedPackage\">\n    <p class=\"p-16 text-center text-medium separator-bottom sticky-top bg-level-0\">\n      {{ 'Provide application details' | translate }}\n    </p>\n    <div class=\"d-flex d-col a-i-center j-c-center\" style=\"min-height: 257px\">\n      <c8y-application-properties-form\n        *ngIf=\"!inProgress\"\n        [application]=\"newAppConfig\"\n        class=\"d-block fit-w\"\n      ></c8y-application-properties-form>\n\n      <ng-container *ngIf=\"!inProgress\">\n        <div [ngStyle]=\"{ padding: '0 16px' }\" class=\"d-block fit-w bg-gray-white\">\n          <label for=\"packageVersion\" translate>Use extension package version</label>\n          <c8y-form-group>\n            <c8y-typeahead\n              [(ngModel)]=\"model.selected\"\n              name=\"packageVersion\"\n              (onSearch)=\"onInput.next($event)\"\n              placeholder=\"{{ 'Select or enter' | translate }}\"\n              [displayProperty]=\"'version'\"\n              [required]=\"true\"\n              [hideNew]=\"true\"\n              [container]=\"'body'\"\n            >\n              <c8y-li\n                *c8yFor=\"let version of versions$; loadMore: 'auto'; notFound: notFoundTemplate\"\n                (click)=\"onAppVersionSelect(version)\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                [active]=\"model.selected === version\"\n              >\n                <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n                <span\n                  [ngStyle]=\"{\n                    display: 'flex',\n                    'flex-direction': 'row',\n                    'align-content': 'center',\n                    'justify-content': 'space-between',\n                    'align-items': 'center'\n                  }\"\n                >\n                  <c8y-highlight\n                    [text]=\"version.version || '--'\"\n                    [pattern]=\"onInput | async\"\n                  ></c8y-highlight>\n\n                  <span>\n                    <span *ngFor=\"let tag of version.tags\" class=\"label label-info m-l-4\">\n                      {{ tag }}\n                    </span>\n                  </span>\n                </span>\n              </c8y-li>\n              <ng-template #notFoundTemplate>\n                <c8y-li\n                  class=\"bg-gray-lighter p-8\"\n                  *ngIf=\"(onInput | async)?.length > 0 && (versions$ | async)?.data?.length === 0\"\n                >\n                  <span translate>No match found.</span>\n                </c8y-li>\n              </ng-template>\n            </c8y-typeahead>\n          </c8y-form-group>\n        </div>\n      </ng-container>\n\n      <c8y-progress-bar\n        [message]=\"'Installing…' | translate\"\n        class=\"text-center d-block\"\n        *ngIf=\"inProgress\"\n      ></c8y-progress-bar>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isDeployed\">\n    <div\n      *ngIf=\"deployedWithSuccess; else failedDeploy\"\n      class=\"d-flex a-i-center j-c-center\"\n      style=\"min-height: 257px\"\n    >\n      <c8y-operation-result\n        text=\"{{ 'Application created' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n        type=\"success\"\n        class=\"lead\"\n      ></c8y-operation-result>\n    </div>\n    <ng-template #failedDeploy>\n      <div class=\"d-flex a-i-center j-c-center\" style=\"min-height: 257px\">\n        <c8y-operation-result\n          text=\"{{ 'Application creation failed' | translate }}\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          type=\"error\"\n          class=\"lead\"\n        ></c8y-operation-result>\n      </div>\n    </ng-template>\n  </ng-container>\n</c8y-wizard-body>\n\n<c8y-wizard-footer>\n  <button\n    *ngIf=\"!isDeployed\"\n    (click)=\"selectedPackage ? clean() : back()\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Back' | translate }}\"\n    [disabled]=\"inProgress\"\n    type=\"button\"\n  >\n    {{ 'Back' | translate }}\n  </button>\n  <button\n    title=\"{{ isDeployed && deployedWithSuccess ? ('Close' | translate) : ('Cancel' | translate) }}\"\n    class=\"btn btn-default\"\n    type=\"button\"\n    (click)=\"cancel()\"\n  >\n    {{ isDeployed && deployedWithSuccess ? ('Close' | translate) : ('Cancel' | translate) }}\n  </button>\n\n  <button\n    title=\"{{ 'Install' | translate }}\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    (click)=\"deployApp()\"\n    [disabled]=\"inProgress || !packages?.length\"\n    *ngIf=\"!isDeployed\"\n  >\n    {{ 'Install' | translate }}\n  </button>\n</c8y-wizard-footer>\n","import { Injectable } from '@angular/core';\nimport { NavigatorNode, NavigatorNodeFactory, Permissions } from '@c8y/ngx-components';\n\n@Injectable()\nexport class EcosystemNavigationFactory implements NavigatorNodeFactory {\n  private navs: NavigatorNode[] = [];\n  private showNavigatorNodes: boolean;\n\n  constructor(private permissions: Permissions) {\n    this.showNavigatorNodes = this.permissions.hasAnyRole([\n      'ROLE_APPLICATION_MANAGEMENT_READ',\n      'ROLE_APPLICATION_MANAGEMENT_ADMIN'\n    ]);\n  }\n\n  async get() {\n    /*\nThe NavigatorNodes are added in AngularJS code to keep the Quick links widget working.\nAfter the Quick links widget is migrated to Angular, the logic of adding the NavigatorNodes can be migrated as well.\n    if (this.navs.length === 0 && this.showNavigatorNodes) {\n      const applicationsNode: NavigatorNode = new NavigatorNode({\n        label: gettext('Applications'),\n        icon: 'c8y-modules',\n        path: '/ecosystem',\n        priority: 300,\n        routerLinkExact: false\n      });\n\n      const microservicesNode = new NavigatorNode({\n        label: gettext('Microservices'),\n        icon: 'microchip',\n        path: '/microservices',\n        priority: 200,\n        routerLinkExact: false\n      });\n\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Ecosystem'),\n          icon: 'c8y-atom',\n          priority: 3200,\n          children: [applicationsNode, microservicesNode]\n        })\n      );\n    }\n*/\n    return this.navs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, Tab, TabFactory } from '@c8y/ngx-components';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class EcosystemTabs implements TabFactory {\n  ecosystemTabs: Tab[] = [\n    {\n      icon: 'c8y-modules',\n      priority: 1000,\n      label: gettext('Applications'),\n      path: 'ecosystem/application/applications'\n    },\n    {\n      icon: 'tab',\n      priority: 998,\n      label: gettext('Features'),\n      path: 'ecosystem/application/features'\n    }\n  ];\n\n  constructor(public router: Router) {}\n\n  get(): Tab[] {\n    if (\n      this.router.url === '/ecosystem/application/applications' ||\n      this.router.url === '/ecosystem/application/features'\n    ) {\n      return this.ecosystemTabs;\n    }\n    return [];\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { IApplication } from '@c8y/client';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport {\n  EcosystemService,\n  FilterPipe,\n  ListFiltersComponent\n} from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-feature-list',\n  templateUrl: './feature-list.component.html'\n})\nexport class FeatureListComponent {\n  reloading = false;\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n\n  features$: Observable<IApplication[]> = this.reload$.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.ecosystemService.getFeatureApplications()),\n    tap(() => (this.reloading = false)),\n    shareReplay()\n  );\n  filteredFeatures$: Observable<IApplication[]>;\n  listClass: string;\n  @ViewChild(ListFiltersComponent) filtersComponent: ListFiltersComponent;\n\n  constructor(private ecosystemService: EcosystemService) {}\n\n  ngOnInit() {\n    this.loadFeatures();\n  }\n\n  loadFeatures() {\n    this.reload$.next();\n  }\n\n  setFilterPipe(pipe: FilterPipe) {\n    this.filteredFeatures$ = this.features$.pipe(src => pipe(src));\n  }\n\n  resetFilters() {\n    this.filtersComponent?.resetAllFilters();\n  }\n}\n","<c8y-title>{{ 'Features' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/application/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [icon]=\"'tab'\" [label]=\"'Features' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"reload$.next()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\">\n  <c8y-list-filters\n    *ngIf=\"features$ | async\"\n    (filterPipeChange)=\"setFilterPipe($event)\"\n  ></c8y-list-filters>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(features$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div *ngIf=\"(features$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No features to display.</h3>\n  <p translate>No additional features are subscribed to the tenant.</p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs d-flex\" *ngIf=\"(features$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Feature' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n    </div>\n  </div>\n  <div *ngFor=\"let feature of filteredFeatures$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      [app]=\"feature\"\n      [canEdit]=\"false\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n\n<c8y-ui-empty-state\n  *ngIf=\"(features$ | async)?.length > 0 && (filteredFeatures$ | async)?.length === 0\"\n  [icon]=\"'search'\"\n  [title]=\"'No matching features.' | translate\"\n  [subtitle]=\"'Refine your search terms and/or the filters' | translate\"\n>\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Reset filters' | translate }}\"\n    (click)=\"resetFilters()\"\n  >\n    {{ 'Reset filters' | translate }}\n  </button>\n</c8y-ui-empty-state>\n","import { Component } from '@angular/core';\nimport { gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { ApplicationType, IApplication, TenantService } from '@c8y/client';\nimport { EcosystemService, ERROR_TYPE } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-add-microservice',\n  template: `<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'microchip'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createMicroserviceApplicationHandler\"\n    [uploadApplicationHandler]=\"uploadMicroserviceHandler\"\n  ></c8y-add-application>`\n})\nexport class AddMicroserviceComponent {\n  headerText: string = gettext('Add microservice');\n  successText: string = gettext('Microservice created');\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private modal: ModalService,\n    private tenantService: TenantService\n  ) {}\n\n  createMicroserviceApplicationHandler = (f: File) => this.createMicroserviceApplication(f);\n  uploadMicroserviceHandler = (f: File, app: IApplication) => this.uploadMicroservice(f, app);\n\n  async createMicroserviceApplication(file: File): Promise<IApplication> {\n    await this.ecosystemService.isValidAppType(file, ApplicationType.MICROSERVICE);\n    return this.ecosystemService.createAppForArchive(file);\n  }\n\n  async uploadMicroservice(file: File, microservice: IApplication): Promise<void> {\n    const subscribeToCurrentTenant = await this.askIfActivationAfterUploadNeeded();\n    await this.ecosystemService.uploadArchiveToApp(file, microservice);\n    await this.subscribeMicroservice(microservice, subscribeToCurrentTenant);\n  }\n\n  private async askIfActivationAfterUploadNeeded(): Promise<boolean> {\n    try {\n      await this.modal.confirm(\n        gettext('Subscribe to microservice'),\n        gettext(\n          'You are about to subscribe to the microservice after upload. Do you want to subscribe to it?'\n        ),\n        Status.INFO,\n        { ok: gettext('Subscribe'), cancel: gettext(\"Don't subscribe\") }\n      );\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  private async subscribeMicroservice(\n    app: IApplication,\n    subscribeToCurrentTenant: boolean\n  ): Promise<any> {\n    const tenant = (await this.tenantService.current()).data;\n    const applications = tenant.applications.references;\n\n    const isSubscribed = applications.some(({ application }) => application.id === app.id);\n    if (!isSubscribed && subscribeToCurrentTenant) {\n      try {\n        return await this.tenantService.subscribeApplication(tenant, app);\n      } catch (res) {\n        if (res.status === 409) {\n          throw Error(ERROR_TYPE.ALREADY_SUBSCRIBED);\n        }\n      }\n    } else if (isSubscribed && !subscribeToCurrentTenant) {\n      return this.tenantService.unsubscribeApplication(tenant, app);\n    }\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { IApplication } from '@c8y/client';\nimport { WizardModalService } from '@c8y/ngx-components';\nimport { ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport {\n  APP_STATE,\n  EcosystemService,\n  EcosystemWizards,\n  FilterPipe,\n  PackageFilters,\n  ListFiltersComponent\n} from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-microservice-list',\n  templateUrl: './microservice-list.component.html'\n})\nexport class MicroserviceListComponent implements OnInit {\n  reloading = false;\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  microservices$: Observable<IApplication[]> = this.reload$.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.ecosystemService.getMicroservices()),\n    tap(() => (this.reloading = false)),\n    shareReplay()\n  );\n  filteredMicroservices$: Observable<IApplication[]>;\n  isMicroserviceHostingAllowed$: Observable<boolean> = this.reload$.pipe(\n    switchMap(() => this.ecosystemService.isMicroserviceHostingAllowed()),\n    shareReplay()\n  );\n  listClass: string;\n  packageAvailabilities: (keyof PackageFilters['availability'])[] = [\n    APP_STATE.SUBSCRIBED.label,\n    APP_STATE.CUSTOM.label\n  ];\n  @ViewChild(ListFiltersComponent) filtersComponent: ListFiltersComponent;\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private wizardModalService: WizardModalService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.loadMicroservices();\n    // manually trigger detection to not have ExpressionChangedAfterItHasBeenChecked error in spec file\n    this.cd.detectChanges();\n  }\n\n  loadMicroservices() {\n    this.reload$.next();\n  }\n\n  addMicroservice() {\n    const initialState: Record<string, unknown> = {\n      id: EcosystemWizards.MICROSERVICE_UPLOAD\n    };\n    const modalOptions: ModalOptions = { initialState };\n\n    const modalRef = this.wizardModalService.show(modalOptions);\n    modalRef.content.onClose.subscribe(() => {\n      this.loadMicroservices();\n    });\n  }\n\n  setFilterPipe(pipe: FilterPipe) {\n    this.filteredMicroservices$ = this.microservices$.pipe(src => pipe(src));\n  }\n\n  resetFilters() {\n    this.filtersComponent?.resetAllFilters();\n  }\n}\n","<c8y-title>{{ 'Microservices' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'microchip'\"\n    [label]=\"'Microservices' | translate\"\n    [path]=\"'ecosystem/microservice/microservices'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<ng-container *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n  <c8y-action-bar-item\n    [placement]=\"'right'\"\n    [priority]=\"100\"\n    *ngIf=\"isMicroserviceHostingAllowed$ | async\"\n  >\n    <button\n      (click)=\"addMicroservice()\"\n      class=\"btn btn-link\"\n      title=\"{{ 'Add microservice' | translate }}\"\n    >\n      <i c8yIcon=\"plus-circle\"></i>\n      {{ 'Add microservice' | translate }}\n    </button>\n  </c8y-action-bar-item>\n</ng-container>\n\n<c8y-help src=\"/users-guide/administration/#microservices\"></c8y-help>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"reload$.next()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\">\n  <c8y-list-filters\n    *ngIf=\"microservices$ | async\"\n    (filterPipeChange)=\"setFilterPipe($event)\"\n    [packageAvailabilities]=\"packageAvailabilities\"\n  ></c8y-list-filters>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(microservices$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div *ngIf=\"(microservices$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No microservices to display.</h3>\n  <p translate>Add your first microservice by clicking below.</p>\n  <p>\n    <button\n      (click)=\"addMicroservice()\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add microservice' | translate }}\"\n    >\n      {{ 'Add microservice' | translate }}\n    </button>\n  </p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs d-flex\" *ngIf=\"(microservices$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Microservice' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80 m-r-40\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div\n    *ngFor=\"let microservice of filteredMicroservices$ | async\"\n    class=\"col-xs-12 col-sm-4 col-md-3\"\n  >\n    <c8y-application-card\n      (onAppDeleted)=\"loadMicroservices()\"\n      [app]=\"microservice\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n\n<c8y-ui-empty-state\n  *ngIf=\"(microservices$ | async)?.length > 0 && (filteredMicroservices$ | async)?.length === 0\"\n  [icon]=\"'search'\"\n  [title]=\"'No matching microservices.' | translate\"\n  [subtitle]=\"'Refine your search terms and/or the filters' | translate\"\n>\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Reset filters' | translate }}\"\n    (click)=\"resetFilters()\"\n  >\n    {{ 'Reset filters' | translate }}\n  </button>\n</c8y-ui-empty-state>\n","import { Injectable } from '@angular/core';\nimport { ApplicationAvailability, ApplicationService, IApplication } from '@c8y/client';\nimport {\n  AlertService,\n  AppStateService,\n  GainsightService,\n  ModalService,\n  gettext\n} from '@c8y/ngx-components';\nimport { PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\n\n@Injectable({ providedIn: 'root' })\nexport class PackageAvailabilityService {\n  CURRENT_LOCATION = location.href;\n\n  constructor(\n    private appState: AppStateService,\n    private alert: AlertService,\n    private modal: ModalService,\n    private application: ApplicationService,\n    private gainsightService: GainsightService\n  ) {}\n\n  async askIfAvailabilityShouldBeSetTo(\n    applicationPackage: IApplication,\n    availability: ApplicationAvailability\n  ) {\n    // availability does not matter for tenant that do not have or can create subtenants\n    if (!this.appState.currentTenant.value?.allowCreateTenants) {\n      return applicationPackage;\n    }\n    try {\n      await this.openAvailabilityModal(availability);\n    } catch {\n      // modal closed\n      return applicationPackage;\n    }\n\n    try {\n      const { data: app } = await this.application.updateApplicationAvailability(\n        applicationPackage,\n        availability\n      );\n      this.alert.success(gettext('Updated package availability.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.AVAILABILITY, {\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.AVAILABILITY_CHANGE,\n        result: availability.toString().toLocaleLowerCase(),\n        url: this.CURRENT_LOCATION\n      });\n      return app;\n    } catch (e) {\n      this.alert.warning(gettext('Failed to set package availability.'));\n      this.alert.addServerFailure(e);\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.AVAILABILITY, {\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.AVAILABILITY_CHANGE,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n        url: this.CURRENT_LOCATION\n      });\n      return applicationPackage;\n    }\n  }\n\n  private async openAvailabilityModal(availability: ApplicationAvailability) {\n    const body = this.getConfirmationBody(availability);\n\n    await this.modal.confirm(gettext('Package availability'), body, 'info', {\n      ok: gettext('Yes'),\n      cancel: gettext('No')\n    });\n  }\n\n  private getConfirmationBody(availability: ApplicationAvailability): string {\n    switch (availability) {\n      case ApplicationAvailability.SHARED:\n        return gettext(\n          'Do you want to set the package availability to \"Shared\"? This will make the package available to all subtenants without explicitly subscribing the package.'\n        );\n      case ApplicationAvailability.MARKET:\n        return gettext(\n          'Do you want to set the package availability to \"Market\"? This will make the package available to your own tenant and needs to be subscribed to subtenants individually.'\n        );\n      case ApplicationAvailability.PRIVATE:\n        return gettext(\n          'Do you want to set the package availability to \"Private\"? This will make the package only available to your own tenant.'\n        );\n      default:\n        return '';\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { ApplicationAvailability, ApplicationType, IApplication } from '@c8y/client';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\nimport { AppStateService, gettext } from '@c8y/ngx-components';\nimport { PackageAvailabilityService } from './package-availability.service';\n\n@Component({\n  selector: 'c8y-add-package',\n  template: `<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'big-parcel'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createPackageAppHandler\"\n    [uploadApplicationHandler]=\"uploadPackageHandler\"\n  ></c8y-add-application>`\n})\nexport class AddPackageComponent {\n  headerText: string = gettext('Add extension package');\n  successText: string = gettext('Extension package created');\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private appState: AppStateService,\n    private packageAvailability: PackageAvailabilityService\n  ) {}\n\n  createPackageAppHandler = (f: File) => this.createPackageApp(f);\n  uploadPackageHandler = (f: File, app: IApplication) => this.uploadPackage(f, app);\n\n  async createPackageApp(file: File): Promise<IApplication> {\n    await this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);\n    const applicationPackage = await this.ecosystemService.createAppForArchive(file, true);\n    return await this.packageAvailability.askIfAvailabilityShouldBeSetTo(\n      applicationPackage,\n      ApplicationAvailability.SHARED\n    );\n  }\n\n  uploadPackage(file: File, pckg: IApplication): Promise<IApplication> {\n    return this.ecosystemService.uploadArchiveToApp(file, pckg, true);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IApplication, IApplicationVersion } from '@c8y/client';\nimport { gettext, PluginsService, WizardComponent, GainsightService } from '@c8y/ngx-components';\nimport {\n  ApplicationPropertiesFormComponent,\n  EcosystemService,\n  LicensedApplicationPlugin,\n  PRODUCT_EXPERIENCE\n} from '@c8y/ngx-components/ecosystem/shared';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-deploy-application',\n  templateUrl: './deploy-application.component.html'\n})\nexport class DeployApplicationComponent implements OnInit {\n  CURRENT_LOCATION = location.href;\n\n  inProgress = true;\n  package: IApplication;\n  isDeployed = false;\n  deployedWithSuccess = false;\n  newAppConfig: IApplication;\n  applicationHref: string;\n\n  model = {\n    selected: undefined,\n    binary: {\n      id: undefined\n    }\n  };\n  canDeploy = false;\n\n  @ViewChild(ApplicationPropertiesFormComponent)\n  applicationPropertiesForm: ApplicationPropertiesFormComponent;\n\n  readonly descriptionTemplate: string = gettext(\n    'Deploy application using \"{{ packageName }}\" package'\n  );\n  readonly successMessageTemplate = gettext('Application \"{{ packageName }}\" created');\n  readonly doneLabel = gettext('Done');\n  readonly cancelLabel = gettext('Cancel');\n  headerText: string;\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private wizardComponent: WizardComponent,\n    private translate: TranslateService,\n    private pluginService: PluginsService,\n    private gainsightService: GainsightService\n  ) {\n    this.package = (this.wizardComponent as any).package;\n  }\n\n  async ngOnInit() {\n    const apps = (await this.ecosystemService.getApplications()).data;\n    this.newAppConfig = this.ecosystemService.getUniqueAppConfig(this.package, apps);\n    this.headerText = this.getHeaderText();\n    this.inProgress = false;\n  }\n\n  async deployApp() {\n    this.inProgress = true;\n    const formGroupValue = this.applicationPropertiesForm.formGroup.getRawValue();\n\n    // Verify if selected package version is compatible with current platform versions.\n    const verifyVersionCompatibility =\n      await this.ecosystemService.verifyBlueprintVersionsCompatibility(this.package.manifest);\n\n    if (!verifyVersionCompatibility) {\n      this.cancel();\n      return;\n    }\n\n    const { contextPath, license, name } = this.package;\n    const type = this.pluginService.getPackageType(this.package);\n    const licensedApp: LicensedApplicationPlugin = {\n      contextPath,\n      license,\n      name,\n      type,\n      version: this.model.selected.version\n    };\n    const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses([licensedApp]);\n    if (!licensesVerifiedByUser) {\n      this.cancel();\n      return;\n    }\n\n    try {\n      await this.ecosystemService.deployApp(this.package, formGroupValue, this.model);\n      this.deployedWithSuccess = true;\n      this.gainsightService.triggerEvent(\n        PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.DEPLOY_APPLICATION,\n        {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.DEPLOY_APPLICATION,\n          action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.DEPLOY_APPLICATION,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.DEPLOYED,\n          url: this.CURRENT_LOCATION\n        }\n      );\n    } catch (error) {\n      this.ecosystemService.alertError(error);\n      this.gainsightService.triggerEvent(\n        PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.DEPLOY_APPLICATION,\n        {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.DEPLOY_APPLICATION,\n          action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.DEPLOY_APPLICATION,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n          url: this.CURRENT_LOCATION\n        }\n      );\n    } finally {\n      this.markAsDeployed();\n    }\n  }\n\n  cancel() {\n    this.wizardComponent.close();\n  }\n\n  onAppVersionSelect(appVersion: IApplicationVersion) {\n    Object.assign(this.model, {\n      selected: appVersion\n    });\n    this.canDeploy = true;\n  }\n\n  private markAsDeployed() {\n    this.isDeployed = true;\n    this.inProgress = false;\n  }\n\n  private getHeaderText() {\n    return this.translate.instant(this.descriptionTemplate, {\n      packageName: this.package.name\n    });\n  }\n}\n","<c8y-wizard-header>\n  <div class=\"modal-header dialog-header\">\n    <i c8yIcon=\"output\"></i>\n    <h4 id=\"modal-title\">{{ 'Deploy application' | translate }}</h4>\n  </div>\n</c8y-wizard-header>\n\n<c8y-wizard-body id=\"modal-body\">\n  <ng-container *ngIf=\"!isDeployed\">\n    <div class=\"fadeIn animated d-flex a-i-center j-c-center d-col\" style=\"min-height: 309px\">\n      <p\n        class=\"bg-level-0 fit-w p-16 text-center text-medium sticky-top bg-level-0 separator-bottom\"\n        *ngIf=\"!inProgress\"\n      >\n        {{ headerText | translate }}\n      </p>\n      <c8y-application-properties-form\n        *ngIf=\"!inProgress\"\n        [application]=\"newAppConfig\"\n        class=\"d-block fit-w bg-level-1\"\n      ></c8y-application-properties-form>\n\n      <ng-container *ngIf=\"!inProgress\">\n        <div [ngStyle]=\"{ padding: '0 16px' }\" class=\"d-block fit-w bg-gray-white\">\n          <c8y-package-version-select\n            [ngModel]=\"model.selected\"\n            (ngModelChange)=\"onAppVersionSelect($event)\"\n            [packageId]=\"package?.id\"\n            [label]=\"'Use extension package version' | translate\"\n          ></c8y-package-version-select>\n        </div>\n      </ng-container>\n\n      <c8y-progress-bar\n        *ngIf=\"inProgress\"\n        [message]=\"'Deploying…' | translate\"\n        class=\"text-center\"\n      ></c8y-progress-bar>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isDeployed\">\n    <div\n      *ngIf=\"deployedWithSuccess; else failedDeploy\"\n      class=\"modal-body fadeIn animated\"\n      style=\"min-height: 309px\"\n    >\n      <div class=\"d-flex a-i-center j-c-center d-col\">\n        <c8y-operation-result\n          type=\"success\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          [text]=\"successMessageTemplate | translate: { packageName: package.name }\"\n          class=\"lead d-block m-b-16\"\n        ></c8y-operation-result>\n      </div>\n    </div>\n    <ng-template #failedDeploy>\n      <div class=\"modal-body fadeIn animated text-center\" style=\"min-height: 257px\">\n        <c8y-operation-result\n          type=\"error\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          text=\"{{ 'Application creation failed' | translate }}\"\n          class=\"lead\"\n        ></c8y-operation-result>\n      </div>\n    </ng-template>\n  </ng-container>\n</c8y-wizard-body>\n\n<c8y-wizard-footer>\n  <button\n    (click)=\"cancel()\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    title=\"{{ (isDeployed && deployedWithSuccess ? doneLabel : cancelLabel) | translate }}\"\n  >\n    {{ (isDeployed && deployedWithSuccess ? doneLabel : cancelLabel) | translate }}\n  </button>\n\n  <button\n    (click)=\"deployApp()\"\n    *ngIf=\"!isDeployed\"\n    [disabled]=\"inProgress || !canDeploy\"\n    [ngClass]=\"{ 'btn-pending': inProgress }\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Deploy' | translate }}\"\n  >\n    {{ 'Deploy' | translate }}\n  </button>\n</c8y-wizard-footer>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IApplication } from '@c8y/client';\nimport { ApplicationState, EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n@Pipe({\n  name: 'appState',\n  pure: true\n})\nexport class AppStatePipe implements PipeTransform {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  transform(\n    app: IApplication,\n    arg: keyof ApplicationState\n  ): ApplicationState[keyof ApplicationState] {\n    const appState = this.ecosystemService.getAppState(app);\n    return appState[arg];\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { IApplication } from '@c8y/client';\nimport { UpdateType } from './apps-to-update-remotes-select.model';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  templateUrl: './apps-to-update-remotes-select.component.html'\n})\nexport class AppsToUpdateRemotesSelectComponent implements OnInit {\n  @Input() apps: IApplication[];\n  @Input() updateType: UpdateType;\n  @Input() pluginName: string;\n  @Input() appsDisabled: Set<IApplication['id']>;\n  filterTerm$: BehaviorSubject<string> = new BehaviorSubject('');\n  filteredApps$: Observable<IApplication[]> = new BehaviorSubject([]);\n  textConfig: {\n    header: string;\n    applyButton: string;\n  };\n  appsToUpdateRemotes: IApplication[] = [];\n  result: Promise<IApplication[]> = new Promise((resolve, reject) => {\n    this._update = resolve;\n    this._cancel = reject;\n  });\n  private _update: (apps: IApplication[]) => void;\n  private _cancel: (reason?: any) => void;\n\n  constructor(private bsModalRef: BsModalRef, private ecosystemService: EcosystemService) {}\n\n  ngOnInit(): void {\n    this.filteredApps$ = combineLatest([of(this.apps), this.filterTerm$]).pipe(\n      map(([apps, filterTerm]) =>\n        filterTerm.trim().length === 0\n          ? apps\n          : apps.filter((application: IApplication) =>\n              this.ecosystemService.filterContainString(application.name, filterTerm)\n            )\n      )\n    );\n    this.textConfig =\n      this.updateType === 'install'\n        ? {\n            header: gettext('Select applications to install the plugin to'),\n            applyButton: gettext('Install')\n          }\n        : {\n            header: gettext('Select applications to uninstall the plugin from'),\n            applyButton: gettext('Uninstall')\n          };\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setSelectedApps(selected: boolean, app: IApplication) {\n    selected\n      ? this.appsToUpdateRemotes.push(app)\n      : (this.appsToUpdateRemotes = this.appsToUpdateRemotes.filter(\n          application => app.key !== application.key\n        ));\n  }\n\n  async apply() {\n    this._update(this.appsToUpdateRemotes);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'c8y-modules'\"></i>\n    <div\n      class=\"modal-title h4\"\n      id=\"modal-title\"\n      translate\n    >\n      Custom applications\n    </div>\n  </div>\n  <div\n    class=\"inner-scroll\"\n    id=\"modal-body\"\n  >\n    <div class=\"p-16 text-center separator-bottom sticky-top bg-component\">\n      <p class=\"text-medium\">\n        {{ textConfig.header | translate }}\n      </p>\n      <c8y-filter (onSearch)=\"filterTerm$.next($event)\"></c8y-filter>\n    </div>\n    <c8y-list-group *ngIf=\"apps.length; else emptyList\">\n      <c8y-li\n        [ngClass]=\"{ disabled: updateType === 'install' && appsDisabled.has(app.id) }\"\n        *ngFor=\"let app of filteredApps$ | async\"\n      >\n        <c8y-li-checkbox (onSelect)=\"setSelectedApps($event, app)\"></c8y-li-checkbox>\n        <c8y-li-icon class=\"p-l-0 icon-32\">\n          <c8y-app-icon\n            class=\"list-group-icon\"\n            [app]=\"app\"\n            [contextPath]=\"app.contextPath\"\n            [name]=\"app.name\"\n          ></c8y-app-icon>\n        </c8y-li-icon>\n        <div class=\"d-flex\">\n          <div class=\"p-r-8\">\n            <p\n              class=\"text-medium\"\n              [innerText]=\"app | humanizeAppName | async\"\n            ></p>\n            <p class=\"small text-muted\">{{ app.description }}</p>\n          </div>\n          <span\n            class=\"label m-l-auto a-s-start\"\n            [ngClass]=\"app | appState: 'class'\"\n          >\n            {{ app | appState: 'label' | translate }}\n          </span>\n        </div>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n      (click)=\"cancel()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ textConfig.applyButton | translate }}\"\n      [disabled]=\"appsToUpdateRemotes.length === 0\"\n      (click)=\"apply()\"\n    >\n      {{ textConfig.applyButton | translate }}\n    </button>\n  </div>\n</div>\n<ng-template #emptyList>\n  <c8y-ui-empty-state\n    [icon]=\"'c8y-modules'\"\n    [title]=\"'No custom applications available.' | translate\"\n    [subtitle]=\"'No custom applications available.' | translate\"\n    [horizontal]=\"true\"\n  ></c8y-ui-empty-state>\n</ng-template>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApplicationPlugin } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-plugin-list-item',\n  templateUrl: './plugin-list-item.component.html'\n})\nexport class PluginListItemComponent {\n  @Input() plugin: ApplicationPlugin;\n  @Input() selectable: boolean;\n  @Output() isItemSelected: EventEmitter<boolean> = new EventEmitter();\n\n  onChange(event) {\n    this.isItemSelected.next(event);\n  }\n}\n","\n  <c8y-li-checkbox\n    (change)=\"onChange($event.target.checked)\"\n    *ngIf=\"selectable\"\n    [disabled]=\"plugin.installed\"\n    class=\"p-r-16 p-l-0\"\n  ></c8y-li-checkbox>\n  <c8y-li-icon class=\"p-l-0\">\n    <i class=\"c8y-plugin-icon\">\n      <span>{{ plugin.name?.substr(0, 2) }}</span>\n    </i>\n  </c8y-li-icon>\n  <div class=\"d-flex\">\n    <div [ngClass]=\"{'p-r-8' : selectable}\">\n      <p>\n        <span class=\"text-medium\">{{ plugin.name }}</span>\n        <em class=\"text-muted small m-l-8\">{{ plugin.version }}</em>\n        <span *ngIf=\"plugin.installed\">\n          <i [c8yIcon]=\"'check-circle'\" class=\"text-success\"></i>\n          <em class=\"text-muted small\" translate>Installed`plugins`</em>\n        </span>\n      </p>\n      <p class=\"small l-h-tight\">{{ plugin.description }}</p>\n    </div>\n    <span *ngIf=\"selectable\" class=\"label label-info m-l-auto a-s-start\">{{\n      plugin.contextPath\n    }}</span>\n  </div>\n     \n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ApplicationRemotePlugins, ApplicationType, IApplication } from '@c8y/client';\nimport {\n  AlertService,\n  ApplicationPlugin,\n  GainsightService,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AppsToUpdateRemotesSelectComponent } from './apps-to-update-remotes-select.component';\nimport { UpdateType } from './apps-to-update-remotes-select.model';\n\n@Component({\n  selector: 'c8y-plugin-list',\n  templateUrl: './plugin-list.component.html'\n})\nexport class PluginListComponent {\n  CURRENT_LOCATION = location.href;\n\n  @Input() plugins$: Observable<ApplicationPlugin[]>;\n  @Input() emptyListText = '';\n  @Input() selectable: boolean;\n  /**\n   * Shows the install button for each plugin separately. Currently used in package-details view.\n   */\n  @Input() installable = false;\n  @Input() package: IApplication;\n  @Output() selectedItems: EventEmitter<ApplicationPlugin[]> = new EventEmitter();\n  remotePlugins$: BehaviorSubject<ApplicationRemotePlugins> = new BehaviorSubject({});\n  selectedPlugins: { [key: string]: ApplicationPlugin } = {};\n  updatingPluginId: Record<UpdateType, string> = { install: '', uninstall: '' };\n  appsDisabled: Set<IApplication['id']> = new Set<IApplication['id']>();\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private bsModalService: BsModalService,\n    private pluginsService: PluginsService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private gainsightService: GainsightService\n  ) {}\n\n  updateSelectedItems(selected: boolean, plugin: ApplicationPlugin) {\n    this.selectedPlugins[plugin.id] = selected ? plugin : undefined;\n    const onlyInstalledPlugins = Object.values(this.selectedPlugins).filter(Boolean);\n    this.selectedItems.emit(onlyInstalledPlugins);\n  }\n\n  async installPlugin(plugin: ApplicationPlugin) {\n    await this.updateAppRemotes(plugin, 'install');\n  }\n\n  async uninstallPlugin(plugin: ApplicationPlugin) {\n    this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n      component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n      action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.INSTALL_PLUGIN,\n      url: this.CURRENT_LOCATION\n    });\n    await this.updateAppRemotes(plugin, 'uninstall');\n  }\n\n  private async updateAppRemotes(plugin: ApplicationPlugin, updateType: UpdateType) {\n    this.updatingPluginId[updateType] = plugin?.id;\n    let initialState: Pick<\n      AppsToUpdateRemotesSelectComponent,\n      'apps' | 'updateType' | 'pluginName' | 'appsDisabled'\n    >;\n    try {\n      const apps = await this.getAppsForUpdate(plugin, updateType);\n      initialState = {\n        apps,\n        updateType,\n        pluginName: plugin.name,\n        appsDisabled: this.appsDisabled\n      };\n    } catch (e) {\n      this.alertService.addServerFailure(e);\n      this.updatingPluginId[updateType] = '';\n      return;\n    }\n\n    let selectedApps: IApplication[];\n    try {\n      selectedApps = await this.selectApps(initialState);\n      if (!selectedApps) {\n        this.updatingPluginId[updateType] = '';\n        return;\n      }\n    } catch {\n      // unreached\n    }\n\n    if (updateType === 'install') {\n      const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses([plugin]);\n      if (!licensesVerifiedByUser) {\n        this.updatingPluginId[updateType] = '';\n        return;\n      }\n    }\n\n    for (const app of selectedApps) {\n      try {\n        await this.handleRemotesUpdate(app, plugin, updateType);\n        const successText =\n          updateType === 'install'\n            ? this.translateService.instant(\n                gettext('Plugin installed to application \"{{ appName }}\".'),\n                {\n                  appName: app.name\n                }\n              )\n            : this.translateService.instant(\n                gettext('Plugin uninstalled from application \"{{ appName }}\".'),\n                { appName: app.name }\n              );\n        this.alertService.success(successText);\n        this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_INSTALLED,\n          url: this.CURRENT_LOCATION\n        });\n      } catch {\n        this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_PLUGINS, {\n          component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PLUGIN_LIST,\n          result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n          url: this.CURRENT_LOCATION\n        });\n      }\n    }\n    this.updatingPluginId[updateType] = '';\n  }\n\n  private async getAppsForUpdate(plugin: ApplicationPlugin, updateType: UpdateType) {\n    let apps = (await this.ecosystemService.getWebApplications()).filter(\n      app => this.ecosystemService.isOwner(app) && app.type !== ApplicationType.EXTERNAL\n    );\n\n    if (updateType === 'install') {\n      this.appsDisabled.clear();\n      for (const app of apps) {\n        if (await this.isPluginInstalledInApp(plugin, app)) {\n          this.appsDisabled.add(app.id);\n        }\n      }\n    }\n\n    if (updateType === 'uninstall') {\n      const installedApps: IApplication[] = [];\n      for (const app of apps) {\n        if (await this.isPluginInstalledInApp(plugin, app)) {\n          installedApps.push(app);\n        }\n      }\n      apps = installedApps;\n    }\n    return apps;\n  }\n\n  private async isPluginInstalledInApp(\n    plugin: ApplicationPlugin,\n    app: IApplication\n  ): Promise<boolean> {\n    const appRemotes = this.pluginsService.getMFRemotes(app) || {};\n    return Object.keys(appRemotes).some(\n      remote => this.getInstalledPluginContextPathWithoutVersion(remote) === plugin.contextPath\n    );\n  }\n\n  private getInstalledPluginContextPathWithoutVersion(remote: string) {\n    return remote.split('@')[0];\n  }\n\n  private async handleRemotesUpdate(\n    application: IApplication,\n    plugin: ApplicationPlugin,\n    updateType: UpdateType\n  ) {\n    try {\n      // When remotes object is not set in the configuration object of an application.\n      // Fallback to setInitialRemotes is triggered.\n      let updatedRemotes = await (updateType === 'install'\n        ? this.pluginsService.addRemotes(application, plugin)\n        : this.pluginsService.removeRemotes(application, this.getAllPluginsToRemove(plugin)));\n      if (!updatedRemotes) {\n        // TODO discuss if we need to handle it like that.\n        // Right now remotes from the cumulocity.json are taken into account when remotes object is missing in the configuration.\n        updatedRemotes = await this.pluginsService.setInitialRemotes(application);\n        // Fresh application MO is needed, after initial state was set.\n        const app = await this.ecosystemService.getApplication(application.id);\n        updatedRemotes = await this.pluginsService.addRemotes(app, plugin);\n      }\n      return this.emitRemotes(updatedRemotes);\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n      throw er;\n    }\n  }\n\n  private getAllPluginsToRemove(plugin: ApplicationPlugin): ApplicationPlugin[] {\n    return this.package.applicationVersions.map(av => ({\n      id: `${plugin.contextPath}@${av.version}/${plugin.module}`,\n      module: plugin.module,\n      path: plugin.path\n    }));\n  }\n\n  private emitRemotes(remotes: ApplicationRemotePlugins): ApplicationRemotePlugins {\n    this.remotePlugins$.next(remotes);\n    return { ...this.remotePlugins$.value };\n  }\n\n  private async selectApps(\n    initialState: Pick<\n      AppsToUpdateRemotesSelectComponent,\n      'apps' | 'updateType' | 'pluginName' | 'appsDisabled'\n    >\n  ): Promise<IApplication[]> {\n    try {\n      return await (\n        this.bsModalService.show(AppsToUpdateRemotesSelectComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState,\n          ignoreBackdropClick: true\n        }).content as AppsToUpdateRemotesSelectComponent\n      ).result;\n    } catch (er) {\n      return;\n    }\n  }\n}\n","<c8y-list-group class=\"bg-inherit\">\n  <ng-container *ngIf=\"(plugins$ | async)?.length !== 0; else emptyList\">\n    <ng-container *ngFor=\"let plugin of plugins$ | async\">\n      <c8y-li [ngClass]=\"{ disabled: plugin.installed }\" class=\"bg-inherit\">\n        <c8y-plugin-list-item\n          (isItemSelected)=\"updateSelectedItems($event, plugin)\"\n          [plugin]=\"plugin\"\n          [selectable]=\"selectable\"\n          class=\"d-flex\"\n        ></c8y-plugin-list-item>\n        <div class=\"p-l-40 m-t-4\">\n          <button\n            *ngIf=\"installable\"\n            (click)=\"uninstallPlugin(plugin)\"\n            [ngClass]=\"{ 'btn-pending': plugin.id === updatingPluginId.uninstall }\"\n            [disabled]=\"updatingPluginId.uninstall && plugin.id !== updatingPluginId.uninstall\"\n            class=\"btn btn-danger btn-sm m-l-4\"\n            title=\"{{ 'Uninstall plugin' | translate }}\"\n            translate\n          >\n            Uninstall plugin\n          </button>\n          <button\n            *ngIf=\"installable\"\n            (click)=\"installPlugin(plugin)\"\n            [ngClass]=\"{ 'btn-pending': plugin.id === updatingPluginId.install }\"\n            [disabled]=\"updatingPluginId.install && plugin.id !== updatingPluginId.install\"\n            class=\"btn btn-default btn-sm m-l-8\"\n            title=\"{{ 'Install plugin' | translate }}\"\n            translate\n          >\n            Install plugin\n          </button>\n        </div>\n      </c8y-li>\n    </ng-container>\n  </ng-container>\n</c8y-list-group>\n<ng-template #emptyList>\n  <div class=\"c8y-empty-state text-left\" *ngIf=\"emptyListText\">\n    <h1 c8yIcon=\"plugin\"></h1>\n    <p>\n      {{ emptyListText | translate }}\n    </p>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ApplicationAvailability,\n  FetchClient,\n  IApplication,\n  IFetchOptions,\n  IFetchResponse\n} from '@c8y/client';\nimport {\n  ApplicationPlugin,\n  AppStateService,\n  ContextRouteService,\n  gettext,\n  PackageType,\n  PluginsService,\n  PropertiesListItem,\n  WizardModalService\n} from '@c8y/ngx-components';\nimport { ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  ApplicationState,\n  EcosystemService,\n  EcosystemWizards,\n  packageProperties,\n  PACKAGE_TYPE_LABELS\n} from '@c8y/ngx-components/ecosystem/shared';\nimport { PackageAvailabilityService } from '../package-availability.service';\n\n@Component({\n  selector: 'c8y-package-details',\n  templateUrl: './package-details.component.html'\n})\nexport class PackageDetailsComponent implements OnInit {\n  markdown: string;\n  baseUrl: string;\n  package: IApplication = {};\n  name: string;\n  description: string;\n  appState: ApplicationState;\n  isPackageBlueprint: boolean;\n  exportedPlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n  availabilities = [\n    { label: gettext('Private`package availability`'), value: ApplicationAvailability.PRIVATE },\n    { label: gettext('Market`package availability`'), value: ApplicationAvailability.MARKET },\n    { label: gettext('Shared`package availability`'), value: ApplicationAvailability.SHARED }\n  ];\n  isChangingAvailability = false;\n  isOwnedByCurrentTenant = false;\n  isAllowedToCreateSubtenants = false;\n  packageContentState: ApplicationState;\n  packageType: PackageType;\n\n  readonly packageTypeLabels = PACKAGE_TYPE_LABELS;\n  readonly PACKAGE_TYPE = PackageType;\n  readonly packageProperties: PropertiesListItem[] = packageProperties;\n  private readonly headers: any = { 'Content-Type': 'text/markdown', responseType: 'blob' };\n  private NOT_FOUND_ERROR_CODE = 404;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private client: FetchClient,\n    private wizardModalService: WizardModalService,\n    private ecosystemService: EcosystemService,\n    private contextRouteService: ContextRouteService,\n    private pluginsService: PluginsService,\n    private packageAvailability: PackageAvailabilityService,\n    private ui: AppStateService,\n    private pluginService: PluginsService\n  ) {}\n\n  async ngOnInit() {\n    this.isAllowedToCreateSubtenants = !!this.ui.currentTenant.value?.allowCreateTenants;\n    await this.loadData();\n  }\n\n  deploy() {\n    const initialState: any = {\n      wizardConfig: {},\n      id: EcosystemWizards.BLUEPRINT_DEPLOYMENT,\n      package: this.package\n    };\n    const modalOptions: ModalOptions = { initialState };\n    this.wizardModalService.show(modalOptions);\n  }\n\n  async togglePackageAvailability(pckg: IApplication, newAvailability: ApplicationAvailability) {\n    this.isChangingAvailability = true;\n    pckg = await this.packageAvailability.askIfAvailabilityShouldBeSetTo(pckg, newAvailability);\n    await this.loadData(pckg);\n    this.isChangingAvailability = false;\n  }\n\n  private async loadData(pckg?: IApplication) {\n    this.package = pckg\n      ? pckg\n      : this.contextRouteService.getContextData(this.activatedRoute)?.contextData;\n    this.packageContentState = this.ecosystemService.getPackageContentState(this.package);\n    this.packageType = this.pluginService.getPackageType(this.package);\n    this.name = this.package?.name;\n    this.description = this.package?.manifest?.description;\n    this.markdown = await this.getReadmeFileContent();\n    this.baseUrl = this.getBaseUrl();\n    this.appState = this.ecosystemService.getAppState(this.package);\n    this.isPackageBlueprint = this.ecosystemService.isPackageBlueprint(this.package);\n    this.isOwnedByCurrentTenant =\n      this.package?.owner?.tenant?.id === this.ui.currentTenant.value?.name;\n    this.extractPackageMFExports();\n  }\n\n  private extractPackageMFExports() {\n    const exports = this.pluginsService.getMFExports(this.package);\n    this.exportedPlugins$.next(exports);\n  }\n\n  private async getReadmeFileContent(): Promise<string> {\n    const readmeFile = await this.getReadmeFile();\n\n    if (readmeFile.status === 200) {\n      return await readmeFile.text();\n    }\n    return '';\n  }\n\n  private async getReadmeFile(): Promise<IFetchResponse> {\n    const baseUrl = this.getBaseUrl();\n    let result: IFetchResponse;\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.headers\n    };\n    result = await this.client.fetch(`${baseUrl}README.md`, options);\n\n    if (result && result.status === this.NOT_FOUND_ERROR_CODE) {\n      result = await this.client.fetch(`${baseUrl}readme.md`, options);\n    }\n    return result;\n  }\n\n  private getBaseUrl(): string {\n    return `/apps/${this.package.contextPath}/`;\n  }\n}\n","<c8y-title>{{ name | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'big-parcel'\"\n    [label]=\"'Extensions' | translate\"\n    [path]=\"'ecosystem/extension/extensions'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"name | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Extension package' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item\n  placement=\"right\"\n  itemClass=\"navbar-form\"\n  *ngIf=\"isOwnedByCurrentTenant && isAllowedToCreateSubtenants\"\n>\n  <div class=\"form-horizontal\">\n    <div class=\"form-group\">\n      <label for=\"availability\" translate>Availability</label>\n      <div class=\"c8y-select-wrapper\">\n        <select\n          id=\"availability\"\n          class=\"form-control\"\n          [ngModel]=\"package.availability\"\n          [disabled]=\"isChangingAvailability\"\n          (ngModelChange)=\"togglePackageAvailability(package, $event)\"\n        >\n          <option *ngFor=\"let availability of availabilities\" [ngValue]=\"availability.value\">\n            {{ availability.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n</c8y-action-bar-item>\n\n<div class=\"card content-fullpage d-grid grid__col--8-4--md grid__row--fit-auto\">\n  <div class=\"bg-level-1 grid__col--fullspan separator-bottom\">\n    <div class=\"card-block p-t-24 p-b-24 large-padding\">\n      <button\n        type=\"button\"\n        *ngIf=\"packageType !== PACKAGE_TYPE.CUSTOM\"\n        class=\"card__ribbon btn-clean\"\n        [attr.aria-label]=\"\n          (package.label | translatePackageLabel) +\n          ': ' +\n          (packageTypeLabels[packageType].tooltip | translate)\n        \"\n        tooltip=\"{{ packageTypeLabels[packageType].tooltip | translate }}\"\n        placement=\"bottom\"\n        [delay]=\"500\"\n      >\n        <span\n          [ngClass]=\"{\n            'bg-info': packageType === PACKAGE_TYPE.COMMUNITY,\n            'bg-primary': packageType === PACKAGE_TYPE.OFFICIAL\n          }\"\n        >\n          {{ package.label | translatePackageLabel }}\n        </span>\n      </button>\n      <div class=\"content-flex-70\">\n        <div class=\"text-center\">\n          <i c8yIcon=\"big-parcel\" class=\"c8y-icon-duocolor icon-48\"></i>\n          <button\n            class=\"btn-clean\"\n            type=\"button\"\n            [attr.aria-label]=\"\n              (appState?.label | translate) + ': ' + (appState?.tooltip | translate)\n            \"\n            [tooltip]=\"appState?.tooltip | translate\"\n            placement=\"top\"\n            [delay]=\"500\"\n          >\n            <span [ngClass]=\"appState?.class\" class=\"label\">\n              {{ appState?.label | translate }}\n            </span>\n          </button>\n          <button\n            class=\"btn-clean\"\n            type=\"button\"\n            [attr.aria-label]=\"\n              (packageContentState?.label | translate) +\n              ': ' +\n              (packageContentState?.tooltip | translate)\n            \"\n            [tooltip]=\"packageContentState?.tooltip | translate\"\n            placement=\"bottom\"\n            [delay]=\"500\"\n          >\n            <span [ngClass]=\"packageContentState?.class\" class=\"label\">\n              {{ packageContentState?.label | translate }}\n            </span>\n          </button>\n        </div>\n\n        <div class=\"flex-grow col-10\">\n          <div class=\"content-flex-80\">\n            <div class=\"col-5\">\n              <div class=\"card-title text-bold m-b-8\">{{ name | humanizeAppName | async }}</div>\n              <p *ngIf=\"description\">{{ description }}</p>\n              <p *ngIf=\"!description\" class=\"text-muted\">\n                <em>{{ 'No description available.' | translate }}</em>\n              </p>\n            </div>\n            <div *ngIf=\"isPackageBlueprint\" class=\"col-3 text-right-md p-r-md-40\">\n              <button (click)=\"deploy()\" class=\"btn btn-primary btn-sm\">\n                <i c8yIcon=\"output\" class=\"m-r-4\"></i>\n                {{ 'Deploy application' | translate }}\n              </button>\n            </div>\n            <div class=\"flex-grow\">\n              <c8y-properties-list\n                [data]=\"package.manifest\"\n                [properties]=\"packageProperties\"\n              ></c8y-properties-list>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll\">\n    <div class=\"card-header separator sticky-top\">\n      <div class=\"card-title\">{{ 'Extension package overview' | translate }}</div>\n    </div>\n    <div class=\"card-block p-l-16 p-r-16\">\n      <c8y-ui-empty-state\n        *ngIf=\"!markdown\"\n        [icon]=\"'user-manual'\"\n        [title]=\"'No README.md found' | translate\"\n        [subtitle]=\"\n          'To view the contents of &quot;README&quot;, add the file &quot;README.md&quot; to the package.'\n            | translate\n        \"\n        [horizontal]=\"true\"\n      ></c8y-ui-empty-state>\n      <div\n        [innerHTML]=\"markdown | markdownToHtml: { baseUrl } | async\"\n        class=\"markdown-content\"\n      ></div>\n    </div>\n    <div class=\"separator-bottom visible-sm visible-xs\"></div>\n  </div>\n\n  <div class=\"inner-scroll d-flex d-col\">\n    <div class=\"card-header separator sticky-top\">\n      <div class=\"card-title\">{{ 'Package plugins' | translate }}</div>\n    </div>\n    <div class=\"border-left flex-grow\">\n      <!-- empty state -->\n      <div class=\"p-16\" *ngIf=\"(exportedPlugins$ | async).length === 0\">\n        <c8y-ui-empty-state\n          [icon]=\"'plugin'\"\n          [title]=\"'No plugins to display.' | translate\"\n          [subtitle]=\"'This package doesn\\'t contain plugins.' | translate\"\n          [horizontal]=\"true\"\n        ></c8y-ui-empty-state>\n      </div>\n      <c8y-plugin-list\n        [plugins$]=\"exportedPlugins$\"\n        [selectable]=\"false\"\n        [installable]=\"true\"\n        [package]=\"package\"\n      ></c8y-plugin-list>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { IApplication } from '@c8y/client';\nimport { gettext, Permissions, WizardModalService } from '@c8y/ngx-components';\nimport { ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport {\n  APP_STATE,\n  EcosystemService,\n  EcosystemWizards,\n  defaultPackageContents,\n  defaultPackageTypes,\n  FilterPipe,\n  PackageFilters,\n  ListFiltersComponent\n} from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-packages-list',\n  templateUrl: './packages-list.component.html'\n})\nexport class PackagesListComponent implements OnDestroy {\n  reloading = false;\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n\n  packages$: Observable<IApplication[]>;\n  filteredPackages$: Observable<IApplication[]>;\n  listClass: string;\n  hasAdminPermissions = false;\n  emptyStateSubtitle = gettext('Add your first package by clicking below.');\n  packageTypes = defaultPackageTypes;\n  packageAvailabilities: (keyof PackageFilters['availability'])[] = [\n    APP_STATE.SUBSCRIBED.label,\n    APP_STATE.CUSTOM.label\n  ];\n  packageContents = defaultPackageContents;\n  @ViewChild(ListFiltersComponent) filtersComponent: ListFiltersComponent;\n  private destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private ecosystemService: EcosystemService,\n    private wizardModalService: WizardModalService,\n    private permissions: Permissions\n  ) {\n    this.packages$ = this.reload$.pipe(\n      takeUntil(this.destroy$),\n      tap(() => (this.reloading = true)),\n      switchMap(() => this.ecosystemService.getPackageApplications()),\n      tap(() => (this.reloading = false)),\n      shareReplay(1)\n    );\n  }\n\n  ngOnInit() {\n    this.hasAdminPermissions = this.permissions.hasRole('ROLE_APPLICATION_MANAGEMENT_ADMIN');\n    this.loadPackages();\n  }\n\n  loadPackages() {\n    this.reload$.next();\n  }\n\n  addPackage() {\n    const initialState: Record<string, unknown> = {\n      id: EcosystemWizards.PACKAGE_UPLOAD\n    };\n    const modalOptions: ModalOptions = { initialState };\n\n    const modalRef = this.wizardModalService.show(modalOptions);\n    modalRef.content.onClose.subscribe(() => {\n      this.loadPackages();\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  setFilterPipe(pipe: FilterPipe) {\n    this.filteredPackages$ = this.packages$.pipe(src => pipe(src));\n  }\n\n  resetFilters() {\n    this.filtersComponent?.resetAllFilters();\n  }\n}\n","<c8y-title>{{ 'Extensions' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'big-parcel'\"\n    [path]=\"'ecosystem/extension/extensions'\"\n    [label]=\"'Extensions' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"hasAdminPermissions\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Add extension package' | translate }}\"\n    (click)=\"addPackage()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add extension package' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    type=\"button\"\n    title=\"{{ 'Reload' | translate }}\"\n    (click)=\"loadPackages()\"\n  >\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"p-r-8 p-l-8\">\n  <c8y-list-filters\n    *ngIf=\"packages$ | async\"\n    [packageTypes]=\"packageTypes\"\n    [packageAvailabilities]=\"packageAvailabilities\"\n    [packageContents]=\"packageContents\"\n    (filterPipeChange)=\"setFilterPipe($event)\"\n  ></c8y-list-filters>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(packages$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/administration/#extensions\"></c8y-help>\n\n<div class=\"card-group\" [ngClass]=\"listClass\">\n  <div\n    class=\"page-sticky-header hidden-xs d-flex m-b-8\"\n    *ngIf=\"(filteredPackages$ | async)?.length > 0\"\n  >\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Package' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80 m-r-40\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div class=\"col-xs-12 col-sm-4 col-md-3\" *ngFor=\"let app of filteredPackages$ | async\">\n    <c8y-application-card\n      class=\"d-contents\"\n      (onAppDeleted)=\"loadPackages()\"\n      (onAppCloned)=\"loadPackages()\"\n      [app]=\"app\"\n    ></c8y-application-card>\n  </div>\n</div>\n\n<c8y-ui-empty-state\n  *ngIf=\"(packages$ | async)?.length === 0\"\n  [icon]=\"'big-parcel'\"\n  [title]=\"'No extensions to display.' | translate\"\n  [subtitle]=\"hasAdminPermissions ? (emptyStateSubtitle | translate) : ''\"\n>\n  <div *ngIf=\"hasAdminPermissions\">\n    <button\n      class=\"btn btn-primary\"\n      type=\"button\"\n      title=\"{{ 'Add extension package' | translate }}\"\n      (click)=\"addPackage()\"\n    >\n      {{ 'Add extension package' | translate }}\n    </button>\n  </div>\n</c8y-ui-empty-state>\n\n<c8y-ui-empty-state\n  *ngIf=\"(packages$ | async)?.length > 0 && (filteredPackages$ | async)?.length === 0\"\n  [icon]=\"'search'\"\n  [title]=\"'No matching extensions.' | translate\"\n  [subtitle]=\"'Refine your search terms and/or the filters' | translate\"\n>\n  <button\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Reset filters' | translate }}\"\n    (click)=\"resetFilters()\"\n  >\n    {{ 'Reset filters' | translate }}\n  </button>\n</c8y-ui-empty-state>\n","import { Component, Input } from '@angular/core';\nimport { IManifest } from '@c8y/client';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApplicationPlugin } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-contents-plugins',\n  templateUrl: './contents-plugins.component.html'\n})\nexport class PackageVersionsPluginsComponent {\n  @Input('selectedVersionManifest') selectedVersionManifest: IManifest;\n  exportedPlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n\n  async ngOnChanges() {\n    this.exportedPlugins$.next(this.getExportedPlugins());\n  }\n\n  private getExportedPlugins() {\n    return this.selectedVersionManifest?.exports || [];\n  }\n}\n","<p class=\"legend form-block\">\n  {{ 'Plugins' | translate }}\n</p>\n<!-- empty state -->\n<c8y-ui-empty-state\n  *ngIf=\"(exportedPlugins$ | async).length === 0\"\n  [icon]=\"'plugin'\"\n  [horizontal]=\"true\"\n  [title]=\"'No plugins to display.' | translate\"\n  [subtitle]=\"'This package doesn\\'t contain plugins.' | translate\"\n></c8y-ui-empty-state>\n\n<c8y-plugin-list [plugins$]=\"exportedPlugins$\" [selectable]=\"false\"></c8y-plugin-list>\n","import { IManifest } from '@c8y/client';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-contents-apps',\n  templateUrl: './contents-apps.component.html'\n})\nexport class PackageVersionsAppsComponent {\n  @Input('selectedVersionManifest') selectedVersionManifest: IManifest;\n}\n","<p class=\"legend form-block\">\n  {{ 'Application' | translate }}\n</p>\n\n<div  *ngIf=\"selectedVersionManifest?.name; else emptyApp\">\n  <c8y-li>\n    <c8y-li-icon icon=\"big-parcel\"></c8y-li-icon>\n    <h5 class=\"text-medium text-16 p-b-8\">\n      {{ selectedVersionManifest?.name | humanizeAppName | async }}\n      <small class=\"m-l-8\" *ngIf=\"selectedVersionManifest?.requiredPlatformVersion\">\n        <em>{{ selectedVersionManifest?.requiredPlatformVersion }}</em>\n      </small>\n    </h5>\n    <p *ngIf=\"selectedVersionManifest?.description; else notAvailable\">\n      {{ selectedVersionManifest?.description }}\n    </p>\n  </c8y-li>\n</div>\n\n<ng-template #notAvailable>\n  <p class=\"text-muted\">\n    <em>{{ 'No description available.' | translate }}</em>\n  </p>\n</ng-template>\n\n<ng-template #emptyApp>\n  <c8y-ui-empty-state\n  [icon]=\"'big-parcel'\"\n  [horizontal]=\"true\"\n  [title]=\"'No application.' | translate\"\n  [subtitle]=\"'This package doesn\\'t contain an application.' | translate\"\n  ></c8y-ui-empty-state>\n</ng-template>","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApplicationService, IApplication, IManifest } from '@c8y/client';\nimport { AlertService, ContextRouteService, PropertiesListItem } from '@c8y/ngx-components';\nimport { packageProperties } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-package-contents',\n  templateUrl: './packages-contents.component.html'\n})\nexport class PackageContentsComponent {\n  @Input() selectedVersion: string;\n  selectedVersionManifest: IManifest;\n  package: IApplication = {};\n  isLoading = false;\n\n  readonly packageVersionProperties: PropertiesListItem[] = packageProperties;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private applicationService: ApplicationService,\n    private alertService: AlertService,\n    private contextRouteService: ContextRouteService\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.selectedVersion.currentValue) {\n      this.loadManifest(this.selectedVersion);\n    }\n    this.selectedVersionManifest = undefined;\n  }\n\n  async loadManifest(version: string) {\n    this.package = this.contextRouteService.getContextData(this.activatedRoute)?.contextData;\n    this.isLoading = true;\n    this.selectedVersionManifest = await this.getManifest(version);\n    this.isLoading = false;\n  }\n\n  private async getManifest(version: string): Promise<IManifest> {\n    try {\n      return await this.applicationService.getAppManifest(this.package, version);\n    } catch (error) {\n      this.alertService.addServerFailure(error);\n    }\n    return undefined;\n  }\n}\n","<div class=\"inner-scroll\">\n  <ng-container *ngIf=\"!selectedVersionManifest && !isLoading\">\n    <div class=\"p-16\">\n      <c8y-ui-empty-state\n        [icon]=\"'big-parcel'\"\n        [horizontal]=\"true\"\n        [title]=\"'No package selected' | translate\"\n        [subtitle]=\"'Select a package from the list to display the package contents.' | translate\"\n      ></c8y-ui-empty-state>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isLoading\">\n    <c8y-loading></c8y-loading>\n  </ng-container>\n\n  <ng-container *ngIf=\"selectedVersionManifest && !isLoading\">\n    <!-- DETAILS -->\n    <div class=\"card-block p-t-0\">\n      <c8y-properties-list\n        [data]=\"selectedVersionManifest\"\n        [emptyLabel]=\"'--'\"\n        [properties]=\"packageVersionProperties\"\n      >\n      </c8y-properties-list>\n      \n        <!-- APPS -->\n      <c8y-contents-apps\n      class=\"p-t-16 d-block\"\n      [selectedVersionManifest]=\"selectedVersionManifest\"\n      ></c8y-contents-apps>\n\n      <!-- PLUGINS -->\n      <c8y-contents-plugins\n      class=\"p-t-16 d-block\"\n      [selectedVersionManifest]=\"selectedVersionManifest\"\n      ></c8y-contents-plugins>\n    </div>\n  </ng-container>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IApplication, IApplicationVersion } from '@c8y/client';\nimport {\n  AlertService,\n  GainsightService,\n  ModalService,\n  OptionsService,\n  Permissions,\n  PluginsService,\n  Status,\n  gettext\n} from '@c8y/ngx-components';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst DEFAULT_VERSIONS_LIMIT = 20;\n\n@Component({\n  selector: 'c8y-package-versions-list',\n  templateUrl: './package-versions-list.component.html'\n})\nexport class PackageVersionsListComponent implements OnInit {\n  CURRENT_LOCATION = location.href;\n\n  versionsLimit: number;\n  isLoading = false;\n  package: IApplication;\n  sortedVersions: IApplicationVersion[];\n  selectedVersion: string;\n  preUploadCallback: () => Promise<any>;\n  hasAdminPermissions = false;\n  isPackageOwnedByCurrentTenant = false;\n\n  @Output() onVersionSelect = new EventEmitter<string | null>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private pluginsService: PluginsService,\n    private ecosystemService: EcosystemService,\n    private translateService: TranslateService,\n    private modal: ModalService,\n    private alertService: AlertService,\n    private optionsService: OptionsService,\n    private permissions: Permissions,\n    private gainsightService: GainsightService\n  ) {}\n\n  async ngOnInit() {\n    this.isLoading = true;\n    this.hasAdminPermissions = this.permissions.hasRole('ROLE_APPLICATION_MANAGEMENT_ADMIN');\n    this.package = this.activatedRoute?.snapshot?.parent?.data?.contextData;\n    this.isPackageOwnedByCurrentTenant = this.ecosystemService.isOwner(this.package);\n    this.versionsLimit = (await this.optionsService.getSystemOption(\n      'application',\n      'versions.limit',\n      DEFAULT_VERSIONS_LIMIT\n    )) as number;\n    this.sortVersions();\n    this.isLoading = false;\n  }\n\n  async downloadArchive(appVersion: IApplicationVersion): Promise<void> {\n    this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n      component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n      action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.DOWNLOAD,\n      url: this.CURRENT_LOCATION\n    });\n    const archiveMO = await this.ecosystemService.getArchiveManagedObject(appVersion.binaryId);\n    await this.ecosystemService.downloadArchive(this.package, {\n      id: appVersion.binaryId,\n      name: archiveMO.name\n    });\n  }\n\n  packageVersionUploaded() {\n    this.activatedRoute.snapshot.parent.data.contextData = this.package;\n    this.sortVersions();\n    this.setUploadedVersionAsLatest();\n  }\n\n  selectVersion(version: string | null): void {\n    this.selectedVersion = version;\n    this.onVersionSelect.emit(version);\n  }\n\n  async removeVersionPackage(version: string) {\n    try {\n      await this.ecosystemService.deletePackageVersion(this.package, { version });\n      this.alertService.success(\n        this.translateService.instant(gettext('Package version {{version}} has been removed'), {\n          version\n        })\n      );\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.DELETE,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SUCCESS,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (e) {\n      this.alertService.addServerFailure(e);\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.DELETE,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n        url: this.CURRENT_LOCATION\n      });\n    }\n    if (version === this.selectedVersion) {\n      this.selectVersion(null);\n    }\n    await this.refreshPackage();\n  }\n\n  async setVersionAsLatest(appVersion: IApplicationVersion) {\n    try {\n      await this.ecosystemService.setPackageVersionTag(this.package, appVersion.version, [\n        ...appVersion.tags,\n        'latest'\n      ]);\n\n      // TODO added it due to: https://cumulocity.atlassian.net/browse/MTM-48553\n      // Remove it when BE fixes issues with activeVersion.\n      await this.ecosystemService.setAppActiveVersion(this.package, appVersion.binaryId);\n      this.alertService.success(gettext('Tag has been set.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.SET_AS_LATEST,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SUCCESS,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (e) {\n      this.alertService.addServerFailure(e);\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.SET_AS_LATEST,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n        url: this.CURRENT_LOCATION\n      });\n      return;\n    }\n    await this.refreshPackage();\n  }\n\n  async acknowledgeLimitReached() {\n    await this.modal.acknowledge(\n      gettext('Package limit exceeded'),\n      this.translateService.instant(\n        gettext(\n          'You have reached the maximum number of {{ versionsLimit }} package versions. To add another version, first delete one from the list.'\n        ),\n        { versionsLimit: this.versionsLimit }\n      ),\n      Status.INFO,\n      gettext('Close')\n    );\n    throw undefined;\n  }\n\n  private async refreshPackage() {\n    this.isLoading = true;\n    this.package = await this.ecosystemService.getApplication(this.package.id);\n    this.activatedRoute.snapshot.parent.data.contextData = this.package;\n    this.sortVersions();\n    this.isLoading = false;\n  }\n\n  private sortVersions() {\n    this.sortedVersions = this.pluginsService.sortVersions(\n      {\n        list: this.package.applicationVersions,\n        path: ['version']\n      },\n      'desc'\n    );\n    this.toggleUploadPossibility();\n  }\n\n  private async setUploadedVersionAsLatest() {\n    const uploadedVersion =\n      this.package.applicationVersions[this.package.applicationVersions.length - 1];\n    try {\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.PACKAGE_VERSIONS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.PACKAGE_VERSIONS,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.UPLOAD,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SUCCESS,\n        url: this.CURRENT_LOCATION\n      });\n      await this.modal.confirm(\n        gettext('Upload successful'),\n        this.translateService.instant(\n          gettext(\n            'Do you want to set version {{version}} as the latest? Deploying a new application will always use this version.'\n          ),\n          { version: uploadedVersion.version }\n        ),\n        Status.SUCCESS,\n        {\n          ok: gettext('Set as latest`version`'),\n          cancel: gettext('Keep unchanged`version`')\n        }\n      );\n    } catch (e) {\n      // on cancel: do nothing\n      return;\n    }\n    await this.setVersionAsLatest(uploadedVersion);\n  }\n\n  private toggleUploadPossibility() {\n    this.preUploadCallback =\n      this.sortedVersions.length < this.versionsLimit\n        ? null\n        : this.acknowledgeLimitReached.bind(this);\n  }\n}\n","<div class=\"inner-scroll split-view__list\">\n  <div class=\"card-header separator sticky-top bg-component\">\n    <div class=\"card-title\" translate>Versions</div>\n  </div>\n\n  <div class=\"bg-level-1 flex-grow\">\n    <div class=\"p-16\" *ngIf=\"isLoading\">\n      <c8y-loading></c8y-loading>\n    </div>\n    <ul class=\"nav c8y-nav-stacked\" *ngIf=\"!isLoading\">\n      <li\n        class=\"c8y-stacked-item p-t-0 p-b-0 p-r-4\"\n        [ngClass]=\"{ active: selectedVersion === applicationVersion.version }\"\n        *ngFor=\"let applicationVersion of sortedVersions\"\n      >\n        <div\n          class=\"flex-grow d-flex a-i-center gap-4 p-t-8 p-b-8\"\n          (click)=\"selectVersion(applicationVersion.version)\"\n        >\n          <i c8yIcon=\"big-parcel\" class=\"icon-20\"></i>\n          <span class=\"text-label-small\">\n            {{ 'Version' | translate }}\n          </span>\n          <span class=\"text-medium\">{{ applicationVersion.version }}</span>\n          <div class=\"text-truncate d-flex j-c-end flex-grow gap-4 flex-wrap m-l-auto\">\n            <span *ngFor=\"let tag of applicationVersion.tags\" class=\"label label-info\">\n              {{ tag }}\n            </span>\n          </div>\n        </div>\n        <div class=\"dropdown\" dropdown *ngIf=\"hasAdminPermissions && isPackageOwnedByCurrentTenant\">\n          <button\n            class=\"dropdown-toggle c8y-dropdown\"\n            type=\"button\"\n            title=\"{{ 'Settings' | translate }}\"\n            dropdownToggle\n          >\n            <i c8yIcon=\"ellipsis-v\"></i>\n          </button>\n          <ul *dropdownMenu class=\"dropdown-menu dropdown-menu-right\">\n            <li>\n              <button\n                type=\"button\"\n                title=\"{{ 'Set as latest`version`' | translate }}\"\n                (click)=\"setVersionAsLatest(applicationVersion)\"\n                [disabled]=\"applicationVersion.tags?.includes('latest')\"\n              >\n                <i c8yIcon=\"collect\" class=\"m-r-4\"></i>\n                {{ 'Set as latest`version`' | translate }}\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                title=\"{{ 'Download' | translate }}\"\n                (click)=\"downloadArchive(applicationVersion)\"\n              >\n                <i c8yIcon=\"download\" class=\"m-r-4\"></i>\n                {{ 'Download' | translate }}\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                title=\"{{ 'Delete' | translate }}\"\n                (click)=\"removeVersionPackage(applicationVersion.version)\"\n                [disabled]=\"applicationVersion.tags?.includes('latest')\"\n              >\n                <i c8yIcon=\"trash\" class=\"m-r-4\"></i>\n                {{ 'Delete' | translate }}\n              </button>\n            </li>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div\n    class=\"card-footer separator sticky-bottom\"\n    *ngIf=\"!isLoading && isPackageOwnedByCurrentTenant\"\n  >\n    <div class=\"form-group m-b-0\">\n      <label translate>Upload a new version</label>\n      <c8y-upload-archive\n        [(application)]=\"package\"\n        [uploadNewVersion]=\"true\"\n        (refresh)=\"packageVersionUploaded()\"\n        [preUploadCallback]=\"preUploadCallback\"\n      ></c8y-upload-archive>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IApplication } from '@c8y/client';\nimport { ContextRouteService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-package-versions',\n  templateUrl: './packages-versions.component.html'\n})\nexport class PackageVersionsComponent {\n  package: IApplication = {};\n  selectedVersion: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private contextRouteService: ContextRouteService\n  ) {}\n\n  async ngOnInit() {\n    this.package = this.contextRouteService.getContextData(this.activatedRoute)?.contextData;\n  }\n\n  clearSelectedVersion() {\n    this.selectedVersion = null;\n  }\n\n  selectVersion(version: string) {\n    this.selectedVersion = version;\n  }\n}\n","<c8y-title>{{ package?.name | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'big-parcel'\"\n    [label]=\"'Extensions' | translate\"\n    [path]=\"'ecosystem/extension/extensions'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"package?.name | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Versions' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"card content-fullpage split-view--5-7 grid__row--1\">\n  <c8y-package-versions-list\n    class=\"d-contents\"\n    (onVersionSelect)=\"selectVersion($event)\"\n  ></c8y-package-versions-list>\n\n  <div\n    class=\"inner-scroll split-view__detail\"\n    [ngClass]=\"{ 'split-view__detail--selected': selectedVersion }\"\n  >\n    <div class=\"large-padding card-header separator visible-sm visible-xs fit-w sticky-top\">\n      <div class=\"d-flex a-i-center\">\n        <button\n          title=\"{{ 'Back' | translate }}\"\n          class=\"btn btn-clean text-primary m-r-8\"\n          (click)=\"clearSelectedVersion()\"\n        >\n          <i c8yIcon=\"chevron-left\"></i>\n          <span translate>Back</span>\n        </button>\n        <div class=\"card-title\" translate>Package contents</div>\n      </div>\n    </div>\n    <div class=\"card-header large-padding separator sticky-top visible-md visible-lg\">\n      <div class=\"card-title\" translate>Package contents</div>\n    </div>\n    <div class=\"inner-scroll split-view__list\">\n      <c8y-package-contents [selectedVersion]=\"selectedVersion\"></c8y-package-contents>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Injectable()\nexport class PackageGuard implements CanActivate {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const app = route.data.contextData || route.parent.data.contextData;\n    if (!app) {\n      return false;\n    }\n    return this.ecosystemService.isPackage(app);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class PackageVersionsGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot) {\n    const app = route.data.contextData || route.parent.data.contextData;\n    return !!app?.applicationVersions?.length;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApplicationPlugin } from '@c8y/ngx-components';\n\n@Pipe({\n  name: 'onlyLatestPluginVersion'\n})\nexport class OnlyLatestPluginVersionPipe implements PipeTransform {\n  transform(\n    value: Observable<ApplicationPlugin[]>,\n    disabled?: boolean\n  ): Observable<ApplicationPlugin[]> {\n    if (disabled) {\n      return value;\n    }\n\n    return value.pipe(map(list => list.filter(plugin => !!plugin.tags?.includes('latest'))));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalService, ApplicationPlugin } from '@c8y/ngx-components';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { map } from 'rxjs/operators';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-install-plugin',\n  templateUrl: './install-plugin.component.html'\n})\nexport class InstallPluginComponent implements OnInit {\n  @Input() plugins$: BehaviorSubject<ApplicationPlugin[]>;\n  filterTerm$: BehaviorSubject<string> = new BehaviorSubject('');\n  filteredPlugins$: Observable<ApplicationPlugin[]> = new BehaviorSubject([]);\n  selectedPlugins: ApplicationPlugin[] = [];\n  result: Promise<ApplicationPlugin[]> = new Promise((resolve, reject) => {\n    this._install = resolve;\n    this._cancel = reject;\n  });\n  onlyLatestPluginVersion = true;\n  private _install;\n  private _cancel;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private modal: ModalService,\n    private ecosystemService: EcosystemService\n  ) {}\n\n  ngOnInit() {\n    this.filteredPlugins$ = combineLatest([this.plugins$, this.filterTerm$]).pipe(\n      map(([plugins, filterTerm]) =>\n        filterTerm.trim().length === 0\n          ? plugins\n          : plugins.filter((plugin: ApplicationPlugin) =>\n              this.ecosystemService.filterContainString(plugin.name, filterTerm)\n            )\n      )\n    );\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  install() {\n    this._install(this.selectedPlugins);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'plugin'\"></i>\n    <div id=\"modal-title\" class=\"modal-title h4\" translate>Available plugins</div>\n  </div>\n  <div class=\"p-t-8 p-16 text-center separator-bottom flex-no-shrink\">\n    <p class=\"text-medium m-b-8\" translate>Select the compatible plugins to install</p>\n    <label class=\"c8y-switch\">\n      <input type=\"checkbox\" [(ngModel)]=\"onlyLatestPluginVersion\" />\n      <span></span>\n      <span translate>Only latest version of plugins</span>\n    </label>\n    <c8y-filter (onSearch)=\"this.filterTerm$.next($event)\"></c8y-filter>\n  </div>\n  <div class=\"modal-inner-scroll\" id=\"modal-body\">\n    <c8y-plugin-list\n      (selectedItems)=\"selectedPlugins = $event\"\n      [emptyListText]=\"'No plugins available' | translate\"\n      [plugins$]=\"filteredPlugins$ | onlyLatestPluginVersion: !onlyLatestPluginVersion\"\n      [selectable]=\"true\"\n      class=\"m-t-16\"\n    ></c8y-plugin-list>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"cancel()\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      (click)=\"install()\"\n      [disabled]=\"selectedPlugins.length === 0\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Install' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Install' | translate }}\n      <span class=\"badge\" *ngIf=\"selectedPlugins.length as length\">{{ length }}</span>\n    </button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-label-cell-renderer',\n  templateUrl: './label-cell-renderer.component.html'\n})\nexport class LabelCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","<span class=\"label label-info\">{{ context.value }}</span>\n","import { Component } from '@angular/core';\nimport { ApplicationPluginStatus, CellRendererContext, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-orphaned-status-cell-renderer',\n  templateUrl: './orphaned-status-cell-renderer.component.html'\n})\nexport class OrphanedStatusCellRendererComponent {\n  label: { value: string; class: string; text: string } | null;\n  constructor(public context: CellRendererContext) {\n    this.label = this.getLabel(context.value);\n  }\n\n  private getLabel(statusValue: ApplicationPluginStatus): {\n    value: string;\n    class: string;\n    text: string;\n  } | null {\n    switch (statusValue) {\n      case ApplicationPluginStatus.OUTDATED:\n        return {\n          value: statusValue,\n          text: gettext('OUTDATED`plugin status`'),\n          class: 'label-warning'\n        };\n      case ApplicationPluginStatus.ORPHANED:\n        return {\n          value: statusValue,\n          text: gettext('ORPHANED`plugin status`'),\n          class: 'label-danger'\n        };\n      case ApplicationPluginStatus.REVOKED:\n        return {\n          value: statusValue,\n          text: gettext('REVOKED`plugin status`'),\n          class: 'label-danger'\n        };\n      case ApplicationPluginStatus.LATEST:\n        return {\n          value: statusValue,\n          text: gettext('LATEST`plugin status`'),\n          class: 'label-success'\n        };\n      default:\n        return null;\n    }\n  }\n}\n","<span\n  *ngIf=\"label\"\n  class=\"label\"\n  [ngClass]=\"label.class\"\n  [title]=\"label.text | translate\"\n>\n  {{ label.text | translate }}\n</span>\n","import { Component } from '@angular/core';\nimport { ApplicationRemotePlugins, IApplication, IApplicationVersion } from '@c8y/client';\nimport {\n  AlertService,\n  ApplicationPlugin,\n  GainsightService,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { uniq } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\n\n@Component({\n  selector: 'c8y-update-plugin-of-app',\n  templateUrl: './update-plugin-of-app.component.html'\n})\nexport class UpdatePluginOfAppComponent {\n  CURRENT_LOCATION = location.href;\n\n  app: IApplication;\n  plugin: ApplicationPlugin;\n  downgrade: boolean;\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._install = resolve;\n    this._cancel = reject;\n  });\n  applicationVersion: IApplicationVersion;\n  updateAll = true;\n\n  private _install: () => void;\n  private _cancel: (reason?: any) => void;\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private pluginsService: PluginsService,\n    private alert: AlertService,\n    private ecosystemService: EcosystemService,\n    private gainsightService: GainsightService\n  ) {}\n\n  async update() {\n    const remotes = this.pluginsService.getMFRemotes(this.app);\n    const oldRemotePath = `${this.plugin.contextPath}@${this.plugin.version}`;\n    const newRemotePath = `${this.plugin.contextPath}@${this.applicationVersion.version}`;\n    let oldRemoteModules = [...(remotes[oldRemotePath] || [])];\n    if (!oldRemoteModules.length) {\n      this.alert.warning(gettext('Could not change the version of plugin.'));\n      this.cancel();\n      return;\n    }\n\n    const result = await this.ecosystemService.verifyLicenses([this.plugin]);\n    if (!result) {\n      this.alert.warning(gettext('Plugin update aborted by user.'));\n      this.cancel();\n      return;\n    }\n\n    let remoteModulesOfNewVersion = [...(remotes[newRemotePath] || [])];\n    let olderVersions: ApplicationRemotePlugins = {};\n    if (this.updateAll) {\n      olderVersions = Object.keys(remotes)\n        .filter(key => key.startsWith(`${this.plugin.contextPath}@`))\n        .reduceRight((prev, curr) => {\n          prev[curr] = undefined;\n          return prev;\n        }, {});\n\n      oldRemoteModules = Object.keys(olderVersions)\n        .map(version => remotes[version])\n        .reduceRight((prev, curr) => {\n          prev.push(...curr);\n          return prev;\n        }, []);\n      remoteModulesOfNewVersion.push(...oldRemoteModules);\n    } else {\n      remoteModulesOfNewVersion.push(this.plugin.module);\n      olderVersions[oldRemotePath] = oldRemoteModules.filter(\n        module => module !== this.plugin.module\n      );\n      if (!olderVersions[oldRemotePath].length) {\n        olderVersions[oldRemotePath] = undefined;\n      }\n    }\n\n    remoteModulesOfNewVersion = uniq(remoteModulesOfNewVersion);\n    const newRemotes: ApplicationRemotePlugins = {\n      ...remotes,\n      ...olderVersions,\n      [newRemotePath]: remoteModulesOfNewVersion\n    };\n\n    try {\n      await this.pluginsService.updateRemotesInAppConfig(this.app, newRemotes);\n      this.alert.success(gettext(`Switched the version of plugin.`));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.UPDATE_PLUGIN_OF_APP,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.CHANGE_PLUGIN_VERSION,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_VERSION_CHANGED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (e) {\n      this.alert.addServerFailure(e);\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.UPDATE_PLUGIN_OF_APP,\n        action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.CHANGE_PLUGIN_VERSION,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n        url: this.CURRENT_LOCATION\n      });\n    }\n\n    this.bsModalRef.hide();\n    this._install();\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n}\n","<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'c8y-modules'\"></i>\n    <h4 *ngIf=\"!downgrade\" id=\"modal-title\" translate>Update plugin</h4>\n    <h4 *ngIf=\"downgrade\" id=\"modal-title\" translate>Downgrade plugin</h4>\n  </div>\n  <div class=\"inner-scroll\" id=\"modal-body\">\n    <div class=\"p-16\">\n      <div class=\"d-block fit-w bg-gray-white\">\n        <c8y-package-version-select\n          [packageContextPath]=\"plugin?.contextPath\"\n          [(ngModel)]=\"applicationVersion\"\n        ></c8y-package-version-select>\n        <div\n          *ngIf=\"plugin?.version && plugin.version === applicationVersion?.version\"\n          class=\"alert alert-info\"\n          role=\"alert\"\n        >\n          <span translate ngNonBindable [translateParams]=\"applicationVersion\">\n            Select another version, as {{ version }} is currently used.\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"c8y-checkbox\">\n          <input [(ngModel)]=\"updateAll\" type=\"checkbox\" />\n          <span></span>\n          <span translate ngNonBindable [translateParams]=\"plugin\">\n            Set version for all plugins using the same context path \"{{ contextPath }}\".\n          </span>\n        </label>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      type=\"button\"\n      (click)=\"cancel()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ 'Set version' | translate }}\"\n      [disabled]=\"!applicationVersion || plugin?.version === applicationVersion?.version\"\n      (click)=\"update()\"\n    >\n      {{ 'Set version' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApplicationRemotePlugins, IApplication } from '@c8y/client';\nimport {\n  ActionControl,\n  AlertService,\n  ApplicationPlugin,\n  ApplicationPluginStatus,\n  BulkActionControl,\n  Column,\n  DataGridComponent,\n  DisplayOptions,\n  GainsightService,\n  HeaderActionControl,\n  Pagination,\n  PluginsService,\n  gettext\n} from '@c8y/ngx-components';\nimport { EcosystemService, PRODUCT_EXPERIENCE } from '@c8y/ngx-components/ecosystem/shared';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { InstallPluginComponent } from './install-plugin.component';\nimport { LabelCellRendererComponent } from './label-cell-renderer.component';\nimport { OrphanedStatusCellRendererComponent } from './orphaned-status-cell-renderer.component';\nimport { UpdatePluginOfAppComponent } from './update-plugin-of-app/update-plugin-of-app.component';\n\n@Component({\n  selector: 'c8y-app-plugins',\n  templateUrl: './application-plugins.component.html'\n})\nexport class ApplicationPluginsComponent implements OnInit, OnDestroy {\n  PRODUCT_EXPERIENCE = PRODUCT_EXPERIENCE;\n  CURRENT_LOCATION = location.href;\n\n  @Input() appId: string | number;\n  @ViewChild(DataGridComponent, { static: false })\n  dataGrid: DataGridComponent;\n\n  exportedPlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n  remotePlugins$: BehaviorSubject<ApplicationRemotePlugins> = new BehaviorSubject({});\n  allAvailablePlugins$: BehaviorSubject<ApplicationPlugin[]> = new BehaviorSubject([]);\n\n  installedPlugins$: Observable<ApplicationPlugin[]> = combineLatest([\n    this.remotePlugins$.pipe(map(remotes => this.convertInstalledRemotesToIds(remotes))),\n    this.allAvailablePlugins$\n  ]).pipe(\n    map(([remotePlugins, allPlugins]) => this.getInstalledPlugins(allPlugins, remotePlugins)),\n    shareReplay(1)\n  );\n  orphanedPlugins$ = this.installedPlugins$.pipe(\n    map(plugins => plugins.filter(p => p.status === ApplicationPluginStatus.ORPHANED))\n  );\n  app: IApplication;\n  isLoading: boolean;\n  title: string = gettext('Installed plugins');\n  loadMoreItemsLabel: string = gettext('Load more packages');\n  loadingItemsLabel: string = gettext('Loading packages…');\n  actionControls: ActionControl[] = this.getActionControls();\n  bulkActionControls: BulkActionControl[] = this.getBulkActionControls();\n  headerActionControls: HeaderActionControl[] = [];\n  pagination: Pagination = {\n    pageSize: 10,\n    currentPage: 1\n  };\n  displayOptions: DisplayOptions = {\n    bordered: false,\n    striped: true,\n    filter: true,\n    gridHeader: true\n  };\n  columns: Column[] = [\n    {\n      name: 'name',\n      header: gettext('Plugin name'),\n      path: 'name',\n      filterable: true\n    },\n    {\n      name: 'Version',\n      header: gettext('Version'),\n      path: 'displayVersion',\n      filterable: false\n    },\n    {\n      name: 'description',\n      header: gettext('Description'),\n      path: 'description',\n      filterable: false,\n      cellCSSClassName: 'small'\n    },\n    {\n      name: 'contextPath',\n      header: gettext('Source'),\n      path: 'contextPath',\n      filterable: false,\n      cellRendererComponent: LabelCellRendererComponent\n    },\n    {\n      name: 'status',\n      header: gettext('Status'),\n      path: 'status',\n      filterable: false,\n      cellRendererComponent: OrphanedStatusCellRendererComponent\n    }\n  ];\n  private destroy$: Subject<any> = new Subject();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private ecosystemService: EcosystemService,\n    private bsModalService: BsModalService,\n    private pluginsService: PluginsService,\n    private alertService: AlertService,\n    private gainsightService: GainsightService\n  ) {}\n\n  ngOnInit() {\n    this.addInstallButtonToHeaderActionControls();\n    this.loadData();\n  }\n\n  async loadData() {\n    this.isLoading = true;\n    await this.getApplicationMO();\n    await this.getApplicationMFExports(this.app);\n    await this.getApplicationMFRemotes(this.app);\n    await this.getAllApplicationsMFExports();\n    this.isLoading = false;\n  }\n\n  async installPlugins() {\n    try {\n      const pluginsToAdd: ApplicationPlugin[] =\n        await this.bsModalService.show<InstallPluginComponent>(InstallPluginComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState: this.getInstallModalInitState(),\n          ignoreBackdropClick: true\n        }).content.result;\n\n      const licensesVerifiedByUser = await this.ecosystemService.verifyLicenses(pluginsToAdd);\n      if (!licensesVerifiedByUser) {\n        return;\n      }\n      const verifyVersionCompatibility =\n        await this.ecosystemService.verifyPluginVersionsCompatibility(pluginsToAdd, this.app);\n\n      if (!verifyVersionCompatibility) {\n        return;\n      }\n\n      this.isLoading = true;\n      await this.handleRemotesInstallation(pluginsToAdd);\n\n      this.alertService.success(gettext('Plugins installed.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_INSTALLED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (ex) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n        this.gainsightService.triggerEvent(\n          PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS,\n          {\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n            url: this.CURRENT_LOCATION\n          }\n        );\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async removePlugins(plugins: string[]) {\n    try {\n      this.isLoading = true;\n      const updatedRemotes = await this.pluginsService.removeRemotes(\n        this.app,\n        plugins.map(id => ({ id } as ApplicationPlugin))\n      );\n      this.emitRemotes(updatedRemotes);\n\n      this.isLoading = false;\n      this.dataGrid.cancel();\n      this.alertService.success(gettext('Plugins removed.'));\n      this.gainsightService.triggerEvent(PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS, {\n        component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n        result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.PLUGIN_REMOVED,\n        url: this.CURRENT_LOCATION\n      });\n    } catch (ex) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n        this.gainsightService.triggerEvent(\n          PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS,\n          {\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            result: PRODUCT_EXPERIENCE.APPLICATIONS.RESULTS.SERVER_FAILURE,\n            url: this.CURRENT_LOCATION\n          }\n        );\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async cleanupOrphanedPlugins(plugins: ApplicationPlugin[]) {\n    const pluginIds = plugins.map(p => p.id);\n    await this.removePlugins(pluginIds);\n  }\n\n  getActionControls(): ActionControl[] {\n    return [\n      {\n        type: 'customUpdate',\n        text: gettext('Update'),\n        icon: 'caret-square-o-up',\n        showIf: plugin => {\n          return (\n            plugin.status === ApplicationPluginStatus.OUTDATED ||\n            plugin.status === ApplicationPluginStatus.REVOKED\n          );\n        },\n        callback: plugin => this.updatePlugin(this.app, plugin as ApplicationPlugin)\n      },\n      {\n        type: 'customDowngrade',\n        text: gettext('Downgrade'),\n        icon: 'caret-square-o-down',\n        showIf: plugin => {\n          return plugin.status === ApplicationPluginStatus.LATEST;\n        },\n        callback: plugin => this.updatePlugin(this.app, plugin as ApplicationPlugin, true)\n      }\n    ];\n  }\n\n  getBulkActionControls(): BulkActionControl[] {\n    return [\n      {\n        type: 'customDelete',\n        text: gettext('Remove'),\n        icon: 'trash',\n        callback: plugins => this.removePlugins(plugins)\n      }\n    ];\n  }\n\n  async updatePlugin(app: IApplication, plugin: ApplicationPlugin, downgrade = false) {\n    try {\n      await (\n        this.bsModalService.show(UpdatePluginOfAppComponent, {\n          class: 'modal-sm',\n          ariaDescribedby: 'modal-body',\n          ariaLabelledBy: 'modal-title',\n          initialState: {\n            app,\n            plugin,\n            downgrade\n          },\n          ignoreBackdropClick: true\n        }).content as UpdatePluginOfAppComponent\n      ).result;\n      this.refresh();\n    } catch (er) {\n      return;\n    }\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private addInstallButtonToHeaderActionControls() {\n    if (this.appId) {\n      this.headerActionControls = [\n        {\n          text: gettext('Install plugins'),\n          callback: () => {\n            this.installPlugins();\n          },\n          icon: 'plus-circle',\n          type: 'custom'\n        }\n      ];\n    }\n  }\n\n  private async handleRemotesInstallation(plugins: ApplicationPlugin[]) {\n    // When remotes object is not set in the configuration object of an application.\n    // Fallback to setInitialRemotes is triggered.\n    let updatedRemotes = await this.pluginsService.addRemotes(this.app, plugins);\n\n    if (!updatedRemotes) {\n      // TODO discuss if we need to handle it like that.\n      // Right now remotes from the cumulocity.json are taken into account when remotes object is missing in the configuration.\n      updatedRemotes = await this.pluginsService.setInitialRemotes(this.app);\n      // Fresh application MO is needed, after initial state was set.\n      await this.getApplicationMO();\n      updatedRemotes = await this.pluginsService.addRemotes(this.app, plugins);\n    }\n    return this.emitRemotes(updatedRemotes);\n  }\n\n  private emitRemotes(updatedRemotes: ApplicationRemotePlugins) {\n    this.remotePlugins$.next(updatedRemotes);\n    this.app.config.remotes = updatedRemotes;\n    return { ...this.remotePlugins$.value };\n  }\n\n  private async getApplicationMO(): Promise<IApplication> {\n    let id = this.appId;\n    if (!id) {\n      const { id: routeId } = this.activatedRoute.snapshot.parent.data.contextData;\n      id = routeId;\n    }\n\n    try {\n      this.app = await this.ecosystemService.getApplication(id);\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n    }\n    return this.app;\n  }\n\n  private async getApplicationMFExports(app: IApplication) {\n    const exports = this.pluginsService.getMFExports(app);\n    this.exportedPlugins$.next(exports);\n  }\n\n  private async getApplicationMFRemotes(app: IApplication) {\n    let appConfigRemotes = this.pluginsService.getMFRemotes(app);\n\n    if (!appConfigRemotes) {\n      appConfigRemotes = await this.pluginsService.setInitialRemotes(app);\n      this.app = await this.getApplicationMO();\n    }\n    this.remotePlugins$.next(appConfigRemotes || {});\n  }\n\n  private async getAllApplicationsMFExports() {\n    const allAppsMFExports = await this.pluginsService.getAllMFExports(true);\n    this.allAvailablePlugins$.next(allAppsMFExports);\n  }\n\n  private getInstallModalInitState(): any {\n    return {\n      plugins$: combineLatest([\n        this.allAvailablePlugins$,\n        this.installedPlugins$.pipe(map(plugins => plugins.map(p => p.id))),\n        this.exportedPlugins$.pipe(map(plugins => plugins.map(p => p.id)))\n      ]).pipe(\n        map(([allPlugins, installedPlugins, exportedPluginNames]) => {\n          const plugins = [];\n          allPlugins\n            .filter(p => !exportedPluginNames.includes(p.id))\n            .map(p => plugins.push({ ...p, installed: !!installedPlugins.includes(p.id) }));\n          return plugins;\n        }),\n        shareReplay(1)\n      )\n    };\n  }\n\n  private convertInstalledRemotesToIds(remotes: ApplicationRemotePlugins): string[] {\n    if (!remotes) {\n      return;\n    }\n    const importContextPaths = Object.keys(remotes);\n    const plugins = [];\n    importContextPaths.forEach(contextPath => {\n      const moduleNames = remotes[contextPath];\n      plugins.push(...moduleNames.map(module => this.createId(contextPath, module)));\n    });\n    return plugins;\n  }\n\n  private createId(contextPath: string, pluginModuleName: string): string {\n    return `${contextPath}/${pluginModuleName}`;\n  }\n\n  private getOrphanedPlugins(\n    orphanedPluginIds: string[],\n    allPlugins: ApplicationPlugin[]\n  ): ApplicationPlugin[] {\n    const orphanedPlugins: ApplicationPlugin[] = orphanedPluginIds.map(p => this.extractDetails(p));\n    const orphanedPluginsUpdated = orphanedPlugins.map(p => {\n      const pluginInDifferentVersion = allPlugins.find(\n        tmp => tmp.contextPath === p.contextPath && tmp.module === p.module\n      );\n      if (pluginInDifferentVersion) {\n        return {\n          ...pluginInDifferentVersion,\n          version: p.version || pluginInDifferentVersion.version,\n          id: p.id,\n          status: p.version ? ApplicationPluginStatus.OUTDATED : ApplicationPluginStatus.LATEST\n        };\n      }\n      return p;\n    });\n\n    return orphanedPluginsUpdated;\n  }\n\n  private splitOrphanedPluginsIntoOrphanedAndRevokedPlugins(\n    allPlugins: ApplicationPlugin[],\n    orphanedPlugins: ApplicationPlugin[]\n  ) {\n    const revokedPlugins = new Array<ApplicationPlugin>();\n    const actuallyOrphanedPlugins = new Array<ApplicationPlugin>();\n\n    for (const plugin of orphanedPlugins) {\n      const foundFamiliarPlugin = allPlugins.find(\n        plugin1 => plugin.contextPath === plugin1.contextPath && plugin.module === plugin1.module\n      );\n      if (foundFamiliarPlugin) {\n        revokedPlugins.push(\n          Object.assign({}, foundFamiliarPlugin, plugin, {\n            status: ApplicationPluginStatus.REVOKED\n          })\n        );\n      } else {\n        actuallyOrphanedPlugins.push(plugin);\n      }\n    }\n\n    return { revokedPlugins, actuallyOrphanedPlugins };\n  }\n\n  private getInstalledPlugins(\n    allPlugins: ApplicationPlugin[],\n    remotePlugins: string[]\n  ): ApplicationPlugin[] {\n    const availablePlugins = allPlugins\n      .filter(plugin => remotePlugins.includes(plugin.id))\n      .map(plugin =>\n        Object.assign(plugin, {\n          status: plugin.tags?.includes('latest')\n            ? ApplicationPluginStatus.LATEST\n            : ApplicationPluginStatus.OUTDATED\n        })\n      );\n    const orphanedPluginIds = remotePlugins.filter(\n      r => !availablePlugins.find(plugin => plugin.id === r)\n    );\n    const orphanedPlugins: ApplicationPlugin[] = this.getOrphanedPlugins(\n      orphanedPluginIds,\n      allPlugins\n    );\n\n    const { actuallyOrphanedPlugins, revokedPlugins } =\n      this.splitOrphanedPluginsIntoOrphanedAndRevokedPlugins(allPlugins, orphanedPlugins);\n\n    return [...availablePlugins, ...revokedPlugins, ...actuallyOrphanedPlugins].map(plugin => ({\n      ...plugin,\n      // adding 'v' prefix so version string is not treated as date in data grid\n      displayVersion: 'v' + plugin.version\n    }));\n  }\n\n  private extractDetails(pluginId: string): ApplicationPlugin {\n    const contextPath = this.getStringMatchingRegex(pluginId, /^[^@]*(@|\\/)/);\n    const version = this.getStringMatchingRegex(pluginId, /@.*\\//);\n    const module = this.getStringMatchingRegex(pluginId, /\\/.*$/);\n    const unavailable = gettext('unavailable`plugin`');\n    return {\n      id: pluginId,\n      path: '',\n      module,\n      name: module,\n      status: ApplicationPluginStatus.ORPHANED,\n      contextPath: contextPath,\n      description: unavailable,\n      version: version\n    };\n  }\n\n  private getStringMatchingRegex(\n    str: string,\n    regex: { [Symbol.match](string: string): RegExpMatchArray | null }\n  ): string {\n    const matches = str.match(regex);\n    const value = matches ? matches[0] : '';\n\n    return value.replace(/(@|\\/)/g, '');\n  }\n}\n","<c8y-title>{{ app | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications/application'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"app | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Plugins' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    (click)=\"installPlugins()\"\n    [ngClass]=\"{ 'btn-pending': isLoading }\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Install plugins' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Install plugins' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<ng-container *ngIf=\"orphanedPlugins$ | async as orphanedPlugins\">\n  <c8y-action-bar-item *ngIf=\"orphanedPlugins?.length\" [placement]=\"'right'\">\n    <button\n      (click)=\"cleanupOrphanedPlugins(orphanedPlugins)\"\n      [ngClass]=\"{ 'btn-pending': isLoading }\"\n      class=\"btn btn-link\"\n      title=\"{{ 'Clean up orphaned plugins' | translate }}\"\n    >\n      <i c8yIcon=\"erase\"></i>\n      {{ 'Clean up orphaned plugins' | translate }}\n    </button>\n  </c8y-action-bar-item>\n</ng-container>\n\n<div class=\"content-fullpage d-flex d-col border-top\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [rows]=\"installedPlugins$ | async\"\n    [pagination]=\"pagination\"\n    [selectable]=\"true\"\n    [actionControls]=\"actionControls\"\n    [bulkActionControls]=\"bulkActionControls\"\n    [headerActionControls]=\"headerActionControls\"\n    (onReload)=\"refresh()\"\n    class=\"d-contents\"\n  >\n    <!-- No search/filtered results empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"(installedPlugins$ | async)?.length\"\n      [icon]=\"'search'\"\n      [title]=\"'No plugins to display.' | translate\"\n      [subtitle]=\"'Refine your search terms or check your spelling.' | translate\"\n      [horizontal]=\"true\"\n    >\n    </c8y-ui-empty-state>\n    <!-- No installed plugins empty state -->\n    <c8y-ui-empty-state\n      *ngIf=\"!(installedPlugins$ | async)?.length && !isLoading\"\n      [icon]=\"'plugin'\"\n      [title]=\"'No plugins installed.' | translate\"\n      [subtitle]=\"'This application doesn\\'t have any plugin. Click below to install.' | translate\"\n      [horizontal]=\"true\"\n    >\n      <div class=\"fit-w p-t-16\">\n        <button\n          c8yProductExperience\n          [actionName]=\"PRODUCT_EXPERIENCE.APPLICATIONS.EVENTS.INSTALLED_PLUGINS\"\n          [actionData]=\"{\n            component: PRODUCT_EXPERIENCE.APPLICATIONS.COMPONENTS.APPLICATION_PLUGINS,\n            action: PRODUCT_EXPERIENCE.APPLICATIONS.ACTIONS.INSTALL_PLUGINS,\n            url: CURRENT_LOCATION\n          }\"\n          (click)=\"installPlugins()\"\n          [ngClass]=\"{ 'btn-pending': isLoading }\"\n          class=\"btn btn-primary btn-sm\"\n          title=\"{{ 'Install plugins' | translate }}\"\n          translate\n        >\n          Install plugins\n        </button>\n      </div>\n    </c8y-ui-empty-state>\n  </c8y-data-grid>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { ApplicationType } from '@c8y/client';\nimport { EcosystemService } from '@c8y/ngx-components/ecosystem/shared';\n\n@Injectable()\nexport class ApplicationPluginsGuard implements CanActivate {\n  constructor(private ecosystemService: EcosystemService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const app = route.data.contextData || route.parent.data.contextData;\n    if (!app) {\n      return false;\n    }\n    return (\n      app.type === ApplicationType.HOSTED &&\n      this.ecosystemService.isOwner(app) &&\n      !this.ecosystemService.isPackage(app)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { SharedEcosystemModule } from '@c8y/ngx-components/ecosystem/shared';\nimport { ApplicationPluginsComponent } from './application-plugins.component';\nimport { UpdatePluginOfAppComponent } from './update-plugin-of-app/update-plugin-of-app.component';\nimport { AppStatePipe } from './appState.pipe';\nimport { AppsToUpdateRemotesSelectComponent } from './apps-to-update-remotes-select.component';\nimport { InstallPluginComponent } from './install-plugin.component';\nimport { OrphanedStatusCellRendererComponent } from './orphaned-status-cell-renderer.component';\nimport { PluginListItemComponent } from './plugin-list-item.component';\nimport { PluginListComponent } from './plugin-list.component';\nimport { LabelCellRendererComponent } from './label-cell-renderer.component';\nimport { gettext, hookRoute, ViewContext } from '@c8y/ngx-components';\nimport { ApplicationPluginsGuard } from './application-plugins.guard';\nimport { OnlyLatestPluginVersionPipe } from './only-latest-plugin-version.pipe';\n\n@NgModule({\n  imports: [CoreModule, SharedEcosystemModule],\n  declarations: [\n    ApplicationPluginsComponent,\n    PluginListItemComponent,\n    InstallPluginComponent,\n    PluginListComponent,\n    AppsToUpdateRemotesSelectComponent,\n    AppStatePipe,\n    LabelCellRendererComponent,\n    OrphanedStatusCellRendererComponent,\n    UpdatePluginOfAppComponent,\n    OnlyLatestPluginVersionPipe\n  ],\n  exports: [\n    ApplicationPluginsComponent,\n    PluginListItemComponent,\n    InstallPluginComponent,\n    PluginListComponent,\n    AppsToUpdateRemotesSelectComponent,\n    AppStatePipe,\n    LabelCellRendererComponent,\n    OrphanedStatusCellRendererComponent,\n    UpdatePluginOfAppComponent\n  ],\n  providers: [\n    ApplicationPluginsGuard,\n    hookRoute([\n      {\n        path: 'plugins',\n        component: ApplicationPluginsComponent,\n        icon: 'plugin',\n        label: gettext('Plugins'),\n        context: ViewContext.Application,\n        priority: 3,\n        canActivate: [ApplicationPluginsGuard]\n      }\n    ])\n  ]\n})\nexport class ApplicationPluginsModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CoreModule,\n  FormsModule,\n  gettext,\n  hookNavigator,\n  hookRoute,\n  hookTab,\n  hookWizard,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ActivityLogComponent } from './activity-log/activity-log.component';\nimport { ApplicationPropertiesComponent } from './application-properties/application-properties.component';\nimport { ApplicationPropertiesGuard } from './application-properties/application-properties.guard';\nimport { AddExternalApplicationComponent } from './applications/add-external-applicaiton/add-external-application.component';\nimport { AddWebApplicationComponent } from './applications/add-web-application/add-web-application.component';\nimport { ApplicationListComponent } from './applications/application-list/application-list.component';\nimport { InstallFromPackageComponent } from './applications/install-from-package/install-from-package.component';\nimport { EcosystemNavigationFactory } from './ecosystem-navigation.factory';\nimport { EcosystemTabs } from './ecosystem-tabs.factory';\nimport { FeatureListComponent } from './features/feature-list.component';\nimport { AddMicroserviceComponent } from './microservices/add-microservice.component';\nimport { MicroserviceListComponent } from './microservices/microservice-list.component';\nimport { AddPackageComponent } from './packages/add-package.component';\nimport { DeployApplicationComponent } from './packages/deploy-application/deploy-application.component';\nimport { PackageDetailsComponent } from './packages/package-details/package-details.component';\nimport { PackagesListComponent } from './packages/package-list/packages-list.component';\nimport { PackageVersionsComponent } from './packages/package-versions/packages-versions.component';\nimport { PackageContentsComponent } from './packages/package-versions/package-contents/packages-contents.component';\nimport { PackageVersionsPluginsComponent } from './packages/package-versions/package-contents/contents-plugins/contents-plugins.component';\nimport { PackageVersionsAppsComponent } from './packages/package-versions/package-contents/contents-apps/contents-apps.component';\nimport { PackageGuard } from './packages/package.guard';\nimport { PackageVersionsListComponent } from './packages/package-versions/package-versions-list/package-versions-list.component';\nimport { PackageVersionsGuard } from './packages/package-versions.guard';\nimport { SubscriptionModalComponent } from './application-properties/subscription-modal/subscription-modal.component';\nimport { EcosystemWizards, SharedEcosystemModule } from '@c8y/ngx-components/ecosystem/shared';\nimport { ApplicationPluginsModule } from './application-plugins';\nimport { UpdateApplicationModalComponent } from './application-properties/update-application-modal/update-application-modal.component';\nimport { LicenseConfirmModule } from '@c8y/ngx-components/ecosystem/license-confirm';\nimport { A11yModule } from '@angular/cdk/a11y';\n\nconst ecosystemMainRoutes: Route[] = [\n  {\n    path: 'ecosystem/application',\n    redirectTo: 'ecosystem/application/applications',\n    pathMatch: 'full'\n  },\n  {\n    // keeps legacy links functional\n    path: 'ecosystem/applications',\n    redirectTo: 'ecosystem/application/applications',\n    pathMatch: 'full'\n  },\n  {\n    path: 'ecosystem/application/applications',\n    component: ApplicationListComponent\n  },\n  {\n    path: 'ecosystem/extension/extensions',\n    component: PackagesListComponent\n  },\n  {\n    path: 'ecosystem/application/features',\n    component: FeatureListComponent\n  },\n  {\n    path: 'ecosystem/microservice/microservices',\n    component: MicroserviceListComponent\n  }\n];\n\nconst applicationDetailsRoutes: Route[] = [\n  {\n    path: 'properties',\n    component: ApplicationPropertiesComponent,\n    icon: 'list',\n    label: gettext('Properties'),\n    context: ViewContext.Application,\n    priority: 5,\n    canActivate: [ApplicationPropertiesGuard]\n  },\n  {\n    path: 'properties',\n    component: ApplicationPropertiesComponent,\n    icon: 'list',\n    label: gettext('Properties'),\n    context: ViewContext.Feature,\n    priority: 5,\n    canActivate: [ApplicationPropertiesGuard]\n  },\n  {\n    path: 'package-details',\n    component: PackageDetailsComponent,\n    icon: 'big-parcel',\n    label: gettext('Extension package'),\n    context: ViewContext.Extension,\n    priority: 10,\n    canActivate: [PackageGuard]\n  },\n  {\n    path: 'package-versions',\n    component: PackageVersionsComponent,\n    icon: 'c8y-modules',\n    label: gettext('Versions'),\n    context: ViewContext.Extension,\n    priority: 1,\n    canActivate: [PackageGuard, PackageVersionsGuard]\n  },\n  {\n    path: 'properties',\n    component: ApplicationPropertiesComponent,\n    icon: 'list',\n    label: gettext('Properties'),\n    context: ViewContext.Microservice,\n    priority: 5,\n    canActivate: [ApplicationPropertiesGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    ApplicationListComponent,\n    MicroserviceListComponent,\n    ApplicationPropertiesComponent,\n    AddMicroserviceComponent,\n    ActivityLogComponent,\n    AddWebApplicationComponent,\n    AddExternalApplicationComponent,\n    InstallFromPackageComponent,\n    PackagesListComponent,\n    PackageDetailsComponent,\n    DeployApplicationComponent,\n    AddPackageComponent,\n    FeatureListComponent,\n    PackageVersionsComponent,\n    PackageVersionsPluginsComponent,\n    PackageVersionsAppsComponent,\n    PackageContentsComponent,\n    PackageVersionsListComponent,\n    SubscriptionModalComponent,\n    UpdateApplicationModalComponent\n  ],\n  imports: [\n    CoreModule,\n    BsDropdownModule,\n    TooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(ecosystemMainRoutes),\n    PopoverModule,\n    ApplicationPluginsModule,\n    SharedEcosystemModule,\n    LicenseConfirmModule,\n    A11yModule\n  ],\n  exports: [ApplicationPropertiesComponent, UpdateApplicationModalComponent],\n  providers: [\n    hookTab(EcosystemTabs),\n    hookNavigator(EcosystemNavigationFactory),\n    hookRoute(applicationDetailsRoutes),\n    PackageGuard,\n    PackageVersionsGuard,\n    ApplicationPropertiesGuard,\n    hookWizard({\n      wizardId: EcosystemWizards.APPLICATION_UPLOAD,\n      component: AddWebApplicationComponent,\n      name: gettext('Upload web application'),\n      c8yIcon: 'upload'\n    }),\n    hookWizard({\n      name: undefined,\n      wizardId: EcosystemWizards.PACKAGE_UPLOAD,\n      component: AddPackageComponent\n    }),\n    hookWizard({\n      wizardId: EcosystemWizards.APPLICATION_UPLOAD,\n      component: AddExternalApplicationComponent,\n      name: gettext('External application'),\n      c8yIcon: 'cloud-link'\n    }),\n    hookWizard({\n      wizardId: EcosystemWizards.BLUEPRINT_DEPLOYMENT,\n      component: DeployApplicationComponent,\n      name: gettext('Deploy package'),\n      c8yIcon: 'big-parcel'\n    }),\n    hookWizard({\n      wizardId: EcosystemWizards.APPLICATION_UPLOAD,\n      component: InstallFromPackageComponent,\n      name: gettext('Install from available extension packages'),\n      c8yIcon: 'big-parcel'\n    }),\n    hookWizard({\n      name: undefined,\n      wizardId: EcosystemWizards.MICROSERVICE_UPLOAD,\n      component: AddMicroserviceComponent\n    })\n  ]\n})\nexport class EcosystemModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2","i3","i4","i5","i6","i7","i8","i10.ActivityLogComponent","i3.PackageAvailabilityService","i5.AppStatePipe","i6.PluginListItemComponent","i5.PackageAvailabilityService","i9.PluginListComponent","i3.PluginListComponent","i5.PackageVersionsPluginsComponent","i6.PackageVersionsAppsComponent","i4.PackageContentsComponent","i5.PackageVersionsListComponent","i6.PluginListComponent","i7.OnlyLatestPluginVersionPipe"],"mappings":"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"}