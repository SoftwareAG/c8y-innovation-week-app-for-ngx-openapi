import { ActivatedRoute } from '@angular/router';
import { IManagedObject, InventoryService, IOperation } from '@c8y/client';
import { GainsightService } from '@c8y/ngx-components';
import { DeviceFirmware, FilterCriteria, RepositoryService } from '@c8y/ngx-components/repository/shared';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BehaviorSubject, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class FirmwareDeviceTabComponent {
    private route;
    private repository;
    private inventory;
    private bsModal;
    private gainsightService;
    PRODUCT_EXPERIENCE: {
        SOFTWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_SOFTWARE_MODAL: string;
                DEVICE_SOFTWARE_CHANGES: string;
                DEVICE_SOFTWARE_LIST: string;
            };
            ACTIONS: {
                APPLY_SOFTWARE_CHANGES: string;
                CLEAR_SOFTWARE_CHANGES: string;
                OPEN_INSTALL_SOFTWARE: string;
                OPEN_UPDATE_SOFTWARE: string;
                DELETE_SOFTWARE: string;
            };
            RESULTS: {
                ADD_SOFTWARE: string;
                ADD_SOFTWARE_VERSION: string;
                EDIT_SOFTWARE: string;
            };
        };
        FIRMWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_FIRMWARE_MODAL: string;
                ADD_FIRMWAR_PATCH_MODAL: string;
                FIRMWARE_DEVICE_TAB: string;
                DEVICE_FIRMWARE_LIST: string;
            };
            ACTIONS: {
                FILTER_FIRMWARE_LIST: string;
                OPEN_INSTALL_FIRMWARE_DIALOG: string;
                OPEN_REPLACE_FIRMWARE_DIALOG: string;
                OPEN_INSTALL_FIRMWARE_PATCH_DIALOG: string;
            };
            RESULTS: {
                ADD_FIRMWARE: string;
                ADD_FIRMWARE_VERSION: string;
                ADD_FIRMWARE_PATCH: string;
                EDIT_FIRMWARE: string;
                CREATE_FIRMWARE_UPDATE_OPERATION: string;
            };
        };
        SHARED: {
            COMPONENTS: {
                REPOSITORY_SELECT_MODAL: string;
                SELECT_CONFIGURATION_MODAL: string;
            };
        };
    };
    isEmpty: any;
    reloading: boolean;
    device$: BehaviorSubject<IManagedObject>;
    deviceFirmwareFragment$: Observable<DeviceFirmware>;
    firmwareBinary$: Observable<IManagedObject>;
    repositoryEntry$: Observable<IManagedObject>;
    patches$: Observable<IManagedObject[]>;
    supportsFirmwareOperations$: Observable<boolean>;
    changesOperation$: BehaviorSubject<IOperation>;
    changesInProgress$: Observable<boolean>;
    constructor(route: ActivatedRoute, repository: RepositoryService, inventory: InventoryService, bsModal: BsModalService, gainsightService: GainsightService);
    ngOnInit(): Promise<void>;
    installFirmware(): void;
    getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<FilterCriteria>): Observable<IManagedObject[]>;
    getAndAssignRepositoryBinaries(mos: IManagedObject[]): IManagedObject[];
    addPatch(): void;
    getRepositoryEntryWithPatches$(): Observable<{
        versions: IManagedObject[];
        creationTime: string;
        id: string;
        lastUpdated: string;
        owner: string;
        self: string;
        additionParents: import("@c8y/client").IManagedObjectReferences;
        assetParents: import("@c8y/client").IManagedObjectReferences;
        childAdditions: import("@c8y/client").IManagedObjectReferences;
        childAssets: import("@c8y/client").IManagedObjectReferences;
        childDevices: import("@c8y/client").IManagedObjectReferences;
        deviceParents: import("@c8y/client").IManagedObjectReferences;
    }[]>;
    loadDevice(): Promise<void>;
    private handleOperation;
    private loadOperation;
    private trackOperation;
    private isInProgress;
    static ɵfac: i0.ɵɵFactoryDeclaration<FirmwareDeviceTabComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FirmwareDeviceTabComponent, "c8y-firmware-device-tab", never, {}, {}, never, never, false, never>;
}
