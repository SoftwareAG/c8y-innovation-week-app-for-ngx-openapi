import { EventEmitter } from '@angular/core';
import { NgForm } from '@angular/forms';
import { IManagedObject, IResultList } from '@c8y/client';
import { AlertService, PickedFiles } from '@c8y/ngx-components';
import { ModalModel, RepositoryCategory, RepositoryService } from '@c8y/ngx-components/repository/shared';
import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { BehaviorSubject, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class AddFirmwarePatchModalComponent {
    private modal;
    private repository;
    private alert;
    PRODUCT_EXPERIENCE: {
        SOFTWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_SOFTWARE_MODAL: string;
                DEVICE_SOFTWARE_CHANGES: string;
                DEVICE_SOFTWARE_LIST: string;
            };
            ACTIONS: {
                APPLY_SOFTWARE_CHANGES: string;
                CLEAR_SOFTWARE_CHANGES: string;
                OPEN_INSTALL_SOFTWARE: string;
                OPEN_UPDATE_SOFTWARE: string;
                DELETE_SOFTWARE: string;
            };
            RESULTS: {
                ADD_SOFTWARE: string;
                ADD_SOFTWARE_VERSION: string;
                EDIT_SOFTWARE: string;
            };
        };
        FIRMWARE: {
            EVENTS: {
                REPOSITORY: string;
                DEVICE_TAB: string;
            };
            COMPONENTS: {
                ADD_FIRMWARE_MODAL: string;
                ADD_FIRMWAR_PATCH_MODAL: string;
                FIRMWARE_DEVICE_TAB: string;
                DEVICE_FIRMWARE_LIST: string;
            };
            ACTIONS: {
                FILTER_FIRMWARE_LIST: string;
                OPEN_INSTALL_FIRMWARE_DIALOG: string;
                OPEN_REPLACE_FIRMWARE_DIALOG: string;
                OPEN_INSTALL_FIRMWARE_PATCH_DIALOG: string;
            };
            RESULTS: {
                ADD_FIRMWARE: string;
                ADD_FIRMWARE_VERSION: string;
                ADD_FIRMWARE_PATCH: string;
                EDIT_FIRMWARE: string;
                CREATE_FIRMWARE_UPDATE_OPERATION: string;
            };
        };
        SHARED: {
            COMPONENTS: {
                REPOSITORY_SELECT_MODAL: string;
                SELECT_CONFIGURATION_MODAL: string;
            };
        };
    };
    saved: EventEmitter<RepositoryCategory>;
    dropdown: BsDropdownDirective;
    form: NgForm;
    textForFirmwareUrlPopover: string;
    model: ModalModel;
    firmwareInput$: BehaviorSubject<string>;
    firmwares$: Observable<IResultList<IManagedObject>>;
    firmwareSelected$: BehaviorSubject<Partial<RepositoryCategory>>;
    patchDependencyInput$: BehaviorSubject<string>;
    saving: boolean;
    firmwarePreselected: boolean;
    baseVersions$: Observable<IResultList<IManagedObject>>;
    baseVersionsFilterPipe: import("rxjs").UnaryFunction<Observable<[]>, Observable<never[]>>;
    constructor(modal: BsModalRef, repository: RepositoryService, alert: AlertService);
    ngOnInit(): Promise<void>;
    setInitialState(): void;
    save(): Promise<void>;
    successMsg(): void;
    cancel(): void;
    onFile(dropped: PickedFiles): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AddFirmwarePatchModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AddFirmwarePatchModalComponent, "c8y-add-firmware-patch-modal.component", never, {}, { "saved": "saved"; }, never, never, false, never>;
}
