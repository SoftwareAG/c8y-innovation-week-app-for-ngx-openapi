import { AfterViewInit, ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { IManagedObject, IResultList } from '@c8y/client';
import { FilteringFormRendererContext, ForOfFilterPipe, TypeaheadComponent } from '@c8y/ngx-components';
import { RepositoryService } from '@c8y/ngx-components/repository/shared';
import { BehaviorSubject, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class SoftwareTypeFilteringFormRendererComponent implements OnInit, AfterViewInit {
    context: FilteringFormRendererContext;
    changeDetectorRef: ChangeDetectorRef;
    private repositoryService;
    private elementRef;
    selectedType: IManagedObject;
    softwareWithType$: Observable<IResultList<IManagedObject>>;
    search$: BehaviorSubject<string>;
    filterPipe: ForOfFilterPipe<IManagedObject>;
    typeaheadPlaceholder: "Start typing to search, for example, {{ example }}";
    typeahead: TypeaheadComponent;
    private queriesUtil;
    private softwareTypes;
    constructor(context: FilteringFormRendererContext, changeDetectorRef: ChangeDetectorRef, repositoryService: RepositoryService, elementRef: ElementRef);
    onEnterKeyUp(event: KeyboardEvent): void;
    onEscapeKeyDown(event: KeyboardEvent): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    applyFilter(): void;
    private removeDuplicatesBySoftwareType;
    static ɵfac: i0.ɵɵFactoryDeclaration<SoftwareTypeFilteringFormRendererComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SoftwareTypeFilteringFormRendererComponent, "ng-component", never, {}, {}, never, never, false, never>;
}
