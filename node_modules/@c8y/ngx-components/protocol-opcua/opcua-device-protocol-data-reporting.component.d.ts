import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export declare class OpcuaDeviceProtocolDataReportingComponent {
    set model(_model: any);
    groupName: any;
    _model: object;
    onSubscriptionChange: EventEmitter<any>;
    subscription: {
        type: string;
    };
    subscriptionParameters: {
        samplingRate: any;
        deadbandType: string;
        deadbandValue: any;
        ranges: string;
        queueSize: any;
        dataChangeTrigger: string;
        discardOldest: boolean;
    };
    cyclicReadParameters: {
        rate: any;
    };
    types: any[];
    filters: any[];
    triggers: any[];
    discard: any[];
    requireCyclic: boolean;
    requireSubscription: boolean;
    subscriptionTypeName: string;
    parseReadingInterval: ($event: any) => any;
    updateModel(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<OpcuaDeviceProtocolDataReportingComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OpcuaDeviceProtocolDataReportingComponent, "opcua-device-protocol-data-reporting", never, { "model": "model"; "groupName": "groupName"; }, { "onSubscriptionChange": "onSubscriptionChange"; }, never, never, false, never>;
}
