import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { AddressSpaceService, AddressSpaceNode } from './address-space.service';
import { DynamicDataSource } from './dynamic-data-source';
import { OpcuaService } from './opcuaService';
import * as i0 from "@angular/core";
export declare class OpcuaAddressSpaceComponent implements OnInit, OnDestroy {
    private addressSpaceService;
    private opcuaService;
    currentNode: AddressSpaceNode;
    selectednode: boolean;
    searchKey: string;
    isSearch: boolean;
    loading: boolean;
    searchInProgress: boolean;
    filterLabel: string;
    dataSource: DynamicDataSource;
    nodeList: any;
    focusStatus: EventEmitter<AddressSpaceNode>;
    private moId;
    constructor(addressSpaceService: AddressSpaceService, opcuaService: OpcuaService);
    ngOnInit(): Promise<void>;
    ngOnDestroy(): void;
    searchNodes(): Promise<void>;
    clearNodeListAndCheckSearchString(): void;
    clearSearch(): void;
    getIcon(nodeClassName: string): any;
    selectNode(node: any): Promise<void>;
    toggleCurrentNode(node: AddressSpaceNode): void;
    backHandler(node: any): void;
    isNodeSet(node: AddressSpaceNode): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<OpcuaAddressSpaceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OpcuaAddressSpaceComponent, "opcua-address-space", never, {}, { "focusStatus": "focusStatus"; }, never, never, false, never>;
}
